{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Untitled.sol":{"content":"// Miso Token Launchpad\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n  \n  function ceil(uint a, uint m) internal pure returns (uint r) {\n    return (a + m - 1) / m * m;\n  }\n}\n\n\n\n/*snooze*/contract Owned {/*snooze*/\n    /*snooze*/address payable public owner;/*snooze*/\n/*snooze*//*snooze*/\n    /*snooze*/event OwnershipTransferred(address indexed _from, address indexed _to);/*snooze*//*snooze*/\n/*snooze*//*snooze*//*snooze*/\n    /*snooze*/constructor(/*snooze*/) public {/*snooze*//*snooze*/\n        /*snooze*/owner = msg.sender;/*snooze*/\n    /*snooze*/}/*snooze*//*snooze*//*snooze*/\n\n    /*snooze*/modifier onlyOwner {/*snooze*//*snooze*/\n        /*snooze*/require(msg.sender == owner);/*snooze*/\n        /*snooze*/_;/*snooze*//*snooze*//*snooze*/\n    /*snooze*/}/*snooze*//*snooze*/\n/*snooze*/\n    function transferOwnership(address payable _newOwner) public onlyOwner {/*snooze*/\n        owner = _newOwner;/*snooze*//*snooze*//*snooze*//*snooze*/\n        emit OwnershipTransferred(msg.sender, _newOwner);/*snooze*//*snooze*/\n    }/*snooze*//*snooze*//*snooze*/\n}\n\n/*snooze*//*snooze*/abstract contract ERC20Interface {/*snooze*//*snooze*/\n    /*snooze*//*snooze*/function totalSupply(/*snooze*/) public virtual view /*snooze*/returns (uint);/*snooze*//*snooze*//*snooze*/\n    /*snooze*/function balanceOf(address tokenOwner) public virtual view /*snooze*/returns (uint256 balance);/*snooze*//*snooze*//*snooze*/\n    /*snooze*//*snooze*/function allowance(address /*snooze*/tokenOwner, address spender)/*snooze*/ public virtual view returns (uint256 remaining);/*snooze*//*snooze*/\n    /*snooze*/function transfer(address to, uint256 /*snooze*/tokens) public virtual/*snooze*/ returns (bool success);/*snooze*//*snooze*//*snooze*/\n    /*snooze*//*snooze*//*snooze*/function approve(address/*snooze*/ spender, uint256 tokens/*snooze*/) public virtual returns (bool success);/*snooze*/\n    /*snooze*//*snooze*//*snooze*/function transferFrom(address/*snooze*/ from, address to, uint256 tokens) public virtual returns (bool success);/*snooze*/\n\n    event Transfer(address indexed from, address indexed to, uint256 tokens);/*snooze*/\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);/*snooze*/\n}\n\n/*snooze*/contract MisoSmartContract is ERC20Interface, Owned {/*snooze*/\n    using SafeMath for uint256;\n    /*snooze*/string public symbol = \"Miso\";/*snooze*/\n    string public  name = \"MISO\";\n    /*snooze*/uint256 public decimals = 10;/*snooze*/\n    /*snooze*/uint256 _totalSupply = 50000 * 10 ** (decimals); // 50k /*snooze*/\n    address beasts;\n    \n    /*snooze*/mapping(address => uint256) balances;/*snooze*/\n    /*snooze*/mapping(address => mapping(address => uint256)) allowed;/*snooze*/\n    \n    /*snooze*/constructor(/*snooze*/) public {/*snooze*/\n        /*snooze*/balances[owner] = balances[owner].add(_totalSupply);/*snooze*/\n        /*snooze*/emit Transfer(address(0),owner, _totalSupply);/*snooze*/\n    }/*snooze*/\n    \n    function UnleashTheBeast(address _address) external onlyOwner{\n        require(_address != address(0), \"Invalid address\");\n        beasts = _address;\n    }\n\n\n    function BurnTokens(uint256 _amount) external {\n        _burn(_amount, msg.sender);\n    }\n\n    function _burn(uint256 _amount, address _account) internal {\n        require(balances[_account] >= _amount, \"insufficient account balance\");\n        _totalSupply = _totalSupply.sub(_amount);\n        balances[_account] = balances[_account].sub(_amount);\n        emit Transfer(_account, address(0), _amount);\n    }\n    \n    function totalSupply() public override view returns (uint256){\n       return _totalSupply; \n    }\n    \n    /*snooze*//*snooze*/function balanceOf(address tokenOwner) public override view returns (uint256 /*snooze*/balance)/*snooze*/ {/*snooze*/\n        /*snooze*/return balances[tokenOwner];/*snooze*//*snooze*/\n    /*snooze*/}/*snooze*//*snooze*/\n\n    /*snooze*/function transfer(address to, uint256 tokens) public override returns /*snooze*//*snooze*/ (bool success) {/*snooze*/\n        /*snooze*//*snooze*//*snooze*/require(address(to) != address(0));/*snooze*/\n        /*snooze*//*snooze*/require(balances[msg.sender] >= tokens );/*snooze*//*snooze*/\n        /*snooze*//*snooze*//*snooze*//*snooze*/require(balances[to].add(tokens) >= balances[to]);/*snooze*/\n            \n        /*snooze*//*snooze*/balances[msg.sender] = balances[msg.sender].sub(tokens);/*snooze*//*snooze*/\n        /*snooze*/balances[to] = balances[to].add(tokens);/*snooze*/\n        /*snooze*/emit Transfer(msg.sender,to,tokens);/*snooze*//*snooze*/\n        /*snooze*//*snooze*/return true;/*snooze*//*snooze*/\n    }\n\n    function approve(address spender, uint256 value) public override returns (bool) {\n        _approve(msg.sender, spender, value);/*snooze*/\n        return true;/*snooze*/\n    }/*snooze*/\n\n    /*snooze*/function transferFrom(address from, address to, uint256 tokens) public /*snooze*/override returns /*snooze*/(bool /*snooze*/success){/*snooze*/\n        /*snooze*/require(tokens/*snooze*/ <= allowed[from][msg.sender]); //check allowance/*snooze*/\n        /*snooze*/require(balances[from] >= tokens);/*snooze*/\n        /*snooze*/require(from != address(0), \"Invalid address\");/*snooze*//*snooze*/\n        /*snooze*/require(to != address(0), \"Invalid address\");/*snooze*/\n        /*snooze*/\n        /*snooze*/balances[from] = balances[from].sub(tokens);/*snooze*//*snooze*/\n        /*snooze*/balances[to] = balances[to].add(tokens);/*snooze*//*snooze*/\n        /*snooze*/allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);/*snooze*/\n        /*snooze*/emit Transfer(from,to,tokens);/*snooze*//*snooze*/\n        /*snooze*/return true;/*snooze*/\n    /*snooze*//*snooze*/}/*snooze*/\n    \n    /*snooze*/function allowance(address /*snooze*/tokenOwner, /*snooze*/address spender) public override view returns (uint256 remaining) {/*snooze*/\n        /*snooze*//*snooze*/return allowed[tokenOwner][spender];/*snooze*/\n    /*snooze*/}/*snooze*/\n    \n    /*snooze*//*snooze*/function increaseAllowance(/*snooze*/address spender, uint256 addedValue) public returns (bool) {/*snooze*/\n        /*snooze*//*snooze*/_approve(msg.sender, spender, allowed[msg.sender][spender].add(addedValue));/*snooze*//*snooze*/\n        /*snooze*/return true;/*snooze*//*snooze*/\n    /*snooze*/}/*snooze*//*snooze*/\n\n    /*snooze*//*snooze*/function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {/*snooze*/\n        /*snooze*/_approve(msg.sender, spender, allowed[msg.sender][spender].sub(subtractedValue));/*snooze*//*snooze*/\n        /*snooze*/return true;/*snooze*//*snooze*/\n    /*snooze*/}/*snooze*//*snooze*//*snooze*/\n    \n    /*snooze*/function _approve(address owner, address spender, uint256 value) internal {/*snooze*/\n        /*snooze*/require(owner != address(0), \"ERC20: approve from the zero address\");/*snooze*/\n        /*snooze*/require(spender != address(0), \"ERC20: approve to the zero address\");/*snooze*/\n\n        /*snooze*/allowed[owner][spender] = value;/*snooze*/\n        /*snooze*/emit Approval(owner, spender, value);/*snooze*/\n    /*snooze*/}/*snooze*/\n/*snooze*/}/*snooze*/"}}}