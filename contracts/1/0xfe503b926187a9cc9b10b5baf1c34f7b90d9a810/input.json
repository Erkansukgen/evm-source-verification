{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/Free1.sol": {
      "content": "// SPDX-License-Identifier: CC0\n\n\n/*\n /$$$$$$$$ /$$$$$$$  /$$$$$$$$ /$$$$$$$$         /$$                 \n| $$_____/| $$__  $$| $$_____/| $$_____/       /$$$$                 \n| $$      | $$  \\ $$| $$      | $$            |_  $$                 \n| $$$$$   | $$$$$$$/| $$$$$   | $$$$$           | $$                 \n| $$__/   | $$__  $$| $$__/   | $$__/           | $$                 \n| $$      | $$  \\ $$| $$      | $$              | $$                 \n| $$      | $$  | $$| $$$$$$$$| $$$$$$$$       /$$$$$$               \n|__/      |__/  |__/|________/|________/      |______/               \n                                                                     \n                                                                     \n                                                                     \n /$$                                                                 \n| $$                                                                 \n| $$$$$$$  /$$   /$$                                                 \n| $$__  $$| $$  | $$                                                 \n| $$  \\ $$| $$  | $$                                                 \n| $$  | $$| $$  | $$                                                 \n| $$$$$$$/|  $$$$$$$                                                 \n|_______/  \\____  $$                                                 \n           /$$  | $$                                                 \n          |  $$$$$$/                                                 \n           \\______/                                                  \n  /$$$$$$  /$$$$$$$$ /$$$$$$$$ /$$    /$$ /$$$$$$ /$$$$$$$$ /$$$$$$$ \n /$$__  $$|__  $$__/| $$_____/| $$   | $$|_  $$_/| $$_____/| $$__  $$\n| $$  \\__/   | $$   | $$      | $$   | $$  | $$  | $$      | $$  \\ $$\n|  $$$$$$    | $$   | $$$$$   |  $$ / $$/  | $$  | $$$$$   | $$$$$$$/\n \\____  $$   | $$   | $$__/    \\  $$ $$/   | $$  | $$__/   | $$____/ \n /$$  \\ $$   | $$   | $$        \\  $$$/    | $$  | $$      | $$      \n|  $$$$$$/   | $$   | $$$$$$$$   \\  $/    /$$$$$$| $$$$$$$$| $$      \n \\______/    |__/   |________/    \\_/    |______/|________/|__/      \n                                                                     \n\nCC0 2021\n*/\n\n\npragma solidity ^0.8.11;\n\n \ninterface IFree {\n  function mint(uint256 collectionId, address to) external;\n  function ownerOf(uint256 tokenId) external returns (address owner);\n  function tokenIdToCollectionId(uint256 tokenId) external returns (uint256 collectionId);\n  function appendAttributeToToken(uint256 tokenId, string memory attrKey, string memory attrValue) external;\n}\n\ncontract Free1 {\n  IFree public immutable free;\n\n  uint public mintCount;\n  mapping(uint256 => bool) public free0TokenIdUsed;\n\n  constructor(address freeAddr) {\n    free = IFree(freeAddr);\n  }\n\n  function claim(uint free0TokenId) public {\n    require(mintCount < 1000, 'Cannot mint more than 1000');\n    require(free.tokenIdToCollectionId(free0TokenId) == 0, 'Invalid Free0');\n    require(!free0TokenIdUsed[free0TokenId], 'This Free0 has already been used to mint a Free1');\n    require(free.ownerOf(free0TokenId) == msg.sender, 'You must be the owner of this Free0');\n\n    free0TokenIdUsed[free0TokenId] = true;\n    mintCount++;\n    free.appendAttributeToToken(free0TokenId, 'Used For Free1 Mint', 'true');\n\n    free.mint(1, msg.sender);\n  }\n}\n"
    }
  }
}