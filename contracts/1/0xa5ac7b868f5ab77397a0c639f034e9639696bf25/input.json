{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"v1EarnKeeper.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint);\n}\n\ninterface IYERC20 {\n    function rebalance() external;\n    function balanceOf(address account) external view returns (uint);\n    function token() external view returns (address);\n    function calcPoolValueInToken() external view returns (uint);\n}\n\ncontract YearnV1EarnKeep3rV2 {\n    \n    uint constant public THRESHOLD = 500;\n    uint constant public BASE = 10000;\n    \n    IYERC20[8] internal _tokens;\n    \n    constructor() {\n        _tokens[0] = IYERC20(0xd6aD7a6750A7593E092a9B218d66C0A814a3436e);\n        _tokens[1] = IYERC20(0x83f798e925BcD4017Eb265844FDDAbb448f1707D);\n        _tokens[2] = IYERC20(0x73a052500105205d34Daf004eAb301916DA8190f);\n        _tokens[3] = IYERC20(0xC2cB1040220768554cf699b0d863A3cd4324ce32);\n        _tokens[4] = IYERC20(0x26EA744E5B887E5205727f55dFBE8685e3b21951);\n        _tokens[5] = IYERC20(0xE6354ed5bC4b393a5Aad09f21c46E101e692d447);\n        _tokens[6] = IYERC20(0x04bC0Ab673d88aE9dbC9DA2380cB6B79C4BCa9aE);\n        _tokens[7] = IYERC20(0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01);\n    }\n    \n    function shouldRebalance(IYERC20 _token) public view returns (bool) {\n        uint _total = _token.calcPoolValueInToken();\n        uint _available = IERC20(_token.token()).balanceOf(address(_token));\n        return _available >= _total * THRESHOLD / BASE;\n    }\n    \n    function work() external {\n        for (uint i = 0; i < _tokens.length; i++) {\n            if (shouldRebalance(_tokens[i])) {\n                _tokens[i].rebalance();\n            }\n        }\n    }\n}"}}}