{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Proxy.sol":{"content":"// SPDX-License-Identifier: MIT                                                                                                                                                                                                               \r\n                                                                                                                                                                                                                                              \r\npragma solidity ^0.6.0;                                                                                                                                                                                                                       \r\n                                                                                                                                                                                                                                              \r\ncontract Proxy {                                                                                                                                                                                                                              \r\n    // Code position in storage is keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\r\n    constructor(bytes memory constructData, address contractLogic) public {\r\n        // save the code address\r\n        assembly {\r\n            // solium-disable-line\r\n            sstore(\r\n                0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,\r\n                contractLogic\r\n            )\r\n        }\r\n        (bool success, bytes memory _) = contractLogic.delegatecall(\r\n            constructData\r\n        ); // solium-disable-line\r\n        require(success, \"Construction failed\");\r\n    }\r\n\r\n    fallback() external payable {\r\n        assembly { // solium-disable-line\r\n            let contractLogic := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\r\n            calldatacopy(0x0, 0x0, calldatasize())\r\n            let success := delegatecall(sub(gas(), 10000), contractLogic, 0x0, calldatasize(), 0, 0)\r\n            let retSz := returndatasize()\r\n            returndatacopy(0, 0, retSz)\r\n            switch success\r\n            case 0 {\r\n                revert(0, retSz)\r\n            }\r\n            default {\r\n                return(0, retSz)\r\n            }\r\n        }\r\n    }\r\n}"}}}