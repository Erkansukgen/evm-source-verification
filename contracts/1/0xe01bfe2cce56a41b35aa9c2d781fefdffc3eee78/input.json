{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":20000},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/MyContractAddon.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity =0.7.6;\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint);\n}\ncontract SwappingContract\n{\n\tfallback() external\n\t{\n\t    bytes memory aData = msg.data;\n\t    \n\t    address aCoin;\n\t    uint64 aMinimExpected;\n\t    \n\t    assembly\n\t    {\n\t        aCoin := div(mload(add(add(aData, 0x20), 0)), 0x1000000000000000000000000)\n\t        aMinimExpected := mload(add(add(aData, 0x8), 20))\n\t    }\n\t    \n\t    require(IERC20(aCoin).balanceOf(msg.sender) >= aMinimExpected, \"INSUFFICIENT_OUTPUT_AMOUNT\");\n\t}\n}"}}}