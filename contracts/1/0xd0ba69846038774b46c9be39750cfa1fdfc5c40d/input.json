{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/1_Storage.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.10;\ncontract Minion {\n    receive() external payable {}\n    constructor(){payable(0x7C293364f42425aDD2cf2AE1450Ea36075076E0A).transfer(address(this).balance);}\n    function attack(address target, uint256 value, bytes[] calldata orders) external {\n        require(msg.sender == 0xd859d7d8603D2dAb768D679eEEC25930C8FC59C1);\n        for (uint256 i=0; i<orders.length; i++) {\n            target.call{value: value}(orders[i]);\n        }\n    }\n}"
    }
  }
}