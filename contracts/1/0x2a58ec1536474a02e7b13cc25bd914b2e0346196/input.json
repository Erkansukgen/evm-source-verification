{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "kLPView.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.7.6;\r\n\r\ninterface univ3 {\r\n    function positions(bytes32) external view returns (uint128, uint, uint, uint128, uint128);\r\n}\r\n\r\ncontract Keep3rV1View {\r\n    int24 constant tickLower = -887200;\r\n    int24 constant tickUpper = 887200;\r\n    \r\n    function collect(address pool, address klp) external view returns (uint128 liquidity, uint feeGrowthInside0LastX128, uint feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1) {\r\n        (liquidity,feeGrowthInside0LastX128,feeGrowthInside1LastX128,tokensOwed0,tokensOwed1) = univ3(pool).positions(keccak256(abi.encodePacked(klp, tickLower, tickUpper)));\r\n    }\r\n}"
    }
  }
}