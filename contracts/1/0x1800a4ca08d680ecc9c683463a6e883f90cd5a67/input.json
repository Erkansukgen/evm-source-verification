{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"MintAndBurnAuthority.sol":{"content":"pragma solidity ^0.4.24;\r\n\r\ncontract MintAndBurnAuthority {\r\n\r\n    mapping (address => bool) public allowMintList;\r\n    mapping (address => bool) public allowBurnList;\r\n\r\n    constructor(address[] _mintlists, address[] _burnlists) public {\r\n        for (uint i = 0; i < _mintlists.length; i ++) {\r\n            allowMintList[_mintlists[i]] = true;\r\n        }\r\n        \r\n        for (uint j = 0; j < _burnlists.length; j ++) {\r\n            allowBurnList[_burnlists[j]] = true;\r\n        }\r\n    }\r\n\r\n    function canCall(\r\n        address _src, address _dst, bytes4 _sig\r\n    ) public view returns (bool) {\r\n        return ( allowMintList[_src] && _sig == bytes4(keccak256(\"mint(address,uint256)\")) ) ||\r\n        ( allowBurnList[_src] && _sig == bytes4(keccak256(\"burn(address,uint256)\")) );\r\n    }\r\n}"}}}