{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "rescue.sol": {
      "content": "// SPDX-License-Identifier: MIT\n\n\npragma solidity ^0.8.0;\n\ncontract Rescue {\n    \n    address public owner ;\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"INVADERS: sender not owner\") ; \n        _;\n    }\n    \n    function withdraw(address payable receiver) onlyOwner external {\n        require(receiver != address(0), \"cannot withdaw to blackhole\") ; \n        receiver.transfer(address(this).balance) ;\n    }\n\n}"
    }
  }
}