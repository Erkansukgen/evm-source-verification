{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/metadata.sol": {
      "content": "pragma solidity ^0.8.4;\r\n//SPDX-License-Identifier: MIT\r\n\r\n\r\nabstract contract StoreHubInterface {\r\n    mapping(address => bool) public isValidStore;\r\n}\r\n\r\nabstract contract StoreProxy {\r\n    address public owner;\r\n}\r\n\r\ncontract Metadata {\r\n    event MetaDataUpdated(address indexed store, string[7] metaData);\r\n    \r\n    StoreHubInterface usdcHub;\r\n    \r\n    constructor(address _hub) {\r\n        usdcHub = StoreHubInterface(_hub);\r\n    }\r\n    \r\n    function setMetaData(address _store, string[7] calldata _metaData) external {\r\n        require(usdcHub.isValidStore(_store) == true);\r\n        require(StoreProxy(_store).owner() == msg.sender);\r\n        emit MetaDataUpdated(_store, _metaData);\r\n    }\r\n}"
    }
  }
}