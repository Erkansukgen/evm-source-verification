{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"ConsoleNFT_PRNG_Generator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract ConsoleNFT_PRNG_Generator {\r\n    \r\n\tuint256 seed = 897695196879;\r\n\tuint16 tokens_total = 500;\r\n\r\n    uint16 legendary = 5; // 1%\r\n    uint16 epic = 25; // 5%\r\n    uint16 rare = 50; // 10%\r\n    uint16 uncommon = 150; // 30%\r\n\t// rest = 54%\r\n\r\n    function createList() public view returns (uint256[] memory _list) {\r\n\r\n        uint256[] memory list = new uint256[](tokens_total);\r\n\r\n        for (uint256 i = 0; i < tokens_total; i++) {\r\n            list[i] = i;\r\n        }\r\n        \r\n        // shuffle mapping\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            uint256 n = i + uint256(keccak256(abi.encodePacked(seed))) % (list.length - i);\r\n            uint256 temp = list[n];\r\n            list[n] = list[i];\r\n            list[i] = temp;\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    function getRarity(uint256 token_id) public view returns(uint8) {\r\n\r\n        uint256[] memory list = this.createList();\r\n        \r\n        uint8 rarity = 4;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                rarity = 0;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                rarity = 1;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                rarity = 2;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                rarity = 3;\r\n            }\r\n\r\n        }\r\n\r\n        return rarity;\r\n        \r\n    }\r\n    \r\n    function getNumberOfItems(uint256 token_id) public view returns(uint8) {\r\n        \r\n        uint256[] memory list = this.createList();\r\n\r\n        uint8 items = 2;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                items = 6;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                items = 5;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                items = 4;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                items = 3;\r\n            }\r\n\r\n        }\r\n\r\n        return items;\r\n        \r\n    }\r\n\t\r\n    function getCreditsMultiplier(uint256 token_id) public view returns(uint256) {\r\n        \r\n        uint256[] memory list = this.createList();\r\n\r\n\t\t// base value\r\n\t\tuint256 newseed = seed + token_id;\r\n\t\t\r\n        uint256 creditsMultiplier = newseed % (4 - 3 + 1) + 3;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                creditsMultiplier = newseed % (1 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                creditsMultiplier = newseed % (2 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                creditsMultiplier = newseed % (3 - 1 + 1) + 1;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                creditsMultiplier = newseed % (4 - 2 + 1) + 2;\r\n            }\r\n\r\n        }\r\n\r\n        return creditsMultiplier;\r\n        \r\n    }\r\n\t\r\n    function getCreditsAmount(uint256 token_id) public view returns(uint256) {\r\n        \r\n        uint256[] memory list = this.createList();\r\n\r\n\t\t// base value\r\n\t\tuint256 newseed = seed + token_id + 3;\r\n\t\t\r\n        uint256 creditsMultiplier = newseed % (4 - 3 + 1) + 3;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                creditsMultiplier = newseed % (1 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                creditsMultiplier = newseed % (2 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                creditsMultiplier = newseed % (3 - 1 + 1) + 1;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                creditsMultiplier = newseed % (4 - 2 + 1) + 2;\r\n            }\r\n\r\n        }\r\n\r\n        return creditsMultiplier;\r\n        \r\n    }\r\n\t\r\n    function getFirstItemRarity(uint256 token_id) public view returns(uint256) {\r\n        \r\n        uint256[] memory list = this.createList();\r\n\r\n\t\t// base value\r\n\t\tuint256 newseed = seed + token_id + 1;\r\n\t\t\r\n        uint256 item = newseed % (4 - 3 + 1) + 3;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                item = newseed % (1 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                item = newseed % (2 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                item = newseed % (3 - 1 + 1) + 1;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                item = newseed % (4 - 2 + 1) + 2;\r\n            }\r\n\r\n        }\r\n\r\n        return item;\r\n        \r\n    }\r\n\t\r\n    function getSecondItemRarity(uint256 token_id) public view returns(uint256) {\r\n        \r\n        uint256[] memory list = this.createList();\r\n\r\n\t\t// base value\r\n\t\tuint256 newseed = seed + token_id + 2;\r\n\t\t\r\n        uint256 item = newseed % (4 - 3 + 1) + 3;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                item = newseed % (1 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                item = newseed % (2 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                item = newseed % (3 - 1 + 1) + 1;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                item = newseed % (4 - 2 + 1) + 2;\r\n            }\r\n\r\n        }\r\n\r\n        return item;\r\n        \r\n    }\r\n\t\r\n\tfunction getFirstItemClass(uint256 token_id) public view returns(uint256) {\r\n        \r\n        uint256[] memory list = this.createList();\r\n\r\n\t\t// base value\r\n\t\tuint256 newseed = seed + token_id + 4;\r\n\r\n        uint256 item = newseed % (19 - 5 + 1) + 5;\r\n\r\n        for (uint256 i = 0; i < list.length; i++) {\r\n            \r\n            if (token_id == list[i] && i < legendary) {\r\n                item = newseed % (3 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= legendary && i < epic) {\r\n                item = newseed % (9 - 0 + 1) + 0;\r\n            }\r\n            if (token_id == list[i] && i >= epic && i < rare) {\r\n                item = newseed % (13 - 1 + 1) + 1;\r\n            }\r\n            if (token_id == list[i] && i >= rare && i < uncommon) {\r\n                item = newseed % (17 - 4 + 1) + 4;\r\n            }\r\n\r\n        }\r\n\r\n        return item;\r\n        \r\n    }\r\n\r\n\t\r\n}"}}}