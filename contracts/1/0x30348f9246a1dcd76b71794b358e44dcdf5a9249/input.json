{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"MustMint.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.7.6;\npragma abicoder v2;\n\ninterface IERC720 {\n    function mint(address _to, uint256 _count) external payable;\n    function totalSupply() external view returns (uint256);\n}\n\ncontract Attacker {\n    \n    constructor()  {\n  \n    }\n    \n    // function mustMint(uint256 id,address nft) public payable{\n    //     require(IERC720(nft).totalSupply()+1 == id,\"missed\");\n    //     IERC720(nft).mint{value:msg.value}(msg.sender,1);\n    // }\n    \n    function mustMintNum(uint256 targetId,uint256 mintTimes,address nft,uint256 amount,uint256 mintNum) public payable{\n        uint256 totalSupply = IERC720(nft).totalSupply();\n        require(totalSupply + mintTimes * mintNum >= targetId && totalSupply < targetId ,\"missed\");\n        for(uint256 i=0;i<mintTimes;i++){\n          IERC720(nft).mint{value:amount*mintNum}(msg.sender,mintNum);\n        }\n    }\n    \n   \n}"}}}