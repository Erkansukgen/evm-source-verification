{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/FrontRunning.sol": {
      "content": "pragma solidity ^0.6.10;\n\ncontract FindThisHash {\n    bytes32 constant public hash =\n      0x564ccaf7594d66b1eaaea24fe01f0585bf52ee70852af4eac0cc4b04711cd0e2;\n\n    constructor() public payable {}\n\n    function solve(string memory solution) public {\n        require(hash == keccak256(abi.encodePacked(solution)), \"Incorrect answer\");\n\n        (bool sent, ) = msg.sender.call{value: address(this).balance}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n}"
    }
  }
}