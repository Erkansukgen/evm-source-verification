{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/MOODY.sol": {
      "content": "pragma solidity ^0.6.10;\npragma experimental ABIEncoderV2;\n\ninterface IFactory {\n    function comp() external view returns (address);\n    function governor() external view returns (address);\n}\n\ninterface ICrowdProposal {\n    function targets() external view returns (address[] memory);\n    function values() external view returns (uint256[] memory);\n    function signatures() external view returns (string[] memory);\n    function calldatas() external view returns (bytes[] memory);\n    function description() external view returns (string memory);\n}\n\ncontract Encoder {\n    IFactory factory = IFactory(0xa363203A324A3f134348a0F2Ffa4f5487aDC3346);\n    ICrowdProposal proposal = ICrowdProposal(0xA13a5a31b891F3DA7074b740B694769BD0f1bb23);\n    \n    function encode() external view returns (bytes memory) {\n        return abi.encode(\n            0xB0623C91c65621df716aB8aFE5f66656B21A9108,\n            proposal.targets(),\n            proposal.values(),\n            proposal.signatures(),\n            proposal.calldatas(),\n            proposal.description(),\n            factory.comp(),\n            factory.governor()\n        );\n    }    \n}"
    }
  }
}