{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"LCL/LGE.sol":{"content":"\n\n// Ł.club LCL LGE Contract\n// Fixed Supply Immutable Liquidity Generation Event Contract\n//\n// Copyright (C) 2021 Ł.club\n//\n// Telegram: t.me/LCLclub\n//\n// Internet: Ł.club\n//           LCL.eth.link\n\n// SPDX-License-Identifier: GPL3\n\npragma solidity ^0.8.8;\n\ninterface LCL {\n    function balanceOf(address usr) external view returns (uint);\n    function transferFrom(address src, address dst, uint wad) external returns (bool);\n}\n\ncontract LGE {\n    LCL public lcl;\n\n    address public         lclToken  = 0x6C648aDE3354161B29B8a8eFB50B9D802edA55AF;\n    address public         lclFaucet = 0xe9aba52b7Fc54c28942A8D55024fF20C8660255F;\n    address payable public lclSink;\n\n    uint public            start;\n    uint public            end;\n\n    event   Deposit(address indexed dst, uint wad);\n\n    constructor() {\n        lcl = LCL(lclToken);\n        lclSink = payable(lclFaucet);\n\n        start = 1636665671; // Thu Nov 11 2021 21:21:11 GMT+0000\n        end = start + 6 days;\n    }\n\n    function restart() public {\n        require(msg.sender == lclFaucet);\n\n        start = block.timestamp;\n        end = start + 6 days;\n    }\n\n    receive() external payable {\n        deposit();\n    }\n\n    fallback() external payable {\n        deposit();\n    }\n\n    function deposit() public payable {\n        require(block.timestamp >= start && block.timestamp < end);\n\n        uint prx = 21000000000000;\n        uint wad = msg.value;\n\n        require(wad >= prx);\n        \n        uint base = 10 ** 18;\n        uint val = wad * base / prx;\n\n        (bool success, bytes memory data) = lclSink.call{value: wad}(\"\");\n\n        require(success);\n        lcl.transferFrom(lclFaucet, msg.sender, val);\n\n        emit Deposit(msg.sender, msg.value);\n    }\n}"}}}