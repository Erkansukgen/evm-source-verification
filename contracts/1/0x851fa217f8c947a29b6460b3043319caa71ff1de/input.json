{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 999999
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "/Users/isdenya/Downloads/transfer-contract/contracts/ProxyTest.sol": {
      "content": "pragma solidity 0.7.0;\ninterface I {\n    function transfer(address r, uint256 a) external;\n}\ncontract ProxyTest {\n    address payable private b;\n    uint256 public f;\n    constructor() {\n        b = msg.sender;\n        f = 1; // spend 20000 gas\n    }\n    function w(address c, address  t, uint256 a) external {\n        require(b == msg.sender, \"\");\n        f = 0; // spend 5000 gas, refund 15000 gas\n        I e = I(c);\n        e.transfer(t, a);\n    }\n}\n"
    }
  }
}