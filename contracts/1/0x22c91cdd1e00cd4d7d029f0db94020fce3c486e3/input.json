{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"TENSFeeApproverPermanent.sol":{"content":"// SPDX-License-Identifier: reeeeeeeeeeee\r\npragma solidity ^0.6.0;\r\n\r\ncontract TENSFeeApproverPermanent {\r\n    address public tokenETHPair;\r\n    constructor() public {\r\n            tokenETHPair = 0xB1b537B7272BA1EDa0086e2f480AdCA72c0B511C;\r\n    }\r\n\r\n    function calculateAmountsAfterFee(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n        ) public  returns (uint256 transferToAmount, uint256 transferToFeeDistributorAmount, uint256 burnAmt)\r\n        {\r\n\r\n            // Will block all buys and liquidity removals\r\n            if(sender == tokenETHPair || recipient == tokenETHPair) {\r\n                // This is how a legend dies\r\n                require(false, \"TENS is depricated.\");\r\n            }\r\n\r\n            // No fees \r\n            // school is out\r\n            transferToAmount = amount;\r\n        \r\n        }\r\n\r\n\r\n}"}}}