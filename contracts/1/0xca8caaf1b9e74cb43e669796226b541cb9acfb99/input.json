{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/4_TestNotarizzazione.sol": {
      "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n */\ncontract TestNotarizzazione {\n\nstruct ArchiviaNotarizzazione {\n    string HashDocumento;\n}\n\n    address TitolareDocumento;\n    \n    constructor() {\n        TitolareDocumento = msg.sender;\n    }\n    \nmodifier svilppatoreCapo() {\n    if (msg.sender == TitolareDocumento) {\n        _;\n    }\n}\n\nArchiviaNotarizzazione public leggiBlockchain;\n\nfunction InserisciHashDocumento( string memory HashDocumento) public svilppatoreCapo {\n\n    \n}\n}"
    }
  }
}