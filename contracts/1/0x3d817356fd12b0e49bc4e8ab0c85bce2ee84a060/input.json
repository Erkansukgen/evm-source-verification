{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/stak.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\n//\r\n//   ██████  ██▓███   ██▓    ▄▄▄        ██████  ██░ ██ ▓█████ ▓█████▄       ██▓ ▒█████\r\n// ▒██    ▒ ▓██░  ██▒▓██▒   ▒████▄    ▒██    ▒ ▓██░ ██▒▓█   ▀ ▒██▀ ██▌     ▓██▒▒██▒  ██▒\r\n// ░ ▓██▄   ▓██░ ██▓▒▒██░   ▒██  ▀█▄  ░ ▓██▄   ▒██▀▀██░▒███   ░██   █▌     ▒██▒▒██░  ██▒\r\n//   ▒   ██▒▒██▄█▓▒ ▒▒██░   ░██▄▄▄▄██   ▒   ██▒░▓█ ░██ ▒▓█  ▄ ░▓█▄   ▌     ░██░▒██   ██░\r\n// ▒██████▒▒▒██▒ ░  ░░██████▒▓█   ▓██▒▒██████▒▒░▓█▒░██▓░▒████▒░▒████▓  ██▓ ░██░░ ████▓▒░\r\n// ▒ ▒▓▒ ▒ ░▒▓▒░ ░  ░░ ▒░▓  ░▒▒   ▓▒█░▒ ▒▓▒ ▒ ░ ▒ ░░▒░▒░░ ▒░ ░ ▒▒▓  ▒  ▒▓▒ ░▓  ░ ▒░▒░▒░\r\n// ░ ░▒  ░ ░░▒ ░     ░ ░ ▒  ░ ▒   ▒▒ ░░ ░▒  ░ ░ ▒ ░▒░ ░ ░ ░  ░ ░ ▒  ▒  ░▒   ▒ ░  ░ ▒ ▒░\r\n// ░  ░  ░  ░░         ░ ░    ░   ▒   ░  ░  ░   ░  ░░ ░   ░    ░ ░  ░  ░    ▒ ░░ ░ ░ ▒\r\n//       ░               ░  ░     ░  ░      ░   ░  ░  ░   ░  ░   ░      ░   ░      ░ ░\r\n//\r\n//\r\n// ███████╗████████╗ █████╗ ██╗  ██╗██╗███╗   ██╗ ██████╗      ██████╗ ██████╗ ███╗   ██╗████████╗██████╗  █████╗  ██████╗████████╗\r\n// ██╔════╝╚══██╔══╝██╔══██╗██║ ██╔╝██║████╗  ██║██╔════╝     ██╔════╝██╔═══██╗████╗  ██║╚══██╔══╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝\r\n// ███████╗   ██║   ███████║█████╔╝ ██║██╔██╗ ██║██║  ███╗    ██║     ██║   ██║██╔██╗ ██║   ██║   ██████╔╝███████║██║        ██║\r\n// ╚════██║   ██║   ██╔══██║██╔═██╗ ██║██║╚██╗██║██║   ██║    ██║     ██║   ██║██║╚██╗██║   ██║   ██╔══██╗██╔══██║██║        ██║\r\n// ███████║   ██║   ██║  ██║██║  ██╗██║██║ ╚████║╚██████╔╝    ╚██████╗╚██████╔╝██║ ╚████║   ██║   ██║  ██║██║  ██║╚██████╗   ██║\r\n// ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝      ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝   ╚═╝\r\n\r\n\r\n// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\npragma solidity ^0.7.0;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; \r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\ncontract SPLASH_Staking is Context {\r\n    address private _owner;\r\n    string private _name = \"Staking contract of SPLASHED.IO\";\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        _owner = address(0);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n}\r\n"}}}