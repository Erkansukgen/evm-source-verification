{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/Booster/Ticket.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.6.9;\n\n// 管理金合约\ncontract Ticket {\n    address public owner;   // 管理员地址\n    address public booster; // 主合约地址\n\n    // 只有管理员才能操作\n    modifier onlyOwner {\n        require(msg.sender == owner, \"only the owner can execute\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    // 接受ETH\n    receive() external payable {}\n\n    // TODO:: 功能一： 提现， 指定3个地址能提现， 也是一次提完， 其余地址提现无效\n    function take(address toAddress) public onlyOwner {\n        bool to = false;\n        uint256 ticketIncome = address(this).balance;\n        require(ticketIncome > 0, \"There is not enough ticket revenue\");\n        require(toAddress != address(0), \"Please enter the correct address\");\n\n        // 是否为允许地址1\n        if (to == false && toAddress == address(0xd479E45f595C6386132d33eEFb4c615b4fE0b255)) {\n            to = true;\n        }\n\n        // 是否为允许地址2\n        if (to == false && toAddress == address(0xf4db9aa6416C3c896BE66Eb13E5BaE9203B840B8)) {\n            to = true;\n        }\n\n        // 是否为允许地址3\n        if (to == false && toAddress == address(0xb5269beB12F399e20a7E942752790Ce4a6FAF9c4)) {\n            to = true;\n        }\n\n        require(to == true, \"Please enter the correct address\");\n        address(uint160(toAddress)).transfer(ticketIncome);\n    }\n\n    // TODO:: 功能二： 合约转账，管理员调用， 将管理金合约资金池全部余额转入到主合约资金池\n    function transfer() public onlyOwner {\n        uint256 ticketIncome = address(this).balance;\n        require(ticketIncome > 0, \"There is not enough ticket revenue\");\n        require(booster != address(0), \"Incorrect transfer address\");\n\n        address(uint160(booster)).transfer(ticketIncome);\n    }\n\n    // TODO:: 功能三：设置主合约地址\n    function setEasyBooster(address _booster)  public onlyOwner {\n        booster = _booster;\n    }\n\n    // 摧毁合约并跑路\n    function kill() public onlyOwner {\n        selfdestruct(msg.sender);\n    }\n}"
    }
  }
}