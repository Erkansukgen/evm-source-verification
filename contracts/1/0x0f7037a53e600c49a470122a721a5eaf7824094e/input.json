{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/grinter.sol": {
      "content": "pragma solidity 0.6.12;\r\n\r\ncontract Mortal {\r\n    /* Define variable owner of the type address */\r\n    address owner;\r\n\r\n    /* This constructor is executed at initialization and sets the owner of the contract */\r\n    constructor() public { owner = msg.sender; }\r\n\r\n    /* Function to recover the funds on the contract */\r\n    function kill() public { if (msg.sender == owner) selfdestruct(msg.sender); }\r\n}\r\n\r\ncontract Greeter is Mortal {\r\n    /* Define variable greeting of the type string */\r\n    string greeting;\r\n    /* Main function */\r\n    function greet() public view returns (string memory) {\r\n        return greeting;\r\n    }\r\n    function setGreeting(string memory newGreeting) public {\r\n       greeting = newGreeting; \r\n    }\r\n}"
    }
  }
}