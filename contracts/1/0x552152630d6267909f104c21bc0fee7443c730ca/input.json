{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "KashiDeposit.sol": {
      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\ninterface IKashiPair {\n        function addCollateral(\n        address to,\n        bool skim,\n        uint256 share\n    ) external;\n}\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external;\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n}\n\ninterface IBentoBox {\n  function setMasterContractApproval(address user, address masterContract, bool approved, uint8 v, bytes32 r, bytes32 s) external;\n  function masterContractApproved(address, address) external view returns (bool);\n  function deposit(\n        address token_,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 share\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\n}\n\n//////////\n// master contract of the DAICRVpair 0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42\n        \n        //TODO: right now share = amount, no interest acured so far?\n        //TODO cont: get shares from BentoBox.toShare, \n        // issue is the interfaces\n\ncontract KashiDeposit {\n    address Bento      = 0xF5BCE5077908a1b7370B9ae04AdC565EBd643966;\n    \n    \n    function approveMasterContract() public {\n        address MediumRiskMasterContract = 0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42;\n        IBentoBox bento                  = IBentoBox(Bento);\n        \n        bento.setMasterContractApproval(address(this), MediumRiskMasterContract, true, uint8(0), 0, 0);\n    }\n    \n    function depositDai(uint amount, uint shareFraction, bool skim, bool approve) public {\n        address MediumRiskMasterContract = 0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42;\n        address DAICRVpair = 0x15785398CF9FB677ddcbDb1133585a4D0C65c2d9;\n\n        //DAI\n        address Erc20      = 0x6B175474E89094C44Da98b954EedeAC495271d0F; \n        IKashiPair market  = IKashiPair(DAICRVpair);\n        IBentoBox bento    = IBentoBox(Bento);\n        IERC20 erc20       = IERC20(Erc20);\n        \n        if (approve && !bento.masterContractApproved(MediumRiskMasterContract, address(this))) {\n            bento.setMasterContractApproval(address(this), MediumRiskMasterContract, true, uint8(0), 0, 0);\n        }\n\n        erc20.transfer(Bento, amount);\n\n        uint bentoShare = amount * shareFraction / 10;\n        \n        bento.deposit(Erc20, Bento, address(this), amount, bentoShare);\n\n        market.addCollateral(msg.sender, skim, bentoShare);\n    }\n}"
    }
  }
}