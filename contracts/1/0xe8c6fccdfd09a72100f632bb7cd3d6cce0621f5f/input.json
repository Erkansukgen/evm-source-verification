{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/EFIDistribution.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external;\r\n    function transferFrom(address from, address to, uint256 value) external;\r\n    function balanceOf(address tokenOwner)  external returns (uint balance);\r\n}\r\ncontract EFIDistribution{\r\n   function bulksendToken(IERC20 _token, address[] calldata _to, uint256[] calldata _values) public  \r\n   {\r\n      require(_to.length == _values.length);\r\n      for (uint256 i = 0; i < _to.length; i++) {\r\n          _token.transferFrom(msg.sender, _to[i], _values[i]);\r\n    }\r\n  }\r\n}"
    }
  }
}