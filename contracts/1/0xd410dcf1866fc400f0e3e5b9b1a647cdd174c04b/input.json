{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Oracle.sol":{"content":"pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\ninterface UniswapV2Pair {\n    struct reserves {\n        uint112 reserve0;\n        uint112 reserve1;\n        uint32 blockTimestampLast;\n    }\n    function getReserves() external view returns (reserves memory);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n}\n\ncontract Oracle {\n\n    function getUniswapV2PairBalances(UniswapV2Pair[] memory pairs) public view returns (uint256[] memory balances) {\n        uint256 length = pairs.length;\n        balances = new uint256[](length * 2);\n\n        for (uint256 i = 0; i < length; ++i) {\n            UniswapV2Pair.reserves memory reserves = UniswapV2Pair(pairs[i]).getReserves();\n\n            balances[i * 2] = reserves.reserve0;\n            balances[i * 2 + 1] = reserves.reserve1;\n        }\n    }\n}"}}}