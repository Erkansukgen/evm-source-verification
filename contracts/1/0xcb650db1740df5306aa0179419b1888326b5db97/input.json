{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "DAW_TRAF_Mint.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface ITRAF {\r\n\r\n    function adminMint(address account, uint256 amount) external;\r\n\r\n    function changeOwner1(address payable owner) external;\r\n    \r\n    function changeOwner2(address payable owner) external;\r\n}\r\n\r\ninterface IDAW {\r\n\r\n    function balanceOf(address owner) external returns (uint256);\r\n\r\n}\r\n\r\ncontract DAW_TRAF_Mint {\r\n    \r\n    ITRAF TRAF;\r\n    IDAW DAW;\r\n    \r\n    address private _manager;\r\n    \r\n    uint256 private _price = 550000000000000000;\r\n\r\n    bool private _minting = true; //If minting is on or off\r\n\r\n    modifier manager {\r\n        require(msg.sender == _manager);\r\n        _;\r\n    }\r\n    \r\n    receive() external payable {}\r\n    \r\n    constructor(address TRAFcontract, address DAWcontract) {\r\n        _manager = msg.sender;\r\n        TRAF = ITRAF(TRAFcontract);\r\n        DAW = IDAW(DAWcontract);\r\n    }\r\n\r\n    //Read Functions======================================================================================================================================================\r\n    function owner() external view returns (address) {\r\n        return _manager;\r\n    }\r\n\r\n    function price() external view returns(uint256) {\r\n        return _price;\r\n    }\r\n\r\n    function minting() external view returns(bool) {return _minting;}\r\n    \r\n    //Moderator Functions======================================================================================================================================================\r\n    function changeManager(address Manager) external manager {\r\n        _manager = Manager;\r\n    }\r\n\r\n    function toggleMinting() external manager {\r\n        _minting = !_minting;\r\n    }\r\n\r\n    function changeOwner1(address payable owner) external manager {\r\n        TRAF.changeOwner1(owner);\r\n    }\r\n    \r\n    function changeOwner2(address payable owner) external manager {\r\n        TRAF.changeOwner2(owner);\r\n    }\r\n\r\n    function changePrice(uint256 newPrice) external manager {\r\n        unchecked{_price = newPrice;}\r\n    }\r\n\r\n    function managerWithdraw(address payable to, uint256 amount) external manager {\r\n        to.transfer(amount);\r\n    }\r\n\r\n    //User functions==============================================================================================================================\r\n\r\n    function mint(uint256 amount) external payable {\r\n        require(_minting, \"Minting Is Off\");\r\n        require(DAW.balanceOf(msg.sender) > 0, \"No DAW token found\");\r\n        require(msg.value == amount * _price, \"Insufficient ETH\");\r\n            \r\n        TRAF.adminMint(msg.sender, amount);\r\n    }\r\n\r\n}"
    }
  }
}