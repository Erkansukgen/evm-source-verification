{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/bot.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.7;\r\n\r\ncontract bot {\r\n    event success();\r\n    event fail();\r\n\r\n    bytes32 public secretHash;\r\n\r\n    constructor (bytes32 _secretHash) payable {\r\n        secretHash = _secretHash;\r\n    }\r\n\r\n    function take(string calldata _secret) external {\r\n        if (keccak256(abi.encodePacked(_secret)) == secretHash) {\r\n            uint256 _myBalance = address(this).balance;\r\n            payable (msg.sender).transfer(_myBalance);\r\n            emit success();\r\n        } else {\r\n            emit fail();\r\n        }\r\n    }\r\n}"}}}