{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/contracts/Slav.sol":{"content":"/**\r\n * SPDX-License-Identifier: UNLICENSED\r\n * Submitted for verification at Etherscan.io on 2017-12-14\r\n*/\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\nabstract contract DateTime {\r\n\r\n    function getHour(uint timestamp) virtual public returns (uint8);\r\n}\r\n\r\ncontract SlavContract {\r\n    address private owner;\r\n\r\n  \taddress constant private SLAV_ADDR = 0x0625fAaD99bCD3d22C91aB317079F6616e81e3c0;\r\n\r\n    address constant private DATE_TIME_ADDR = 0x8Fc065565E3e44aef229F1D06aac009D6A524e82;\r\n    DateTime dateTime = DateTime(DATE_TIME_ADDR);\r\n\r\n\r\n    constructor()  {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    receive() external payable {\r\n\r\n    }\r\n    fallback () external payable {\r\n        \r\n    }\r\n\r\n    function getMyCoinsPlease() public {\r\n        uint8 hour = dateTime.getHour(block.timestamp);\r\n        require (hour > 16, \"after 16:00 UTC only\");\r\n        require (msg.sender == SLAV_ADDR);\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n\r\n    function getBalance() view public returns (uint256){\r\n        return address(this).balance;\r\n    }\r\n}"}}}