{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"HOKK_PROXY_DIV.sol":{"content":"\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract HOKKDividendTracker {\r\n\r\n    // Code position in storage is keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\r\n    constructor(bytes memory constructData, address contractLogic) public {\r\n        // save the code address\r\n        assembly { // solium-disable-line\r\n            sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, contractLogic)\r\n        }\r\n        (bool success, bytes memory __ ) = contractLogic.delegatecall(constructData); // solium-disable-line\r\n\r\n        require(success, \"Construction failed\");\r\n    }\r\n\r\n    fallback() external payable {\r\n        assembly { // solium-disable-line\r\n            let contractLogic := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\r\n            calldatacopy(0x0, 0x0, calldatasize())\r\n            let success := delegatecall(gas(), contractLogic, 0x0, calldatasize(), 0, 0)\r\n\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch success\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}