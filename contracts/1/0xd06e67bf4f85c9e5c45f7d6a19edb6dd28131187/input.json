{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Utils.sol":{"content":"pragma solidity 0.5.14;\r\n\r\n\r\n\r\nlibrary Utils{\r\n\r\n    function _isETH(address globalConfig, address _token) public view returns (bool) {\r\n        return IConstant(IGlobalConfig(globalConfig).constants()).ETH_ADDR() == _token;\r\n    }\r\n\r\n    function getDivisor(address globalConfig, address _token) public view returns (uint256) {\r\n        if(_isETH(globalConfig, _token)) return IConstant(IGlobalConfig(globalConfig).constants()).INT_UNIT();\r\n        return 10 ** uint256(ITokenRegistry(IGlobalConfig(globalConfig).tokenInfoRegistry()).getTokenDecimals(_token));\r\n    }\r\n\r\n}\r\n\r\ninterface IGlobalConfig {\r\n    function constants() external view returns (address);\r\n    function tokenInfoRegistry() external view returns (address);\r\n}\r\n\r\ninterface IConstant {\r\n    function ETH_ADDR() external view returns (address);\r\n    function INT_UNIT() external view returns (uint256);\r\n}\r\n\r\ninterface ITokenRegistry {\r\n    function getTokenDecimals(address) external view returns (uint8);\r\n}"}}}