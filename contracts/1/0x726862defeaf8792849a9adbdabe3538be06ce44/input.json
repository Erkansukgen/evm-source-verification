{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/1_Storage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title MethuselonMessage001\n * @dev Store a message sent by Methuselon from the future.\n */\ncontract MethuselonMessage001 {\n\n    address public immutable methuselon;\n    string public messageFromFuture;\n    \n    /**\n     * @dev Dogelon deploys the contract on behalf of Methuselon.\n     */\n    constructor(address methuselah) {\n        methuselon = methuselah;\n    }\n    \n    /**\n     * @dev Receive a message from the future.\n     * @param message message to store.\n     */\n    function receiveMessageFromFuture(string memory message) public {\n        require(methuselon == msg.sender, \"not methuselon\");\n        messageFromFuture = message;\n    }\n}"}}}