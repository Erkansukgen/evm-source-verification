{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/batchTrasnfer.sol":{"content":"pragma solidity 0.6.8;\r\n\r\ninterface IERC20  {\r\n\tfunction totalSupply() external view returns (uint256);\r\n\r\n\tfunction balanceOf(address account) external view returns (uint256);\r\n\r\n\tfunction transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n\tfunction allowance(address owner, address spender) external view returns (uint256);\r\n\r\n\tfunction approve(address spender, uint256 amount) external view returns (bool);\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract batchTransfer {\r\n    address owner;\r\n    address[] to;\r\n    \r\n    IERC20 bfcToken = IERC20(0x0c7D5ae016f806603CB1782bEa29AC69471CAb9c);\r\n    \r\n    constructor(address[] memory _to) public {\r\n        owner = msg.sender;\r\n        to = _to;\r\n    }\r\n    \r\n    function getTo() public view returns(address[] memory) {\r\n        return to;\r\n    }\r\n    \r\n    function getToLength() public view returns(uint256) {\r\n        return to.length;\r\n    }\r\n    \r\n    function transfer() public returns(bool) {\r\n        for(uint i=0; i< to.length; i++) {\r\n            bfcToken.transfer(to[i], 1);\r\n        }\r\n    }\r\n}"}}}