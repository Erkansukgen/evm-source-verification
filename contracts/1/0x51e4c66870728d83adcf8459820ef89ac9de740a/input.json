{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Bkiex.sol":{"content":"pragma solidity ^0.4.8;\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Bkiex is owned{\r\n\r\n    function withdrawEther(uint256 amount) external onlyOwner {\r\n\t\towner.transfer(amount);\r\n\t}\r\n\tfunction querBalance()public view returns(uint256){\r\n         return this.balance;\r\n    }\r\n    function() payable {}\r\n}"}}}