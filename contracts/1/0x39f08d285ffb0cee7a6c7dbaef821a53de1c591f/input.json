{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/Grrr.sol": {
      "content": "pragma solidity ^0.7.2;\npragma experimental ABIEncoderV2;\n// SPDX-License-Identifier: Blarg\n\nstruct GroupTokenBalance\n{\n    bytes32 token;\n    uint8 balance;\n}\n\ncontract MappingExample {\n    mapping (bytes32 => uint8) private _balances;\n    \n    constructor(){\n        _balances['a'] = 1;\n        _balances['b'] = 2;\n    }\n    \n    function getBalance(bytes32 token) public view returns (uint8)\n    {\n        return _balances[token];\n    }\n    \n    \n}"
    }
  }
}