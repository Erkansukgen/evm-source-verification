{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/testchainlink.sol": {
      "content": "\r\npragma solidity ^0.6.7;\r\n\r\n\r\n\r\ninterface AggregatorV3Interface {\r\n  function latestRoundData() external view returns (int256);\r\n}\r\n\r\ncontract PriceConsumerV3 {\r\n\r\n\r\n    int256 price ;\r\n    AggregatorV3Interface internal priceFeed;\r\n    \r\n    constructor() public {\r\n        priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\r\n    }\r\n\r\n    /**\r\n     * Returns the latest price\r\n     */\r\n    function getLatestPrice() public  returns (int) {\r\n        \r\n            price = priceFeed.latestRoundData();\r\n            return price;\r\n    }\r\n    \r\n    \r\n}"
    }
  }
}