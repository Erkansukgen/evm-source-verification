{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"CallTester.sol":{"content":"pragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract CallTester  {\r\n    \r\n    struct CallDesc {\r\n        address to;\r\n        bytes data;\r\n        uint256 value;\r\n    }\r\n    \r\n    function makeCalls(CallDesc[] memory calls) external returns (bytes memory ret) {\r\n        for (uint i = 0; i < calls.length; i++) {\r\n            CallDesc memory c = calls[i];\r\n            (bool ok, bytes memory data) = c.to.call{value: c.value}(c.data);\r\n            require(ok, \"failed\");\r\n            ret = data;\r\n        }\r\n    }\r\n\r\n}"}}}