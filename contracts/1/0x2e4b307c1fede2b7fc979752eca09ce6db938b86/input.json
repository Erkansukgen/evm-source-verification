{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "xGDAO Controller.sol": {
      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\ncontract Controller {\n    //For now the only thing this contract does is return the uniswap router.\n    address public immutable uniswapRouter;         //uniswapV2Router\n    address public immutable pools;                 //The AddressList contract of the pools. For testing this can just be an arbitrary address\n    string private revertMessage;                   //This controller is a temporary test contract. Is meant to be relaplaced. This message is for the functions not implemented yet\n     \n    constructor(address _uniswapV2Router, address _pools, string memory _revertMessage) public{\n        uniswapRouter = _uniswapV2Router;\n        pools = _pools;\n        revertMessage = _revertMessage;\n    }\n\n    function aaveReferralCode() external view returns (uint16){\n        revert(revertMessage);\n    }\n\n    function feeCollector(address) external view returns (address){\n        revert(revertMessage);\n    }\n\n    function founderFee() external view returns (uint256){\n        revert(revertMessage);\n    }\n\n    function founderVault() external view returns (address){\n        revert(revertMessage);\n    }\n\n    function interestFee(address _x) external view returns (uint256){\n        revert(revertMessage);\n    }\n\n    function isPool(address _x) external view returns (bool){\n        revert(revertMessage);\n    }\n\n    function strategy(address _x) external view returns (address){\n        revert(revertMessage);\n    }\n\n    function rebalanceFriction(address _x) external view returns (uint256){\n        revert(revertMessage);\n    }\n\n    function poolRewards(address _x) external view returns (address){\n        revert(revertMessage);\n    }\n\n    function treasuryPool() external view returns (address){\n        revert(revertMessage);\n    }\n\n\n    function withdrawFee(address) external view returns (uint256){\n        revert(revertMessage);\n    }\n\n}"
    }
  }
}