{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":100},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"virtualGold.sol":{"content":"pragma solidity ^0.4.24;\r\n\r\n\r\ncontract virtualGold {\r\n\r\n  uint public virtualGoldPrice;\r\n  uint public total;\r\n  mapping(address=>uint) quantity;\r\n  address virtualGoldTeam;\r\n\r\n\r\n  constructor() public\r\n  {\r\n      //At the core virtualgold is just a data record that is linked to each holders wallet address which stores the amount amount of virtualgold held by each of one them. The value of your virtualgold is always backed by ethereum in this smart contract.\r\n      virtualGoldTeam=0xd98F9E1191Ac53B1Af3E7A09Af53E08755B3DE9a; //This is the wallet address of the virtualgold team\r\n      virtualGoldPrice = 0.000000001 ether; //This is the starting price of virtualgold per microgram. This value keeps increasing after every investment/virtualgold purchase. This value can never depreciate.\r\n      total = 0; //The total quantity of virtualgold owned by everyone when the contract is deployed is 0\r\n  }\r\n\r\n\r\n  function increaseTokenPrice()\r\n      public returns(bool)\r\n  {\r\n      // It is used for recalculating/updating the price per unit gram of virtualgold. This function is called after every investment as the price increases after every investment.\r\n      virtualGoldPrice=(address(this).balance)/(total);\r\n      return true;\r\n  }\r\n\r\n\r\n  function buyVirtualGold(address referral)\r\n        public payable returns (bool)\r\n  {\r\n        uint amount = (msg.value*666)/1000; //66.6 percent of the ethereum investment is used for purchasing virtualgold.\r\n        if(quantity[referral]>0)\r\n        {\r\n            //ensure that the referral address is a virtualgold holder\r\n            quantity[referral]+=(msg.value*3)/(100*virtualGoldPrice); //3% referral fee\r\n            total+=(msg.value*3)/(100*virtualGoldPrice);//update total\r\n            if(referral!=virtualGoldTeam)\r\n            {\r\n                //For 1% bonus to the investor, the referral address must be a virtualgold holder other than the virtualGoldTeam address\r\n                amount += (msg.value*1)/100;// 1% bonus to the investor\r\n                total+=(msg.value*1)/(100*virtualGoldPrice);//update total\r\n            }\r\n        }\r\n        quantity[msg.sender]+=(amount)/virtualGoldPrice; //virtualgold is bought by the investor and linked to his/her wallet address\r\n        total+=(amount)/virtualGoldPrice; //update total\r\n        quantity[virtualGoldTeam]+=(msg.value*3)/(100*virtualGoldPrice); //3% fee to the virtualgold Team\r\n        total+=(msg.value*7)/(100*virtualGoldPrice); //update total\r\n        increaseTokenPrice(); //Remaining 26.33%(if referral address isn't a holder then 30.33%) is used for increasing the price of virtualgold.\r\n        return true;\r\n  }\r\n\r\n\r\n  function sellVirtualGold()\r\n        public returns (bool)\r\n  {\r\n        //cash out the holders position\r\n        uint amountToTransfer=quantity[msg.sender]*virtualGoldPrice; //calculate the amount to transfer\r\n        total-=quantity[msg.sender]; //update total\r\n        quantity[msg.sender]=0; //reset quantity to zero as he/she is no longer a holder\r\n        msg.sender.transfer(amountToTransfer); //transfer ethereum to holders address\r\n        return true;\r\n  }\r\n\r\n}"}}}