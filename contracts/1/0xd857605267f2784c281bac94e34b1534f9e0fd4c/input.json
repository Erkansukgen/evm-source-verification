{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 999999
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/ProxyConstructorArg.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.6.11;\n\ncontract ProxyConstructorArg {\n    function getEncodedArg(address _proxyAdmin)\n        public\n        pure\n        returns (bytes memory)\n    {\n        bytes memory payload = abi.encodeWithSignature(\n            \"initialize(address)\",\n            _proxyAdmin\n        );\n        return payload;\n    }\n}\n"
    }
  }
}