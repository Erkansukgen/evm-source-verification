{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/Condition.sol": {
      "content": "pragma solidity ^0.8.0;\n\ninterface INFT {\n    function tokenOfOwnerByIndex(address owner, uint index) external returns (uint);\n    \n    function tokenTraits(uint tokenId) external returns (bool isSheep, uint8 fur, uint8 head, uint8 ears, uint8 eyes, uint8 nose, uint8 mouth, uint8 neck, uint8 feet, uint8 alphaIndex);\n}\n\ncontract Condition {\n    constructor() {}\n\n    function check(address sender, uint maxAlpha, uint index) external {\n        uint tokenId = INFT(0xEB834ae72B30866af20a6ce5440Fa598BfAd3a42).tokenOfOwnerByIndex(sender, index);\n        (bool isSheep, uint8 fur, uint8 head, uint8 ears, uint8 eyes, uint8 nose, uint8 mouth, uint8 neck, uint8 feet, uint8 alphaIndex) = INFT(0xEB834ae72B30866af20a6ce5440Fa598BfAd3a42).tokenTraits(tokenId);\n        require(!isSheep && alphaIndex <= maxAlpha, \"fail\"); // worst alpha is 3, best alpha is 0\n\n    }\n}"
    }
  }
}