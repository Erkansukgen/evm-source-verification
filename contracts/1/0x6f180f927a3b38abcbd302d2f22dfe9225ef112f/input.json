{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/Accoomulator.sol": {
      "content": "pragma solidity ^0.8.0;\r\n\r\ninterface IWET {\r\n    function accumulated(uint256 id) external view returns (uint256);\r\n}\r\n\r\ninterface IWaifus {\r\n    function tokenNameByIndex(uint256 id) external view returns (string memory);\r\n}\r\n\r\ncontract Accoomulator {\r\n  IWET WET = IWET(0x76280AF9D18a868a0aF3dcA95b57DDE816c1aaf2);\r\n  IWaifus WAIFUS = IWaifus(0x2216d47494E516d8206B70FCa8585820eD3C4946);\r\n\r\n  function accoomulatedWET(uint256[] calldata ids) external view returns (uint256[] memory) {\r\n    uint256[] memory wetAccumulated = new uint256[](ids.length);\r\n    for (uint256 i = 0; i < ids.length; i++) {\r\n      wetAccumulated[i] = WET.accumulated(i);\r\n    }\r\n    return wetAccumulated;\r\n  }\r\n  \r\n  function accoomulatedNames(uint256[] calldata ids) external view returns (string[] memory) {\r\n    string[] memory namesAccumulated = new string[](ids.length);\r\n    for (uint256 i = 0; i < ids.length; i++) {\r\n      namesAccumulated[i] = WAIFUS.tokenNameByIndex(i);\r\n    }\r\n    return namesAccumulated;\r\n  }\r\n}"
    }
  }
}