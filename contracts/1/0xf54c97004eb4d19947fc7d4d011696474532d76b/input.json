{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":1500},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"/bifi-project/bifi/1/0xf54C97004eb4d19947fC7D4d011696474532d76B/dataStorage.sol":{"content":"pragma solidity 0.6;\ninterface ERC20  {\n\tfunction totalSupply() view external returns (uint256);\n\n\tfunction balanceOf(address who) view external returns (uint256);\n\n\tfunction allowance(address owner, address spender) view external returns (uint256);\n\n\tfunction transfer(address to, uint256 value) external returns (bool);\n\n\tfunction approve(address spender, uint256 value) external returns (bool);\n\n\tfunction transferFrom(address from, address to, uint256 value) external returns (bool);\n}interface marketHandlerDataStorageInterface  {\n\tfunction setCircuitBreaker(bool _emergency) external returns (bool);\n\n\tfunction getUserAccessed(address payable userAddr) view external returns (bool);\n\n\tfunction setUserAccessed(address payable userAddr, bool _accessed) external returns (bool);\n\n\tfunction getReservedAddr() view external returns (address payable);\n\n\tfunction setReservedAddr(address payable reservedAddress) external returns (bool);\n\n\tfunction getReservedAmount() view external returns (int256);\n\n\tfunction addReservedAmount(uint256 amount) external returns (int256);\n\n\tfunction subReservedAmount(uint256 amount) external returns (int256);\n\n\tfunction updateSignedReservedAmount(int256 amount) external returns (int256);\n\n\tfunction setTokenHandler(address _marketHandlerAddr, address _interestModelAddr, uint256 _underlyingTokenDecimal) external returns (bool);\n\n\tfunction setCoinHandler(address _marketHandlerAddr, address _interestModelAddr) external returns (bool);\n\n\tfunction getDepositTotalAmount() view external returns (uint256);\n\n\tfunction addDepositTotalAmount(uint256 amount) external returns (uint256);\n\n\tfunction subDepositTotalAmount(uint256 amount) external returns (uint256);\n\n\tfunction getBorrowTotalAmount() view external returns (uint256);\n\n\tfunction addBorrowTotalAmount(uint256 amount) external returns (uint256);\n\n\tfunction subBorrowTotalAmount(uint256 amount) external returns (uint256);\n\n\tfunction getUserIntraDepositAmount(address payable userAddr) view external returns (uint256);\n\n\tfunction addUserIntraDepositAmount(address payable userAddr, uint256 amount) external returns (uint256);\n\n\tfunction subUserIntraDepositAmount(address payable userAddr, uint256 amount) external returns (uint256);\n\n\tfunction getUserIntraBorrowAmount(address payable userAddr) view external returns (uint256);\n\n\tfunction addUserIntraBorrowAmount(address payable userAddr, uint256 amount) external returns (uint256);\n\n\tfunction subUserIntraBorrowAmount(address payable userAddr, uint256 amount) external returns (uint256);\n\n\tfunction addDepositAmount(address payable userAddr, uint256 amount) external returns (bool);\n\n\tfunction addBorrowAmount(address payable userAddr, uint256 amount) external returns (bool);\n\n\tfunction subDepositAmount(address payable userAddr, uint256 amount) external returns (bool);\n\n\tfunction subBorrowAmount(address payable userAddr, uint256 amount) external returns (bool);\n\n\tfunction getUserAmount(address payable userAddr) view external returns (uint256, uint256);\n\n\tfunction getHandlerAmount() view external returns (uint256, uint256);\n\n\tfunction getHandlerAmountInfo(address payable userAddr) view external returns (uint256, uint256, uint256, uint256);\n\n\tfunction setAmount(address payable userAddr, uint256 depositTotalAmount, uint256 borrowTotalAmount, uint256 depositAmount, uint256 borrowAmount) external returns (uint256);\n\n\tfunction getLastUpdatedBlock() view external returns (uint256);\n\n\tfunction setLastUpdatedBlock(uint256 _lastUpdatedBlock) external returns (bool);\n\n\tfunction getInactiveActionDelta() view external returns (uint256);\n\n\tfunction setInactiveActionDelta(uint256 inactiveActionDelta) external returns (bool);\n\n\tfunction getActionEXR() view external returns (uint256, uint256);\n\n\tfunction setActionEXR(uint256 actionDepositExRate, uint256 actionBorrowExRate) external returns (bool);\n\n\tfunction getGlobalDepositEXR() view external returns (uint256);\n\n\tfunction getGlobalBorrowEXR() view external returns (uint256);\n\n\tfunction setEXR(address payable userAddr, uint256 globalDepositEXR, uint256 globalBorrowEXR) external returns (bool);\n\n\tfunction getUserEXR(address payable userAddr) view external returns (uint256, uint256);\n\n\tfunction setUserEXR(address payable userAddr, uint256 depositEXR, uint256 borrowEXR) external returns (bool);\n\n\tfunction getGlobalEXR() view external returns (uint256, uint256);\n\n\tfunction getUnifiedTokenDecimal() view external returns (uint256);\n\n\tfunction setUnifiedTokenDecimal(uint256 unifiedTokenDecimal) external returns (bool);\n\n\tfunction getUnderlyingTokenDecimal() view external returns (uint256);\n\n\tfunction setUnderlyingTokenDecimal(uint256 underlyingTokenDecimal) external returns (bool);\n\n\tfunction getLiquidityLimit() view external returns (uint256);\n\n\tfunction setLiquidityLimit(uint256 liquidityLimit) external returns (bool);\n\n\tfunction getMarketHandlerAddr() view external returns (address);\n\n\tfunction setMarketHandlerAddr(address marketHandlerAddr) external returns (bool);\n\n\tfunction getInterestModelAddr() view external returns (address);\n\n\tfunction setInterestModelAddr(address interestModelAddr) external returns (bool);\n\n\tfunction setInterestEffectLimit(uint256 _interestEffectLimit) external returns (bool);\n\n\tfunction getInterestEffectLimit() view external returns (uint256);\n\n\tfunction setLimitOfAction(uint256 _limitOfAction) external returns (bool);\n\n\tfunction getLimitOfAction() view external returns (uint256);\n}contract marketHandlerDataStorage is marketHandlerDataStorageInterface {\n\taddress payable owner;\n\n\tbool emergency = false;\n\n\taddress payable reservedAddr;\n\n\tint256 reservedAmount;\n\n\taddress marketHandlerAddr;\n\n\taddress interestModelAddr;\n\n\tuint256 lastUpdatedBlock;\n\n\tuint256 inactiveActionDelta;\n\n\tuint256 actionDepositEXR;\n\n\tuint256 actionBorrowEXR;\n\n\tuint256 public depositTotalAmount;\n\n\tuint256 public borrowTotalAmount;\n\n\tmapping(address => bool) userAccessed;\n\n\tmapping(address => uint256) intraDepositAmount;\n\n\tmapping(address => uint256) intraBorrowAmount;\n\n\tuint256 public globalDepositEXR;\n\n\tuint256 public globalBorrowEXR;\n\n\tmapping(address => uint256) userDepositEXR;\n\n\tmapping(address => uint256) userBorrowEXR;\n\n\tuint256 unifiedTokenDecimal = 10 ** 18;\n\n\tuint256 underlyingTokenDecimal;\n\n\tuint256 liquidityLimit = 10 ** 18;\n\n\tuint256 interestEffectLimit = 10000;\n\n\tuint256 limitOfAction;\n\n\tuint256 constant unifiedPoint = 10 ** 18;\n\n\tmodifier onlyOwner {\n\t\trequire(msg.sender == owner, \"onlyOwner function\");\n\t\t_;\n\t}\n\n\tmodifier onlyBifiContract {\n\t\taddress sender = msg.sender;\n\t\trequire((sender == marketHandlerAddr) || (sender == interestModelAddr), \"onlyBifiContract function\");\n\t\t_;\n\t}\n\n\tmodifier circuitBreaker {\n\t\trequire(!emergency, \"fatal: emergency\");\n\t\t_;\n\t}\n\n\tconstructor () public\n\t{\n\t\towner = msg.sender;\n\t\treservedAddr = owner;\n\t\t_initializeEXR();\n\t}\n\n\tfunction setCircuitBreaker(bool _emergency)onlyBifiContract external override returns (bool)\n\t{\n\t\temergency = _emergency;\n\t\treturn _emergency;\n\t}\n\n\tfunction setUserAccessed(address payable userAddr, bool _accessed)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tuserAccessed[userAddr] = _accessed;\n\t\treturn true;\n\t}\n\n\tfunction getReservedAddr() view external override returns (address payable)\n\t{\n\t\treturn reservedAddr;\n\t}\n\n\tfunction setReservedAddr(address payable reservedAddress)onlyOwner external override returns (bool)\n\t{\n\t\treservedAddr = reservedAddress;\n\t\treturn true;\n\t}\n\n\tfunction getReservedAmount() view external override returns (int256)\n\t{\n\t\treturn reservedAmount;\n\t}\n\n\tfunction addReservedAmount(uint256 amount)onlyBifiContract circuitBreaker external override returns (int256)\n\t{\n\t\treservedAmount = signedAdd(reservedAmount, int(amount));\n\t\treturn reservedAmount;\n\t}\n\n\tfunction subReservedAmount(uint256 amount)onlyBifiContract circuitBreaker external override returns (int256)\n\t{\n\t\treservedAmount = signedSub(reservedAmount, int(amount));\n\t\treturn reservedAmount;\n\t}\n\n\tfunction updateSignedReservedAmount(int256 amount)onlyBifiContract circuitBreaker external override returns (int256)\n\t{\n\t\treservedAmount = signedAdd(reservedAmount, amount);\n\t\treturn reservedAmount;\n\t}\n\n\tfunction addDepositTotalAmount(uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tdepositTotalAmount = add(depositTotalAmount, amount);\n\t\treturn depositTotalAmount;\n\t}\n\n\tfunction subDepositTotalAmount(uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tdepositTotalAmount = sub(depositTotalAmount, amount);\n\t\treturn depositTotalAmount;\n\t}\n\n\tfunction addBorrowTotalAmount(uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tborrowTotalAmount = add(borrowTotalAmount, amount);\n\t\treturn borrowTotalAmount;\n\t}\n\n\tfunction subBorrowTotalAmount(uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tborrowTotalAmount = sub(borrowTotalAmount, amount);\n\t\treturn borrowTotalAmount;\n\t}\n\n\tfunction addUserIntraDepositAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tintraDepositAmount[userAddr] = add(intraDepositAmount[userAddr], amount);\n\t\treturn intraDepositAmount[userAddr];\n\t}\n\n\tfunction subUserIntraDepositAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tintraDepositAmount[userAddr] = sub(intraDepositAmount[userAddr], amount);\n\t\treturn intraDepositAmount[userAddr];\n\t}\n\n\tfunction addUserIntraBorrowAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tintraBorrowAmount[userAddr] = add(intraBorrowAmount[userAddr], amount);\n\t\treturn intraBorrowAmount[userAddr];\n\t}\n\n\tfunction subUserIntraBorrowAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tintraBorrowAmount[userAddr] = sub(intraBorrowAmount[userAddr], amount);\n\t\treturn intraBorrowAmount[userAddr];\n\t}\n\n\tfunction addDepositAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tdepositTotalAmount = add(depositTotalAmount, amount);\n\t\tintraDepositAmount[userAddr] = add(intraDepositAmount[userAddr], amount);\n\t}\n\n\tfunction addBorrowAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tborrowTotalAmount = add(borrowTotalAmount, amount);\n\t\tintraBorrowAmount[userAddr] = add(intraBorrowAmount[userAddr], amount);\n\t}\n\n\tfunction subDepositAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tdepositTotalAmount = sub(depositTotalAmount, amount);\n\t\tintraDepositAmount[userAddr] = sub(intraDepositAmount[userAddr], amount);\n\t}\n\n\tfunction subBorrowAmount(address payable userAddr, uint256 amount)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tborrowTotalAmount = sub(borrowTotalAmount, amount);\n\t\tintraBorrowAmount[userAddr] = sub(intraBorrowAmount[userAddr], amount);\n\t}\n\n\tfunction getUserAmount(address payable userAddr) view external override returns (uint256, uint256)\n\t{\n\t\treturn (intraDepositAmount[userAddr], intraBorrowAmount[userAddr]);\n\t}\n\n\tfunction getHandlerAmount() view external override returns (uint256, uint256)\n\t{\n\t\treturn (depositTotalAmount, borrowTotalAmount);\n\t}\n\n\tfunction setAmount(address payable userAddr, uint256 _depositTotalAmount, uint256 _borrowTotalAmount, uint256 depositAmount, uint256 borrowAmount)onlyBifiContract circuitBreaker external override returns (uint256)\n\t{\n\t\tdepositTotalAmount = _depositTotalAmount;\n\t\tborrowTotalAmount = _borrowTotalAmount;\n\t\tintraDepositAmount[userAddr] = depositAmount;\n\t\tintraBorrowAmount[userAddr] = borrowAmount;\n\t}\n\n\tfunction getHandlerAmountInfo(address payable userAddr) view external override returns (uint256, uint256, uint256, uint256)\n\t{\n\t\treturn (depositTotalAmount, borrowTotalAmount, intraDepositAmount[userAddr], intraBorrowAmount[userAddr]);\n\t}\n\n\tfunction setLastUpdatedBlock(uint256 _lastUpdatedBlock)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tlastUpdatedBlock = _lastUpdatedBlock;\n\t\treturn true;\n\t}\n\n\tfunction setInactiveActionDelta(uint256 _inactiveActionDelta)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tinactiveActionDelta = _inactiveActionDelta;\n\t\treturn true;\n\t}\n\n\tfunction getActionEXR() view external override returns (uint256, uint256)\n\t{\n\t\treturn (actionDepositEXR, actionBorrowEXR);\n\t}\n\n\tfunction setActionEXR(uint256 _actionDepositEXR, uint256 _actionBorrowEXR)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tactionDepositEXR = _actionDepositEXR;\n\t\tactionBorrowEXR = _actionBorrowEXR;\n\t\treturn true;\n\t}\n\n\tfunction setEXR(address payable userAddr, uint256 _globalDepositEXR, uint256 _globalBorrowEXR)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tglobalDepositEXR = _globalDepositEXR;\n\t\tglobalBorrowEXR = _globalBorrowEXR;\n\t\tuserDepositEXR[userAddr] = _globalDepositEXR;\n\t\tuserBorrowEXR[userAddr] = _globalBorrowEXR;\n\t\treturn true;\n\t}\n\n\tfunction getUserEXR(address payable userAddr) view external override returns (uint256, uint256)\n\t{\n\t\treturn (userDepositEXR[userAddr], userBorrowEXR[userAddr]);\n\t}\n\n\tfunction setUserEXR(address payable userAddr, uint256 depositEXR, uint256 borrowEXR)onlyBifiContract circuitBreaker external override returns (bool)\n\t{\n\t\tuserDepositEXR[userAddr] = depositEXR;\n\t\tuserBorrowEXR[userAddr] = borrowEXR;\n\t\treturn true;\n\t}\n\n\tfunction getGlobalEXR() view external override returns (uint256, uint256)\n\t{\n\t\treturn (globalDepositEXR, globalBorrowEXR);\n\t}\n\n\tfunction setUnifiedTokenDecimal(uint256 _unifiedTokenDecimal)onlyOwner external override returns (bool)\n\t{\n\t\tunifiedTokenDecimal = _unifiedTokenDecimal;\n\t\treturn true;\n\t}\n\n\tfunction setUnderlyingTokenDecimal(uint256 _underlyingTokenDecimal)onlyOwner external override returns (bool)\n\t{\n\t\tunderlyingTokenDecimal = _underlyingTokenDecimal;\n\t\treturn true;\n\t}\n\n\tfunction setLiquidityLimit(uint256 _liquidityLimit)onlyOwner external override returns (bool)\n\t{\n\t\tliquidityLimit = _liquidityLimit;\n\t\treturn true;\n\t}\n\n\tfunction setMarketHandlerAddr(address _marketHandlerAddr)onlyOwner external override returns (bool)\n\t{\n\t\tmarketHandlerAddr = _marketHandlerAddr;\n\t\treturn true;\n\t}\n\n\tfunction setInterestModelAddr(address _interestModelAddr)onlyOwner external override returns (bool)\n\t{\n\t\tinterestModelAddr = _interestModelAddr;\n\t\treturn true;\n\t}\n\n\tfunction setTokenHandler(address _marketHandlerAddr, address _interestModelAddr, uint256 _underlyingTokenDecimal)onlyOwner external override returns (bool)\n\t{\n\t\tmarketHandlerAddr = _marketHandlerAddr;\n\t\tinterestModelAddr = _interestModelAddr;\n\t\tunderlyingTokenDecimal = _underlyingTokenDecimal;\n\t\treturn true;\n\t}\n\n\tfunction setCoinHandler(address _marketHandlerAddr, address _interestModelAddr)onlyOwner external override returns (bool)\n\t{\n\t\tmarketHandlerAddr = _marketHandlerAddr;\n\t\tinterestModelAddr = _interestModelAddr;\n\t\treturn true;\n\t}\n\n\tfunction setInterestEffectLimit(uint256 _interestEffectLimit)onlyOwner external override returns (bool)\n\t{\n\t\tinterestEffectLimit = _interestEffectLimit;\n\t\treturn true;\n\t}\n\n\tfunction setLimitOfAction(uint256 _limitOfAction)onlyBifiContract external override returns (bool)\n\t{\n\t\tlimitOfAction = _limitOfAction;\n\t\treturn true;\n\t}\n\n\tfunction getLimitOfAction() view external override returns (uint256)\n\t{\n\t\treturn limitOfAction;\n\t}\n\n\tfunction getInterestEffectLimit() view external override returns (uint256)\n\t{\n\t\treturn interestEffectLimit;\n\t}\n\n\tfunction getBorrowTotalAmount() view external override returns (uint256)\n\t{\n\t\treturn borrowTotalAmount;\n\t}\n\n\tfunction getLastUpdatedBlock() view external override returns (uint256)\n\t{\n\t\treturn lastUpdatedBlock;\n\t}\n\n\tfunction getUserAccessed(address payable userAddr) view external override returns (bool)\n\t{\n\t\treturn userAccessed[userAddr];\n\t}\n\n\tfunction getDepositTotalAmount() view external override returns (uint256)\n\t{\n\t\treturn depositTotalAmount;\n\t}\n\n\tfunction getUserIntraBorrowAmount(address payable userAddr) view external override returns (uint256)\n\t{\n\t\treturn intraBorrowAmount[userAddr];\n\t}\n\n\tfunction getUserIntraDepositAmount(address payable userAddr) view external override returns (uint256)\n\t{\n\t\treturn intraDepositAmount[userAddr];\n\t}\n\n\tfunction getInactiveActionDelta() view external override returns (uint256)\n\t{\n\t\treturn inactiveActionDelta;\n\t}\n\n\tfunction getGlobalBorrowEXR() view external override returns (uint256)\n\t{\n\t\treturn globalBorrowEXR;\n\t}\n\n\tfunction getGlobalDepositEXR() view external override returns (uint256)\n\t{\n\t\treturn globalDepositEXR;\n\t}\n\n\tfunction getUnifiedTokenDecimal() view external override returns (uint256)\n\t{\n\t\treturn unifiedTokenDecimal;\n\t}\n\n\tfunction getUnderlyingTokenDecimal() view external override returns (uint256)\n\t{\n\t\treturn underlyingTokenDecimal;\n\t}\n\n\tfunction getLiquidityLimit() view external override returns (uint256)\n\t{\n\t\treturn liquidityLimit;\n\t}\n\n\tfunction getMarketHandlerAddr() view external override returns (address)\n\t{\n\t\treturn marketHandlerAddr;\n\t}\n\n\tfunction getInterestModelAddr() view external override returns (address)\n\t{\n\t\treturn interestModelAddr;\n\t}\n\n\tfunction _initializeEXR() internal \n\t{\n\t\tuint256 currectBlockNumber = block.number;\n\t\tactionDepositEXR = unifiedPoint;\n\t\tactionBorrowEXR = unifiedPoint;\n\t\tglobalDepositEXR = unifiedPoint;\n\t\tglobalBorrowEXR = unifiedPoint;\n\t\tlastUpdatedBlock = currectBlockNumber - 1;\n\t\tinactiveActionDelta = lastUpdatedBlock;\n\t}\n\n\tfunction setOwner(address payable _owner)onlyOwner public returns (bool)\n\t{\n\t\towner = _owner;\n\t\treturn true;\n\t}\n\n\tfunction getOwner() view public returns (address)\n\t{\n\t\treturn owner;\n\t}\n\n\tfunction add(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\tuint256 c = a + b;\n\t\trequire(c >= a, \"add overflow\");\n\t\treturn c;\n\t}\n\n\tfunction sub(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\treturn _sub(a, b, \"sub overflow\");\n\t}\n\n\tfunction mul(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\treturn _mul(a, b);\n\t}\n\n\tfunction div(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\treturn _div(a, b, \"div by zero\");\n\t}\n\n\tfunction mod(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\treturn _mod(a, b, \"mod by zero\");\n\t}\n\n\tfunction _sub(uint256 a, uint256 b, string memory errorMessage) pure internal returns (uint256)\n\t{\n\t\trequire(b <= a, errorMessage);\n\t\tuint256 c = a - b;\n\t\treturn c;\n\t}\n\n\tfunction _mul(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\tif (a == 0)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tuint256 c = a * b;\n\t\trequire((c / a) == b, \"mul overflow\");\n\t\treturn c;\n\t}\n\n\tfunction _div(uint256 a, uint256 b, string memory errorMessage) pure internal returns (uint256)\n\t{\n\t\trequire(b > 0, errorMessage);\n\t\tuint256 c = a / b;\n\t\treturn c;\n\t}\n\n\tfunction _mod(uint256 a, uint256 b, string memory errorMessage) pure internal returns (uint256)\n\t{\n\t\trequire(b != 0, errorMessage);\n\t\treturn a % b;\n\t}\n\n\tfunction unifiedDiv(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\treturn _div(_mul(a, unifiedPoint), b, \"unified div by zero\");\n\t}\n\n\tfunction unifiedMul(uint256 a, uint256 b) pure internal returns (uint256)\n\t{\n\t\treturn _div(_mul(a, b), unifiedPoint, \"unified mul by zero\");\n\t}\n\n\tfunction signedAdd(int256 a, int256 b) pure internal returns (int256)\n\t{\n\t\tint256 c = a + b;\n\t\trequire(((b >= 0) && (c >= a)) || ((b < 0) && (c < a)), \"SignedSafeMath: addition overflow\");\n\t\treturn c;\n\t}\n\n\tfunction signedSub(int256 a, int256 b) pure internal returns (int256)\n\t{\n\t\tint256 c = a - b;\n\t\trequire(((b >= 0) && (c <= a)) || ((b < 0) && (c > a)), \"SignedSafeMath: subtraction overflow\");\n\t\treturn c;\n\t}\n}"}}}