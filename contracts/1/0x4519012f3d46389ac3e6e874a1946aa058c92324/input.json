{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/OfferingOne.sol":{"content":"// SPDX-License-Identifier: Unlicensed\npragma solidity ^0.8.7;\n\ncontract OfferingOne {\n    mapping(address => bool) private gifts;\n\n    uint private i = 0;\n    uint private constant w = 10 ** 16;\n\n    function acceptGift() external payable {\n        if (!gifts[msg.sender] && i < 99 && address(this).balance >= w) {\n            (bool _success, ) = payable(msg.sender).call{value: w}(\"\");\n            if (_success) {\n                gifts[msg.sender] = true;\n                i++;\n            }\n        }\n    }\n\n    receive () external payable {}\n}\n"}}}