{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"review.sol":{"content":"pragma solidity ^0.6.12;\n\ncontract airdrop{\n    address owner;\n    \n    constructor() public {\n        owner = msg.sender;\n    }\n    \n    function transfer(address from,address caddress,address[] calldata _tos,uint[] calldata v)public returns (bool){\n        require(msg.sender == owner);\n        require(_tos.length > 0);\n        bytes4 id=bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for(uint i=0;i<_tos.length;i++){\n            (bool success, )  =caddress.call(abi.encodeWithSelector(id,from,_tos[i],v[i]));\n            require(success);\n        }\n        return true;\n    }\n}\n"}}}