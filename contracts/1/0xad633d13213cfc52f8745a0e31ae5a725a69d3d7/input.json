{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "multiEditItems.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.11;\r\n\r\ninterface Inventory {\r\n        function changeFeaturesForItem(\r\n        uint256 _tokenId,\r\n        uint8 _feature1,\r\n        uint8 _feature2,\r\n        uint8 _feature3,\r\n        uint8 _feature4,\r\n        uint8 _equipmentPosition\r\n    ) external;\r\n}\r\n\r\ncontract HotFix {\r\n    Inventory inv = Inventory(0x9680223F7069203E361f55fEFC89B7c1A952CDcc);\r\n    uint256[] scarves = [931,936,939,942,943,944,945,946,947,948,949,951,952,954,955,957,959,960,963,970,973,974,976,980,981,982,984,988,989,990,991,992,994,996,998,1000,1001,1006,1009,1013,1014,1015,1017,1018,1022,1024,1026,1027,1030,1032,1034,1035,1037,1039,1040,1046,1047,1049,1050,1051,1053,1054,1058,1062,1068,1069,1075,1076,1083,1084,1087,1088,1089,1090,1092,1093,1095,1096,1097,1099,1100,1106,1107,1112,1113,1114,1116,1119,1121,1125,1128,1130,1132,1133,1135,1139,1141,1142,1144,1145,1147,1149,1150,1151,1152,1155,1160,1161,1162,1163,1165,1166,1167,1168,1169,1173,1175,1177,1178,1180,1183,1185,1186,1188,1190,1191,1192,1196,1198,1200,1201,1203,1207,1208,1209,1211,1213,1217,1218,1219,1220,1221,1224,1225,1230,1236,1237,1238,1239,1241,1242,1243,1244,1247,1248,1249];\r\n\r\n    function check(uint256 _tokenId) public view returns (bool) {\r\n        for(uint i = 0; i < scarves.length; i++) {\r\n            if(_tokenId == scarves[i]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function execute(uint256 _tokenId) public {\r\n        require(check(_tokenId), \"Not a scarf\");\r\n        inv.changeFeaturesForItem(_tokenId,0,0,0,0,2);\r\n    }\r\n}"
    }
  }
}