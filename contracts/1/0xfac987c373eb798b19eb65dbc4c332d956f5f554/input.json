{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "DAO.sol": {
      "content": "/**\r\n *Submitted for verification at Etherscan.io on 2016-07-14\r\n*/\r\npragma solidity ^0.8.4;\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\n\r\ninterface DAO {\r\n    function balanceOf(address addr)external view returns (uint);\r\n    function transferFrom(address from, address to, uint balance) external returns (bool);\r\n    \r\n    \r\n}\r\n\r\ncontract WithdrawDAONew {\r\n    DAO  public mainDAO = DAO(0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413);\r\n    address payable public  trustee =  payable (0xeF55D78fa7CD115df8f1a70FC5902a9CE802fb91);\r\n\r\n    function withdraw() public  {\r\n        uint balance = mainDAO.balanceOf(msg.sender);\r\n\r\n        mainDAO.transferFrom(msg.sender, address(this), balance) ;\r\n        payable(msg.sender).transfer(balance);\r\n           \r\n    }\r\n\r\n}"
    }
  }
}