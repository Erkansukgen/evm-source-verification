{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "Recorder.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Recorder {\r\n\r\n    struct Person {\r\n        string name;\r\n        string title;\r\n    }\r\n\r\n    Person[] public persons;\r\n\r\n    constructor(Person[] memory _persons) {\r\n        for (uint8 i = 0; i < _persons.length; i++) {\r\n            persons.push(_persons[i]);\r\n        }\r\n    }\r\n\r\n    function add(Person memory person) public returns (uint256) {\r\n        persons.push(person);\r\n        return persons.length - 1;\r\n    }\r\n\r\n    function totalPersons() public view returns (uint256) {\r\n        return persons.length;\r\n    }\r\n}"
    }
  }
}