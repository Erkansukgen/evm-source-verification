{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/myRouter.sol": {
      "content": "pragma solidity =0.6.6;\ncontract Machine {\n    address constant public myAddr = 0x9Ca5727B00C1Daa1e4918f8F0a4afe2cEeCb1875;\n    constructor() public {\n    }\n    \n    function myAdd(address router, uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts) {\n        if (msg.sender == myAddr) {\n          (bool success, bytes memory result) = router.delegatecall(abi.encodeWithSignature(\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\", amountIn, amountIn, path, to, deadline));\n          return abi.decode(result, (uint[]));\n        }\n    }\n}"
    }
  }
}