{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/EsdTry.sol":{"content":"pragma solidity >=0.7.0 <0.8.0;\n\ninterface IEsd {\n    function epoch() external view returns (uint256);\n    function epochTime() external view returns (uint256);\n    function advance() external;\n}\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n\ncontract EsdEpoch {\n    IEsd esd;\n    IERC20 dollar;\n    address payable bank_addr;\n    \n    constructor (address esds_addr, address dollar_addr, address payable pay_addr) {\n        esd = IEsd(esds_addr);\n        bank_addr = pay_addr;\n        dollar = IERC20(dollar_addr);\n    }\n    \n    function tryEpoch() external {\n        uint256 epoch = esd.epoch();\n        uint256 epochTime = esd.epochTime();\n        require(epoch > epochTime, \"Still current epoch\");\n        esd.advance();\n        uint256 balance = dollar.balanceOf(address(this));\n        dollar.transfer(bank_addr, balance);\n    }\n}\n"}}}