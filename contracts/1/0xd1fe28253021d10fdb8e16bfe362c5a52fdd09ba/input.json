{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Untitled5.sol":{"content":"// Price Oracle for Stabilize Protocol\n// This contract uses Aave Price Oracle\n// The main Operator contract can change which Price Oracle it uses\n\n// Gas used for creation: 172,963 gas\n\npragma solidity ^0.6.0;\n\n/************\nIPriceOracleGetter interface\nInterface for the Aave price oracle.\n*/\ninterface IPriceOracleGetter {\n    function getAssetPrice(address _asset) external view returns (uint256);\n    function getAssetsPrices(address[] calldata _assets) external view returns(uint256[] memory);\n    function getSourceOfAsset(address _asset) external view returns(address);\n    function getFallbackOracle() external view returns(address);\n}\n\ninterface LendingPoolAddressesProvider {\n    function getPriceOracle() external view returns (address);\n}\n\ncontract StabilizePriceOracle {\n\tfunction getPrice(address _address) external view returns (uint256) {\n\t    // This version of the price oracle will use Aave contracts\n\t    \n        // Retrieve PriceOracle address\n        LendingPoolAddressesProvider provider = LendingPoolAddressesProvider(address(0x24a42fD28C976A61Df5D00D0599C34c4f90748c8)); // mainnet address, for other addresses: https://docs.aave.com/developers/developing-on-aave/deployed-contract-instances\n        address priceOracleAddress = provider.getPriceOracle();\n        IPriceOracleGetter priceOracle = IPriceOracleGetter(priceOracleAddress);\n\n        uint256 price = priceOracle.getAssetPrice(_address);\n        return price;\n\t}\n}"}}}