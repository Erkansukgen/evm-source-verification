{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Proxy.sol":{"content":"// File: contracts/Proxy.sol\r\n\r\npragma solidity 0.6.12;\r\n\r\ncontract Proxy {\r\n    // Code position in storage is keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\r\n    uint256 constant PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7;\r\n    // constructor(bytes memory constructData, address contractLogic) public {\r\n    constructor(address contractLogic) public {\r\n        // Verify a valid address was passed in\r\n        require(contractLogic != address(0), \"Contract Logic cannot be 0x0\");\r\n\r\n        // save the code address\r\n        assembly { // solium-disable-line\r\n            sstore(PROXIABLE_MEM_SLOT, contractLogic)\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        assembly { // solium-disable-line\r\n            let contractLogic := sload(PROXIABLE_MEM_SLOT)\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0x0, calldatasize())\r\n            let success := delegatecall(gas(), contractLogic, ptr, calldatasize(), 0, 0)\r\n            let retSz := returndatasize()\r\n            returndatacopy(ptr, 0, retSz)\r\n            switch success\r\n            case 0 {\r\n                revert(ptr, retSz)\r\n            }\r\n            default {\r\n                return(ptr, retSz)\r\n            }\r\n        }\r\n    }\r\n}"}}}