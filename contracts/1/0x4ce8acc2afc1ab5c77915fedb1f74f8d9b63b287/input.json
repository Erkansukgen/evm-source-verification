{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/tests/callProxy.sol": {
      "content": "pragma solidity 0.6;\r\npragma experimental ABIEncoderV2;\r\ninterface ERC20  {\r\n\tfunction totalSupply() view external returns (uint256);\r\n\r\n\tfunction balanceOf(address who) view external returns (uint256);\r\n\r\n\tfunction allowance(address owner, address spender) view external returns (uint256);\r\n\r\n\tfunction transfer(address to, uint256 value) external returns (bool);\r\n\r\n\tfunction approve(address spender, uint256 value) external returns (bool);\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}interface marketManagerInterface  {\r\n\tfunction setCircuitBreaker(bool _emergency) external returns (bool);\r\n\r\n\tfunction getTokenHandlerInfo(uint256 handlerID) view external returns (bool, address, string memory);\r\n\r\n\tfunction handlerRegister(uint256 handlerID, address tokenHandlerAddr, uint256 oracleTokenID, uint256 marginCallLimit) external returns (bool);\r\n\r\n\tfunction applyInterestHandlers(address payable userAddr, uint256 callerID, bool allFlag) external returns (uint256, uint256);\r\n\r\n\tfunction liquidationApplyInterestHandlers(address payable userAddr, uint256 callerID) external returns (uint256, uint256, uint256, uint256, uint256);\r\n\r\n\tfunction getTokenHandlerAddr(uint256 handlerID) view external returns (address);\r\n\r\n\tfunction getTokenHandlerPrice(uint256 handlerID) view external returns (uint256);\r\n\r\n\tfunction getTokenHandlerBorrowLimit(uint256 handlerID) view external returns (uint256);\r\n\r\n\tfunction getTokenHandlerExist(uint256 handlerID) view external returns (bool);\r\n\r\n\tfunction getTokenHandlerSupport(uint256 handlerID) view external returns (bool);\r\n\r\n\tfunction getTokenHandlersLength() view external returns (uint256);\r\n\r\n\tfunction getTokenHandlerID(uint256 index) view external returns (uint256);\r\n\r\n\tfunction getTokenHandlerMarginCallLimit(uint256 handlerID) view external returns (uint256);\r\n\r\n\tfunction getUserIntraHandlerAssetWithInterest(address payable userAddr, uint256 handlerID) view external returns (uint256, uint256);\r\n\r\n\tfunction getUserTotalIntraAsset(address payable userAddr) view external returns (uint256, uint256);\r\n\r\n\tfunction getUserTotalIntraAmount(address payable userAddr, uint256 handlerID) view external returns (uint256, uint256);\r\n\r\n\tfunction getUserTotalIntraCreditAsset(address payable userAddr) view external returns (uint256, uint256);\r\n\r\n\tfunction getUserLimitIntraAsset(address payable userAddr) view external returns (uint256, uint256);\r\n\r\n\tfunction getUserCollateralizableAmount(address payable userAddr, uint256 handlerID) view external returns (uint256);\r\n\r\n\tfunction getUserExtraLiquidityAmount(address payable userAddr, uint256 handlerID) view external returns (uint256);\r\n\r\n\tfunction partialLiquidationUser(address payable delinquentBorrower, uint256 liquidateAmount, address payable liquidator, uint256 liquidateHandlerID, uint256 rewardHandlerID) external returns (uint256, uint256, uint256);\r\n\r\n\tfunction getMaxLiquidationReward(address payable delinquentBorrower, uint256 liquidateHandlerID, uint256 liquidateAmount, uint256 rewardHandlerID, uint256 rewardRatio) view external returns (uint256);\r\n\r\n\tfunction partialLiquidationUserReward(address payable delinquentBorrower, uint256 rewardAmount, address payable liquidator, uint256 handlerID) external returns (uint256);\r\n\r\n\tfunction getHandlerAmount(address payable userAddr, uint256 handlerID) view external returns (uint256, uint256);\r\n\r\n\tfunction setLiquidationManager(address liquidationManagerAddr) external returns (bool);\r\n\r\n\tfunction checkLiquidation(uint256 marginCallLimitAsset, uint256 userBorrowAsset) view external returns (bool);\r\n}interface marketHandlerInterface  {\r\n\tfunction setCircuitBreaker(bool _emergency) external returns (bool);\r\n\r\n\tfunction migration(address payable targetContractAddr) external returns (uint256);\r\n\r\n\tfunction getTokenName() view external returns (string memory);\r\n\r\n\tfunction deposit(uint256 unifiedTokenAmount, bool allFlag) payable external returns (bool);\r\n\r\n\tfunction withdraw(uint256 unifiedTokenAmount, bool allFlag) external returns (bool);\r\n\r\n\tfunction borrow(uint256 unifiedTokenAmount, bool allFlag) external returns (bool);\r\n\r\n\tfunction repay(uint256 unifiedTokenAmount, bool allFlag) payable external returns (bool);\r\n\r\n\tfunction partialLiquidationUser(address payable delinquentBorrower, uint256 liquidateAmount, address payable liquidator, uint256 rewardHandlerID) external returns (uint256, uint256, uint256);\r\n\r\n\tfunction partialLiquidationUserReward(address payable delinquentBorrower, uint256 liquidationAmountWithReward, address payable liquidator) external returns (uint256);\r\n\r\n\tfunction getUserAmountWithInterest(address payable userAddr) view external returns (uint256, uint256);\r\n\r\n\tfunction getUserAmount(address payable userAddr) view external returns (uint256, uint256);\r\n\r\n\tfunction getMarketLiquidityLimit() view external returns (uint256);\r\n\r\n\tfunction getInterestEffectLimit() view external returns (uint256);\r\n\r\n\tfunction getSIRandBIR() view external returns (uint256, uint256);\r\n\r\n\tfunction getUserMaxBorrowAmount(address payable userAddr) view external returns (uint256);\r\n\r\n\tfunction getUserMaxWithdrawAmount(address payable userAddr) view external returns (uint256);\r\n\r\n\tfunction getUserMaxRepayAmount(address payable userAddr) view external returns (uint256);\r\n\r\n\tfunction applyInterest(address payable userAddr) external returns (uint256, uint256);\r\n\r\n\tfunction getERC20Addr() view external returns (address);\r\n\r\n\tfunction reserveDeposit(uint256 unifiedTokenAmount) payable external returns (bool);\r\n\r\n\tfunction reserveWithdraw(uint256 unifiedTokenAmount) external returns (bool);\r\n\r\n\tfunction getDepositTotalAmount() view external returns (uint256);\r\n\r\n\tfunction getBorrowTotalAmount() view external returns (uint256);\r\n\r\n\tfunction getHandlerDataStorageAddr() view external returns (address);\r\n}contract callProxyManagerCallProxyHandlerCallProxyMarketCallProxyUser  {\r\n\tmarketManagerInterface callProxyManager_marketManager;\r\n\r\n\tstruct callProxyMarket_HandlerAsset {\r\n\t\tuint256 handlerID;\r\n\t\taddress handlerAddr;\r\n\t\tuint256 tokenPrice;\r\n\t\tuint256 depositTotalAmount;\r\n\t\tuint256 borrowTotalAmount;\r\n\t\tuint256 depositInterestRate;\r\n\t\tuint256 borrowInterestRate;\r\n\t}\r\n\r\n\tstruct callProxyUser_UserHandlerAsset {\r\n\t\tuint256 handlerID;\r\n\t\taddress handlerAddr;\r\n\t\tuint256 tokenPrice;\r\n\t\tuint256 depositAmount;\r\n\t\tuint256 borrowAmount;\r\n\t\tuint256 depositInterestAmount;\r\n\t\tuint256 borrowInterestAmount;\r\n\t\tuint256 depositInterestRate;\r\n\t\tuint256 borrowInterestRate;\r\n\t\tuint256 borrowLimit;\r\n\t\tuint256 userMaxWithdrawAmount;\r\n\t\tuint256 userMaxBorrowAmount;\r\n\t\tuint256 userMaxRepayAmount;\r\n\t}\r\n\r\n\tstruct callProxyUser_UserAsset {\r\n\t\tuint256 userTotalBorrowLimitAsset;\r\n\t\tuint256 userTotalMarginCallLimitAsset;\r\n\t\tuint256 userDepositCreditAsset;\r\n\t\tuint256 userBorrowCreditAsset;\r\n\t}\r\n\r\n\tconstructor (address _marketManagerAddr) public\r\n\t{\r\n\t\tcallProxyManager_marketManager = marketManagerInterface(_marketManagerAddr);\r\n\t}\r\n\r\n\tfunction callProxyManager_getTokenHandlerInfo(uint256 handlerID) view public returns (bool, address, string memory)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getTokenHandlerInfo(handlerID);\r\n\t}\r\n\r\n\tfunction callProxyManager_getManagerAddr() view public returns (address)\r\n\t{\r\n\t\treturn address(callProxyManager_marketManager);\r\n\t}\r\n\r\n\tfunction callProxyManager_getTokenPrice(uint256 handlerID) view public returns (uint256)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getTokenHandlerPrice(handlerID);\r\n\t}\r\n\r\n\tfunction callProxyManager_getBorrowLimit(uint256 handlerID) view public returns (uint256)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getTokenHandlerBorrowLimit(handlerID);\r\n\t}\r\n\r\n\tfunction callProxyManager_getUserTotalIntraCreditAsset(address payable userAddr) view public returns (uint256, uint256)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getUserTotalIntraCreditAsset(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyManager_getUserLimitIntraAsset(address payable userAddr) view public returns (uint256, uint256)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getUserLimitIntraAsset(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyManager_getTokenHandlersLength() view public returns (uint256)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getTokenHandlersLength();\r\n\t}\r\n\r\n\tfunction callProxyManager_getTokenHandlerID(uint256 index) view public returns (uint256)\r\n\t{\r\n\t\treturn callProxyManager_marketManager.getTokenHandlerID(index);\r\n\t}\r\n\r\n\tfunction callProxyHandler_getUserAmount(address tokenHandlerAddr, address payable userAddr) view public returns (uint256, uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getUserAmount(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyHandler_getDepositTotalAmount(address tokenHandlerAddr) view public returns (uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getDepositTotalAmount();\r\n\t}\r\n\r\n\tfunction callProxyHandler_getBorrowTotalAmount(address tokenHandlerAddr) view public returns (uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getBorrowTotalAmount();\r\n\t}\r\n\r\n\tfunction callProxyHandler_getUserMaxWithdrawAmount(address tokenHandlerAddr, address payable userAddr) view public returns (uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getUserMaxWithdrawAmount(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyHandler_getUserMaxBorrowAmount(address tokenHandlerAddr, address payable userAddr) view public returns (uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getUserMaxBorrowAmount(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyHandler_getUserMaxRepayAmount(address tokenHandlerAddr, address payable userAddr) view public returns (uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getUserMaxRepayAmount(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyHandler_getUserAmountWithInterest(address tokenHandlerAddr, address payable userAddr) view public returns (uint256, uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getUserAmountWithInterest(userAddr);\r\n\t}\r\n\r\n\tfunction callProxyHandler_getSIRandBIR(address tokenHandlerAddr) view public returns (uint256, uint256)\r\n\t{\r\n\t\tmarketHandlerInterface marketHandler = marketHandlerInterface(tokenHandlerAddr);\r\n\t\treturn marketHandler.getSIRandBIR();\r\n\t}\r\n\r\n\tfunction callProxyMarket_getMarket() view public returns (callProxyMarket_HandlerAsset[] memory)\r\n\t{\r\n\t\tuint256 handlerLength = callProxyManager_getTokenHandlersLength();\r\n\t\tcallProxyMarket_HandlerAsset[] memory handlerAssets = new callProxyMarket_HandlerAsset[](handlerLength);\r\n\t\tfor (uint256 i = 0; i < handlerLength; i++)\r\n\t\t{\r\n\t\t\tuint256 handlerID = i;\r\n\t\t\tbool support;\r\n\t\t\taddress handlerAddr;\r\n\t\t\tstring memory tokenName;\r\n\t\t\t(support, handlerAddr, tokenName) = callProxyManager_getTokenHandlerInfo(handlerID);\r\n\t\t\tif (!support)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\thandlerAssets[i].tokenPrice = callProxyManager_getTokenPrice(handlerID);\r\n\t\t\thandlerAssets[i].depositTotalAmount = callProxyHandler_getDepositTotalAmount(handlerAddr);\r\n\t\t\thandlerAssets[i].borrowTotalAmount = callProxyHandler_getBorrowTotalAmount(handlerAddr);\r\n\t\t\t(handlerAssets[i].depositInterestRate, handlerAssets[i].borrowInterestRate) = callProxyHandler_getSIRandBIR(handlerAddr);\r\n\t\t\thandlerAssets[i].handlerID = handlerID;\r\n\t\t\thandlerAssets[i].handlerAddr = handlerAddr;\r\n\t\t}\r\n\t\t\r\n\t\treturn handlerAssets;\r\n\t}\r\n\r\n\tfunction callProxyUser_getUser(address payable userAddr) view public returns (callProxyUser_UserHandlerAsset[] memory, callProxyUser_UserAsset memory)\r\n\t{\r\n\t\tcallProxyUser_UserAsset memory userAsset;\r\n\t\t(userAsset.userTotalBorrowLimitAsset, userAsset.userTotalMarginCallLimitAsset) = callProxyManager_getUserLimitIntraAsset(userAddr);\r\n\t\t(userAsset.userDepositCreditAsset, userAsset.userBorrowCreditAsset) = callProxyManager_getUserTotalIntraCreditAsset(userAddr);\r\n\t\tuint256 handlerLength = callProxyManager_getTokenHandlersLength();\r\n\t\tcallProxyUser_UserHandlerAsset[] memory userHandlerAssets = new callProxyUser_UserHandlerAsset[](handlerLength);\r\n\t\tfor (uint256 i = 0; i < handlerLength; i++)\r\n\t\t{\r\n\t\t\tuint256 handlerID = i;\r\n\t\t\tbool support;\r\n\t\t\taddress tokenHandlerAddr;\r\n\t\t\tstring memory tokenName;\r\n\t\t\t(support, tokenHandlerAddr, tokenName) = callProxyManager_getTokenHandlerInfo(handlerID);\r\n\t\t\tif (!support)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tuserHandlerAssets[i].handlerID = handlerID;\r\n\t\t\tuserHandlerAssets[i].tokenPrice = callProxyManager_getTokenPrice(handlerID);\r\n\t\t\t(userHandlerAssets[i].depositAmount, userHandlerAssets[i].borrowAmount) = callProxyHandler_getUserAmount(tokenHandlerAddr, userAddr);\r\n\t\t\t(userHandlerAssets[i].depositInterestRate, userHandlerAssets[i].borrowInterestRate) = callProxyHandler_getSIRandBIR(tokenHandlerAddr);\r\n\t\t\t(userHandlerAssets[i].depositInterestAmount, userHandlerAssets[i].borrowInterestAmount) = callProxyHandler_getUserAmountWithInterest(tokenHandlerAddr, userAddr);\r\n\t\t\tif (userHandlerAssets[i].depositAmount > userHandlerAssets[i].depositInterestAmount)\r\n\t\t\t{\r\n\t\t\t\tuserHandlerAssets[i].depositInterestAmount = 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tuserHandlerAssets[i].depositInterestAmount = userHandlerAssets[i].depositInterestAmount - userHandlerAssets[i].depositAmount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (userHandlerAssets[i].borrowAmount > userHandlerAssets[i].borrowInterestAmount)\r\n\t\t\t{\r\n\t\t\t\tuserHandlerAssets[i].borrowInterestAmount = 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tuserHandlerAssets[i].borrowInterestAmount = userHandlerAssets[i].borrowInterestAmount - userHandlerAssets[i].borrowAmount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tuserHandlerAssets[i].handlerAddr = tokenHandlerAddr;\r\n\t\t\tuserHandlerAssets[i].borrowLimit = callProxyManager_getBorrowLimit(handlerID);\r\n\t\t\tuserHandlerAssets[i].userMaxWithdrawAmount = callProxyHandler_getUserMaxWithdrawAmount(tokenHandlerAddr, userAddr);\r\n\t\t\tuserHandlerAssets[i].userMaxBorrowAmount = callProxyHandler_getUserMaxBorrowAmount(tokenHandlerAddr, userAddr);\r\n\t\t\tuserHandlerAssets[i].userMaxRepayAmount = callProxyHandler_getUserMaxRepayAmount(tokenHandlerAddr, userAddr);\r\n\t\t}\r\n\t\t\r\n\t\treturn (userHandlerAssets, userAsset);\r\n\t}\r\n}"
    }
  }
}