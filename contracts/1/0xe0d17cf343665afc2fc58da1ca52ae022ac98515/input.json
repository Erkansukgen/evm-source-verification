{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"MPHPresale.sol":{"content":"// SPDX-License-Identifier: Unlimited\r\npragma solidity ^0.8.0;\r\n\r\ncontract MPHPresale {\r\n\r\n\tmapping (address => uint8) public _presaleAddresses;\r\n\tmapping (address => bool) public _presaleAddressesMinted;\r\n\taddress public owner;\r\n\r\n    constructor () {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setMainContract(address _address) public {\r\n        require(msg.sender == owner, \"My Pet Hooligan: You are not the owner\");\r\n        owner = _address;\r\n    }\r\n\r\n    function addPresalers(address[] calldata _addresses, uint8[] calldata _amounts) public {\r\n        require(msg.sender == owner, \"My Pet Hooligan: You are not the owner\");\r\n        for (uint x = 0; x < _addresses.length; x++) {\r\n            _presaleAddresses[_addresses[x]] = _amounts[x];\r\n        }\r\n    }\r\n    \r\n    function removePresalers(address[] calldata _addresses) public {\r\n        require(msg.sender == owner, \"My Pet Hooligan: You are not the owner\");\r\n        for (uint x = 0; x < _addresses.length; x++) {\r\n            _presaleAddresses[_addresses[x]] = 0;\r\n        }\r\n    }\r\n\r\n    function isInPresale(address _address) public view returns (uint8) {\r\n        return _presaleAddresses[_address];\r\n    }\r\n\r\n    function isInMintedPresale(address _address) public view returns (bool) {\r\n        return _presaleAddressesMinted[_address];\r\n    }\r\n\r\n    function addToMinted(address _address) public {\r\n        require(msg.sender == owner, \"My Pet Hooligan: You are not the owner\");\r\n        _presaleAddressesMinted[_address] = true;\r\n    }\r\n\r\n}"}}}