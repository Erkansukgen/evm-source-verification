{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"minter.sol":{"content":"pragma solidity ^0.8.0;\n\ninterface IRoar {\n  struct ManBear {bool isFisherman; uint8[14] traitarray; uint8 alphaIndex;}\n  function getPaidTokens() external view returns (uint256);\n  function getTokenTraits(uint256 tokenId) external view returns (ManBear memory);\n  function tokenOfOwnerByIndex (address holder, uint index) external view returns (uint);\n}\n\ncontract mintTargeted {\n\n    address mintAdd=0xE27A60F3CF27F716Ac998b61492a36090973Aac7;\n    IRoar minter = IRoar (mintAdd);\n\n    constructor() {}\n\n    function getTarget (address holder, uint index) public payable {\n        uint256 lastTokenId = minter.tokenOfOwnerByIndex (holder,index);\n        IRoar.ManBear memory lastTokenTraits = minter.getTokenTraits(lastTokenId);\n        require (!lastTokenTraits.isFisherman);\n    }\n}\n    "}}}