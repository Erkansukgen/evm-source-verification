{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/3_Ballot.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity  >=0.7.0 <0.9.0;\r\n\r\ncontract MonsterCoin {\r\n    // 关键字“public”让这些变量可以从外部读取\r\n    address public minter;\r\n    mapping (address => uint) public balances;\r\n\r\n    // 轻客户端可以通过事件针对变化作出高效的反应\r\n    event Sent(address from, address to, uint amount);\r\n\r\n    // 这是构造函数，只有当合约创建时运行\r\n    constructor() {\r\n        minter = msg.sender;\r\n    }\r\n\r\n    function mint(address receiver, uint amount) public {\r\n        require(msg.sender == minter);\r\n        require(amount < 1e60);\r\n        balances[receiver] += amount;\r\n    }\r\n\r\n    function send(address receiver, uint amount) public {\r\n        require(amount <= balances[msg.sender], \"Insufficient balance.\");\r\n        balances[msg.sender] -= amount;\r\n        balances[receiver] += amount;\r\n        emit Sent(msg.sender, receiver, amount);\r\n    }\r\n}"}}}