{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/Short.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\nstruct ShortData {\r\n  uint256 amount;\r\n  address to;\r\n  address token;\r\n  address creator;\r\n  string description;\r\n}\r\n\r\ncontract Short {\r\n  address public owner;\r\n\r\n  uint256 public shortCounter;\r\n\r\n  mapping(bytes32 => uint256) public shortIds;\r\n  mapping(uint256 => ShortData) shorts;\r\n\r\n  modifier onlyCreator(bytes32 _short) {\r\n    require(shorts[shortIds[_short]].creator == msg.sender, \"ONLY_CREATOR_CAN_UPDATE\");\r\n    _;\r\n  }\r\n\r\n  modifier newShort(bytes32 _short) {\r\n    require(shortIds[_short] == 0, \"SHORT_ALREADY_EXISTS\");\r\n    _;\r\n  }\r\n\r\n  function create(\r\n    bytes32 _short,\r\n    uint256 _amount,\r\n    address _to,\r\n    address _token,\r\n    string calldata _description\r\n  ) external newShort(_short) {\r\n    shortCounter ++;\r\n    shortIds[_short] = shortCounter;\r\n    shorts[shortCounter] = ShortData(_amount, _to, _token, msg.sender, _description);\r\n  }\r\n\r\n  function update(\r\n    bytes32 _short,\r\n    uint256 _amount,\r\n    address _to,\r\n    address _token,\r\n    string calldata _description\r\n  ) external onlyCreator(_short) {\r\n    shorts[shortIds[_short]] = ShortData(_amount, _to, _token, msg.sender, _description);\r\n  }\r\n\r\n  function changeCreator(\r\n    bytes32 _short,\r\n    address _newCreator\r\n  ) external onlyCreator(_short) {\r\n    shorts[shortIds[_short]].creator = _newCreator;\r\n  }\r\n\r\n  function convert(bytes32 _short) external view returns (uint256 amount, address to, address token, string memory description) {\r\n    return (\r\n      shorts[shortIds[_short]].amount,\r\n      shorts[shortIds[_short]].to,\r\n      shorts[shortIds[_short]].token,\r\n      shorts[shortIds[_short]].description\r\n    );\r\n  }\r\n}"
    }
  }
}