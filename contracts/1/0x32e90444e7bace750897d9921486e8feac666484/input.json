{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs",
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "IsAmbireAccount.sol": {
      "content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.8.7;\r\n\r\ncontract IsAmbireAccount {\r\n\t// This bytecode is the minimal proxy bytecode defined here: https://eips.ethereum.org/EIPS/eip-1167\r\n\t// With this base identity: 0x2A2b85EB1054d6f0c6c2E37dA05eD3E5feA684EF (can be seen towards the middle of the bytecode)\r\n\tbytes32 public constant HASH = keccak256(hex\"363d3d373d3d3d363d732a2b85eb1054d6f0c6c2e37da05ed3e5fea684ef5af43d82803e903d91602b57fd5bf3\");\r\n\tfunction isAmbireAccount(address addr) external view returns (bool) {\r\n\t\treturn keccak256(addr.code) == HASH;\r\n\t}\r\n}"
    }
  }
}