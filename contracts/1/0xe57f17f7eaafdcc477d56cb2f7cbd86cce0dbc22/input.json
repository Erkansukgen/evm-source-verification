{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"TeamLocaked.sol":{"content":"pragma solidity ^0.4.26;\r\n\r\ncontract Token{\r\n    function transfer(address _to,uint256 _val) returns(bool success);\r\n    function balanceOf(address _owner) constant returns(uint256 balance);\r\n}\r\n\r\ncontract TeamLocaked{\r\n    string public name = \"tea TeamLocaked\";\r\n    address beneficiary = 0xF869F8BE0f5C5376bE93ef6A47e97bef25195E5F;\r\n    Token public token = Token(0x5dCEd3c2fab61E21B25177c6050D3f166f696110);\r\n\r\n    /*\r\n         分期 分期转账操作\r\n    */\r\n\r\n    uint256 internal transferToken = 0;\r\n    uint256 ReleaseTime = 1640224800;  //2021-12-23 10:00:00\r\n    uint256 NextTime = 2592000;  // 30day\r\n    uint internal num = 0;\r\n\r\n\r\n\r\n      function release() public {\r\n        require(block.timestamp > ReleaseTime,\"No release time\");\r\n        uint256 totalTokenBalance = token.balanceOf(this);\r\n        require(totalTokenBalance>0,\"The balance is zero\");\r\n        if(transferToken == 0){\r\n             transferToken = token.balanceOf(this) / 5;\r\n        }\r\n\r\n        require(totalTokenBalance >= transferToken, \"Lack of balance\");\r\n        if(num >= 4){\r\n            token.transfer(beneficiary,totalTokenBalance);\r\n        }else if(token.transfer(beneficiary,transferToken)){\r\n            ReleaseTime += NextTime;\r\n            num++;\r\n        }\r\n    }\r\n\r\n    function RemainingNum() public constant returns (uint256 remainingNum){\r\n        return 5-num;\r\n    }\r\n\r\n    function getReleaseTime() public constant returns(uint256 timestamp){\r\n        return ReleaseTime;\r\n    }\r\n\r\n    function getBlockTime() public constant returns(uint256 timestamp){\r\n        return block.timestamp;\r\n    }\r\n\r\n    function waitReleaseTime() public constant returns(uint256 timestamp){\r\n        if(block.timestamp < ReleaseTime){\r\n            return ReleaseTime - block.timestamp;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function getTokenLocakedNum()public constant returns(uint256 amount){\r\n        return token.balanceOf(this)/10**18;\r\n    }\r\n\r\n    function () external payable{\r\n        if(token.balanceOf(this) == 0){\r\n            if (this.balance>0){\r\n                beneficiary.transfer(this.balance);\r\n            }\r\n        }else{\r\n            if (this.balance>0){\r\n                beneficiary.transfer(this.balance);\r\n            }\r\n            release();\r\n        }\r\n    }\r\n\r\n}"}}}