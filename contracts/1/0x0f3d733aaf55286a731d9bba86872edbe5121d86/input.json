{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/LeviathanWhirlpoolTask.sol": {
      "content": "pragma solidity <=0.6.2;\n\ninterface IRelease {\n    function release() external;\n}\n\ninterface IWhirlpool {\n    function getAllInfoFor(address _user) external view returns (bool isActive, uint256[12] memory info);\n}\n\ncontract LeviathanWhirlpoolTask {\n    address private constant _leviathanWhirlpool = 0x4f2CCc35F791e763779f711168424b766Ba3468F;\n    address private constant _whirlpool = 0x999b1e6EDCb412b59ECF0C5e14c20948Ce81F40b;\n\n    function check(uint _requirement)\n    external view returns (uint256) {\n        (, uint256[12] memory userData) = IWhirlpool(_whirlpool).getAllInfoFor(_leviathanWhirlpool);\n\n        if(userData[10] >= _requirement)\n            return 0;\n        else\n            return _requirement - userData[10];\n    }\n\n    function execute()\n    external {\n        IRelease(_leviathanWhirlpool).release();\n    }\n}"
    }
  }
}