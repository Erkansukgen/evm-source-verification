{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "MSI.sol": {
      "content": "pragma solidity ^0.7.0;\r\n\r\n// 這是一個叫做 Token 的合約\r\ncontract Token {\r\n\r\n    // 貨幣的名稱叫做...\r\n    string public name = \"MSI Token\";\r\n    \r\n    // 貨幣的代號是...\r\n    string public symbol = \"MSI\";\r\n\r\n    // 貨幣的總供給量\r\n    uint256 public totalSupply = 200000000;\r\n    \r\n    // 此合約擁有者的地址\r\n    address public owner;\r\n    \r\n    // 將不同地址映射到不同的貨幣持有量\r\n    mapping(address => uint256) balances;\r\n\r\n    // 當合約一部屬上鏈，就執行 constructor 裡的程式，謹此一次，此後就不會再執行\r\n    constructor() {\r\n        balances[msg.sender] = totalSupply;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // 此合約提供的第一個 function，貨幣轉移，填入一個地址和數量即可執行\r\n    function transfer(address to, uint256 amount) external {\r\n        require(balances[msg.sender] >= amount, \"Not enough tokens\");\r\n        \r\n        balances[msg.sender] -= amount;\r\n        balances[to] += amount;\r\n    }\r\n    \r\n    // 此合約第二個 function，查詢持有的數量，填入一個地址就會回傳該地址擁有的貨幣持有量\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return balances[account];\r\n    }\r\n}"
    }
  }
}