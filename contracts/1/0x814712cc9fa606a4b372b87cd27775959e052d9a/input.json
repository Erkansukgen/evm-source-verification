{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"DIAScifiOracle.sol":{"content":"pragma solidity 0.7.4;\r\n\r\ncontract DIAScifiOracle {\r\n    mapping (string => uint256) public values;\r\n    address oracleUpdater;\r\n    \r\n    event OracleUpdate(string key, uint128 value, uint128 timestamp);\r\n    event UpdaterAddressChange(address newUpdater);\r\n    \r\n    constructor() {\r\n        oracleUpdater = msg.sender;\r\n    }\r\n    \r\n    function setValue(string memory key, uint128 value, uint128 timestamp) public {\r\n        require(msg.sender == oracleUpdater);\r\n        uint256 cValue = (((uint256)(value)) << 128) + timestamp;\r\n        values[key] = cValue;\r\n        emit OracleUpdate(key, value, timestamp);\r\n    }\r\n    \r\n    function getValue(string memory key) public view returns (uint128, uint128) {\r\n        uint256 cValue = values[key];\r\n        uint128 timestamp = (uint128)(cValue % 2**128);\r\n        uint128 value = (uint128)(cValue >> 128);\r\n        return (value, timestamp);\r\n    }\r\n    \r\n    function updateOracleUpdaterAddress(address newOracleUpdaterAddress) public {\r\n        require(msg.sender == oracleUpdater);\r\n        oracleUpdater = newOracleUpdaterAddress;\r\n        emit UpdaterAddressChange(newOracleUpdaterAddress);\r\n    }\r\n}"}}}