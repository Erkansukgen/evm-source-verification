{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/CoinFaceToken.sol":{"content":"pragma solidity 0.7.3;\r\n\r\ncontract CoinFaceToken {\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals;\r\n  uint256 public totalSupply;\r\n  address owner;\r\n\r\n  mapping (address => uint256) public balanceOf;\r\n  mapping (address => mapping (address => uint256)) public allowance;\r\n  \r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n  constructor(uint256 _initialSupply) { \r\n      name = \"CoinFaceToken\";\r\n      symbol = \"CFT\";\r\n      decimals = 2;\r\n      totalSupply = _initialSupply * 10 ** uint256(decimals);\r\n      balanceOf[msg.sender] = _initialSupply * 10 ** uint256(decimals);\r\n      owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool success) {\r\n    require(balanceOf[msg.sender] >= _value);\r\n    balanceOf[msg.sender] -= _value;\r\n    balanceOf[_to] += _value;\r\n\r\n    emit Transfer(msg.sender, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool success) {\r\n    allowance[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n    require(_value <= balanceOf[_from]);\r\n    require(_value <= allowance[_from][msg.sender]);\r\n\r\n    balanceOf[_from] -= _value;\r\n    balanceOf[_to] += _value;\r\n\r\n    allowance[_from][msg.sender] -= _value;\r\n\r\n    Transfer(_from, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  function changeDecimalUnit(uint8 _decimalUnit) public onlyOwner {\r\n    decimals = _decimalUnit;\r\n  }\r\n\r\n  function addTokenSupply(uint256 _totalSupply) public onlyOwner {\r\n    totalSupply += _totalSupply * 10 ** uint256(decimals);\r\n    balanceOf[msg.sender] += _totalSupply * 10 ** uint256(decimals);\r\n  }\r\n\r\n  function reduceTokenSupply(uint256 _totalSupply) public onlyOwner {\r\n    uint256 reduceTotalSupply = _totalSupply * 10 ** uint256(decimals);\r\n    require(reduceTotalSupply <= totalSupply);\r\n    require(reduceTotalSupply <= balanceOf[msg.sender]);\r\n    totalSupply -= _totalSupply * 10 ** uint256(decimals);\r\n    balanceOf[msg.sender] -= _totalSupply * 10 ** uint256(decimals);\r\n  }\r\n}\r\n\r\n"}}}