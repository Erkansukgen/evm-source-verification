{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/token/MultiDelegator.sol": {
      "content": "pragma solidity ^0.5.16;\n\npragma experimental ABIEncoderV2;\n\ninterface InvInterface {\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n\ncontract MultiDelegator {\n\n    InvInterface public inv;\n\n    constructor (InvInterface _inv) public {\n        inv = _inv;\n    }\n\n    function delegateBySig(address delegatee, uint[] memory nonce, uint[] memory expiry, uint8[] memory v, bytes32[] memory r, bytes32[] memory s) public {\n        for (uint256 i = 0; i < nonce.length; i++) {\n            inv.delegateBySig(delegatee, nonce[i], expiry[i], v[i], r[i], s[i]);\n        }\n    }\n}"
    }
  }
}