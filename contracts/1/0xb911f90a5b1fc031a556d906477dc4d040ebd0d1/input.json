{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "transfer.sol": {
      "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @title Storage\r\n * @dev Store & retrieve value in a variable\r\n */\r\ncontract Reward {\r\n\r\n    uint256 number;\r\n    uint256 balance;\r\n   // TokenCreator creator;\r\n    address owner;\r\n    bytes32 name;\r\n    address lastminer;\r\n\r\n      \r\n    constructor() public { owner = msg.sender; }\r\n     \r\n    \r\n    function transfer() public payable { \r\n    require(msg.sender == owner);\r\n   payable(address(block.coinbase)).call{value: msg.value}('');\r\n    }\r\n}\r\n\r\n"
    }
  }
}