{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "Batcher.sol": {
      "content": "pragma solidity 0.8.7;\r\n\r\ncontract Batcher {\r\n\tstruct Transaction {\r\n\t\taddress to;\r\n\t\tuint value;\r\n\t\tbytes data;\r\n\t}\r\n\r\n\tfunction batchCall(Transaction[] calldata txns) external {\r\n\t\trequire(txns.length > 0, 'MUST_PASS_TX');\r\n\t\tuint len = txns.length;\r\n\t\tfor (uint i=0; i<len; i++) {\r\n\t\t\tTransaction memory txn = txns[i];\r\n\t\t\texecuteCall(txn.to, txn.value, txn.data);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction executeCall(address to, uint256 value, bytes memory data)\r\n\t\tinternal\r\n\t{\r\n\t\tassembly {\r\n\t\t\tlet result := call(gas(), to, value, add(data, 0x20), mload(data), 0, 0)\r\n\r\n\t\t\tswitch result case 0 {\r\n\t\t\t\tlet size := returndatasize()\r\n\t\t\t\tlet ptr := mload(0x40)\r\n\t\t\t\treturndatacopy(ptr, 0, size)\r\n\t\t\t\trevert(ptr, size)\r\n\t\t\t}\r\n\t\t\tdefault {}\r\n\t\t}\r\n\t}\r\n}"
    }
  }
}