{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/BatchTransfer.sol": {
      "content": "pragma solidity ^0.6.0;\n\ncontract BatchTransfer {\n\n    event TransferCompleted();\n    event SendSuccess(address, uint);\n    event SendFail(address, uint);\n\n    /**\n     * @dev Transfers ETH for the receiver list\n     */\n    function transferBatch(address payable[] memory _receivers, uint[] memory _amount)\n        public\n        payable\n    {\n        require(_receivers.length == _amount.length, \"The length of arrays is not equal\");\n\n        uint length = _receivers.length;\n\n        for (uint i = 0; i < length; i++) {\n            if (_receivers[i].send(_amount[i])) {\n                emit SendSuccess(_receivers[i], _amount[i]);\n\n            } else {\n                emit SendFail(_receivers[i], _amount[i]);\n            }\n        }\n\n        emit TransferCompleted();\n    }\n\n}\n"
    }
  }
}