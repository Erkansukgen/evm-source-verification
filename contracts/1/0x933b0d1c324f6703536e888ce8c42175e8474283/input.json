{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "UniForRewardCheckerMainnet.sol": {
      "content": "pragma solidity ^0.5.0;\r\n\r\ninterface UniswapV2PairLike {\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n}\r\ncontract UniForRewardCheckerBase {\r\n    mapping(address => bool) public tokens;\r\n\r\n    function check(address gem) external {\r\n        address t0 = UniswapV2PairLike(gem).token0();\r\n        address t1 = UniswapV2PairLike(gem).token1();\r\n\r\n        require(tokens[t0] && tokens[t1], \"non-approved-stable\");\r\n    }\r\n}\r\n\r\ncontract UniForRewardCheckerMainnet is UniForRewardCheckerBase {\r\n    constructor(address usdfl, address gov) public {\r\n        tokens[usdfl] = true;\r\n        tokens[gov] = true;\r\n        tokens[0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48] = true; //usdc\r\n        tokens[0xdAC17F958D2ee523a2206206994597C13D831ec7] = true; //usdt\r\n        tokens[0x6B175474E89094C44Da98b954EedeAC495271d0F] = true; //dai\r\n        tokens[0x674C6Ad92Fd080e4004b2312b45f796a192D27a0] = true; //usdn\r\n    }\r\n}"
    }
  }
}