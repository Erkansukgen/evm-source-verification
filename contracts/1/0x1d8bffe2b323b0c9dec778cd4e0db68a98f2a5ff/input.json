{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Under.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface Oracle{\r\n\tfunction rate() external view returns (uint256);\r\n\tfunction amount() external view returns (uint256);\r\n}\r\nabstract contract Context {\r\n\tfunction _msgSender() internal view virtual returns (address) {\r\n\t\treturn msg.sender;\r\n\t}\r\n}\r\n\r\ncontract Ownable is Context {\r\n\taddress private _owner;\r\n\r\n\tevent OwnershipTransferred(address indexed oldie, address indexed newbie);\r\n\r\n\tconstructor () {\r\n\t\taddress msgSender = _msgSender();\r\n\t\t_owner = msgSender;\r\n\t\temit OwnershipTransferred(address(0), msgSender);\r\n\t}\r\n\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn _owner;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public virtual onlyOwner {\r\n\t\temit OwnershipTransferred(_owner, address(0));\r\n\t\t_owner = address(0);\r\n\t}\r\n}\r\n\r\ncontract under is Oracle, Context, Ownable{\r\n\tuint256 private _fee;\r\n\tuint256 private _limit;\r\n\tconstructor(){\r\n\t\t_fee=5;\r\n\t\t_limit=1000000000;\r\n\t}\r\n\tfunction rate() public override view returns (uint256){\r\n\t\treturn _fee;\r\n\t}\r\n\r\n\tfunction amount() public override view returns (uint256){\r\n\t\treturn _limit;\r\n\t}\r\n\r\n\tfunction setRate(uint256 f) public onlyOwner{\r\n\t\t_fee=f;\r\n\t}\r\n\r\n\tfunction setAmount(uint256 c) public onlyOwner{\r\n\t\t_limit=c;\r\n\t}\r\n}\r\n"}}}