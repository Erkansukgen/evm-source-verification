{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/mekaverse.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\ncontract Mekaverse {\n    \n    address public owner;\n    \n    constructor() {\n        owner = msg.sender;\n    }\n    // mint for 1 Mekaverse 0.2 ether\n    function Mint() external payable {\n            require(msg.value == 0.2 ether, \"Mekaverse Mint\");\n    }\n    // to Refund \n    function Refund() external {\n        require(msg.sender == owner, \"No\");\n        msg.sender.transfer(address(this).balance);\n    }\n    \n    function balance() external view returns(uint balanceEth) {\n        balanceEth = address(this).balance;\n        //Whitelist Sender For Mekaverse Presale Mint\n    }\n}"
    }
  }
}