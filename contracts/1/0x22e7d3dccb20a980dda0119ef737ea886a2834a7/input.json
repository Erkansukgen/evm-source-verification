{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/multisender.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.8;\n\n\ncontract Sender {\n    function multi(address payable[] memory tos, uint256[] memory values)\n        public\n        payable\n    {\n        require(tos.length == values.length, \"bad param\");\n        require(msg.value == address(this).balance, \"bad value\");\n        for (uint256 i = 0; i < tos.length; ++i) {\n            tos[i].transfer(values[i]);\n        }\n    }\n\n    function once(address payable to, uint256 value) public payable {\n        require(msg.value == address(this).balance, \"bad value\");\n        to.transfer(value);\n    }\n}\n"
    }
  }
}