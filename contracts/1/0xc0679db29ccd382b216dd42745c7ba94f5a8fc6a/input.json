{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.6.10;\n\ncontract CutRed {\n\n    bool first_time = true;\n    address bombAddress;\n    \n    constructor() public {\n        bombAddress = 0x673fd2220C495D4fE5EF91d65F5689d95f7A72d1;\n    }\n    \n    function cutRed() public {\n        bombAddress.call(abi.encodeWithSignature(\"cutRedOrBlueWire()\"));\n    }\n\n    fallback() external {\n        if(first_time) {\n            first_time = false;\n            bombAddress.call(abi.encodeWithSignature(\"cutRedOrBlueWire()\"));\n        }\n    }\n}"}}}