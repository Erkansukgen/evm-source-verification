{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/ethswap_test.sol": {
      "content": "/*\n! proof.sol\n(c) 2020 Krasava Digital Solutions\nDevelop by BelovITLab LLC (smartcontract.ru) & Krasava Digital Solutions (krasava.pro)\nauthors @stupidlovejoy, @sergeytyan\nLicense: MIT \n*/\n\npragma solidity 0.6.6;\n\ninterface SwapInterface {\n    function getRate() external view returns(uint256);\n}\n\ncontract EthSwapTest {\n    function eth_rate1() external view returns(uint256) {\n        SwapInterface swapSourceAddress = SwapInterface(0xCdE65f0DBd62D9191703F114DE20b7abaA5e2f46);\n        return swapSourceAddress.getRate();\n    }\n}"
    }
  }
}