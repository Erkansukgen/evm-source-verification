{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "GovernanceNeedsHelp.sol": {
      "content": "/** \r\n * You already claimed TORN token and you are not participating in governance\r\n * If you want to help tornado to succeed, please go to https://torn.community/t/proposal-1-enable-torn-transfers/38/17\r\n * and lock your tokens, so that you can cast your vote when the proposal is made.\r\n * Also, if you are generous enough to help with AP mining, please help this fellow: 0xa891D882868C26a87Ceae5f87EC65D2aAE15e060\r\n * that address is wasting ether to make the mining process work.\r\n * If you do nothing, nothing will happen. Do something.\r\n*/\r\npragma solidity >0.5.15;\r\n\r\ncontract GovernanceNeedsHelp {\r\n\r\n    uint8   public decimals = 18;\r\n    string  public name = 'GovernanceNeedsHelp';\r\n    string  public symbol = 'https://app.tornado.cash/governance';\r\n    uint256 public totalSupply = 30000000e18;\r\n\r\n\r\n    event Transfer(address indexed src, address indexed dst, uint wad);\r\n\r\n    // --- ERC20 ---\r\n    function transfer(address dst, uint wad) external returns (bool) {\r\n        revert('Follow instructions at https://torn.community/t/proposal-1-enable-torn-transfers/38/17');\r\n        return false;\r\n    }\r\n    function approve(address usr, uint wad) external returns (bool) {\r\n        revert('Follow instructions at https://torn.community/t/proposal-1-enable-torn-transfers/38/17');\r\n        return false;\r\n    }\r\n    function balanceOf(address user) public view returns(uint256) {\r\n        return 1000e18;\r\n    }\r\n    function spreadTo(address[] memory bulk) external {\r\n        for(uint16 i = 0; i < bulk.length; i++) {\r\n            emit Transfer(address(0), bulk[i], 1000e18);\r\n        }\r\n    }\r\n\r\n}"
    }
  }
}