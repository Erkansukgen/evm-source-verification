{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/bullrun4.sol":{"content":"// BULLRUN - 4 EASY AND FAIR\n// 100 % PAYOUT\n// MINIMAL TRANSACTION COST\n//-----------------------------\n\npragma solidity ^0.6.6;\ncontract Bullrun4 {\n    \n    // Counter how many players are in the game\n    uint32 public num_players = 0;\n    \n    // For every player the position and the public ETH address is saved in a map.\n    mapping (uint => address payable) public players;\n    \n    // Only method of the contract\n    function add() public payable{\n        if (msg.value == 500 finney) { // To participate you must pay 500 finney (0.5 ETH)\n            players[num_players] = msg.sender; //save address of player\n            \n            num_players++; // One player is added, so we increase the player counter\n            \n            // Transfer the just now added 0.5 ETH to player position num_players divided by 2.\n            // This payout is done 2 times for one player, because odd and even number divided by 2 is the same integer. = 1 ETH return\n            players[num_players/2].transfer(address(this).balance);\n        }\n        else\n            revert(); // Error executing the function\n    }\n    \n    // Nothing more... no exit scam, fraud, nothing...\n}"}}}