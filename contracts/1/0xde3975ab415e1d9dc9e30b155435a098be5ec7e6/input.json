{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"ETHSplitter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract ETHSplitter {\n    address payable public address1;\n    address payable public address2;\n\n    constructor(address payable givenAddress1, address payable givenAddress2)\n        public\n    {\n        address1 = givenAddress1;\n        address2 = givenAddress2;\n    }\n\n    receive() external payable {\n        uint256 splitAmount = msg.value / 2;\n        address1.transfer(splitAmount);\n        address2.transfer(splitAmount);\n    }\n}"}}}