{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "Lock.sol": {
      "content": "pragma solidity ^0.5.16;\r\n\r\ncontract Lock {\r\n    address private owner;\r\n    bool public lock;\r\n\r\n    modifier onylOwner {\r\n        require(msg.sender == owner, \"Lock: onlyOwner\");\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setLock() external {\r\n        lock = true;\r\n    }\r\n\r\n    function resetLock() external onylOwner {\r\n        lock = false;\r\n    }\r\n}"
    }
  }
}