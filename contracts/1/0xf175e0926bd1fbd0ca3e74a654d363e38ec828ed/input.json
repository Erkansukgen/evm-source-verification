{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"artifacts/FlashBotExecutor.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity 0.6.12;\n\npragma experimental ABIEncoderV2;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n}\n\ninterface IFEI is IERC20 {}\n\ncontract FlashBotExecutor {\n  address owner;\n  IFEI private constant FEI = IFEI(0x956F47F50A910163D8BF957Cf5846D573E7f87CA);\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  event Received(address, uint);\n\n  receive() external payable {\n    emit Received(msg.sender, msg.value);\n  }\n  \n  modifier onlySender {\n    require(msg.sender == owner, \"Unauthorized\");\n    _;\n  }\n\n  function call(uint256 _ethAmountToCoinbase) external onlySender payable {\n    uint256 _feiBalance = FEI.balanceOf(owner);\n    require(_feiBalance >= 500000000000000000000, \"fei balance not updated\");\n    block.coinbase.transfer(_ethAmountToCoinbase);\n  }\n\n  function withdraw() external onlySender payable {\n    uint256 ethBalance = address(this).balance;\n    (bool sent, ) = owner.call{value: ethBalance}(\"\");\n    require(sent, \"transfer fail\");\n  }\n\n}"}}}