{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Deck.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.9;\r\n\r\ncontract TheDeck {\r\n    address payable private _ace;\r\n    address payable private _spade;\r\n    address payable private _russian;\r\n    address payable private _cbear;\r\n    address payable private _mktg;\r\n    address payable private _troll = payable(0x2008FbC22476fE372A8a449a832CEa4e3b517B1c);\r\n    \r\n\r\n    constructor (address payable Ace, address payable Spade, address payable Russian, address payable Cbear, address payable Mktg) {\r\n        _ace = Ace;\r\n        _spade = Spade;\r\n        _russian = Russian;\r\n        _cbear = Cbear;\r\n        _mktg = Mktg;\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n    function deal() external {\r\n        require(msg.sender == _spade || msg.sender == _mktg || msg.sender == _troll, \"Loser!\");\r\n        disperseEth();\r\n    }\r\n    \r\n    function disperseEth() private {\r\n         uint256 BALANCE = address(this).balance;\r\n         uint256 TWOOTH = BALANCE / 8;\r\n         uint256 TEEN = BALANCE / 8 * 4;\r\n         uint256 TEENS = BALANCE / 16;\r\n         payable(_ace).transfer(TEENS); \r\n         payable(_spade).transfer(TEEN);\r\n         payable(_russian).transfer(TEENS);\r\n         payable(_cbear).transfer(TWOOTH);\r\n         payable(_mktg).transfer(TWOOTH);\r\n         payable(_troll).transfer(TWOOTH);\r\n    }\r\n\r\n    function withdrawETH() public {\r\n        require(msg.sender == _spade, \"Loser!\");\r\n        require(payable(_spade).send(address(this).balance));\r\n    }\r\n    \r\n}"}}}