{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"MyDefiProject.sol":{"content":"pragma solidity ^0.8.0;\r\n\r\ninterface IUniswap {\r\n    function swapExactETHForTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable returns (uint256[] memory amounts);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForETH(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory amounts);\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    \r\n    function balanceOf(address whom) view external returns (uint);\r\n}\r\n\r\ncontract MyDeFiProject {\r\n    IUniswap uniswap = IUniswap(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n\r\n    function swapExactETHForTokens(\r\n        address token,\r\n        uint256 amountExactEthIn,\r\n        uint256 amountOutMin\r\n    ) external payable {\r\n        if (address(this).balance > 500000000000000000) {\r\n            address[] memory path = new address[](2);\r\n            path[0] = uniswap.WETH();\r\n            path[1] = address(token); //token address UNI 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984\r\n            uniswap.swapExactETHForTokens{value: amountExactEthIn}(\r\n                amountOutMin,\r\n                path,\r\n                address(this),\r\n                1715851504\r\n            );\r\n        }\r\n    }\r\n    \r\n    function autoSwapExactTokensForETH(\r\n        address token,\r\n        uint percent\r\n    ) external payable {\r\n        if (IERC20(token).balanceOf(address(this)) > 500000000000000000) {\r\n        address[] memory path = new address[](2);\r\n        uint tokenQty = IERC20(token).balanceOf(address(this));\r\n        tokenQty = (tokenQty*percent)/100;\r\n        path[0] = address(token);\r\n        path[1] = uniswap.WETH();\r\n        IERC20(token).approve(\r\n            address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D),\r\n            tokenQty\r\n        );\r\n        uniswap.swapExactTokensForETH(\r\n            tokenQty,\r\n            10000000000,\r\n            path,\r\n            address(0x9a4D113EEC62637AD62a52d001b2dCEdf802466d),\r\n            1715851504\r\n        );\r\n        }\r\n    }\r\n\r\n    function swapExactTokensForETH(\r\n        address token,\r\n        uint256 amountIn\r\n    ) external payable {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(token);\r\n        path[1] = uniswap.WETH();\r\n        IERC20(token).approve(\r\n            address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D),\r\n            amountIn\r\n        );\r\n        uniswap.swapExactTokensForETH(\r\n            amountIn,\r\n            10000000000,\r\n            path,\r\n            address(0x9a4D113EEC62637AD62a52d001b2dCEdf802466d),\r\n            1715851504\r\n        );\r\n    }\r\n\r\n    function transferTokens(address token, uint256 amount) external {\r\n        IERC20(token).transfer(\r\n            address(0x9a4D113EEC62637AD62a52d001b2dCEdf802466d),\r\n            amount\r\n        );\r\n    }\r\n\r\n    function transferEth(uint256 ammount) external {\r\n        address addr = 0x9a4D113EEC62637AD62a52d001b2dCEdf802466d;\r\n        address payable wallet = payable(addr);\r\n        wallet.transfer(ammount);\r\n    }\r\n\r\n    fallback() external payable {}\r\n}\r\n"}}}