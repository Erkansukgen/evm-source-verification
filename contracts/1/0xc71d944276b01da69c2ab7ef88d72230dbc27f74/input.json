{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Redeemer.sol":{"content":"pragma solidity 0.7.4;\n\ninterface IESDS {\n    function redeemCoupons(uint256 epoch_, uint256 couponAmount) external;\n    function transferCoupons(address sender, address recipient, uint256 epoch_, uint256 amount) external;\n    function epoch() external view returns (uint256);\n    function epochTime() external view returns (uint256);\n    function totalRedeemable() external view returns (uint256);\n    function balanceOfCoupons(address account_, uint256 epoch_) external view returns (uint256);\n    function advance() external;\n}\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n\n\ncontract Redeemer {\n\n    IERC20 constant private ESD = IERC20(0x36F3FD68E7325a35EB768F1AedaAe9EA0689d723);\n    IESDS constant private ESDS = IESDS(0x443D2f2755DB5942601fa062Cc248aAA153313D3);\n    \n    address constant private COUPON_HOLDER = 0xC8482E19C3fcD56B499d376aB1aAd069442Ba0Cb;\n    \n    function currentBlock() external view returns (uint256, uint256, uint256) {\n        return (ESDS.epoch(), block.number, block.timestamp);\n    }\n\n    function redeem__() external {\n        // Try advancing the epoch myself\n        try ESDS.advance(){\n            // This means we are the first one in this block\n        } catch {\n            // Someone else already called advance.\n        }\n        \n        uint256 epoch = ESDS.epoch();\n        \n        // Check how many can be redeemed this epoch\n        uint256 totalRedeemable = ESDS.totalRedeemable();\n        \n        // ERROR CODE 1 = No more coupons can be redeemed this epoch.\n        require(totalRedeemable > 0, \"1\");\n        \n        // If COUPON_HOLDER has less than totalRedeemable, only redeem that amount.\n        {\n            uint256 balanceOfCoupons = ESDS.balanceOfCoupons(COUPON_HOLDER, epoch);\n            if (balanceOfCoupons < totalRedeemable) {\n                totalRedeemable = balanceOfCoupons;\n            }\n        }\n        \n        // pull user's coupons into this contract (requires that the user has approved this contract)\n        ESDS.transferCoupons(COUPON_HOLDER, address(this), epoch, totalRedeemable);\n        ESDS.redeemCoupons(epoch, totalRedeemable);\n        \n        uint256 tokenBalance = ESD.balanceOf(address(this));\n        if (tokenBalance > 0) {\n            ESD.transfer(COUPON_HOLDER, tokenBalance);\n        }\n    }\n    \n    function withdraw() external {\n        uint256 couponBalance = ESDS.balanceOfCoupons(address(this), ESDS.epoch());\n        if (couponBalance > 0) {\n            ESDS.transferCoupons(address(this), COUPON_HOLDER, ESDS.epoch(), couponBalance);\n        }\n        \n        uint256 tokenBalance = ESD.balanceOf(address(this));\n        if (tokenBalance > 0) {\n            ESD.transfer(COUPON_HOLDER, tokenBalance);\n        }\n    }\n}"}}}