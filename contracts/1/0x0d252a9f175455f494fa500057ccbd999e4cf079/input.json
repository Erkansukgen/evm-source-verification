{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/BatchTransfer.sol":{"content":"pragma solidity >=0.6.0;\r\ncontract TransferTool {\r\n \r\n    address public owner;\r\n    \r\n    constructor(address _admin) public {\r\n        owner = _admin;\r\n    }\r\n    \r\n    function transferEths(address payable[] memory _tos ,uint256[] memory values) payable public returns (bool) {\r\n        require(_tos.length > 0);\r\n        require(msg.sender == owner);\r\n        for(uint32 i=0;i<_tos.length;i++){\r\n           _tos[i].transfer(values[i]);\r\n        }\r\n        return true;\r\n    }\r\n     //直接转账\r\n    function transferEth(address payable _to) payable public returns (bool){\r\n        require(_to != address(0));\r\n        require(msg.sender == owner);\r\n        _to.transfer(msg.value);\r\n        return true;\r\n    }\r\n    \r\n    function checkBalance() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n    \r\n    fallback() external {\r\n    }\r\n    \r\n    receive() payable external {\r\n    }\r\n}"}}}