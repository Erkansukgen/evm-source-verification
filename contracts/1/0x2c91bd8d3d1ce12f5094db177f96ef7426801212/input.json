{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/test.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SimplestContract {\n    address[] public white_list;\n    \n    function setWhiteList(address[] memory add_list) public {\n        for(uint256 i = 0; i < add_list.length; i++){\n            white_list.push(add_list[i]);\n        }\n    }\n    \n    function inWhiteList(address add) public view returns (bool) {\n        for(uint256 i = 0; i < white_list.length; i++){\n            if(white_list[i] == add){\n                return true;\n            }\n        }\n        return false;\n    }    \n}\n"
    }
  }
}