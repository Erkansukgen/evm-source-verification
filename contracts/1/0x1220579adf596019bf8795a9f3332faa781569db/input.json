{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/TheKey.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.0;\n \ninterface ICaller{\n\n    function ownerOf(uint _tokenId) external returns(address);\n}\n\n\ncontract TheKey {\n    \n    string public sponsoringContent = \"\";\n\n    function updateSponsoringContent(string memory newSponsoringContent) external {\n        address owner = ICaller(address(0x3B3ee1931Dc30C1957379FAc9aba94D1C48a5405)).ownerOf(49853);\n        require(msg.sender == owner, \"Not owner of the token\");\n        sponsoringContent=newSponsoringContent;\n    }\n}"}}}