{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/MrFlipperWrapper.sol":{"content":" pragma solidity ^0.7.5;\r\n // SPDX-License-Identifier: UNLICENCED\r\n \r\n\r\ninterface MrFlipper {\r\n    function execute1(uint which, uint phase, uint id, uint lot, uint bid) external;\r\n}\r\n\r\n\r\ncontract MrFlipperWrapper {\r\n    \r\n    address payable public owner;\r\n    address MRFLIPPER_ADDRESS = 0x26D72D90c066E9e1e3Ab7103d522F909c29dCe72;\r\n\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address payable new_owner) public onlyOwner {\r\n        owner = new_owner;\r\n    }\r\n    \r\n    \r\n    function callMeWhatYouWant(uint which, uint phase, uint id, uint lot, uint bid) public onlyOwner {\r\n        MrFlipper(MRFLIPPER_ADDRESS).execute1(which, phase, id, lot, bid);\r\n    }\r\n}"}}}