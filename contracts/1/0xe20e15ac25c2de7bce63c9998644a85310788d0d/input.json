{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "new_plutos.sol": {
      "content": "pragma solidity ^0.8.0;\n\ninterface iec_card {\n    function mintCards(uint256 numberOfCards, address recipient) external;\n}\n\ncontract more_plutos {\n    address owner = msg.sender;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner,\"Unauthorised\");\n        _;\n    }\n\n    function mintTokens(iec_card token, address[] calldata recips, uint[] calldata amounts  ) external onlyOwner {\n        require(recips.length == amounts.length,\"Match\");\n        for (uint pos = 0; pos < recips.length; pos++) {\n            token.mintCards(amounts[pos], recips[pos]);\n        }\n    }\n\n    function mintTokensToAddresses(iec_card token, address[] calldata recips) external onlyOwner {\n        for (uint pos = 0; pos < recips.length; pos++) {\n            token.mintCards(1, recips[pos]);\n        }\n    }\n}"
    }
  }
}