{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/mytest.sol": {
      "content": "pragma solidity ^0.5.11;\n\ncontract HelloWorld {\n    uint256 data;\n    address owner;\n    \n    event logData(uint256 dataToLog);\n    \n    modifier onlyOwner() {\n        if (msg.sender != owner) revert();\n        _;\n    }\n    \n    constructor(uint256 initData) public {\n        data = initData;\n        owner = msg.sender;\n    }\n    \n    function getData() public view returns (uint256 returnData) {\n        return data;\n    }\n    \n    function setData(uint256 newData) public onlyOwner {\n        emit logData(newData);\n        data = newData;\n    }\n}"
    }
  }
}