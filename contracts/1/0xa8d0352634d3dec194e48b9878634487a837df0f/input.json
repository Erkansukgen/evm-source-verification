{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/hello1.sol": {
      "content": "pragma solidity =0.8.0;\n\ncontract  test{\n\n    address public  owner = address(0x0);\n\n\n    constructor() {\n        \n        owner = msg.sender;\n    }\n\n    function underlying() public returns(address){\n\n        return address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n\n    }\n\n\n    function depositVault(uint amount,address from ) public returns(bool){\n        return true;\n    }\n\n    function burn(address from, uint amount) public returns(bool){\n        return true;\n\n    }\n\n\n    function destroy() public{\n        require(msg.sender==owner);\n        selfdestruct(payable(owner));\n\n    }\n\n}\n"
    }
  }
}