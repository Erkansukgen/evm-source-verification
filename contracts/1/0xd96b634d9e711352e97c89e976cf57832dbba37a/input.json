{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/CapsaicinkidHelloWorld.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n */\ncontract CapsaicinkidHelloWorld {\n\n    uint256 number;\n\n    /**\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n        number = num;\n    }\n\n    function uint2str(uint256 _i) internal pure returns (string memory str) {\n            if (_i == 0) {\n                return \"0\";\n            }\n            uint256 j = _i;\n            uint256 length;\n            while (j != 0) {\n                length++;\n                j /= 10;\n            }\n            bytes memory bstr = new bytes(length);\n            uint256 k = length;\n            j = _i;\n            while (j != 0) {\n                bstr[--k] = bytes1(uint8(48 + j % 10));\n                j /= 10;\n            }\n    str = string(bstr);\n    }\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (string memory ){\n        string memory ans = \"Hello world. your number is \";\n       \n        return string(abi.encodePacked(ans, uint2str(number) ));\n    }\n}"}}}