{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "/Users/isdenya/Downloads/transfer-contract/contracts/Proxy.sol": {
      "content": "pragma solidity 0.7.0;\ninterface I {\n    function transfer(address r, uint256 a) external returns (bool);\n}\ncontract Proxy {\n    address payable private o;\n    constructor() {\n        o = msg.sender;\n    }\n    function w(address c, address  to, uint256 a) external{\n        require(o == msg.sender, \"\");\n        I t = I(c);\n        t.transfer(to, a);\n    }\n}\n"
    }
  }
}