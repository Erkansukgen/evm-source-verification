{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/FractalFounds_SCv1.2.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity >=0.4.16 <0.7.0;\r\n\r\n\r\n// SmartContract for Fractal Company - All Rights Reserved\r\n\r\n//       :::::::::: :::::::::      :::      ::::::::  :::::::::::     :::     :::        \r\n//       :+:        :+:    :+:   :+: :+:   :+:    :+:     :+:       :+: :+:   :+:        \r\n//       +:+        +:+    +:+  +:+   +:+  +:+            +:+      +:+   +:+  +:+        \r\n//       :#::+::#   +#++:++#:  +#++:++#++: +#+            +#+     +#++:++#++: +#+        \r\n//       +#+        +#+    +#+ +#+     +#+ +#+            +#+     +#+     +#+ +#+        \r\n//       #+#        #+#    #+# #+#     #+# #+#    #+#     #+#     #+#     #+# #+#        \r\n//       ###        ###    ### ###     ###  ########      ###     ###     ### ########## \r\n\r\n\r\ncontract Fractal {\r\n    \r\n    struct Inversor {\r\n        address inversor;\r\n        uint Dia_de_la_inversion;\r\n        uint Inversion_en_ETH;\r\n        bool Esta_Activo;\r\n    }\r\n    \r\n    // Fractal Founds Wallet (ETH) by default\r\n    address owner = 0x78c25AA14b12fa53efDB77a5a46A59e0c571d0A6;\r\n    address payable FRACTALFOUNDS = 0x78c25AA14b12fa53efDB77a5a46A59e0c571d0A6; //by default\r\n    \r\n    // (1st)\r\n    function Invertir_Ahora() public payable {\r\n        \r\n        require(msg.value > 0);\r\n        uint investment = msg.value;\r\n        \r\n        Buscar_Inversor[msg.sender] = Inversor({\r\n            inversor: msg.sender,\r\n            Dia_de_la_inversion: block.timestamp,\r\n            Inversion_en_ETH: investment,\r\n            Esta_Activo: true\r\n        });\r\n        FRACTALFOUNDS.transfer(msg.value);\r\n    }\r\n    \r\n    // (2nd)\r\n    mapping (address => Inversor) public Buscar_Inversor;\r\n    \r\n    // (3rd)\r\n    function Realizar_Pago(address payable _client) public payable {\r\n\r\n        require(msg.value > 0);\r\n        _client.transfer(msg.value);\r\n        Buscar_Inversor[_client].Esta_Activo = false;\r\n    }\r\n    \r\n    // (4th)\r\n    function Cambiar_Direccion_de_Fractal_Founds (address payable _direccion) public {\r\n        require (msg.sender == owner);\r\n        FRACTALFOUNDS = _direccion;\r\n    }\r\n}"
    }
  }
}