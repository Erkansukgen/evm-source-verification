{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Untitled.sol":{"content":"/*\n███████╗██╗      █████╗ ███╗   ███╗██╗███╗   ██╗ ██████╗          ██████╗ \n██╔════╝██║     ██╔══██╗████╗ ████║██║████╗  ██║██╔════╝         ██╔═══██╗\n█████╗  ██║     ███████║██╔████╔██║██║██╔██╗ ██║██║  ███╗        ██║   ██║\n██╔══╝  ██║     ██╔══██║██║╚██╔╝██║██║██║╚██╗██║██║   ██║        ██║   ██║\n██║     ███████╗██║  ██║██║ ╚═╝ ██║██║██║ ╚████║╚██████╔╝███████╗╚██████╔╝\n╚═╝     ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝ ╚═════╝ \n        ██████╗ ██████╗  ██████╗ ██████╗                                  \n        ██╔══██╗██╔══██╗██╔═══██╗██╔══██╗                                 \n        ██║  ██║██████╔╝██║   ██║██████╔╝                                 \n        ██║  ██║██╔══██╗██║   ██║██╔═══╝                                  \n███████╗██████╔╝██║  ██║╚██████╔╝██║                                      \n╚══════╝╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝\n// SPDX-License-Identifier: MIT\n*/\npragma solidity 0.7.5;\n\ninterface IERC20TransferFrom { // interface for erc20 token `transferFrom()`\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\ninterface IERC721TransferFrom { // interface for erc721 token `transferFrom()`\n    function transferFrom(address from, address to, uint256 tokenId) external;\n}\n\ninterface IFL_O {\n    function ownerOf(uint256 tokenId) external view returns (address);\n    function totalSupply() external view returns (uint256);\n}\n\ncontract FLAMING_O_DROP {\n    address public FLAMING_O = 0xc7886c91fF20dE17c9161666202b8D8953D03BBD;\n    \n    function dropERC20(address token, uint256 amount) external { // drop token amount evenly on FL_O holders\n        IFL_O FL_O = IFL_O(FLAMING_O);\n        uint256 count = 1;\n        uint256 length = FL_O.totalSupply();\n        \n        for (uint256 i = 0; i < length; i++) {\n            IERC20TransferFrom(token).transferFrom(msg.sender, FL_O.ownerOf(count), amount / length);\n            count++;\n        }\n    }\n    \n    function dropERC721(address token) external { // drop NFT series on FL_O holders, starting from `tokenId` 1\n        IFL_O FL_O = IFL_O(FLAMING_O);\n        uint256 count = 1;\n        \n        for (uint256 i = 0; i < FL_O.totalSupply(); i++) {\n            IERC721TransferFrom(token).transferFrom(msg.sender, FL_O.ownerOf(count), count);\n            count++;\n        }\n    }\n}"}}}