{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/WhirlpoolManagerTask.sol": {
      "content": "pragma solidity <=0.6.2;\n\ninterface IRelease {\n    function release() external;\n}\n\ninterface ISURF3D {\n    function dividendsOf(address _user) external view returns (uint256);\n}\n\ncontract WhirlpoolManagerTask {\n    address private constant _surf3D = 0xeb620A32Ea11FcAa1B3D70E4CFf6500B85049C97;\n    address private constant _whirlpoolManager = 0x6E6D30D1Fd3c49278F93d4D29681f628d88b050b;\n\n    function check(uint _requirement)\n    external view returns (uint256) {\n        uint balance = ISURF3D(_surf3D).dividendsOf(_whirlpoolManager);\n\n        if(balance >= _requirement)\n            return 0;\n        else\n            return _requirement - balance;\n    }\n\n    function execute()\n    external {\n        IRelease(_whirlpoolManager).release();\n    }\n}"
    }
  }
}