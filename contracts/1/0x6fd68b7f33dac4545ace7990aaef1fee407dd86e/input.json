{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "LightMoon4._clean.sol": {
      "content": "/**\r\n\r\n\r\n _______                                       _______                       __                 \r\n|       \\                                     |       \\                     |  \\                \r\n| $$$$$$$\\  ______    ______    ______        | $$$$$$$\\ __    __   _______ | $$   __   _______ \r\n| $$  | $$ /      \\  /      \\  /      \\       | $$__/ $$|  \\  |  \\ /       \\| $$  /  \\ /       \\\r\n| $$  | $$|  $$$$$$\\|  $$$$$$\\|  $$$$$$\\      | $$    $$| $$  | $$|  $$$$$$$| $$_/  $$|  $$$$$$$\r\n| $$  | $$| $$  | $$| $$  | $$| $$    $$      | $$$$$$$\\| $$  | $$| $$      | $$   $$  \\$$    \\ \r\n| $$__/ $$| $$__/ $$| $$__| $$| $$$$$$$$      | $$__/ $$| $$__/ $$| $$_____ | $$$$$$\\  _\\$$$$$$\\\r\n| $$    $$ \\$$    $$ \\$$    $$ \\$$     \\      | $$    $$ \\$$    $$ \\$$     \\| $$  \\$$\\|       $$\r\n \\$$$$$$$   \\$$$$$$  _\\$$$$$$$  \\$$$$$$$       \\$$$$$$$   \\$$$$$$   \\$$$$$$$ \\$$   \\$$ \\$$$$$$$ \r\n                    |  \\__| $$                                                                  \r\n                     \\$$    $$                                                                  \r\n                      \\$$$$$$                                                                   \r\n\r\n\r\n\r\n**/\r\n//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.7.2;\r\n\r\ncontract DogeBucks {\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n    \r\n    \r\n    uint public totalSupply = 10 * 10**10 * 10**18;\r\n    string public name = \"Doge Bucks\";\r\n    string public symbol = \"DGBUCKS\";\r\n    uint public decimals = 18;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    \r\n    constructor() {\r\n        balances[msg.sender] = totalSupply;\r\n    }\r\n    \r\n    \r\n    function balanceOf(address owner) public view returns(uint) {\r\n        return balances[owner];\r\n    }\r\n    \r\n    function transfer(address to, uint value) public returns(bool) {\r\n        require(balanceOf(msg.sender) >= value, 'balance too low');\r\n        balances[to] += value;\r\n        balances[msg.sender] -= value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n        \r\n    }\r\n    \r\n    function transferFrom(address from, address to, uint value) public returns(bool) {\r\n        require(balanceOf(from) >= value, 'balance too low');\r\n        require(allowance[from][msg.sender] >= value, 'allowance too low');\r\n        balances[to] += value;\r\n        balances[from] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address spender, uint value) public returns(bool) {\r\n        allowance[msg.sender][spender] = value;\r\n        return true;\r\n        \r\n    }\r\n}"
    }
  }
}