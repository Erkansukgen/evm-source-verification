{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/Decryption.sol": {
      "content": "// SPDX-License-Identifier: AGPL-3.0-only\n\n/*\n    Decryption.sol - SKALE Manager\n    Copyright (C) 2018-Present SKALE Labs\n    @author Artem Payvin\n\n    SKALE Manager is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    SKALE Manager is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with SKALE Manager.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\npragma solidity 0.6.10;\n\n/**\n * @title Decryption\n * @dev This contract performs encryption and decryption functions.\n * Decrypt is used by SkaleDKG contract to decrypt secret key contribution to\n * validate complaints during the DKG procedure.\n */\ncontract Decryption {\n\n    /**\n     * @dev Returns an encrypted text given a secret and a key.\n     */\n    function encrypt(uint256 secretNumber, bytes32 key) external pure returns (bytes32 ciphertext) {\n        return bytes32(secretNumber) ^ key;\n    }\n\n    /**\n     * @dev Returns a secret given an encrypted text and a key.\n     */\n    function decrypt(bytes32 ciphertext, bytes32 key) external pure returns (uint256 secretNumber) {\n        return uint256(ciphertext ^ key);\n    }\n}\n"
    }
  }
}