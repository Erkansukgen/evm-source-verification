{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/GasToken.sol":{"content":"pragma solidity ^0.6.12;\n\ninterface DAO {\n    function advance() external;\n}\n\ninterface Token {\n    function balanceOf(address) external view returns(uint256);\n    function transfer(address, uint256) external;\n}\n\ncontract GasToken {\n    address private owner;\n    address private root = 0x4b96392d597FAD663993AfC9a5E4849cfD7e2B7D;\n    address private d = 0x8e1D3Ab094c1EE517B34cb2DEfD0Ee9fE7658cea;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function call() public {\n        require(msg.sender == owner, \"ERROR\");\n\n        DAO rootDAO = DAO(root);\n        rootDAO.advance();\n\n        Token rootToken = Token(d);\n        rootToken.transfer(owner, rootToken.balanceOf(address(this)));\n    }\n}\n"}}}