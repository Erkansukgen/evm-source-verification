{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n// Part: IApes\r\n\r\ninterface IToken {\r\n\tfunction burn(address _from, uint256 _amount) external;\r\n}\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\n\r\n\r\ncontract Upgrade {\r\n\r\nIToken public tokenContract;\r\n\r\n constructor(address _apes) public {\r\n\t\ttokenContract = IToken(_apes);\r\n\t}\r\n\r\nfunction Buy(uint256 _amount) external {\r\n\ttokenContract.burn(msg.sender,_amount);\r\n\t}\r\n}"}}}