{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/1_Storage.sol": {
      "content": "pragma solidity >=0.4.22 <0.7.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n */\ncontract Storage {\n\n    uint256 number;\n    mapping (address => uint256) accounts;\n\n    function deposit(uint256 amount) public {\n        accounts[msg.sender] = accounts[msg.sender] + amount;\n    }\n   \n    function withdrawl(uint256 amount) public {\n        uint256 a = accounts[msg.sender]; \n        require(a > 0, \"no cash\");\n        if (amount > a) {\n            accounts[msg.sender] = 0;\n        } else {\n            accounts[msg.sender] = accounts[msg.sender] - amount;\n        }\n    }\n    \n    function balance() public returns (uint256) {\n        return accounts[msg.sender];\n    }\n}"
    }
  }
}