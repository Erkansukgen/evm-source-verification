{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "AlephSync.sol": {
      "content": "pragma solidity ^0.5.11;\r\n\r\ncontract AlephSync{\r\n\r\n    event SyncEvent(uint256 timestamp, address addr, string message); \r\n    event MessageEvent(uint256 timestamp, address addr, string msgtype, string msgcontent); \r\n    \r\n    function doEmit(string memory message) public {\r\n        emit SyncEvent(block.timestamp, msg.sender, message);\r\n    }\r\n    \r\n    function doMessage(string memory msgtype, string memory msgcontent) public {\r\n        emit MessageEvent(block.timestamp, msg.sender, msgtype, msgcontent);\r\n    }\r\n\r\n}"
    }
  }
}