{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Untitled.sol":{"content":"pragma solidity ^0.6.0;\n\ninterface publicCalls {\n  function GenesisDestroyAmountCount (  ) external view returns ( uint256 );\n  function GenesisDestroyAmountCountSet ( uint256 _GenesisDestroyAmountCount ) external;\n  function GenesisDestroyCountStake (  ) external view returns ( uint256 );\n  function GenesisDestroyCountStakeSet ( uint256 _GenesisDestroyCountStake ) external;\n  function GenesisDestroyed (  ) external view returns ( uint256 );\n  function GenesisDestroyedSet ( uint256 _GenesisDestroyed ) external;\n  function NormalAddressBuyPricePerMNE ( address ) external view returns ( uint256 );\n  function NormalAddressBuyPricePerMNESet ( address _address, uint256 _NormalAddressBuyPricePerMNE ) external;\n  function NormalAddressFeeCount (  ) external view returns ( uint256 );\n  function NormalAddressFeeCountSet ( uint256 _NormalAddressFeeCount ) external;\n  function NormalAddressSalesCount (  ) external view returns ( uint256 );\n  function NormalAddressSalesCountSet ( uint256 _NormalAddressSalesCount ) external;\n  function NormalAddressSalesPriceCount (  ) external view returns ( uint256 );\n  function NormalAddressSalesPriceCountSet ( uint256 _NormalAddressSalesPriceCount ) external;\n  function NormalBalanceImported (  ) external view returns ( uint256 );\n  function NormalBalanceImportedSet ( uint256 _NormalBalanceImported ) external;\n  function NormalImportedAmountCount (  ) external view returns ( uint256 );\n  function NormalImportedAmountCountSet ( uint256 _NormalImportedAmountCount ) external;\n  function allowAddressToDestroyGenesis ( address ) external view returns ( address );\n  function allowAddressToDestroyGenesisSet ( address _address, address _allowAddressToDestroyGenesis ) external;\n  function allowReceiveGenesisTransfers ( address ) external view returns ( bool );\n  function allowReceiveGenesisTransfersSet ( address _address, bool _allowReceiveGenesisTransfers ) external;\n  function allowed ( address, address ) external view returns ( uint256 );\n  function allowedSet ( address _address, address _spender, uint256 _amount ) external;\n  function amountOfGenesisToBuyStakes (  ) external view returns ( uint256 );\n  function amountOfGenesisToBuyStakesSet ( address _from, uint256 _amountOfGenesisToBuyStakes ) external;\n  function amountOfGenesisToTransferStakes (  ) external view returns ( uint256 );\n  function amountOfGenesisToTransferStakesSet ( address _from, uint256 _amountOfGenesisToTransferStakes ) external;\n  function amountOfMNEForToken (  ) external view returns ( uint256 );\n  function amountOfMNEForTokenICO (  ) external view returns ( uint256 );\n  function amountOfMNEForTokenICOSet ( address _from, uint256 _amountOfMNEForTokenICO ) external;\n  function amountOfMNEForTokenSet ( address _from, uint256 _amountOfMNEForToken ) external;\n  function amountOfMNEToBuyStakes (  ) external view returns ( uint256 );\n  function amountOfMNEToBuyStakesSet ( address _from, uint256 _amountOfMNEToBuyStakes ) external;\n  function amountOfMNEToTransferStakes (  ) external view returns ( uint256 );\n  function amountOfMNEToTransferStakesSet ( address _from, uint256 _amountOfMNEToTransferStakes ) external;\n  function availableBalance (  ) external view returns ( uint256 );\n  function availableBalanceSet ( uint256 _availableBalance ) external;\n  function balances ( address ) external view returns ( uint256 );\n  function balancesSet ( address _address, uint256 _balances ) external;\n  function buyStakeGenesisCount (  ) external view returns ( uint256 );\n  function buyStakeGenesisCountSet ( uint256 _buyStakeGenesisCount ) external;\n  function buyStakeMNECount (  ) external view returns ( uint256 );\n  function buyStakeMNECountSet ( uint256 _buyStakeMNECount ) external;\n  function ethFeeForSellerLevel1 (  ) external view returns ( uint256 );\n  function ethFeeForSellerLevel1Set ( address _from, uint256 _ethFeeForSellerLevel1 ) external;\n  function ethFeeForToken (  ) external view returns ( uint256 );\n  function ethFeeForTokenICO (  ) external view returns ( uint256 );\n  function ethFeeForTokenICOSet ( address _from, uint256 _ethFeeForTokenICO ) external;\n  function ethFeeForTokenSet ( address _from, uint256 _ethFeeForToken ) external;\n  function ethFeeToBuyLevel1 (  ) external view returns ( uint256 );\n  function ethFeeToBuyLevel1Set ( address _from, uint256 _ethFeeToBuyLevel1 ) external;\n  function ethFeeToUpgradeToLevel2 (  ) external view returns ( uint256 );\n  function ethFeeToUpgradeToLevel2Set ( address _from, uint256 _ethFeeToUpgradeToLevel2 ) external;\n  function ethFeeToUpgradeToLevel3 (  ) external view returns ( uint256 );\n  function ethFeeToUpgradeToLevel3Set ( address _from, uint256 _ethFeeToUpgradeToLevel3 ) external;\n  function ethPercentFeeGenesisExchange (  ) external view returns ( uint256 );\n  function ethPercentFeeGenesisExchangeSet ( address _from, uint256 _ethPercentFeeGenesisExchange ) external;\n  function ethPercentFeeNormalExchange (  ) external view returns ( uint256 );\n  function ethPercentFeeNormalExchangeSet ( address _from, uint256 _ethPercentFeeNormalExchange ) external;\n  function ethPercentStakeExchange (  ) external view returns ( uint256 );\n  function ethPercentStakeExchangeSet ( address _from, uint256 _ethPercentStakeExchange ) external;\n  function genesisAddressCount (  ) external view returns ( uint256 );\n  function genesisAddressCountSet ( uint256 _genesisAddressCount ) external;\n  function genesisAddressesForSaleLevel1Index ( address ) external view returns ( uint256 );\n  function genesisAddressesForSaleLevel1IndexSet ( address _address, uint256 _genesisAddressesForSaleLevel1Index ) external;\n  function genesisAddressesForSaleLevel2Index ( address ) external view returns ( uint256 );\n  function genesisAddressesForSaleLevel2IndexSet ( address _address, uint256 _genesisAddressesForSaleLevel2Index ) external;\n  function genesisAddressesForSaleLevel3Index ( address ) external view returns ( uint256 );\n  function genesisAddressesForSaleLevel3IndexSet ( address _address, uint256 _genesisAddressesForSaleLevel3Index ) external;\n  function genesisBuyPrice ( address ) external view returns ( uint256 );\n  function genesisBuyPriceSet ( address _address, uint256 _genesisBuyPrice ) external;\n  function genesisCallerAddress (  ) external view returns ( address );\n  function genesisCallerAddressSet ( address _genesisCallerAddress ) external;\n  function genesisInitialSupply ( address ) external view returns ( uint256 );\n  function genesisInitialSupplySet ( address _address, uint256 _genesisInitialSupply ) external;\n  function genesisRewardPerBlock (  ) external view returns ( uint256 );\n  function genesisSalesCount (  ) external view returns ( uint256 );\n  function genesisSalesCountSet ( uint256 _genesisSalesCount ) external;\n  function genesisSalesPriceCount (  ) external view returns ( uint256 );\n  function genesisSalesPriceCountSet ( uint256 _genesisSalesPriceCount ) external;\n  function genesisSupplyPerAddress (  ) external view returns ( uint256 );\n  function genesisTransfersCount (  ) external view returns ( uint256 );\n  function genesisTransfersCountSet ( uint256 _genesisTransfersCount ) external;\n  function initialBlockCount (  ) external view returns ( uint256 );\n  function initialBlockCountPerAddress ( address ) external view returns ( uint256 );\n  function initialBlockCountPerAddressSet ( address _address, uint256 _initialBlockCountPerAddress ) external;\n  function initialBlockCountSet ( uint256 _initialBlockCount ) external;\n  function isGenesisAddress ( address ) external view returns ( uint8 );\n  function isGenesisAddressForSale ( address ) external view returns ( bool );\n  function isGenesisAddressForSaleSet ( address _address, bool _isGenesisAddressForSale ) external;\n  function isGenesisAddressSet ( address _address, uint8 _isGenesisAddress ) external;\n  function isNormalAddressForSale ( address ) external view returns ( bool );\n  function isNormalAddressForSaleSet ( address _address, bool _isNormalAddressForSale ) external;\n  function level2ActivationsFromLevel1Count (  ) external view returns ( uint256 );\n  function level2ActivationsFromLevel1CountSet ( uint256 _level2ActivationsFromLevel1Count ) external;\n  function level3ActivationsFromDevCount (  ) external view returns ( uint256 );\n  function level3ActivationsFromDevCountSet ( uint256 _level3ActivationsFromDevCount ) external;\n  function level3ActivationsFromLevel1Count (  ) external view returns ( uint256 );\n  function level3ActivationsFromLevel1CountSet ( uint256 _level3ActivationsFromLevel1Count ) external;\n  function level3ActivationsFromLevel2Count (  ) external view returns ( uint256 );\n  function level3ActivationsFromLevel2CountSet ( uint256 _level3ActivationsFromLevel2Count ) external;\n  function maxBlocks (  ) external view returns ( uint256 );\n  function mneBurned (  ) external view returns ( uint256 );\n  function mneBurnedSet ( uint256 _mneBurned ) external;\n  function normalAddressesForSaleIndex ( address ) external view returns ( uint256 );\n  function normalAddressesForSaleIndexSet ( address _address, uint256 _normalAddressesForSaleIndex ) external;\n  function overallSupply (  ) external view returns ( uint256 );\n  function overallSupplySet ( uint256 _overallSupply ) external;\n  function ownerGenesis (  ) external view returns ( address );\n  function ownerGenesisBuys (  ) external view returns ( address );\n  function ownerMain (  ) external view returns ( address );\n  function ownerNormalAddress (  ) external view returns ( address );\n  function ownerStakeBuys (  ) external view returns ( address );\n  function ownerStakes (  ) external view returns ( address );\n  function ownerTokenService (  ) external view returns ( address );\n  function setOwnerGenesis (  ) external;\n  function setOwnerGenesisBuys (  ) external;\n  function setOwnerMain (  ) external;\n  function setOwnerNormalAddress (  ) external;\n  function setOwnerStakeBuys (  ) external;\n  function setOwnerStakes (  ) external;\n  function setOwnerTokenService (  ) external;\n  function setOwnerBaseTransfers (  ) external;\n  function setupRunning (  ) external view returns ( bool );\n  function setupRunningSet ( bool _setupRunning ) external;\n  function stakeBalances ( address ) external view returns ( uint256 );\n  function stakeBalancesSet ( address _address, uint256 _stakeBalances ) external;\n  function stakeBuyPrice ( address ) external view returns ( uint256 );\n  function stakeBuyPriceSet ( address _address, uint256 _stakeBuyPrice ) external;\n  function stakeDecimals (  ) external view returns ( uint256 );\n  function stakeDecimalsSet ( address _from, uint256 _stakeDecimals ) external;\n  function stakeHoldersImported (  ) external view returns ( uint256 );\n  function stakeHoldersImportedSet ( uint256 _stakeHoldersImported ) external;\n  function stakeHoldersListIndex ( address ) external view returns ( uint256 );\n  function stakeHoldersListIndexSet ( address _address, uint256 _stakeHoldersListIndex ) external;\n  function stakeMneBurnCount (  ) external view returns ( uint256 );\n  function stakeMneBurnCountSet ( uint256 _stakeMneBurnCount ) external;\n  function stakeMneTransferBurnCount (  ) external view returns ( uint256 );\n  function stakeMneTransferBurnCountSet ( uint256 _stakeMneTransferBurnCount ) external;\n  function stakesForSaleIndex ( address ) external view returns ( uint256 );\n  function stakesForSaleIndexSet ( address _address, uint256 _stakesForSaleIndex ) external;\n  function tokenCreated ( address, uint256 ) external view returns ( address );\n  function tokenCreatedSet ( address _address, address _tokenCreated ) external;\n  function tokenICOCreated ( address, uint256 ) external view returns ( address );\n  function tokenICOCreatedSet ( address _address, address _tokenICOCreated ) external;\n  function totalMaxAvailableAmount (  ) external view returns ( uint256 );\n  function totalMaxAvailableAmountSet ( uint256 _totalMaxAvailableAmount ) external;\n  function totalPaidStakeHolders (  ) external view returns ( uint256 );\n  function totalPaidStakeHoldersSet ( uint256 _totalPaidStakeHolders ) external;\n  function transferStakeGenesisCount (  ) external view returns ( uint256 );\n  function transferStakeGenesisCountSet ( uint256 _transferStakeGenesisCount ) external;\n  function transferStakeMNECount (  ) external view returns ( uint256 );\n  function transferStakeMNECountSet ( uint256 _transferStakeMNECount ) external;\n}\n\ninterface publicArrays {\n  function Level1TradeHistoryAmountETH ( uint256 ) external view returns ( uint256 );\n  function Level1TradeHistoryAmountETHFee ( uint256 ) external view returns ( uint256 );\n  function Level1TradeHistoryAmountETHFeeLength (  ) external view returns ( uint256 len );\n  function Level1TradeHistoryAmountETHFeeSet ( uint256 _Level1TradeHistoryAmountETHFee ) external;\n  function Level1TradeHistoryAmountETHLength (  ) external view returns ( uint256 len );\n  function Level1TradeHistoryAmountETHSet ( uint256 _Level1TradeHistoryAmountETH ) external;\n  function Level1TradeHistoryAmountMNE ( uint256 ) external view returns ( uint256 );\n  function Level1TradeHistoryAmountMNELength (  ) external view returns ( uint256 len );\n  function Level1TradeHistoryAmountMNESet ( uint256 _Level1TradeHistoryAmountMNE ) external;\n  function Level1TradeHistoryBuyer ( uint256 ) external view returns ( address );\n  function Level1TradeHistoryBuyerLength (  ) external view returns ( uint256 len );\n  function Level1TradeHistoryBuyerSet ( address _Level1TradeHistoryBuyer ) external;\n  function Level1TradeHistoryDate ( uint256 ) external view returns ( uint256 );\n  function Level1TradeHistoryDateLength (  ) external view returns ( uint256 len );\n  function Level1TradeHistoryDateSet ( uint256 _Level1TradeHistoryDate ) external;\n  function Level1TradeHistorySeller ( uint256 ) external view returns ( address );\n  function Level1TradeHistorySellerLength (  ) external view returns ( uint256 len );\n  function Level1TradeHistorySellerSet ( address _Level1TradeHistorySeller ) external;\n  function Level2TradeHistoryAmountETH ( uint256 ) external view returns ( uint256 );\n  function Level2TradeHistoryAmountETHFee ( uint256 ) external view returns ( uint256 );\n  function Level2TradeHistoryAmountETHFeeLength (  ) external view returns ( uint256 len );\n  function Level2TradeHistoryAmountETHFeeSet ( uint256 _Level2TradeHistoryAmountETHFee ) external;\n  function Level2TradeHistoryAmountETHLength (  ) external view returns ( uint256 len );\n  function Level2TradeHistoryAmountETHSet ( uint256 _Level2TradeHistoryAmountETH ) external;\n  function Level2TradeHistoryAmountMNE ( uint256 ) external view returns ( uint256 );\n  function Level2TradeHistoryAmountMNELength (  ) external view returns ( uint256 len );\n  function Level2TradeHistoryAmountMNESet ( uint256 _Level2TradeHistoryAmountMNE ) external;\n  function Level2TradeHistoryAvailableAmountMNE ( uint256 ) external view returns ( uint256 );\n  function Level2TradeHistoryAvailableAmountMNELength (  ) external view returns ( uint256 len );\n  function Level2TradeHistoryAvailableAmountMNESet ( uint256 _Level2TradeHistoryAvailableAmountMNE ) external;\n  function Level2TradeHistoryBuyer ( uint256 ) external view returns ( address );\n  function Level2TradeHistoryBuyerLength (  ) external view returns ( uint256 len );\n  function Level2TradeHistoryBuyerSet ( address _Level2TradeHistoryBuyer ) external;\n  function Level2TradeHistoryDate ( uint256 ) external view returns ( uint256 );\n  function Level2TradeHistoryDateLength (  ) external view returns ( uint256 len );\n  function Level2TradeHistoryDateSet ( uint256 _Level2TradeHistoryDate ) external;\n  function Level2TradeHistorySeller ( uint256 ) external view returns ( address );\n  function Level2TradeHistorySellerLength (  ) external view returns ( uint256 len );\n  function Level2TradeHistorySellerSet ( address _Level2TradeHistorySeller ) external;\n  function Level3TradeHistoryAmountETH ( uint256 ) external view returns ( uint256 );\n  function Level3TradeHistoryAmountETHFee ( uint256 ) external view returns ( uint256 );\n  function Level3TradeHistoryAmountETHFeeLength (  ) external view returns ( uint256 len );\n  function Level3TradeHistoryAmountETHFeeSet ( uint256 _Level3TradeHistoryAmountETHFee ) external;\n  function Level3TradeHistoryAmountETHLength (  ) external view returns ( uint256 len );\n  function Level3TradeHistoryAmountETHSet ( uint256 _Level3TradeHistoryAmountETH ) external;\n  function Level3TradeHistoryAmountMNE ( uint256 ) external view returns ( uint256 );\n  function Level3TradeHistoryAmountMNELength (  ) external view returns ( uint256 len );\n  function Level3TradeHistoryAmountMNESet ( uint256 _Level3TradeHistoryAmountMNE ) external;\n  function Level3TradeHistoryAvailableAmountMNE ( uint256 ) external view returns ( uint256 );\n  function Level3TradeHistoryAvailableAmountMNELength (  ) external view returns ( uint256 len );\n  function Level3TradeHistoryAvailableAmountMNESet ( uint256 _Level3TradeHistoryAvailableAmountMNE ) external;\n  function Level3TradeHistoryBuyer ( uint256 ) external view returns ( address );\n  function Level3TradeHistoryBuyerLength (  ) external view returns ( uint256 len );\n  function Level3TradeHistoryBuyerSet ( address _Level3TradeHistoryBuyer ) external;\n  function Level3TradeHistoryDate ( uint256 ) external view returns ( uint256 );\n  function Level3TradeHistoryDateLength (  ) external view returns ( uint256 len );\n  function Level3TradeHistoryDateSet ( uint256 _Level3TradeHistoryDate ) external;\n  function Level3TradeHistorySeller ( uint256 ) external view returns ( address );\n  function Level3TradeHistorySellerLength (  ) external view returns ( uint256 len );\n  function Level3TradeHistorySellerSet ( address _Level3TradeHistorySeller ) external;\n  function MNETradeHistoryAmountETH ( uint256 ) external view returns ( uint256 );\n  function MNETradeHistoryAmountETHFee ( uint256 ) external view returns ( uint256 );\n  function MNETradeHistoryAmountETHFeeLength (  ) external view returns ( uint256 len );\n  function MNETradeHistoryAmountETHFeeSet ( uint256 _MNETradeHistoryAmountETHFee ) external;\n  function MNETradeHistoryAmountETHLength (  ) external view returns ( uint256 len );\n  function MNETradeHistoryAmountETHSet ( uint256 _MNETradeHistoryAmountETH ) external;\n  function MNETradeHistoryAmountMNE ( uint256 ) external view returns ( uint256 );\n  function MNETradeHistoryAmountMNELength (  ) external view returns ( uint256 len );\n  function MNETradeHistoryAmountMNESet ( uint256 _MNETradeHistoryAmountMNE ) external;\n  function MNETradeHistoryBuyer ( uint256 ) external view returns ( address );\n  function MNETradeHistoryBuyerLength (  ) external view returns ( uint256 len );\n  function MNETradeHistoryBuyerSet ( address _MNETradeHistoryBuyer ) external;\n  function MNETradeHistoryDate ( uint256 ) external view returns ( uint256 );\n  function MNETradeHistoryDateLength (  ) external view returns ( uint256 len );\n  function MNETradeHistoryDateSet ( uint256 _MNETradeHistoryDate ) external;\n  function MNETradeHistorySeller ( uint256 ) external view returns ( address );\n  function MNETradeHistorySellerLength (  ) external view returns ( uint256 len );\n  function MNETradeHistorySellerSet ( address _MNETradeHistorySeller ) external;\n  function StakeTradeHistoryBuyer ( uint256 ) external view returns ( address );\n  function StakeTradeHistoryBuyerLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistoryBuyerSet ( address _StakeTradeHistoryBuyer ) external;\n  function StakeTradeHistoryDate ( uint256 ) external view returns ( uint256 );\n  function StakeTradeHistoryDateLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistoryDateSet ( uint256 _StakeTradeHistoryDate ) external;\n  function StakeTradeHistoryETHFee ( uint256 ) external view returns ( uint256 );\n  function StakeTradeHistoryETHFeeLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistoryETHFeeSet ( uint256 _StakeTradeHistoryETHFee ) external;\n  function StakeTradeHistoryETHPrice ( uint256 ) external view returns ( uint256 );\n  function StakeTradeHistoryETHPriceLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistoryETHPriceSet ( uint256 _StakeTradeHistoryETHPrice ) external;\n  function StakeTradeHistoryMNEGenesisBurned ( uint256 ) external view returns ( uint256 );\n  function StakeTradeHistoryMNEGenesisBurnedLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistoryMNEGenesisBurnedSet ( uint256 _StakeTradeHistoryMNEGenesisBurned ) external;\n  function StakeTradeHistorySeller ( uint256 ) external view returns ( address );\n  function StakeTradeHistorySellerLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistorySellerSet ( address _StakeTradeHistorySeller ) external;\n  function StakeTradeHistoryStakeAmount ( uint256 ) external view returns ( uint256 );\n  function StakeTradeHistoryStakeAmountLength (  ) external view returns ( uint256 len );\n  function StakeTradeHistoryStakeAmountSet ( uint256 _StakeTradeHistoryStakeAmount ) external;\n  function deleteGenesisAddressesForSaleLevel1 (  ) external;\n  function deleteGenesisAddressesForSaleLevel2 (  ) external;\n  function deleteGenesisAddressesForSaleLevel3 (  ) external;\n  function deleteNormalAddressesForSale (  ) external;\n  function deleteStakeHoldersList (  ) external;\n  function deleteStakesForSale (  ) external;\n  function genesisAddressesForSaleLevel1 ( uint256 ) external view returns ( address );\n  function genesisAddressesForSaleLevel1Length (  ) external view returns ( uint256 len );\n  function genesisAddressesForSaleLevel1Set ( address _genesisAddressesForSaleLevel1 ) external;\n  function genesisAddressesForSaleLevel1SetAt ( uint256 i, address _address ) external;\n  function genesisAddressesForSaleLevel2 ( uint256 ) external view returns ( address );\n  function genesisAddressesForSaleLevel2Length (  ) external view returns ( uint256 len );\n  function genesisAddressesForSaleLevel2Set ( address _genesisAddressesForSaleLevel2 ) external;\n  function genesisAddressesForSaleLevel2SetAt ( uint256 i, address _address ) external;\n  function genesisAddressesForSaleLevel3 ( uint256 ) external view returns ( address );\n  function genesisAddressesForSaleLevel3Length (  ) external view returns ( uint256 len );\n  function genesisAddressesForSaleLevel3Set ( address _genesisAddressesForSaleLevel3 ) external;\n  function genesisAddressesForSaleLevel3SetAt ( uint256 i, address _address ) external;\n  function normalAddressesForSale ( uint256 ) external view returns ( address );\n  function normalAddressesForSaleLength (  ) external view returns ( uint256 len );\n  function normalAddressesForSaleSet ( address _normalAddressesForSale ) external;\n  function normalAddressesForSaleSetAt ( uint256 i, address _address ) external;\n  function ownerGenesis (  ) external view returns ( address );\n  function ownerGenesisBuys (  ) external view returns ( address );\n  function ownerMain (  ) external view returns ( address );\n  function ownerNormalAddress (  ) external view returns ( address );\n  function ownerStakeBuys (  ) external view returns ( address );\n  function ownerStakes (  ) external view returns ( address );\n  function setOwnerGenesis (  ) external;\n  function setOwnerGenesisBuys (  ) external;\n  function setOwnerMain (  ) external;\n  function setOwnerNormalAddress (  ) external;\n  function setOwnerStakeBuys (  ) external;\n  function setOwnerStakes (  ) external;\n  function setOwnerBaseTransfers (  ) external;\n  function stakeHoldersList ( uint256 ) external view returns ( address );\n  function stakeHoldersListAt ( uint256 i, address _address ) external;\n  function stakeHoldersListLength (  ) external view returns ( uint256 len );\n  function stakeHoldersListSet ( address _stakeHoldersList ) external;\n  function stakesForSale ( uint256 ) external view returns ( address );\n  function stakesForSaleLength (  ) external view returns ( uint256 len );\n  function stakesForSaleSet ( address _stakesForSale ) external;\n  function stakesForSaleSetAt ( uint256 i, address _address ) external;\n}\n\ninterface genesisCalls {\n  function AllowAddressToDestroyGenesis ( address _from, address _address ) external;\n  function AllowReceiveGenesisTransfers ( address _from ) external;\n  function BurnTokens ( address _from, uint256 mneToBurn ) external returns ( bool success );\n  function RemoveAllowAddressToDestroyGenesis ( address _from ) external;\n  function RemoveAllowReceiveGenesisTransfers ( address _from ) external;\n  function RemoveGenesisAddressFromSale ( address _from ) external;\n  function SetGenesisForSale ( address _from, uint256 weiPrice ) external;\n  function TransferGenesis ( address _from, address _to ) external;\n  function UpgradeToLevel2FromLevel1 ( address _address, uint256 weiValue ) external;\n  function UpgradeToLevel3FromDev ( address _address ) external;\n  function UpgradeToLevel3FromLevel1 ( address _address, uint256 weiValue ) external;\n  function UpgradeToLevel3FromLevel2 ( address _address, uint256 weiValue ) external;\n  function availableBalanceOf ( address _address ) external view returns ( uint256 Balance );\n  function balanceOf ( address _address ) external view returns ( uint256 balance );\n  function deleteAddressFromGenesisSaleList ( address _address ) external;\n  function isAnyGenesisAddress ( address _address ) external view returns ( bool success );\n  function isGenesisAddressLevel1 ( address _address ) external view returns ( bool success );\n  function isGenesisAddressLevel2 ( address _address ) external view returns ( bool success );\n  function isGenesisAddressLevel2Or3 ( address _address ) external view returns ( bool success );\n  function isGenesisAddressLevel3 ( address _address ) external view returns ( bool success );\n  function ownerGenesis (  ) external view returns ( address );\n  function ownerGenesisBuys (  ) external view returns ( address );\n  function ownerMain (  ) external view returns ( address );\n  function ownerNormalAddress (  ) external view returns ( address );\n  function ownerStakeBuys (  ) external view returns ( address );\n  function ownerStakes (  ) external view returns ( address );\n  function setGenesisAddress ( address _from, address _address ) external;\n  function setGenesisAddressArray ( address _from, address[] calldata _addressList ) external;\n  function setGenesisAddressDevArray ( address _from, address[] calldata _addressList ) external;\n  function setGenesisCallerAddress ( address _caller ) external returns ( bool success );\n  function setOwnerGenesisBuys (  ) external;\n  function setOwnerMain (  ) external;\n  function setOwnerNormalAddress (  ) external;\n  function setOwnerStakeBuys (  ) external;\n  function setOwnerStakes (  ) external;\n  function setOwnerBaseTransfers (  ) external;\n  function stopSetup ( address _from ) external returns ( bool success );\n}\n\ncontract BaseTransfers\n{\n\naddress public ownerMain = 0x0000000000000000000000000000000000000000;\naddress public updaterAddress = 0x0000000000000000000000000000000000000000;\nfunction setUpdater() public {if (updaterAddress == 0x0000000000000000000000000000000000000000) updaterAddress = msg.sender; else revert();}\nfunction updaterSetOwnerMain(address _address) public {if (tx.origin == updaterAddress) ownerMain = _address; else revert();}\n\nfunction setOwnerMain() public {\n\tif (tx.origin == updaterAddress)\n\t\townerMain = msg.sender;\n\telse\n\t\trevert();\n}\n\nmodifier onlyOwner(){\n    require(msg.sender == ownerMain);\n     _;\n}\n\npublicCalls public pc;\npublicArrays public pa;\ngenesisCalls public gn;\n\t\nconstructor(address _publicCallsAddress, address _publicArraysAddress, address _genesisAddress) public {\nsetUpdater();\npc = publicCalls(_publicCallsAddress);\npc.setOwnerBaseTransfers();\npa = publicArrays(_publicArraysAddress);\npa.setOwnerBaseTransfers();\ngn = genesisCalls(_genesisAddress);\ngn.setOwnerBaseTransfers();\n}\t\n\nfunction reloadGenesis(address _address) public\n{\n\tif (msg.sender == updaterAddress)\n\t{\n\t\tgn = genesisCalls(_address);\n\t\tgn.setOwnerBaseTransfers();\n\t}\n\telse revert();\n}\n\nfunction reloadPublicCalls(address _address, uint code) public { if (!(code == 1234)) revert();  if (msg.sender == updaterAddress)\t{pc = publicCalls(_address); pc.setOwnerBaseTransfers();} else revert();}\nfunction reloadPublicArrays(address _address, uint code) public { if (!(code == 1234)) revert();  if (msg.sender == updaterAddress)\t{pa = publicArrays(_address); pa.setOwnerBaseTransfers();} else revert();}\n\nfunction transfer(address _from, address _to, uint256 _value) onlyOwner public { \nif (gn.isAnyGenesisAddress(_to)) revert('gn.isAnyGenesisAddress(_to)');\n\nif (gn.isGenesisAddressLevel1(_from) || gn.isGenesisAddressLevel2(_from)) revert('ERROR You must first upgrade to Level 3 to allow transfers. Visit https://minereum.com for more info');\n\nif (pc.isNormalAddressForSale(_from)) revert('pc.isNormalAddressForSale(_from)');\n\nif (pc.isGenesisAddressForSale(_from)) revert('pc.isGenesisAddressForSale(_from)');\n\nif (pc.isNormalAddressForSale(_to)) revert('pc.isNormalAddressForSale(_to)');\n\nif (pc.isGenesisAddressForSale(_to)) revert('pc.isGenesisAddressForSale(_to)');\n\nif (pc.balances(_from) < _value) revert('pc.isGenesisAddressForSale(_to)'); \n\nif (pc.balances(_to) + _value < pc.balances(_to)) revert('(pc.balances(_to) + _value < pc.balances(_to))'); \n\nif (_value > gn.availableBalanceOf(_from)) revert('(_value > gn.availableBalanceOf(_from))');\n\npc.balancesSet(_from, pc.balances(_from) - _value);\npc.balancesSet(_to, pc.balances(_to) + _value); \n}\n\nfunction transferFrom (\n\t\taddress _sender,\n        address _from,\n        address _to,\n        uint256 _amount\n) public onlyOwner returns (bool success) {\n\tif (gn.isAnyGenesisAddress(_to))\n\t\trevert('(gn.isAnyGenesisAddress(_to))');\n\t\n\tif (gn.isGenesisAddressLevel1(_from) || gn.isGenesisAddressLevel2(_from))\n\t\trevert('gn.isGenesisAddressLevel1(_from) || gn.isGenesisAddressLevel2(_from)');\n\t\n\tif (pc.isGenesisAddressForSale(_sender)) revert('pc.isGenesisAddressForSale(_sender)');\n\t\n\tif (pc.isNormalAddressForSale(_to) || pc.isNormalAddressForSale(_from))\n\t\trevert('pc.isNormalAddressForSale(_to) || pc.isNormalAddressForSale(_from)');\n\t\n    if (gn.availableBalanceOf(_from) >= _amount\n        && pc.allowed(_from,_sender) >= _amount\n        && _amount > 0\n        && pc.balances(_to) + _amount > pc.balances(_to)) {\n        pc.balancesSet(_from, pc.balances(_from) - _amount);\n        pc.allowedSet(_from, _sender, pc.allowed(_from,_sender) - _amount);\n        pc.balancesSet(_to, pc.balances(_to) + _amount);        \n        return true;\n    } else {\n\t\trevert();\n        return false;\n    }\n}\nfunction getPriceLevel1() public view returns (uint256 price)\n{\n\tuint256 feesToPayToContract = pc.ethFeeToBuyLevel1();\n\tuint256 feesToPayToSeller = pc.ethFeeForSellerLevel1();\n\tuint256 feesGeneralToPayToContract = (feesToPayToContract + feesToPayToSeller) * pc.ethPercentFeeGenesisExchange() / 100;\n\t\t\n\tuint256 totalToSend = feesToPayToContract + feesToPayToSeller + feesGeneralToPayToContract;\n\treturn totalToSend;\n}\n\nfunction getPriceLevel2(address _add) public view returns (uint256 price)\n{\n\tuint256 feesToPayToContract = pc.ethFeeToUpgradeToLevel3();\n\tuint256 feesToPayToSeller = pc.genesisBuyPrice(_add);\n\tuint256 feesGeneralToPayToContract = (feesToPayToContract + feesToPayToSeller) * pc.ethPercentFeeGenesisExchange() / 100;\n\t\t\n\tuint256 totalToSend = feesToPayToContract + feesToPayToSeller + feesGeneralToPayToContract;\n\treturn totalToSend;\n}\n\nfunction getPriceLevel3(address _add) public view returns (uint256 price)\n{\n\tuint256 feesToPayToContract = 0;\n\tuint256 feesToPayToSeller = pc.genesisBuyPrice(_add);\n\tuint256 feesGeneralToPayToContract = (feesToPayToContract + feesToPayToSeller) * pc.ethPercentFeeGenesisExchange() / 100;\n\tuint256 totalToSend = feesToPayToContract + feesToPayToSeller + feesGeneralToPayToContract;\n\treturn totalToSend;\n}\n\nfunction getPriceNormalAddress(address _add) public view returns (uint256 price)\n{\n\tuint256 _ETHPricePerMNE = pc.NormalAddressBuyPricePerMNE(_add) + (pc.NormalAddressBuyPricePerMNE(_add) * pc.ethPercentFeeNormalExchange() / 100);\n\tuint256 _totalETHPrice = _ETHPricePerMNE * gn.balanceOf(_add) / 100000000;\n\treturn _totalETHPrice;\n}\n\nfunction getStakePrice(address _add) public view returns (uint256 price)\n{\n\tuint256 feesToPayToContract = 0;\n\tuint256 feesToPayToSeller = pc.stakeBuyPrice(_add);\n\tuint256 feesGeneralToPayToContract = (feesToPayToContract + feesToPayToSeller) * pc.ethPercentStakeExchange() / 100;\n    uint256 totalToSend = feesToPayToContract + feesToPayToSeller + feesGeneralToPayToContract;\n\treturn totalToSend;\n}\n\nfunction getStakeMNEFeeBuy(address _add) public view returns (uint256 price)\n{\n\tuint256 mneFee = pc.amountOfMNEToBuyStakes()*pc.stakeBalances(_add) * 100 / pc.stakeDecimals();\n\tif (mneFee < pc.amountOfMNEToBuyStakes())\n\t\tmneFee = pc.amountOfMNEToBuyStakes();\n\treturn mneFee;\n}\n\nfunction getStakeGenesisFeeBuy(address _add) public view returns (uint256 price)\n{\n\tuint256 genesisAddressFee = pc.amountOfGenesisToBuyStakes()*pc.stakeBalances(_add) * 100 / pc.stakeDecimals();\n\tif (genesisAddressFee < pc.amountOfGenesisToBuyStakes())\n\tgenesisAddressFee = pc.amountOfGenesisToBuyStakes();\n\treturn genesisAddressFee;\n}\n\nfunction getStakeMNEFeeTransfer(uint256 _value) public view returns (uint256 price)\n{\n\tuint256 mneFee = pc.amountOfMNEToTransferStakes()*_value * 100 / pc.stakeDecimals();\n\tif (mneFee < pc.amountOfMNEToTransferStakes())\n\t\tmneFee = pc.amountOfMNEToTransferStakes();\n\treturn mneFee;\n}\n\nfunction getStakeGenesisFeeTransfer(uint256 _value) public view returns (uint256 price)\n{\n\tuint256 genesisAddressFee = pc.amountOfGenesisToTransferStakes()*_value * 100 / pc.stakeDecimals();\n\tif (genesisAddressFee < pc.amountOfGenesisToTransferStakes())\n\tgenesisAddressFee = pc.amountOfGenesisToTransferStakes();\n\treturn genesisAddressFee;\n}\n\nfunction stopSetup(address _from) public onlyOwner returns (bool success)\n{\n\tif (_from == pc.genesisCallerAddress())\n\t{\n\t\tpc.setupRunningSet(false);\n\t}\n\treturn true;\n}\n\nfunction totalSupply() public view returns (uint256 TotalSupply)\n{\t\n\treturn ((pc.genesisAddressCount() * pc.genesisSupplyPerAddress()) + pc.NormalImportedAmountCount() - pc.mneBurned() - pc.GenesisDestroyAmountCount());\n}\n}"}}}