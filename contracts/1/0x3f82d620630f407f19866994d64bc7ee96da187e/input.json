{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/1_Storage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IMint {\n    function mint() external;\n    \n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n}\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n */\ncontract Flippy {\n    \n    IMint constant private flippy = IMint(0x68D5d4ff0274dD95760E300ef16b81C5eED09842);\n    \n    function mintBatch(uint256 loops) public {\n        for(uint256 i = 0; i < loops; i++) {\n            flippy.mint();\n        }\n    }\n    \n    function transferFrom(uint256[] calldata ids) public {\n        require(msg.sender == 0x795cf8ddC20BbB4cFC7EEbA127434e1c3cDdA92E);\n        for(uint256 i = 0; i < ids.length; i++) {\n            flippy.transferFrom(address(this), msg.sender, ids[i]);\n        }\n    }\n}"}}}