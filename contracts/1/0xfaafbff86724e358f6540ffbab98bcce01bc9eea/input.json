{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/Untitled2.sol": {
      "content": "pragma solidity ^0.6.1;\n\ninterface Staking {\n  function AddressBonus ( address ) external view returns ( uint256 );\n  function AddressBonusGet ( address _address ) external view returns ( uint256 );\n  function AmountMNESent ( address _address, bool _excludeCurrent, bool _currentOnly ) external view returns ( uint256 );\n  function AmountToPayBonus ( address _address ) external view returns ( uint256 );\n  function AmountToPayStaking ( address _address, bool _checkID, uint256 i, bool _excludeCurrent, bool _currentOnly ) external view returns ( uint256 );\n  function Bonus ( address, uint256 ) external view returns ( uint256 );\n  function BonusAmount ( address, uint256 ) external view returns ( uint256 );\n  function BonusAmountGet ( address _address ) external view returns ( uint256[] memory);\n  function BonusAmountGetAt ( address _address, uint256 i ) external view returns ( uint256 );\n  function BonusAmountLength ( address _address ) external view returns ( uint256 );\n  function BonusDay ( address, uint256 ) external view returns ( uint256 );\n  function BonusDayGet ( address _address ) external view returns ( uint256[] memory);\n  function BonusDayGetAt ( address _address, uint256 i ) external view returns ( uint256 );\n  function BonusDayLength ( address _address ) external view returns ( uint256 );\n  function BonusFrom ( address, uint256 ) external view returns ( address );\n  function BonusFromGet ( address _address ) external view returns ( address[] memory);\n  function BonusFromGetAt ( address _address, uint256 i ) external view returns ( address );\n  function BonusFromLength ( address _address ) external view returns ( uint256 );\n  function BonusGet ( address _address ) external view returns ( uint256[] memory);\n  function BonusGetAt ( address _address, uint256 i ) external view returns ( uint256 );\n  function BonusLength ( address _address ) external view returns ( uint256 );\n  function BonusPaid ( address ) external view returns ( bool );\n  function BonusPaidGet ( address _address ) external view returns ( bool );\n  function DateBonusPayoutPossible ( address _address ) external view returns ( uint256 );\n  function DateStakingPayoutPossible ( address _address ) external view returns ( uint256 );\n  function FillMaxInterestRate1 (  ) external;\n  function FillMaxInterestRate2 (  ) external;\n  function GetCurrentDay (  ) external view returns ( uint256 );\n  function PayoutAllStaking ( address _address ) external;\n  function PayoutBonus ( address _address ) external;\n  function PayoutStaking ( uint256 i, address _address ) external;\n  function StakingPaid ( address, uint256 ) external view returns ( bool );\n  function StakingPaidGet ( address _address ) external view returns ( bool[] memory);\n  function StakingPaidGetAt ( address _address, uint256 i ) external view returns ( bool );\n  function StakingPaidLength ( address _address ) external view returns ( uint256 );\n  function TransferAllFundsOut ( address _address, uint256 _amount ) external;\n  function blockPayouts (  ) external view returns ( bool );\n  function blockStaking (  ) external view returns ( bool );\n  function bonusAddress ( uint256 ) external view returns ( address );\n  function bonusAddressLength (  ) external view returns ( uint256 );\n  function contingency (  ) external view returns ( uint256 );\n  function daysParticipated ( address, uint256 ) external view returns ( uint256 );\n  function daysParticipatedGet ( address _address ) external view returns ( uint256[] memory);\n  function daysParticipatedGetAt ( address _address, uint256 i ) external view returns ( uint256 );\n  function daysParticipatedLength ( address _address ) external view returns ( uint256 );\n  function external1 (  ) external view returns ( address );\n  function gn (  ) external view returns ( address );\n  function maxInterestRate ( uint256 ) external view returns ( uint256 );\n  function maxInterestRateLength (  ) external view returns ( uint256 );\n  function mneContract (  ) external view returns ( address );\n  function mnePerDay ( uint256 ) external view returns ( uint256 );\n  function mnePerDayLength (  ) external view returns ( uint256 );\n  function mneSentPerDay ( address, uint256 ) external view returns ( uint256 );\n  function mneSentPerDayGet ( address _address ) external view returns ( uint256[] memory);\n  function mneSentPerDayGetAt ( address _address, uint256 i ) external view returns ( uint256 );\n  function mneSentPerDayLength ( address _address ) external view returns ( uint256 );\n  function newBonusCoins (  ) external view returns ( uint256 );\n  function newStakingCoins (  ) external view returns ( uint256 );\n  function overallBonus (  ) external view returns ( uint256 );\n  function overallMNEStaking (  ) external view returns ( uint256 );\n  function paidStakingCoins (  ) external view returns ( uint256 );\n  function participatedAddress ( uint256 ) external view returns ( address );\n  function participatedAddressLength (  ) external view returns ( uint256 );\n  function pc (  ) external view returns ( address );\n  function referralRate (  ) external view returns ( uint256 );\n  function referrerRateLevel2 (  ) external view returns ( uint256 );\n  function referrerRateLevel3 (  ) external view returns ( uint256 );\n  function referrerRateNormal (  ) external view returns ( uint256 );\n  function referrerRateShare (  ) external view returns ( uint256 );\n  function setUpdater (  ) external;\n  function startDate (  ) external view returns ( uint256 );\n  function startStaking ( address _sender, uint256 _amountToStake, address[] calldata _addressList, uint256[] calldata uintList ) external;\n  function updateExternal1 ( address _address ) external;\n  function updateGenesis ( address _address ) external;\n  function updateMneContract ( address _address ) external;\n  function updatePublicCalls ( address _address ) external;\n  function updateStartDate ( uint256 _startDate ) external;\n  function updateVars ( bool _blockPayouts, bool _blockStaking, uint256 _referralRate, uint256 _referrerRateNormal, uint256 _referrerRateLevel2, uint256 _referrerRateLevel3, uint256 _referrerRateShare, uint256 _contingency ) external;\n  function updaterAddress (  ) external view returns ( address );\n}\n\n\ncontract MinereumStakingHelperCurrent\n{\n\nStaking sk;\n\nconstructor() public\n{\n\tsk = Staking(0xCb2Aee9A6dAC92c1076f642FE4f2c9bcFFc81D9e);\n}\n\n\nfunction AmountMNESentCurrent(address _address) public view returns (uint256)\n{\n\tif (sk.mneSentPerDayLength(_address) == 0) return 0;\n\t\n\tuint currentDay = sk.GetCurrentDay();\n\t\n\tuint _currentDay = sk.daysParticipatedGetAt(_address, sk.daysParticipatedLength(_address) - 1);\n\t\n\tuint lasti = sk.daysParticipatedLength(_address) - 1;\n\t\n\tif (_currentDay == currentDay)\n\t{\t\t\n\t\treturn sk.mneSentPerDayGetAt(_address, lasti);\n\t}\n\t\n\treturn 0;\n}\n\nfunction AmountToPayStakingCurrent(address _address) public view returns (uint256)\n{\n\tif (sk.daysParticipatedLength(_address) == 0) return 0;\n\t\n\tuint currentDay = sk.GetCurrentDay();\n\t\n\tuint _currentDay = sk.daysParticipatedGetAt(_address, sk.daysParticipatedLength(_address) - 1);\n\tuint lasti = sk.daysParticipatedLength(_address) - 1;\n\t\n\tif (_currentDay == currentDay)\n\t{\t\t\t\n\t\tuint interestRateToPay = sk.mneSentPerDayGetAt(_address, lasti) * sk.maxInterestRate(sk.daysParticipatedGetAt(_address, lasti)) * 1000000000000000 / sk.mnePerDay(sk.daysParticipatedGetAt(_address, lasti));\n\t\tuint coinsToMint = sk.mneSentPerDayGetAt(_address, lasti) * interestRateToPay / 1000000000000000 / 100;\n\t\tuint amountToPay = sk.mneSentPerDayGetAt(_address, lasti) + coinsToMint;\n\t\treturn amountToPay;\t\t\t\t\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\t\t\n}\n\nfunction AmountToPayStakingOverall(address _address) public view returns (uint256)\n{\n\tuint currentDay = sk.GetCurrentDay();\n\tuint j = 0;\n\tuint finalAmount = 0;\n\twhile (j < sk.mneSentPerDayLength(_address))\n\t{\n\t\tif ((sk.daysParticipatedGetAt(_address, j) == currentDay)) break;\n\t\tif (!sk.StakingPaidGetAt(_address, j))\n\t\t{\n\t\t\tuint interestRateToPay = sk.mneSentPerDayGetAt(_address, j) * sk.maxInterestRate(sk.daysParticipatedGetAt(_address,j)) * 1000000000000000 / sk.mnePerDay(sk.daysParticipatedGetAt(_address, j));\n\t\t\tuint coinsToMint = sk.mneSentPerDayGetAt(_address, j) * interestRateToPay / 1000000000000000 / 100;\n\t\t\tuint amountToPay = sk.mneSentPerDayGetAt(_address, j) + coinsToMint;\n\t\t\tfinalAmount += amountToPay;\n\t\t}\n\t\tj++;\n\t}\n\treturn finalAmount;\n}\n}"
    }
  }
}