{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "MGC SPLIT CONTRACT.sol": {
      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ncontract MGCBank {\n    address payable public _team;\n    address payable public _mktg;\n\n    constructor (address payable Team, address payable Mktg) {\n        _team = Team;\n        _mktg = Mktg;\n    }\n\n    receive() external payable {}\n    \n    function disburse() external {\n        require(msg.sender == _team || msg.sender == _mktg, \"Nice Try!\");\n        disperseEth();\n    }\n    \n    function disperseEth() private {\n         uint256 BALANCE = address(this).balance;\n         uint256 THIRD = BALANCE / 3;\n         uint256 TWOOTH = BALANCE / 3 * 2;\n         payable(_mktg).transfer(THIRD);\n         payable(_team).transfer(TWOOTH);\n         \n    }\n}"
    }
  }
}