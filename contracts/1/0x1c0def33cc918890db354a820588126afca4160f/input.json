{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/CarrefourNew.sol": {
      "content": "pragma solidity ^0.6.4;\n\ncontract CarrefourFactory {\n    struct Lotto {\n        bytes codice_tracciabilita;\n        bytes id_allevatore;\n        bytes10 data_nascita_pulcino;\n        bytes10 data_trasferimento_allevamento;\n        bytes id_owner_informazione;\n    }\n\n    struct Articolo {\n        bytes lotto; // Here a synonym of \"codice_tracciabilita\"\n        bytes codice_articolo;\n        bytes10 data_produzione;\n        bytes10 data_scadenza;\n        bytes id_stabilimento;\n    }\n\n    address private owner;\n\n    mapping(bytes => Lotto) private lotti;\n    mapping(bytes => bool) private lotto_exist;\n    mapping(bytes32 => Articolo) private articoli;\n    mapping(bytes32 => bool) private articolo_exist;\n\n    event lottoAdded(bytes codice_tracciabilita);\n    event articoloAdded(\n        bytes lotto,\n        bytes codice_articolo,\n        bytes10 data_scadenza\n    );\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlymanager() {\n        require(msg.sender == owner, \"Member not allowed\");\n        _;\n    }\n\n    function createLotto(\n        bytes memory codice_tracciabilita,\n        bytes memory id_allevatore,\n        bytes10 data_nascita_pulcino,\n        bytes10 data_trasferimento_allevamento,\n        bytes memory id_owner_informazione\n    ) public onlymanager {\n        require(\n            lotto_exist[codice_tracciabilita] == false,\n            \"Il lotto è già presente\"\n        );\n        require(\n            codice_tracciabilita.length > 0,\n            \"Codice tracciabilità non valido\"\n        );\n        require(id_allevatore.length > 0, \"Codice allevatore non valido\");\n        require(data_nascita_pulcino.length > 0, \"Data di nascita non valida\");\n        require(\n            data_trasferimento_allevamento.length > 0,\n            \"Data trasferimento allevamento non valida\"\n        );\n\n        Lotto memory lotto_tmp;\n        lotto_tmp.codice_tracciabilita = codice_tracciabilita;\n        lotto_tmp.id_allevatore = id_allevatore;\n        lotto_tmp.data_nascita_pulcino = data_nascita_pulcino;\n        lotto_tmp\n            .data_trasferimento_allevamento = data_trasferimento_allevamento;\n        lotto_tmp.id_owner_informazione = id_owner_informazione;\n\n        lotti[codice_tracciabilita] = lotto_tmp;\n        lotto_exist[codice_tracciabilita] = true;\n\n        emit lottoAdded(codice_tracciabilita);\n    }\n\n    function get_dati_lotto(bytes memory codice_tracciabilita)\n        public\n        view\n        returns (\n            bytes memory,\n            bytes10,\n            bytes10,\n            bytes memory\n        )\n    {\n        require(\n            codice_tracciabilita.length > 0,\n            \"Il codice tracciabiltà è obbligatorio\"\n        );\n        require(\n            lotto_exist[codice_tracciabilita] == true,\n            \"Il lotto non è stato trovato\"\n        );\n\n        return (\n            lotti[codice_tracciabilita].id_allevatore,\n            lotti[codice_tracciabilita].data_nascita_pulcino,\n            lotti[codice_tracciabilita].data_trasferimento_allevamento,\n            lotti[codice_tracciabilita].id_owner_informazione\n        );\n    }\n\n\n    function createArticolo(\n        bytes memory _lotto, // Here a synonym of \"codice_tracciabilita\"\n        bytes memory _codice_articolo,\n        bytes10 _data_produzione,\n        bytes10 _data_scadenza,\n        bytes memory _id_stabilimento\n    ) public onlymanager {\n        \n        bytes32 _key;\n\n        _key = keccak256(abi.encodePacked(_lotto, _codice_articolo, _data_scadenza));\n        require(_lotto.length > 0, \"Codice tracciabilità vuoto\");\n        require(_codice_articolo.length > 0, \"Codice Art. vuoto\");\n        require(\n            articolo_exist[_key] == false,\n            \"L'articolo è già presente\"\n        );\n        require(_data_produzione.length > 0, \"Data produzione vuota\");\n        require(_data_scadenza.length > 0, \"Data scadenza vuota\");\n        require(_id_stabilimento.length > 0, \"ID stabilimento vuoto\");\n\n        Articolo memory articolo_tmp;\n        articolo_tmp.lotto = _lotto;\n        articolo_tmp.codice_articolo = _codice_articolo;\n        articolo_tmp.data_produzione = _data_produzione;\n        articolo_tmp.data_scadenza = _data_scadenza;\n        articolo_tmp.id_stabilimento = _id_stabilimento;\n        bytes32 key;\n        key = keccak256(abi.encodePacked(_lotto, _codice_articolo, _data_scadenza));\n\n        articoli[key] = articolo_tmp;\n        articolo_exist[key] = true;\n\n        emit articoloAdded(_lotto, _codice_articolo, _data_scadenza);\n    }\n\n    function get_dati_articolo(\n        bytes memory codice_tracciabilita,\n        bytes memory codice_articolo,\n        bytes10 data_scadenza\n    )\n        public\n        view\n        returns (\n            bytes10,\n            bytes memory,\n            bytes memory,\n            bytes10,\n            bytes10\n        )\n    {\n        bytes32 _key;\n        _key = keccak256(abi.encodePacked(codice_tracciabilita, codice_articolo,data_scadenza));\n        require(codice_tracciabilita.length > 0, \"Lotto non trovato\");\n        require(codice_articolo.length > 0, \"Codice articolo non trovato\");\n        require(data_scadenza.length > 0, \"Data Scadenza non trovata\");\n        require(\n            articolo_exist[_key] == true,\n            \"Articolo non trovato\"\n        );\n        bytes memory cod_lotto = articoli[_key].lotto;\n        Lotto memory lotto_tmp = lotti[cod_lotto];\n\n        return (\n            articoli[_key].data_produzione, // Here a synonym of \"codice_tracciabilita\"\n            articoli[_key].id_stabilimento,\n            lotto_tmp.id_allevatore,\n            lotto_tmp.data_nascita_pulcino,\n            lotto_tmp.data_trasferimento_allevamento\n        );\n    }\n}\n"
    }
  }
}