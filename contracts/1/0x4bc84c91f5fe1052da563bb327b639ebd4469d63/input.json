{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"DummyChainLinkAggregatorETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\n\r\npragma solidity 0.7.4;\r\n\r\n\r\ninterface AggregatorV3Interface {\r\n\r\n  function decimals() external view returns (uint8);\r\n  function description() external view returns (string memory);\r\n  function version() external view returns (uint256);\r\n\r\n  // getRoundData and latestRoundData should both raise \"No data present\"\r\n  // if they do not have data to report, instead of returning unset values\r\n  // which could be misinterpreted as actual reported values.\r\n  function getRoundData(uint80 _roundId)\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n}\r\n\r\ncontract DummyChainLinkAggregatorETH is AggregatorV3Interface {\r\n\r\n    AggregatorV3Interface public feedTokenETH;\r\n    AggregatorV3Interface public feedETHUSD;\r\n\r\n\r\n    constructor(address feedA, address feedB) {\r\n        feedTokenETH = AggregatorV3Interface(feedA);\r\n        feedETHUSD = AggregatorV3Interface(feedB);\r\n    }\r\n\r\n    function decimals() external view override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function description() external view override returns (string memory) {\r\n        return \"wow great description\";\r\n    }\r\n\r\n    function version() external view override returns (uint256) {\r\n        return 1;\r\n    }\r\n\r\n    function getRoundData(uint80 _roundId)\r\n        public\r\n        view\r\n        override\r\n        returns (\r\n          uint80 roundId,\r\n          int256 answer,\r\n          uint256 startedAt,\r\n          uint256 updatedAt,\r\n          uint80 answeredInRound\r\n        ){\r\n        return (0, 0, 0, 0, 0);\r\n    }\r\n\r\n    function latestRoundData()\r\n        public\r\n        view\r\n        override\r\n        returns (\r\n          uint80 roundId,\r\n          int256 answer,\r\n          uint256 startedAt,\r\n          uint256 updatedAt,\r\n          uint80 answeredInRound\r\n        ){\r\n        (, int priceTokenETH, , ,) = feedTokenETH.latestRoundData();\r\n        (, int priceETHUSD, , ,) = feedETHUSD.latestRoundData();\r\n        return (0, priceTokenETH * priceETHUSD, 0, 0, 0);\r\n    }\r\n\r\n\r\n}"}}}