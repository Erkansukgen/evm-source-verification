{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"StaticCallProxy.sol":{"content":"/**\n *Submitted for verification at Etherscan.io on 2021-06-29\n*/\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface IGauge {\n    function claimable_tokens(address) external view returns (uint256);\n    \n    function minter() external view returns (address);\n}\n\ninterface IGetter {\n    function getit() external view returns (address);\n}\n\ncontract Getter {\n    address constant gauge = 0xF98450B5602fa59CC66e1379DFfB6FDDc724CfC4;\n    function getit() external view returns (address) {\n        (bool success, bytes memory data) =\n            address(this).staticcall(\n                abi.encodeWithSignature('baff()')\n            );\n        return abi.decode(data, (address));\n    }\n    \n    function baff() external view returns (address) {\n        return IGauge(gauge).minter();\n    }\n}\n\nlibrary StaticCallProxy {\n    address constant gauge = address(0xF98450B5602fa59CC66e1379DFfB6FDDc724CfC4);\n    function minter() external view returns (address) {\n        return IGetter(0xE7eD6747FaC5360f88a2EFC03E00d25789F69291).getit();\n    }\n    \n    \n    function claimable() external view returns (uint256) {\n        return IGauge(gauge).claimable_tokens(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n    }    \n}\n\ncontract Test {\n        function minter() external view returns (address) {\n        return StaticCallProxy.minter();\n    }\n    \n    function claimable() external view returns (uint256) {\n        return StaticCallProxy.claimable();\n    }\n}"}}}