{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/chainMail-Tim.sol": {
      "content": "pragma solidity ^0.6.12;\npragma experimental ABIEncoderV2;\n\ncontract BlessingCircle{\n    \n    address payable owner;\n    \n    enum InvestmentCircle{\n        Circle1,\n        Circle2,\n        Circle3\n    }\n    \n    constructor() public {\n        owner = 0x0d16bc366220CF204F7b6986729F734f8F6ed08F;\n    }\n\n    function invest(bool _makePayment, address payable _reciepent) external payable{\n        if(msg.value == 0.1 ether){\n            uint256 adminFees = msg.value*5/100;\n            owner.transfer(adminFees);\n        }\n        else if(msg.value == 0.5 ether){\n            uint256 adminFees = msg.value*5/100;\n            owner.transfer(adminFees);\n        }\n        else if(msg.value == 1 ether){\n            uint256 adminFees = msg.value*5/100;\n            owner.transfer(adminFees);\n        }\n        else{\n            revert();\n        }\n        if(_makePayment){\n            if(msg.value == 0.1 ether){\n            _reciepent.transfer(0.7125 ether);\n        }\n            else if(msg.value == 0.5 ether){\n            _reciepent.transfer(3.5625 ether);\n        }\n            else if(msg.value == 1 ether){\n            _reciepent.transfer(7.125 ether);\n        }\n        else{\n            revert();\n        }\n        }\n        \n    }\n    \n    function balanceOf() external view returns (uint){\n        return address(this).balance;\n    }\n    \n}"
    }
  }
}