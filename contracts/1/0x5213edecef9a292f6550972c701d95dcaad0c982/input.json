{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/UniswapWrapper.sol": {
      "content": " // SPDX-License-Identifier: UNLICENCED\n\npragma solidity ^0.7.5;\n\n\ninterface UniSushi {\n     function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);\n    \n}\n\n\ncontract UniSushiWrapper {\n    \n    function execute(uint amount_in, address token_in, address token_out) external {\n        \n        address[] memory path;\n\n        path[0] = token_in;\n        path[1] = token_out;\n\n        UniSushi(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F).swapExactTokensForTokens(amount_in, 0, path, msg.sender, 3000000000); \n    }\n}"
    }
  }
}