{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Bitway.sol":{"content":"pragma solidity >=0.5.0 <0.7.0;\n\n// Â© BITWAY https://bitway.net\n\ncontract Bitway {\n    address public minter;\n    string public name;\n    string public symbol;\n    uint public decimals;\n    uint internal supply;\n    uint internal blocks;\n    uint internal target;\n\n    mapping (address => uint) internal balances;\n\n    event Transfer(address indexed sender, address indexed receiver, uint amount);\n\n    constructor() public {\n        minter = msg.sender;\n        name = \"Bitway\";\n        symbol = \"WAY\";\n        decimals = 18;\n        supply = 0;\n        blocks = 1000000 * 10**uint(decimals);\n        target = 21 * blocks;\n    }\n\n    function mint(address receiver, uint amount) public {\n        require(msg.sender == minter);\n        require(amount == blocks);\n        require(supply < target);\n        balances[receiver] += amount;\n        supply += amount;\n    }\n\n    function transfer(address receiver, uint amount) public {\n        require(amount <= balances[msg.sender]);\n        balances[msg.sender] -= amount;\n        balances[receiver] += amount;\n        emit Transfer(msg.sender, receiver, amount);\n    }\n\n    function balanceOf(address owner) public view returns (uint) {\n        return balances[owner];\n    }\n\n    function totalSupply() public view returns (uint) {\n        return supply;\n    }\n}"}}}