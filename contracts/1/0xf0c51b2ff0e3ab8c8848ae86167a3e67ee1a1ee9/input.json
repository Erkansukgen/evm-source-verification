{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"Collector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.6.0;\r\n\r\ninterface IERC20\r\n{\r\n\tfunction balanceOf(address _account) external view returns (uint256 _amount);\r\n\tfunction transfer(address _recipient, uint256 _amount) external returns (bool _success);\r\n}\r\n\r\ncontract BSCBridgeCollector\r\n{\r\n\taddress constant TREASURY = 0xc718E5a5b06ce7FEd722B128C0C0Eb9c5c902D92;\r\n\r\n\tfunction collectFunds(address _token) external\r\n\t{\r\n\t\trequire(msg.sender == TREASURY, \"access denied\");\r\n\t\tIERC20(_token).transfer(TREASURY, IERC20(_token).balanceOf(address(this)));\r\n\t}\r\n}\r\n"}}}