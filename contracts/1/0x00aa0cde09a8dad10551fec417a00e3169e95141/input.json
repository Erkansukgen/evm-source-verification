{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/Esempiodiarchiviazione.sol": {
      "content": "pragma solidity ^0.6.11;\n\ncontract Esempiodiarchiviazione\n{\n   struct Archiviapersempre\n   {\n       string MessaggioDallaBlockchain;\n   }\n   \n   address TitolareContratto;\n   \n   constructor() public\n   {\n    TitolareContratto = msg.sender;\n   }\n   \n   modifier sviluppatoreCapo()\n   {\n       if (msg.sender == TitolareContratto)\n       {\n           _;\n       }\n   }\n   Archiviapersempre[] public leggiBlockChain;\n   \n   function InserisciDati(string memory MessaggioDallaBlockchain_ ) public sviluppatoreCapo\n   {\n       leggiBlockChain.push(Archiviapersempre(MessaggioDallaBlockchain_));\n   }\n}"
    }
  }
}