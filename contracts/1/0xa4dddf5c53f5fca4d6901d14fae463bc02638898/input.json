{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/brightIDsponsor.sol": {
      "content": "pragma solidity ^0.6.4;\n\ncontract brightIDsponsor {\n\n event Sponsor(address);\n\n // sponsor any address that attempts to call a function other than sponsor() in this contract.\n fallback() external payable {\n  sponsor(msg.sender);\n }\n\n // sponsor any address that sends a transaction to this contract.\n receive() external payable {\n   sponsor(msg.sender);\n }\n\n // sponsor any address provided as a parameter.\n function sponsor(address add) public {\n   emit Sponsor(add);\n }\n}"
    }
  }
}