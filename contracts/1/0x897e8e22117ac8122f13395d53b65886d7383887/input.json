{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/FlashSnxLiq.sol": {
      "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"./ILiquidations.sol\";\n\ncontract FlashSnxLiq{\n    address public liquidationAddress = 0xAD95C918af576c82Df740878C3E983CBD175daB6;\n    address adrExecuteCon = 0xa0621AD9606E0B9efeAff2708189bFCFE186bf6E;\n    address adrExeMidCon = 0xC88385EBb8290D79739853c6C5EF92Ff7365b2B8;\n\n    function myFlashLoanCall(address account,uint256 amount) public {\n        require(ILiquidations(liquidationAddress).isLiquidationDeadlinePassed(account),'not pass');\n        adrExecuteCon.call(abi.encodeWithSelector(0x5e753867, amount, amount, account, adrExeMidCon));\n    }\n}"
    },
    "contracts/ILiquidations.sol": {
      "content": "pragma solidity ^0.6.12;\r\n\r\ninterface ILiquidations {\r\n    // Views\r\n    function isOpenForLiquidation(address account) external view returns (bool);\r\n\r\n    function getLiquidationDeadlineForAccount(address account) external view returns (uint);\r\n\r\n    function isLiquidationDeadlinePassed(address account) external view returns (bool);\r\n\r\n    function liquidationDelay() external view returns (uint);\r\n\r\n    function liquidationRatio() external view returns (uint);\r\n\r\n    function liquidationPenalty() external view returns (uint);\r\n\r\n    function calculateAmountToFixCollateral(uint debtBalance, uint collateral) external view returns (uint);\r\n\r\n    // Mutative Functions\r\n    function flagAccountForLiquidation(address account) external;\r\n\r\n    // Restricted: used internally to Synthetix\r\n    function removeAccountInLiquidation(address account) external;\r\n\r\n    function checkAndRemoveAccountInLiquidation(address account) external;\r\n}\r\n"
    }
  }
}