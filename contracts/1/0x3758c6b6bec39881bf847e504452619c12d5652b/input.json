{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/UniswapWrapper.sol":{"content":" // SPDX-License-Identifier: UNLICENCED\n\npragma solidity ^0.7.5;\n\n\ninterface UniSushi {\n     function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);\n    \n}\n\ninterface ERC20 {\n    function approve(address _spender, uint256 _value) external returns (bool success);\n}\n\n\ncontract UniSushiWrapper_intermediary {\n    \n    constructor() {\n        ERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2).approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, 1e77);\n        ERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F).approve(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, 1e77);\n    }\n    \n    function execute(uint256 amount_in, address token_in, address token_out) public {\n        \n        address[] memory path = new address[](2);\n\n        path[0] = token_in;\n        path[1] = token_out;\n\n        UniSushi(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D).swapExactTokensForTokens(amount_in, 0, path, msg.sender, 3000000000); \n    }\n}\n"}}}