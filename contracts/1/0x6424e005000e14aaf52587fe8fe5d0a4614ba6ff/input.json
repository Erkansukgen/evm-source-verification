{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/PDC.sol":{"content":"pragma solidity ^0.6.1;\n\n      contract PDC {\n          string  public name = \"Pin Duo Coin\";\n          string  public symbol = \"PDC\";\n          uint8 public decimals = 8;\n          uint256 public totalSupply;\n\n          event Transfer(address indexed _from, address indexed _to, uint256 _value);\n          event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n          mapping(address => uint256) public balanceOf;\n          mapping(address => mapping(address => uint256)) public allowance;\n\n          constructor() public {\n            totalSupply = 1000000000 * 10 ** uint(decimals);\n            balanceOf[msg.sender] = totalSupply;\n          }\n\n          function balances(address _owner) public view returns (uint256 balance) {\n              return balanceOf[_owner];\n          }\n\n          function ERCME (uint256 _initialSupply) public {\n              balanceOf[msg.sender] = _initialSupply;\n              totalSupply = _initialSupply;\n          }\n\n          function transfer(address _to, uint256 _value) public returns (bool success) {\n              require(balanceOf[msg.sender] >= _value);\n              balanceOf[msg.sender] -= _value;\n              balanceOf[_to] += _value;\n              emit Transfer(msg.sender, _to, _value);\n              return true;\n          }\n\n          function approve(address _spender, uint256 _value) public returns (bool success) {\n              allowance[msg.sender][_spender] = _value;\n              emit Approval(msg.sender, _spender, _value);\n              return true;\n          }\n\n          function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n              require(_value <= balanceOf[_from]);\n              require(_value <= allowance[_from][msg.sender]);\n              balanceOf[_from] -= _value;\n              balanceOf[_to] += _value;\n              allowance[_from][msg.sender] -= _value;\n              emit Transfer(_from, _to, _value);\n              return true;\n          }\n      }"}}}