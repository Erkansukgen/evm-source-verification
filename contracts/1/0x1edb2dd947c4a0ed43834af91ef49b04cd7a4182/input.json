{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"gamebreaker.sol":{"content":"pragma solidity ^0.8.2;\npragma experimental ABIEncoderV2;\n\n//SPDX-License-Identifier: UNLICENSED\n\ncontract Gamebreaker {\n    event LastBlockTimestamp(uint blockTimestamp, uint blockDifficulty, uint blockGasLimit);\n    event LastBlockHash(bytes32 blockHash);\n    \n    function Gamebreak() public {\n        uint blockTimestamp = block.timestamp;\n        uint blockDifficulty = block.difficulty;\n        uint blockGasLimit = block.gaslimit;\n        uint blockNumber = block.number;\n        bytes32 blockHash = blockhash(blockNumber);\n        bytes32 previousBlockHash = blockhash(blockNumber-1);\n        emit LastBlockTimestamp(blockTimestamp, blockDifficulty, blockGasLimit);\n        emit LastBlockHash(blockHash);\n        emit LastBlockHash(previousBlockHash);\n    }\n}"}}}