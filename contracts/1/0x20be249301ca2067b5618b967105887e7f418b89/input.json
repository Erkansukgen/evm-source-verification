{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/PNN.sol": {
      "content": "pragma solidity >=0.4.22 <0.7.0;\n\n/**\n * @title Owner\n * @dev Set & change owner\n */\ncontract PNN {\n    \n        \n    string name = \"PNN\";\n    \n    constructor() public {\n        balance[msg.sender] = 100e18;\n    }\n    \n    mapping(address => uint256) balance;\n    \n    function transfer(address to, uint256 value) public {\n        require(to != address(0), \"oops, trying to send to zero address\");\n        require(balance[msg.sender] >= value, \"not enough balance\");\n        balance[msg.sender] = balance[msg.sender] - value;\n        balance[to] =  balance[to] + value;\n    }\n    \n    function balanceOf(address _of) public view returns (uint256) {\n        return balance[_of];\n    }\n    \n    function getName() public view returns (string memory){\n        return name;\n    }\n    \n    function standsFor() public pure returns (string memory){\n        return \"PNN stands for Phil, Nicholas, Nicholas.\";\n    }\n}\n"
    }
  }
}