{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/Balance.sol": {
      "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract BalanceChecker {\n    struct Balance {\n        address wallet;\n        uint256 balance;\n    }\n    \n    function getBalance(address[] memory wallets) external view returns (Balance[] memory){\n        Balance[] memory balances;\n        \n        for (uint i; i < wallets.length; i++) {\n            address payable wallet = payable(wallets[i]);\n            balances[i] = Balance(\n                wallet, \n                wallet.balance\n            );\n        }\n        \n        return balances;\n    }\n}"
    }
  }
}