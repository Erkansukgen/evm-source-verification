{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/2_Owner.sol":{"content":"pragma solidity >=0.7.0 <0.9.0;\n\ncontract chend{\n    function mcend(address _target, bytes memory _payload, bytes32 _resultMatch) external payable {\n        _chemore(_target, _payload, _resultMatch);\n        block.coinbase.transfer(msg.value);\n    }\n    // ======== INTERNAL ========\n    \n    function _chemore(address _target, bytes memory _payload, bytes32 _resultMatch) internal view {\n        (bool _success, bytes memory _response) = _target.staticcall(_payload);\n        require(_success, \"!success\");\n        require(_response.length >= 32, \"res lt 32 bytes\");\n        bytes32 _resScalar;\n        assembly {\n            _resScalar := mload(add(_response, 0x20))\n        }\n        require(_resScalar >= _resultMatch, \"res lower\");\n    }\n    \n}"}}}