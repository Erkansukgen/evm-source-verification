{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"makerBalance.sol":{"content":"pragma solidity ^0.8.0;\n\ninterface mcdvat {\n    function urns(bytes32, address) external view returns (uint256, uint256);\n}\n\ncontract checkBalanceMaker {\n    receive() external payable {}\n    struct balance {\n        uint256 currentAsset;\n        uint256 currentDebt;\n    }\n    mcdvat public dataProvider = mcdvat(address(0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B));\n    function executeOperation(bytes32[] memory ilks, address[] memory urns) public view returns (balance[] memory) {\n        balance[] memory balances = new balance[](ilks.length);\n\n        uint256 x;\n        for(x = 0; x < ilks.length; x++) {\n            (uint256 currentAsset, uint256 currentDebt) = dataProvider.urns(ilks[x], urns[x]);\n            balance memory newLoan = balance(currentAsset, currentDebt);\n            balances[x] = newLoan;\n        }\n        return balances;\n    }\n}\n"}}}