{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/Create2Factory.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\ncontract Create2Factory {\r\n  \r\n  address private constant owner = 0xfda123b830A46e7C235d2E383aA3536DDC7564A3;\r\n  \r\n  function deploy(\r\n    bytes32 salt,\r\n    bytes memory initializationCode\r\n  ) external payable {\r\n    require(owner == msg.sender);\r\n    assembly {\r\n      let addr := create2(                    // call CREATE2 with 4 arguments.\r\n        callvalue(),                          // forward any attached value.\r\n        add(0x20, initializationCode),        // pass in initialization code.\r\n        mload(initializationCode),            // pass in init code's length.\r\n        salt                                  // pass in the salt value.\r\n      )\r\n      if iszero(extcodesize(addr)) {\r\n        revert(0, 0)\r\n      }\r\n    }\r\n  }\r\n  \r\n}\r\n"
    }
  }
}