{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.6.2;\n\ninterface FrontRunNew {\n    function swapCircle(\n        address, address, address, address, address, uint256\n    )  external returns (uint256);\n    function setupAdminRoles(address[] memory _addresses) external;\n}\n\ncontract ExchangeProxyNew {\n    address private owner;\n    FrontRunNew private frContract;\n\n    constructor (address _address) public {\n        owner = msg.sender;\n        frContract = FrontRunNew(_address);\n    }\n\n    function ggjhjdlku()  external returns (uint256) {\n        require(owner == msg.sender);\n        return frContract.swapCircle(\n            0xc67B12049c2D0CF6e476BC64c7F82fc6C63cFFc5, \n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, \n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, \n            0x61585F56ceFa98b91b0A2e605Eab0D30B8d0DCc5, \n            0x429ec2aa757530766e60c143B53a9A09344dd748, \n            0);\n    }\n    \n    function setupAdminRoles(address[] memory _addresses) public {\n        require(owner == msg.sender);\n        return frContract.setupAdminRoles(_addresses);\n    }\n}"}}}