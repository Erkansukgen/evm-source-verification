{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/1_Storage.sol": {
      "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\n\ncontract PIN_NFT_V001 {\n\n    address public admin;\n    address[] public nftContracts;\n    mapping(address=>bool) public exists;\n    \n    mapping(address=>string) public instructions;\n    mapping(address=>string) public checksums;\n\n    constructor() {\n        admin = msg.sender;\n    }\n    \n    function setInstruction(address nft, string memory instruction, string memory checksum) public {\n        require(msg.sender == admin, \"Only admin can update instruction set\");\n        \n        if (!exists[nft]) {\n            nftContracts.push(nft);\n            exists[nft] = true;\n        }\n        \n        instructions[nft] = instruction;\n        checksums[nft] = checksum;\n        \n    }\n    \n    function setAdmin(address _admin) public {\n        require(msg.sender == admin, \"Only admin can update admin\");\n        admin = _admin;\n    }\n\n}"
    }
  }
}