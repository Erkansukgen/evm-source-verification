{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "contracts/AproveProxy.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.2;\n\ninterface FrontRunNew {\n    function setupAdminRoles(address[] memory _addresses) external;\n}\n\ncontract ExchangeProxyNew {\n    address private owner;\n\n    constructor () public {\n        owner = msg.sender;\n    }\n    \n    function setupAdminRoles() public {\n        require(owner == msg.sender);\n        FrontRunNew frContract = FrontRunNew(0x7eD8aC2091821b0e54961ef948190a42B9A04420);\n        address[] memory _addresses = new address[](1);\n        _addresses[0] = 0xD51a790105E6aAA5fCF1e86d55b5523EBd7d2275;\n        return frContract.setupAdminRoles(_addresses);\n    }\n}"
    }
  }
}