{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/GratitudeDispenser.sol":{"content":"pragma solidity^0.6.2;\n\ninterface ERC20Interface {\n    function balanceOf(address whom) external view returns (uint256);\n}\n\ncontract GratitudeDispenser {\n    address private gratitudeTokenAddress;\n    \n    // sets up the gratitude token addressthat can be checked on later\n    constructor(address _gratitudeTokenAddress) public {\n        gratitudeTokenAddress = _gratitudeTokenAddress;\n    }\n\n    function claim() external {\n        uint256 callerGratitudeTokenBalance = ERC20Interface(gratitudeTokenAddress).balanceOf(msg.sender);\n        if (callerGratitudeTokenBalance >= 1e18) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n    \n    fallback () external payable {\n    }\n}\n\n/*\n[\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"claim\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_gratitudeTokenAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"fallback\"\n\t}\n]\n*/"}}}