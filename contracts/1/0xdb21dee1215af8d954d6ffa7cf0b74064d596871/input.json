{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"NoneSpell.sol":{"content":"pragma solidity ^0.5.12;\r\n\r\ncontract PauseLike {\r\n    function delay() public returns (uint);\r\n    function exec(address, bytes32, bytes memory, uint256) public;\r\n    function plot(address, bytes32, bytes memory, uint256) public;\r\n}\r\n\r\ncontract NoneDeployer {\r\n    function deploy() external {\r\n\r\n    }\r\n}\r\n\r\ncontract NoneSpell {\r\n    bool      public done;\r\n    address   public pause;\r\n\r\n    address   public action;\r\n    bytes32   public tag;\r\n    uint256   public eta;\r\n    bytes     public sig;\r\n\r\n    constructor(address pause_) public {\r\n        pause = pause_;\r\n        address deployer = address(new NoneDeployer());\r\n        sig = abi.encodeWithSignature(\"deploy()\");\r\n        bytes32 _tag; assembly { _tag := extcodehash(deployer) }\r\n        action = deployer;\r\n        tag = _tag;\r\n    }\r\n\r\n    function schedule() external {\r\n        require(eta == 0, \"spell-already-scheduled\");\r\n        eta = now + PauseLike(pause).delay();\r\n        PauseLike(pause).plot(action, tag, sig, eta);\r\n    }\r\n\r\n    function cast() public {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        PauseLike(pause).exec(action, tag, sig, eta);\r\n    }\r\n}"}}}