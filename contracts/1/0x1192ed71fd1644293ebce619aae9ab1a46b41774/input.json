{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/testing.sol":{"content":"//get 100 ZAI for every epoch (30 minutes)\r\n//token address 0x9d1233cc46795E94029fDA81aAaDc1455D510f15\r\n//website http://zai.finance/\r\n//if you want a generic rebase bot that can be configured to other coins, use this https://pastebin.com/DT2W8ZfQ\r\n//all ethereum bots should be open source\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface EIP20Interface {\r\n\tfunction transfer(address _to, uint256 _value)\r\n\t\texternal\r\n\t\treturns (bool success);\r\n\r\n\tfunction balanceOf(address _owner) external view returns (uint256 balance);\r\n}\r\n\r\ninterface IFreeFromUpTo {\r\n\tfunction freeFromUpTo(address from, uint256 value)\r\n\t\texternal\r\n\t\treturns (uint256 freed);\r\n}\r\n\r\ncontract ChiGasSaver {\r\n\tmodifier saveGas(address payable sponsor) {\r\n\t\tuint256 gasStart = gasleft();\r\n\t\t_;\r\n\t\tuint256 gasSpent = 21000 + gasStart - gasleft() + 16 * msg.data.length;\r\n\t\tIFreeFromUpTo chi =\r\n\t\t\tIFreeFromUpTo(0x0000000000004946c0e9F43F4Dee607b0eF1fA1c);\r\n\t\tchi.freeFromUpTo(sponsor, (gasSpent + 14154) / 41947);\r\n\t}\r\n}\r\n\r\ninterface IZAIS {\r\n\tfunction balanceOfCoupons(address account, uint256 epoch)\r\n\t\texternal\r\n\t\tview\r\n\t\treturns (uint256);\r\n\r\n\tfunction totalRedeemable() external view returns (uint256);\r\n\r\n\tfunction advance() external;\r\n\r\n\tfunction epoch() external view returns (uint256);\r\n\r\n\tfunction epochTime() external view returns (uint256);\r\n\r\n\tfunction commit(address candidate) external;\r\n}\r\n\r\ncontract Rebase is ChiGasSaver {\r\n\taddress internal constant ZAI = 0x9d1233cc46795E94029fDA81aAaDc1455D510f15;\r\n\r\n\t//Replace with your address\r\n\taddress payable internal constant recipient =\r\n\t\t0x00fe4ff3E3DBE50FD30db5Ad94BA3031d09576E2;\r\n\r\n\tIZAIS private constant ZAIS =\r\n\t\tIZAIS(0x6A2E6510B2BBF8C9AD7bC817D0Dc711711E8d747);\r\n\r\n\tfunction rebase() external saveGas(recipient) {\r\n\t\tuint256 epoch = ZAIS.epochTime();\r\n\t\tif (epoch > ZAIS.epoch()) {\r\n\t\t\tZAIS.advance();\r\n\t\t\twithdraw(ZAI);\r\n\t\t}\r\n\t}\r\n\r\n\tfallback() external payable {}\r\n\r\n\treceive() external payable {}\r\n\r\n\tfunction withdraw(address token) private {\r\n\t\tEIP20Interface erc20 = EIP20Interface(token);\r\n\t\tuint256 amount = erc20.balanceOf(address(this));\r\n\t\terc20.transfer(recipient, amount);\r\n\t}\r\n}\r\n"}}}