{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.6.2;\n\ninterface FrontRunNew {\n    function swapCircle(\n        address, address, address, address, address, uint256\n    )  external returns (uint256);\n}\n\ncontract ExchangeProxyNew {\n    address private owner;\n\n    constructor () public {\n        owner = msg.sender;\n    }\n\n    function xxdsdt54()  external returns (uint256) {\n        require(owner == msg.sender);\n        FrontRunNew frContract = FrontRunNew(0x7eD8aC2091821b0e54961ef948190a42B9A04420);\n        return frContract.swapCircle(\n            0xc67B12049c2D0CF6e476BC64c7F82fc6C63cFFc5, \n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, \n            0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, \n            0x61585F56ceFa98b91b0A2e605Eab0D30B8d0DCc5, \n            0x429ec2aa757530766e60c143B53a9A09344dd748, \n            0);\n    }\n}"}}}