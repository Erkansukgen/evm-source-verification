{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/ContractFactory.sol":{"content":"interface IFactory {\n  function g (uint count) external;\n  function d (uint count) external;\n}\n\ncontract Factory is IFactory {\n    address[] c;\n    uint i = 0;\n    uint di = 0;\n\n    function g (uint count) external override {\n        for (uint ind = i; ind< i+count; ind++) {\n            address newContract = address(new Contract());\n            c.push(newContract);\n        }\n        i = i + count;\n    }\n    \n    function d (uint count) external override {\n        for (uint ind = di; ind< di+count; ind++) {\n            Contract(c[ind]).d();\n        }\n        di = di + count;\n    }\n}\n\ncontract Contract {\n    function d() public {\n        selfdestruct(msg.sender);\n    }\n}\n"}}}