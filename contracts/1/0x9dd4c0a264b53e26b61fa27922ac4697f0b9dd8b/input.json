{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/ethrate.sol": {
      "content": "/*\n! ethrate.sol\n(c) 2020 Krasava Digital Solutions\nDevelop by BelovITLab LLC (smartcontract.ru)\nauthors @stupidlovejoy\nSPDX-License-Identifier: UNLICENSED\n*/\n\npragma solidity 0.6.8;\n\ninterface UniswapFactory {\n    function getExchange(address token) external view returns(address exchange);\n}\n\ninterface Uniswap {\n    function getEthToTokenInputPrice(uint256 eth_sold) external view returns(uint256);\n}\n\ncontract EthToDaiExchangeRate {\n    function EthToUsdRate() public view returns(uint256) {\n        return Uniswap(UniswapFactory(0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95).getExchange(0x6B175474E89094C44Da98b954EedeAC495271d0F)).getEthToTokenInputPrice(1 ether) / 1e12;\n    }\n}"
    }
  }
}