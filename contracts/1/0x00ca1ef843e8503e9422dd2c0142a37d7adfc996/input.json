{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"CorruptionsFAQ.sol":{"content":"// SPDX-License-Identifier: Unlicense\r\n\r\n/*\r\n    This is a space for break the fourth wall and explain the project\r\n    more plainly. No puzzles or anything here. :) If subgraphed and\r\n    mirrored to a website it should serve as a decent FAQ/explainer.\r\n*/\r\n\r\npragma solidity^0.8.1;\r\n\r\ncontract CorruptionsFAQ {\r\n    event Record(string indexed topic, string indexed content);\r\n    event Revoke(string indexed topic);\r\n    \r\n    address public owner;\r\n    \r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function record(string memory topic, string memory content) public {\r\n        // in the event of \"re-recording\", this is basically an edit or update\r\n        require(msg.sender == owner, \"CorruptionsFAQ: not owner\");\r\n        emit Record(topic, content);\r\n    }\r\n\r\n    function revoke(string memory topic) public {\r\n        // revoking is basically deleting\r\n        require(msg.sender == owner, \"CorruptionsFAQ: not owner\");\r\n        emit Revoke(topic);\r\n    }\r\n}"}}}