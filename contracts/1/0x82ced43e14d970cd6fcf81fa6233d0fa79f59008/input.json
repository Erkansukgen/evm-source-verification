{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"token.sol":{"content":"pragma solidity ^0.8.6;\n\ncontract token {\n    mapping (address => uint) public balances;\n    mapping (address => mapping(address =>uint)) public allowance;\n    uint public totalSupply = 200000000;\n    string public name = \"MSN\";\n    string public symbol = \"MSN\";\n    uint public decimals = 18;\n    \n    event Transfer(address indexed from,address indexed to,uint value);\n    event Approval(address indexed owner, address indexed spender,uint value); \nconstructor () {\n    balances [msg.sender] = totalSupply;\n\n}\n\n\nfunction balance0f(address owner) public view returns(uint) {\n    return balances [owner];\n    \n    \n}\n\n function transfer(address to,uint value) public returns (bool){\n     require (balance0f(msg.sender)>= value, 'balance too low');\n     balances[to] += value;\n     balances [msg.sender] -= value;\n     emit Transfer(msg.sender,to,value);\n     return true;\n}\nfunction transferFrom(address from,address to, uint value) public returns(bool) {\n    require(balance0f(from) >= value, 'balance too low');\n    require(allowance[from][msg.sender]>= value, 'allowance too low');\n    balances[to] += value;\n    emit Transfer(from, to,value);\n    return true;\n}\nfunction approve(address spender, uint value) public returns(bool){\n    allowance[msg.sender][spender]= value;\n    emit Approval(msg.sender,spender, value);\n    return true;\n}\n}"}}}