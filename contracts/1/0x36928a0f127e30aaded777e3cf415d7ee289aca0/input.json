{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "startOiler.sol": {
      "content": "\npragma solidity ^0.8.0;\n\ncontract startOiler{\n    \n    address OWNER;\n    \n    constructor() {\n    OWNER = (msg.sender);\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == OWNER, \"caller is not the owner!\");\n        _;\n    }\n\n    function startAndBuy(address startContract, address myContract) public onlyOwner{\n        startContract.call(abi.encodeWithSignature(\"startPool()\"));\n        myContract.call(abi.encodeWithSignature(\"buy()\"));\n        \n    }\n}"
    }
  }
}