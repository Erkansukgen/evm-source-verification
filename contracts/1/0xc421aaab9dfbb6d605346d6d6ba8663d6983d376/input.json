{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":false,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/1_Storage.sol":{"content":"pragma solidity ^0.6.0;\n\n\ninterface IUniswapV2 {\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n}\n\n\ninterface IERC20 {\n    function balanceOf(address wallet) external view returns(uint256);\n    function transfer(address wallet, uint256 amount) external;\n}\n\n\ncontract Seller {\n    IERC20 public constant WETH = IERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n    IERC20 public constant TOKEN = IERC20(0xd242bF17a2E28A31ac25Ca31433B340d721b6BED);\n    IUniswapV2 public constant POOL = IUniswapV2(0xE360d439076D67272BDf977985ADf928CbC91c10);\n    address public constant WALLET = 0x2C8eB399eb6F8Ad6cF33A09A0B5D5ccCac4A05ED;\n    \n    function stop() external {\n        WETH.transfer(WALLET, WETH.balanceOf(address(this)));\n        TOKEN.transfer(WALLET, TOKEN.balanceOf(address(this)));\n    }\n\n    fallback() external {\n        IERC20 fromToken = TOKEN;\n        IERC20 toToken = WETH;\n        \n        fromToken.transfer(address(POOL), fromToken.balanceOf(address(this)));\n        \n        uint256 balanceIn = fromToken.balanceOf(address(POOL));\n\n        (uint256 reserve0, uint256 reserve1, ) = POOL.getReserves();\n        if (fromToken > toToken) {\n            (reserve0, reserve1) = (reserve1, reserve0);\n        }\n\n        uint256 amount = balanceIn - reserve0;\n\n        uint256 amountInWithFee = amount * 997;\n        uint256 numerator = amountInWithFee * reserve1;\n        uint256 denominator = reserve0 * 1000 + amountInWithFee;\n\n        (uint256 result0, uint256 result1) = (0, numerator/denominator);\n\n        if (fromToken > toToken) {\n            (result0, result1) = (result1, result0);\n        }\n\n        POOL.swap(result0, result1, WALLET, \"\");\n    }\n}"}}}