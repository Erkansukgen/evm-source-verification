{"language":"Solidity","settings":{"libraries":{},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":200},"remappings":[],"outputSelection":{"*":{"*":["*"],"":["*"]}}},"sources":{"browser/Whitelister.sol":{"content":"// File: contracts/Whitelister.sol\n\n// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\ninterface SupportsWhitelisting {\n  function addToWhiteList(address account) external;\n}\n\ncontract Whitelister {\n\n  SupportsWhitelisting private target_contract;\n  address private backend;\n  \n  constructor (address _target, address _backend) public {\n    target_contract = SupportsWhitelisting(_target);\n    backend = _backend;\n  }\n\n  function ecrecover1(bytes32 msgHash, bytes32 r, bytes32 s, uint8 v) public pure returns (address ret) {\n    ret = ecrecover(msgHash, v, r, s);\n  }\n  \n  function submit(bytes32 r, bytes32 s, uint8 v) external {\n    bytes32 assertion = keccak256(abi.encodePacked(msg.sender));\n    require(ecrecover(assertion, v, r, s) == backend);\n    target_contract.addToWhiteList(msg.sender);\n  }\n}\n"}}}