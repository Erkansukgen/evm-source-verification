{
  "language": "Solidity",
  "settings": {
    "libraries": {},
    "metadata": {
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [],
    "outputSelection": {
      "*": {
        "*": [
          "*"
        ],
        "": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "browser/ethswap_test.sol": {
      "content": "/*\n! proof.sol\n(c) 2020 Krasava Digital Solutions\nDevelop by BelovITLab LLC (smartcontract.ru) & Krasava Digital Solutions (krasava.pro)\nauthors @stupidlovejoy, @sergeytyan\nLicense: MIT \n*/\n\npragma solidity 0.6.6;\n\ninterface SwapInterface {\n    function ETHtoUSD() external view returns(uint256);\n}\ncontract EthSwapTest {\n    SwapInterface public swapSourceAddress = SwapInterface(0xc4888352C06799aC450d9e24563ef1D85CeDe3f6);\n    function eth_rate_1() external view returns(uint256) {\n        return swapSourceAddress.ETHtoUSD();\n    }\n    function eth_rate_2() external view returns(uint256 _value) {\n        _value = swapSourceAddress.ETHtoUSD();\n    }\n    function eth_rate_3() external view returns(uint256) {\n        uint256 _value = swapSourceAddress.ETHtoUSD();\n        return _value;\n    }\n}"
    }
  }
}