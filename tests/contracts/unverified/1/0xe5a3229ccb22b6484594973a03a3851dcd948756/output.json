{
  "contracts": {
    "ERC20.sol": {
      "ERC20": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "Implementation of the basic standard token. https://eips.ethereum.org/EIPS/eip-20 Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for all accounts just by listening to said events. Note that this isn't required by the specification, and other compliant implementations may not do it.",
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "owner": "address The address which owns the funds.",
                "spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "spender": "The address which will spend the funds.",
                "value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "owner": "The address to query the balance of."
              },
              "return": "A uint256 representing the amount owned by the passed address."
            },
            "decreaseAllowance(address,uint256)": {
              "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "spender": "The address which will spend the funds.",
                "subtractedValue": "The amount of tokens to decrease the allowance by."
              }
            },
            "increaseAllowance(address,uint256)": {
              "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "addedValue": "The amount of tokens to increase the allowance by.",
                "spender": "The address which will spend the funds."
              }
            },
            "totalSupply()": {
              "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
              "details": "Transfer token to a specified address",
              "params": {
                "to": "The address to transfer to.",
                "value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
              "params": {
                "from": "address The address which you want to send tokens from",
                "to": "address The address which you want to transfer to",
                "value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "Standard ERC20 token"
        },
        "evm": {
          "assembly": "    /* \"ERC20.sol\":618:7640  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ERC20.sol\":618:7640  contract ERC20 is IERC20 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":618:7640  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20.sol\":618:7640  contract ERC20 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_14\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_19\n      jump\t// in\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_22\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_7:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n      pop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_25\n      jump\t// in\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_9:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_34\n      jump\t// in\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_14:\n        /* \"ERC20.sol\":2777:2781  bool */\n      0x00\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      tag_36\n        /* \"ERC20.sol\":2802:2812  msg.sender */\n      caller\n        /* \"ERC20.sol\":2814:2821  spender */\n      dup5\n        /* \"ERC20.sol\":2823:2828  value */\n      dup5\n        /* \"ERC20.sol\":2793:2801  _approve */\n      tag_37\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_36:\n      pop\n        /* \"ERC20.sol\":2846:2850  true */\n      0x01\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"ERC20.sol\":977:989  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_19:\n        /* \"ERC20.sol\":3399:3403  bool */\n      0x00\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_40\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_41\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3478:3486  _allowed */\n      0x01\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3466:3476  msg.sender */\n      caller\n        /* \"ERC20.sol\":3478:3504  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      tag_42\n      swap2\n        /* \"ERC20.sol\":3460:3464  from */\n      dup7\n      swap2\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      tag_43\n      swap1\n        /* \"ERC20.sol\":3509:3514  value */\n      dup7\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":3478:3508  _allowed[from][msg.sender].sub */\n      tag_44\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_43:\n        /* \"ERC20.sol\":3451:3459  _approve */\n      tag_37\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      jump\t// in\n    tag_42:\n      pop\n        /* \"ERC20.sol\":3533:3537  true */\n      0x01\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"ERC20.sol\":4163:4173  msg.sender */\n      caller\n        /* \"ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4184:4192  _allowed */\n      0x01\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4184:4213  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4138:4142  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4154:4230  _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue)) */\n      tag_36\n      swap2\n        /* \"ERC20.sol\":4175:4182  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      tag_43\n      swap1\n        /* \"ERC20.sol\":4218:4228  addedValue */\n      dup7\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4184:4217  _allowed[msg.sender][spender].add */\n      tag_48\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      and\n        /* \"ERC20.sol\":1263:1270  uint256 */\n      0x00\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"ERC20.sol\":4887:4897  msg.sender */\n      caller\n        /* \"ERC20.sol\":4862:4866  bool */\n      0x00\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4908:4916  _allowed */\n      0x01\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4908:4937  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4862:4866  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4878:4959  _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue)) */\n      tag_36\n      swap2\n        /* \"ERC20.sol\":4899:4906  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_43\n      swap1\n        /* \"ERC20.sol\":4942:4957  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4908:4941  _allowed[msg.sender][spender].sub */\n      tag_44\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_31:\n        /* \"ERC20.sol\":2000:2004  bool */\n      0x00\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      tag_36\n        /* \"ERC20.sol\":2026:2036  msg.sender */\n      caller\n        /* \"ERC20.sol\":2038:2040  to */\n      dup5\n        /* \"ERC20.sol\":2042:2047  value */\n      dup5\n        /* \"ERC20.sol\":2016:2025  _transfer */\n      tag_41\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":1715:1722  uint256 */\n      0x00\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1741:1749  _allowed */\n      0x01\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1741:1765  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6914:6935  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6906:6936  require(spender != address(0)) */\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6954:6973  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6946:6974  require(owner != address(0)) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6985:6993  _allowed */\n      0x01\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6985:7009  _allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6985:7017  _allowed[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":7032:7063  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5293:5309  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5285:5310  require(to != address(0)) */\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":5339:5348  _balances */\n      0x00\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      tag_61\n      swap1\n        /* \"ERC20.sol\":5359:5364  value */\n      dup3\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5339:5358  _balances[from].sub */\n      tag_44\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      and\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":5321:5330  _balances */\n      0x00\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":5321:5365  _balances[from] = _balances[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":5391:5404  _balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      tag_62\n      swap1\n        /* \"ERC20.sol\":5409:5414  value */\n      dup3\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5391:5408  _balances[to].add */\n      tag_48\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      and\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":5375:5384  _balances */\n      0x00\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":5375:5415  _balances[to] = _balances[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"SafeMath.sol\":1269:1276  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1301:1302  a */\n      dup3\n        /* \"SafeMath.sol\":1296:1297  b */\n      dup3\n        /* \"SafeMath.sol\":1296:1302  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1288:1303  require(b <= a) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n        /* \"SafeMath.sol\":1325:1330  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"SafeMath.sol\":1497:1504  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1528:1533  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":1551:1557  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"SafeMath.sol\":1576:1577  c */\n      swap4\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205263223cfcffea81bb1f3d4a360c7d79836cda7f1f65d254871568ebcfe42ef40029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506104e0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d561020b565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610211565b6100b96004803603604081101561013357600080fd5b506001600160a01b038135169060200135610268565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102a4565b6100b96004803603604081101561018557600080fd5b506001600160a01b0381351690602001356102bf565b6100b9600480360360408110156101b157600080fd5b506001600160a01b0381351690602001356102fb565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b0381358116916020013516610308565b6000610202338484610333565b50600192915050565b60025490565b600061021e8484846103bb565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461025e918691610259908663ffffffff61048616565b610333565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610202918590610259908663ffffffff61049b16565b6001600160a01b031660009081526020819052604090205490565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610202918590610259908663ffffffff61048616565b60006102023384846103bb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661034657600080fd5b6001600160a01b03831661035957600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0382166103ce57600080fd5b6001600160a01b0383166000908152602081905260409020546103f7908263ffffffff61048616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461042c908263ffffffff61049b16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561049557600080fd5b50900390565b6000828201838110156104ad57600080fd5b939250505056fea165627a7a723058205263223cfcffea81bb1f3d4a360c7d79836cda7f1f65d254871568ebcfe42ef40029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x211 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x268 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2FB JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202 CALLER DUP5 DUP5 PUSH2 0x333 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E DUP5 DUP5 DUP5 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x25E SWAP2 DUP7 SWAP2 PUSH2 0x259 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x486 AND JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x202 SWAP2 DUP6 SWAP1 PUSH2 0x259 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x49B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x202 SWAP2 DUP6 SWAP1 PUSH2 0x259 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x486 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202 CALLER DUP5 DUP5 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3F7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x486 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x42C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x49B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 MSTORE PUSH4 0x223CFCFF 0xea DUP2 0xbb 0x1f RETURNDATASIZE 0x4a CALLDATASIZE 0xc PUSH30 0x79836CDA7F1F65D254871568EBCFE42EF400290000000000000000000000 ",
            "sourceMap": "618:7022:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:7022:0;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d561020b565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610211565b6100b96004803603604081101561013357600080fd5b506001600160a01b038135169060200135610268565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102a4565b6100b96004803603604081101561018557600080fd5b506001600160a01b0381351690602001356102bf565b6100b9600480360360408110156101b157600080fd5b506001600160a01b0381351690602001356102fb565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b0381358116916020013516610308565b6000610202338484610333565b50600192915050565b60025490565b600061021e8484846103bb565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461025e918691610259908663ffffffff61048616565b610333565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610202918590610259908663ffffffff61049b16565b6001600160a01b031660009081526020819052604090205490565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610202918590610259908663ffffffff61048616565b60006102023384846103bb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661034657600080fd5b6001600160a01b03831661035957600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0382166103ce57600080fd5b6001600160a01b0383166000908152602081905260409020546103f7908263ffffffff61048616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461042c908263ffffffff61049b16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561049557600080fd5b50900390565b6000828201838110156104ad57600080fd5b939250505056fea165627a7a723058205263223cfcffea81bb1f3d4a360c7d79836cda7f1f65d254871568ebcfe42ef40029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x211 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x268 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2FB JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202 CALLER DUP5 DUP5 PUSH2 0x333 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E DUP5 DUP5 DUP5 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x25E SWAP2 DUP7 SWAP2 PUSH2 0x259 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x486 AND JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x202 SWAP2 DUP6 SWAP1 PUSH2 0x259 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x49B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x202 SWAP2 DUP6 SWAP1 PUSH2 0x259 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x486 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202 CALLER DUP5 DUP5 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3F7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x486 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x42C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x49B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 MSTORE PUSH4 0x223CFCFF 0xea DUP2 0xbb 0x1f RETURNDATASIZE 0x4a CALLDATASIZE 0xc PUSH30 0x79836CDA7F1F65D254871568EBCFE42EF400290000000000000000000000 ",
            "sourceMap": "618:7022:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:7022:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2712:145:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;907:89;;;:::i;:::-;;;;;;;;;;;;;;;;3320:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3320:224:0;;;;;;;;;;;;;;;;;:::i;4058:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4058:200:0;;;;;;;;:::i;1208:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1208:104:0;-1:-1:-1;;;;;1208:104:0;;:::i;4777:210::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4777:210:0;;;;;;;;:::i;1939:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1939:137:0;;;;;;;;:::i;1643:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:129:0;;;;;;;;;;:::i;2712:145::-;2777:4;2793:36;2802:10;2814:7;2823:5;2793:8;:36::i;:::-;-1:-1:-1;2846:4:0;2712:145;;;;:::o;907:89::-;977:12;;907:89;:::o;3320:224::-;3399:4;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;;;;;3478:14:0;;;;;;:8;:14;;;;;;;;3466:10;3478:26;;;;;;;;;3451:65;;3460:4;;3478:37;;3509:5;3478:37;:30;:37;:::i;:::-;3451:8;:65::i;:::-;-1:-1:-1;3533:4:0;3320:224;;;;;:::o;4058:200::-;4163:10;4138:4;4184:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4184:29:0;;;;;;;;;;4138:4;;4154:76;;4175:7;;4184:45;;4218:10;4184:45;:33;:45;:::i;1208:104::-;-1:-1:-1;;;;;1289:16:0;1263:7;1289:16;;;;;;;;;;;;1208:104::o;4777:210::-;4887:10;4862:4;4908:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4908:29:0;;;;;;;;;;4862:4;;4878:81;;4899:7;;4908:50;;4942:15;4908:50;:33;:50;:::i;1939:137::-;2000:4;2016:32;2026:10;2038:2;2042:5;2016:9;:32::i;1643:129::-;-1:-1:-1;;;;;1741:15:0;;;1715:7;1741:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1643:129::o;6822:248::-;-1:-1:-1;;;;;6914:21:0;;6906:30;;;;;;-1:-1:-1;;;;;6954:19:0;;6946:28;;;;;;-1:-1:-1;;;;;6985:15:0;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7032:31;;;;;;;;;;;;;;;;;6822:248;;;:::o;5206:256::-;-1:-1:-1;;;;;5293:16:0;;5285:25;;;;;;-1:-1:-1;;;;;5339:15:0;;:9;:15;;;;;;;;;;;:26;;5359:5;5339:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5321:15:0;;;:9;:15;;;;;;;;;;;:44;;;;5391:13;;;;;;;:24;;5409:5;5391:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5375:13:0;;;:9;:13;;;;;;;;;;;;:40;;;;5430:25;;;;;;;5375:13;;5430:25;;;;;;;;;;;;;5206:256;;;:::o;1211:145:12:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:12;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:12:o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "249600",
              "executionCost": "287",
              "totalCost": "249887"
            },
            "external": {
              "allowance(address,address)": "716",
              "approve(address,uint256)": "22390",
              "balanceOf(address)": "545",
              "decreaseAllowance(address,uint256)": "infinite",
              "increaseAllowance(address,uint256)": "infinite",
              "totalSupply()": "421",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite"
            },
            "internal": {
              "_approve(address,address,uint256)": "infinite",
              "_burn(address,uint256)": "infinite",
              "_burnFrom(address,uint256)": "infinite",
              "_mint(address,uint256)": "infinite",
              "_transfer(address,address,uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 618,
                "end": 7640,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "MSTORE"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "CALLVALUE"
              },
              {
                "begin": 8,
                "end": 17,
                "name": "DUP1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "ISZERO"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPDEST"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "POP"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "DUP1"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "CODECOPY"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 618,
                "end": 7640,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a723058205263223cfcffea81bb1f3d4a360c7d79836cda7f1f65d254871568ebcfe42ef40029",
                ".code": [
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "POP"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "LT"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "SHR"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "GT"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMP"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "EQ"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 618,
                    "end": 7640,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "AND"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "RETURN"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "ADD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "RETURN"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "AND"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "ADD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "24"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "24"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "AND"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "27"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "27"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "AND"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "ADD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "28"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "AND"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "ADD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "ADD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "34"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2777,
                    "end": 2781,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 2802,
                    "end": 2812,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2814,
                    "end": 2821,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2823,
                    "end": 2828,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2793,
                    "end": 2801,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "tag",
                    "value": "36"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2846,
                    "end": 2850,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3399,
                    "end": 3403,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "PUSH [tag]",
                    "value": "40"
                  },
                  {
                    "begin": 3425,
                    "end": 3429,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3431,
                    "end": 3433,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3435,
                    "end": 3440,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3415,
                    "end": 3424,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "tag",
                    "value": "40"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3486,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3466,
                    "end": 3476,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3509,
                    "end": 3514,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3478,
                    "end": 3508,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "tag",
                    "value": "43"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3451,
                    "end": 3459,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "tag",
                    "value": "42"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3533,
                    "end": 3537,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "22"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4163,
                    "end": 4173,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4192,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4218,
                    "end": 4228,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4184,
                    "end": 4217,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "AND"
                  },
                  {
                    "begin": 1263,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "28"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4887,
                    "end": 4897,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4916,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4942,
                    "end": 4957,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4908,
                    "end": 4941,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "31"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2000,
                    "end": 2004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 2026,
                    "end": 2036,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2038,
                    "end": 2040,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2042,
                    "end": 2047,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2016,
                    "end": 2025,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "34"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "AND"
                  },
                  {
                    "begin": 1715,
                    "end": 1722,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1749,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "AND"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "tag",
                    "value": "37"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "AND"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH [tag]",
                    "value": "57"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "tag",
                    "value": "57"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "AND"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "tag",
                    "value": "58"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 6993,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SUB"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "ADD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "tag",
                    "value": "41"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "AND"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "tag",
                    "value": "60"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5348,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH [tag]",
                    "value": "61"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5359,
                    "end": 5364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5339,
                    "end": 5358,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "tag",
                    "value": "61"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "AND"
                  },
                  {
                    "begin": 5321,
                    "end": 5330,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5409,
                    "end": 5414,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5391,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "tag",
                    "value": "62"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "AND"
                  },
                  {
                    "begin": 5375,
                    "end": 5384,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "AND"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SUB"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "ADD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "tag",
                    "value": "44"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1269,
                    "end": 1276,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1301,
                    "end": 1302,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1297,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "GT"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH [tag]",
                    "value": "64"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "tag",
                    "value": "64"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SUB"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "tag",
                    "value": "48"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1497,
                    "end": 1504,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "ADD"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "LT"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH [tag]",
                    "value": "66"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "tag",
                    "value": "66"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1576,
                    "end": 1577,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard token. https://eips.ethereum.org/EIPS/eip-20 Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for all accounts just by listening to said events. Note that this isn't required by the specification, and other compliant implementations may not do it.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard ERC20 token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return A uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\",\"keccak256\":\"0x612eb74ef1ba2e4ea72f85dda6c21f7dbdcc0ece01b1bf3b590f3ea4d2e7e13d\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "ERC20Burnable.sol": {
      "ERC20Burnable": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "burn",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "burnFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "Token that can be irreversibly burned (destroyed).",
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "owner": "address The address which owns the funds.",
                "spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "spender": "The address which will spend the funds.",
                "value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "owner": "The address to query the balance of."
              },
              "return": "A uint256 representing the amount owned by the passed address."
            },
            "burn(uint256)": {
              "details": "Burns a specific amount of tokens.",
              "params": {
                "value": "The amount of token to be burned."
              }
            },
            "burnFrom(address,uint256)": {
              "details": "Burns a specific amount of tokens from the target address and decrements allowance",
              "params": {
                "from": "address The account whose tokens will be burned.",
                "value": "uint256 The amount of token to be burned."
              }
            },
            "decreaseAllowance(address,uint256)": {
              "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "spender": "The address which will spend the funds.",
                "subtractedValue": "The amount of tokens to decrease the allowance by."
              }
            },
            "increaseAllowance(address,uint256)": {
              "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "addedValue": "The amount of tokens to increase the allowance by.",
                "spender": "The address which will spend the funds."
              }
            },
            "totalSupply()": {
              "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
              "details": "Transfer token to a specified address",
              "params": {
                "to": "The address to transfer to.",
                "value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
              "params": {
                "from": "address The address which you want to send tokens from",
                "to": "address The address which you want to transfer to",
                "value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "Burnable Token"
        },
        "evm": {
          "assembly": "    /* \"ERC20Burnable.sol\":140:714  contract ERC20Burnable is ERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ERC20Burnable.sol\":140:714  contract ERC20Burnable is ERC20 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20Burnable.sol\":140:714  contract ERC20Burnable is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20Burnable.sol\":140:714  contract ERC20Burnable is ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_16\n      jump\t// in\n    tag_14:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_21\n      jump\t// in\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_24\n      jump\t// in\n        /* \"ERC20Burnable.sol\":295:372  function burn(uint256 value) public {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n      pop\n        /* \"ERC20Burnable.sol\":295:372  function burn(uint256 value) public {... */\n      calldataload\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_8:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_30\n      jump\t// in\n        /* \"ERC20Burnable.sol\":619:712  function burnFrom(address from, uint256 value) public {... */\n    tag_9:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Burnable.sol\":619:712  function burnFrom(address from, uint256 value) public {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_10:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_11:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_39\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_12:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_42\n      jump\t// in\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_16:\n        /* \"ERC20.sol\":2777:2781  bool */\n      0x00\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      tag_44\n        /* \"ERC20.sol\":2802:2812  msg.sender */\n      caller\n        /* \"ERC20.sol\":2814:2821  spender */\n      dup5\n        /* \"ERC20.sol\":2823:2828  value */\n      dup5\n        /* \"ERC20.sol\":2793:2801  _approve */\n      tag_45\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_44:\n      pop\n        /* \"ERC20.sol\":2846:2850  true */\n      0x01\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_18:\n        /* \"ERC20.sol\":977:989  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_21:\n        /* \"ERC20.sol\":3399:3403  bool */\n      0x00\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_48\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_49\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3478:3486  _allowed */\n      0x01\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3466:3476  msg.sender */\n      caller\n        /* \"ERC20.sol\":3478:3504  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      tag_50\n      swap2\n        /* \"ERC20.sol\":3460:3464  from */\n      dup7\n      swap2\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      tag_51\n      swap1\n        /* \"ERC20.sol\":3509:3514  value */\n      dup7\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":3478:3508  _allowed[from][msg.sender].sub */\n      tag_52\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_51:\n        /* \"ERC20.sol\":3451:3459  _approve */\n      tag_45\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      jump\t// in\n    tag_50:\n      pop\n        /* \"ERC20.sol\":3533:3537  true */\n      0x01\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_24:\n        /* \"ERC20.sol\":4163:4173  msg.sender */\n      caller\n        /* \"ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4184:4192  _allowed */\n      0x01\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4184:4213  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4138:4142  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4154:4230  _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue)) */\n      tag_44\n      swap2\n        /* \"ERC20.sol\":4175:4182  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      tag_51\n      swap1\n        /* \"ERC20.sol\":4218:4228  addedValue */\n      dup7\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4184:4217  _allowed[msg.sender][spender].add */\n      tag_56\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"ERC20Burnable.sol\":295:372  function burn(uint256 value) public {... */\n    tag_27:\n        /* \"ERC20Burnable.sol\":341:365  _burn(msg.sender, value) */\n      tag_58\n        /* \"ERC20Burnable.sol\":347:357  msg.sender */\n      caller\n        /* \"ERC20Burnable.sol\":359:364  value */\n      dup3\n        /* \"ERC20Burnable.sol\":341:346  _burn */\n      tag_59\n        /* \"ERC20Burnable.sol\":341:365  _burn(msg.sender, value) */\n      jump\t// in\n    tag_58:\n        /* \"ERC20Burnable.sol\":295:372  function burn(uint256 value) public {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      and\n        /* \"ERC20.sol\":1263:1270  uint256 */\n      0x00\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20Burnable.sol\":619:712  function burnFrom(address from, uint256 value) public {... */\n    tag_33:\n        /* \"ERC20Burnable.sol\":683:705  _burnFrom(from, value) */\n      tag_62\n        /* \"ERC20Burnable.sol\":693:697  from */\n      dup3\n        /* \"ERC20Burnable.sol\":699:704  value */\n      dup3\n        /* \"ERC20Burnable.sol\":683:692  _burnFrom */\n      tag_63\n        /* \"ERC20Burnable.sol\":683:705  _burnFrom(from, value) */\n      jump\t// in\n    tag_62:\n        /* \"ERC20Burnable.sol\":619:712  function burnFrom(address from, uint256 value) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_36:\n        /* \"ERC20.sol\":4887:4897  msg.sender */\n      caller\n        /* \"ERC20.sol\":4862:4866  bool */\n      0x00\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4908:4916  _allowed */\n      0x01\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4908:4937  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4862:4866  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4878:4959  _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue)) */\n      tag_44\n      swap2\n        /* \"ERC20.sol\":4899:4906  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_51\n      swap1\n        /* \"ERC20.sol\":4942:4957  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4908:4941  _allowed[msg.sender][spender].sub */\n      tag_52\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_39:\n        /* \"ERC20.sol\":2000:2004  bool */\n      0x00\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      tag_44\n        /* \"ERC20.sol\":2026:2036  msg.sender */\n      caller\n        /* \"ERC20.sol\":2038:2040  to */\n      dup5\n        /* \"ERC20.sol\":2042:2047  value */\n      dup5\n        /* \"ERC20.sol\":2016:2025  _transfer */\n      tag_49\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":1715:1722  uint256 */\n      0x00\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1741:1749  _allowed */\n      0x01\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1741:1765  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6914:6935  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6906:6936  require(spender != address(0)) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6954:6973  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6946:6974  require(owner != address(0)) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6985:6993  _allowed */\n      0x01\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6985:7009  _allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6985:7017  _allowed[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":7032:7063  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5293:5309  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5285:5310  require(to != address(0)) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":5339:5348  _balances */\n      0x00\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      tag_75\n      swap1\n        /* \"ERC20.sol\":5359:5364  value */\n      dup3\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5339:5358  _balances[from].sub */\n      tag_52\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      and\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":5321:5330  _balances */\n      0x00\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":5321:5365  _balances[from] = _balances[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":5391:5404  _balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      tag_76\n      swap1\n        /* \"ERC20.sol\":5409:5414  value */\n      dup3\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5391:5408  _balances[to].add */\n      tag_56\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      and\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":5375:5384  _balances */\n      0x00\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":5375:5415  _balances[to] = _balances[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"SafeMath.sol\":1269:1276  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1301:1302  a */\n      dup3\n        /* \"SafeMath.sol\":1296:1297  b */\n      dup3\n        /* \"SafeMath.sol\":1296:1302  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1288:1303  require(b <= a) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"SafeMath.sol\":1325:1330  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"SafeMath.sol\":1497:1504  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1528:1533  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":1551:1557  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n        /* \"SafeMath.sol\":1576:1577  c */\n      swap4\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":6294:6557  function _burn(address account, uint256 value) internal {... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6368:6389  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6360:6390  require(account != address(0)) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"ERC20.sol\":6416:6428  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":6416:6439  _totalSupply.sub(value) */\n      tag_83\n      swap1\n        /* \"ERC20.sol\":6433:6438  value */\n      dup3\n        /* \"ERC20.sol\":6416:6439  _totalSupply.sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":6416:6432  _totalSupply.sub */\n      tag_52\n        /* \"ERC20.sol\":6416:6439  _totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_83:\n        /* \"ERC20.sol\":6401:6413  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":6401:6439  _totalSupply = _totalSupply.sub(value) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6470:6488  _balances[account] */\n      dup3\n      and\n        /* \"ERC20.sol\":6470:6479  _balances */\n      0x00\n        /* \"ERC20.sol\":6470:6488  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":6470:6499  _balances[account].sub(value) */\n      tag_84\n      swap1\n        /* \"ERC20.sol\":6493:6498  value */\n      dup3\n        /* \"ERC20.sol\":6470:6499  _balances[account].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":6470:6492  _balances[account].sub */\n      tag_52\n        /* \"ERC20.sol\":6470:6499  _balances[account].sub(value) */\n      and\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6449:6467  _balances[account] */\n      dup4\n      and\n        /* \"ERC20.sol\":6449:6458  _balances */\n      0x00\n        /* \"ERC20.sol\":6449:6467  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6449:6499  _balances[account] = _balances[account].sub(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":6514:6550  Transfer(account, address(0), value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":6449:6458  _balances */\n      swap2\n      swap4\n        /* \"ERC20.sol\":6514:6550  Transfer(account, address(0), value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6294:6557  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7459:7638  function _burnFrom(address account, uint256 value) internal {... */\n    tag_63:\n        /* \"ERC20.sol\":7529:7550  _burn(account, value) */\n      tag_86\n        /* \"ERC20.sol\":7535:7542  account */\n      dup3\n        /* \"ERC20.sol\":7544:7549  value */\n      dup3\n        /* \"ERC20.sol\":7529:7534  _burn */\n      tag_59\n        /* \"ERC20.sol\":7529:7550  _burn(account, value) */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7590:7607  _allowed[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":7590:7598  _allowed */\n      0x01\n        /* \"ERC20.sol\":7590:7607  _allowed[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":7578:7588  msg.sender */\n      caller\n        /* \"ERC20.sol\":7590:7619  _allowed[account][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":7560:7631  _approve(account, msg.sender, _allowed[account][msg.sender].sub(value)) */\n      tag_62\n      swap2\n        /* \"ERC20.sol\":7569:7576  account */\n      dup5\n      swap2\n        /* \"ERC20.sol\":7590:7630  _allowed[account][msg.sender].sub(value) */\n      tag_51\n      swap1\n        /* \"ERC20.sol\":7624:7629  value */\n      dup6\n        /* \"ERC20.sol\":7590:7630  _allowed[account][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":7590:7623  _allowed[account][msg.sender].sub */\n      tag_52\n        /* \"ERC20.sol\":7590:7630  _allowed[account][msg.sender].sub(value) */\n      and\n      jump\t// in\n\n    auxdata: 0xa165627a7a7230582097d4d987121d7abdaa8a7dfd3b9fec85f557562a502676ff58f9467b24b08bf60029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50610648806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461017e57806379cc6790146101a4578063a457c2d7146101d0578063a9059cbb146101fc578063dd62ed3e146102285761009e565b8063095ea7b3146100a357806318160ddd146100e357806323b872dd146100fd578063395093511461013357806342966c681461015f575b600080fd5b6100cf600480360360408110156100b957600080fd5b506001600160a01b038135169060200135610256565b604080519115158252519081900360200190f35b6100eb61026c565b60408051918252519081900360200190f35b6100cf6004803603606081101561011357600080fd5b506001600160a01b03813581169160208101359091169060400135610272565b6100cf6004803603604081101561014957600080fd5b506001600160a01b0381351690602001356102c9565b61017c6004803603602081101561017557600080fd5b5035610305565b005b6100eb6004803603602081101561019457600080fd5b50356001600160a01b0316610312565b61017c600480360360408110156101ba57600080fd5b506001600160a01b03813516906020013561032d565b6100cf600480360360408110156101e657600080fd5b506001600160a01b03813516906020013561033b565b6100cf6004803603604081101561021257600080fd5b506001600160a01b038135169060200135610377565b6100eb6004803603604081101561023e57600080fd5b506001600160a01b0381358116916020013516610384565b60006102633384846103af565b50600192915050565b60025490565b600061027f848484610437565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546102bf9186916102ba908663ffffffff61050216565b6103af565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102639185906102ba908663ffffffff61051716565b61030f3382610530565b50565b6001600160a01b031660009081526020819052604090205490565b61033782826105d7565b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102639185906102ba908663ffffffff61050216565b6000610263338484610437565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166103c257600080fd5b6001600160a01b0383166103d557600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661044a57600080fd5b6001600160a01b038316600090815260208190526040902054610473908263ffffffff61050216565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104a8908263ffffffff61051716565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561051157600080fd5b50900390565b60008282018381101561052957600080fd5b9392505050565b6001600160a01b03821661054357600080fd5b600254610556908263ffffffff61050216565b6002556001600160a01b038216600090815260208190526040902054610582908263ffffffff61050216565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6105e18282610530565b6001600160a01b0382166000908152600160209081526040808320338085529252909120546103379184916102ba908563ffffffff6105021656fea165627a7a7230582097d4d987121d7abdaa8a7dfd3b9fec85f557562a502676ff58f9467b24b08bf60029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x648 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x228 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x272 JUMP JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x305 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x312 JUMP JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x32D JUMP JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x33B JUMP JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x377 JUMP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x384 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 CALLER DUP5 DUP5 PUSH2 0x3AF JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F DUP5 DUP5 DUP5 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x2BF SWAP2 DUP7 SWAP2 PUSH2 0x2BA SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x263 SWAP2 DUP6 SWAP1 PUSH2 0x2BA SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x517 AND JUMP JUMPDEST PUSH2 0x30F CALLER DUP3 PUSH2 0x530 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x337 DUP3 DUP3 PUSH2 0x5D7 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x263 SWAP2 DUP6 SWAP1 PUSH2 0x2BA SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 CALLER DUP5 DUP5 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x473 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4A8 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x517 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x556 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x582 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5E1 DUP3 DUP3 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x337 SWAP2 DUP5 SWAP2 PUSH2 0x2BA SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP8 0xd4 0xd9 DUP8 SLT SAR PUSH27 0xBDAA8A7DFD3B9FEC85F557562A502676FF58F9467B24B08BF60029 ",
            "sourceMap": "140:574:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;140:574:1;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461017e57806379cc6790146101a4578063a457c2d7146101d0578063a9059cbb146101fc578063dd62ed3e146102285761009e565b8063095ea7b3146100a357806318160ddd146100e357806323b872dd146100fd578063395093511461013357806342966c681461015f575b600080fd5b6100cf600480360360408110156100b957600080fd5b506001600160a01b038135169060200135610256565b604080519115158252519081900360200190f35b6100eb61026c565b60408051918252519081900360200190f35b6100cf6004803603606081101561011357600080fd5b506001600160a01b03813581169160208101359091169060400135610272565b6100cf6004803603604081101561014957600080fd5b506001600160a01b0381351690602001356102c9565b61017c6004803603602081101561017557600080fd5b5035610305565b005b6100eb6004803603602081101561019457600080fd5b50356001600160a01b0316610312565b61017c600480360360408110156101ba57600080fd5b506001600160a01b03813516906020013561032d565b6100cf600480360360408110156101e657600080fd5b506001600160a01b03813516906020013561033b565b6100cf6004803603604081101561021257600080fd5b506001600160a01b038135169060200135610377565b6100eb6004803603604081101561023e57600080fd5b506001600160a01b0381358116916020013516610384565b60006102633384846103af565b50600192915050565b60025490565b600061027f848484610437565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546102bf9186916102ba908663ffffffff61050216565b6103af565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102639185906102ba908663ffffffff61051716565b61030f3382610530565b50565b6001600160a01b031660009081526020819052604090205490565b61033782826105d7565b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102639185906102ba908663ffffffff61050216565b6000610263338484610437565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166103c257600080fd5b6001600160a01b0383166103d557600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661044a57600080fd5b6001600160a01b038316600090815260208190526040902054610473908263ffffffff61050216565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104a8908263ffffffff61051716565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561051157600080fd5b50900390565b60008282018381101561052957600080fd5b9392505050565b6001600160a01b03821661054357600080fd5b600254610556908263ffffffff61050216565b6002556001600160a01b038216600090815260208190526040902054610582908263ffffffff61050216565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6105e18282610530565b6001600160a01b0382166000908152600160209081526040808320338085529252909120546103379184916102ba908563ffffffff6105021656fea165627a7a7230582097d4d987121d7abdaa8a7dfd3b9fec85f557562a502676ff58f9467b24b08bf60029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x228 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x272 JUMP JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x305 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x312 JUMP JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x32D JUMP JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x33B JUMP JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x377 JUMP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x384 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 CALLER DUP5 DUP5 PUSH2 0x3AF JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F DUP5 DUP5 DUP5 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x2BF SWAP2 DUP7 SWAP2 PUSH2 0x2BA SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x263 SWAP2 DUP6 SWAP1 PUSH2 0x2BA SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x517 AND JUMP JUMPDEST PUSH2 0x30F CALLER DUP3 PUSH2 0x530 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x337 DUP3 DUP3 PUSH2 0x5D7 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x263 SWAP2 DUP6 SWAP1 PUSH2 0x2BA SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 CALLER DUP5 DUP5 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x473 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4A8 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x517 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x556 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x582 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5E1 DUP3 DUP3 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x337 SWAP2 DUP5 SWAP2 PUSH2 0x2BA SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x502 AND JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP8 0xd4 0xd9 DUP8 SLT SAR PUSH27 0xBDAA8A7DFD3B9FEC85F557562A502676FF58F9467B24B08BF60029 ",
            "sourceMap": "140:574:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;140:574:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2712:145:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;907:89;;;:::i;:::-;;;;;;;;;;;;;;;;3320:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3320:224:0;;;;;;;;;;;;;;;;;:::i;4058:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4058:200:0;;;;;;;;:::i;295:77:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:77:1;;:::i;:::-;;1208:104:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1208:104:0;-1:-1:-1;;;;;1208:104:0;;:::i;619:93:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;619:93:1;;;;;;;;:::i;4777:210:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4777:210:0;;;;;;;;:::i;1939:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1939:137:0;;;;;;;;:::i;1643:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:129:0;;;;;;;;;;:::i;2712:145::-;2777:4;2793:36;2802:10;2814:7;2823:5;2793:8;:36::i;:::-;-1:-1:-1;2846:4:0;2712:145;;;;:::o;907:89::-;977:12;;907:89;:::o;3320:224::-;3399:4;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;;;;;3478:14:0;;;;;;:8;:14;;;;;;;;3466:10;3478:26;;;;;;;;;3451:65;;3460:4;;3478:37;;3509:5;3478:37;:30;:37;:::i;:::-;3451:8;:65::i;:::-;-1:-1:-1;3533:4:0;3320:224;;;;;:::o;4058:200::-;4163:10;4138:4;4184:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4184:29:0;;;;;;;;;;4138:4;;4154:76;;4175:7;;4184:45;;4218:10;4184:45;:33;:45;:::i;295:77:1:-;341:24;347:10;359:5;341;:24::i;:::-;295:77;:::o;1208:104:0:-;-1:-1:-1;;;;;1289:16:0;1263:7;1289:16;;;;;;;;;;;;1208:104::o;619:93:1:-;683:22;693:4;699:5;683:9;:22::i;:::-;619:93;;:::o;4777:210:0:-;4887:10;4862:4;4908:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4908:29:0;;;;;;;;;;4862:4;;4878:81;;4899:7;;4908:50;;4942:15;4908:50;:33;:50;:::i;1939:137::-;2000:4;2016:32;2026:10;2038:2;2042:5;2016:9;:32::i;1643:129::-;-1:-1:-1;;;;;1741:15:0;;;1715:7;1741:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1643:129::o;6822:248::-;-1:-1:-1;;;;;6914:21:0;;6906:30;;;;;;-1:-1:-1;;;;;6954:19:0;;6946:28;;;;;;-1:-1:-1;;;;;6985:15:0;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7032:31;;;;;;;;;;;;;;;;;6822:248;;;:::o;5206:256::-;-1:-1:-1;;;;;5293:16:0;;5285:25;;;;;;-1:-1:-1;;;;;5339:15:0;;:9;:15;;;;;;;;;;;:26;;5359:5;5339:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5321:15:0;;;:9;:15;;;;;;;;;;;:44;;;;5391:13;;;;;;;:24;;5409:5;5391:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5375:13:0;;;:9;:13;;;;;;;;;;;;:40;;;;5430:25;;;;;;;5375:13;;5430:25;;;;;;;;;;;;;5206:256;;;:::o;1211:145:12:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:12;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:12:o;6294:263:0:-;-1:-1:-1;;;;;6368:21:0;;6360:30;;;;;;6416:12;;:23;;6433:5;6416:23;:16;:23;:::i;:::-;6401:12;:38;-1:-1:-1;;;;;6470:18:0;;:9;:18;;;;;;;;;;;:29;;6493:5;6470:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6449:18:0;;:9;:18;;;;;;;;;;;:50;;;;6514:36;;;;;;;6449:9;;6514:36;;;;;;;;;;;6294:263;;:::o;7459:179::-;7529:21;7535:7;7544:5;7529;:21::i;:::-;-1:-1:-1;;;;;7590:17:0;;;;;;:8;:17;;;;;;;;7578:10;7590:29;;;;;;;;;7560:71;;7569:7;;7590:40;;7624:5;7590:40;:33;:40;:::i"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "321600",
              "executionCost": "362",
              "totalCost": "321962"
            },
            "external": {
              "allowance(address,address)": "738",
              "approve(address,uint256)": "22390",
              "balanceOf(address)": "545",
              "burn(uint256)": "infinite",
              "burnFrom(address,uint256)": "infinite",
              "decreaseAllowance(address,uint256)": "infinite",
              "increaseAllowance(address,uint256)": "infinite",
              "totalSupply()": "421",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 140,
                "end": 714,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "MSTORE"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "CALLVALUE"
              },
              {
                "begin": 8,
                "end": 17,
                "name": "DUP1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "ISZERO"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPDEST"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "POP"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "DUP1"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "CODECOPY"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 140,
                "end": 714,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a7230582097d4d987121d7abdaa8a7dfd3b9fec85f557562a502676ff58f9467b24b08bf60029",
                ".code": [
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "POP"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "LT"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "SHR"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "GT"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "79CC6790"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMP"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "42966C68"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "EQ"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "DUP1"
                  },
                  {
                    "begin": 140,
                    "end": 714,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "AND"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "RETURN"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "ADD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "RETURN"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "20"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "23"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "AND"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "ADD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "24"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "DUP1"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "26"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "26"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "PUSH [tag]",
                    "value": "27"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "STOP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "29"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "29"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "AND"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "DUP1"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "32"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "32"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "DUP2"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "AND"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "ADD"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "AND"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "ADD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "38"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "38"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "AND"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "ADD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "39"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "41"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "ADD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2777,
                    "end": 2781,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 2802,
                    "end": 2812,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2814,
                    "end": 2821,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2823,
                    "end": 2828,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2793,
                    "end": 2801,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "tag",
                    "value": "44"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2846,
                    "end": 2850,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3399,
                    "end": 3403,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 3425,
                    "end": 3429,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3431,
                    "end": 3433,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3435,
                    "end": 3440,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3415,
                    "end": 3424,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "tag",
                    "value": "48"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3486,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3466,
                    "end": 3476,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "PUSH [tag]",
                    "value": "50"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3509,
                    "end": 3514,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3478,
                    "end": 3508,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "tag",
                    "value": "51"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3451,
                    "end": 3459,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "tag",
                    "value": "50"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3533,
                    "end": 3537,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "24"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4163,
                    "end": 4173,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4192,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4218,
                    "end": 4228,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4184,
                    "end": 4217,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "tag",
                    "value": "27"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 365,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 347,
                    "end": 357,
                    "name": "CALLER"
                  },
                  {
                    "begin": 359,
                    "end": 364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 341,
                    "end": 346,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 341,
                    "end": 365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 341,
                    "end": 365,
                    "name": "tag",
                    "value": "58"
                  },
                  {
                    "begin": 341,
                    "end": 365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "POP"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "AND"
                  },
                  {
                    "begin": 1263,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 683,
                    "end": 705,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 693,
                    "end": 697,
                    "name": "DUP3"
                  },
                  {
                    "begin": 699,
                    "end": 704,
                    "name": "DUP3"
                  },
                  {
                    "begin": 683,
                    "end": 692,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 683,
                    "end": 705,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 683,
                    "end": 705,
                    "name": "tag",
                    "value": "62"
                  },
                  {
                    "begin": 683,
                    "end": 705,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "POP"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "POP"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "36"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4887,
                    "end": 4897,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4916,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4942,
                    "end": 4957,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4908,
                    "end": 4941,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "39"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2000,
                    "end": 2004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 2026,
                    "end": 2036,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2038,
                    "end": 2040,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2042,
                    "end": 2047,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2016,
                    "end": 2025,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "42"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "AND"
                  },
                  {
                    "begin": 1715,
                    "end": 1722,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1749,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "AND"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "tag",
                    "value": "45"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "AND"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH [tag]",
                    "value": "71"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "tag",
                    "value": "71"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "AND"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "tag",
                    "value": "72"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 6993,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SUB"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "ADD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "tag",
                    "value": "49"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "AND"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH [tag]",
                    "value": "74"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "tag",
                    "value": "74"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5348,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH [tag]",
                    "value": "75"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5359,
                    "end": 5364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5339,
                    "end": 5358,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "tag",
                    "value": "75"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "AND"
                  },
                  {
                    "begin": 5321,
                    "end": 5330,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH [tag]",
                    "value": "76"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5409,
                    "end": 5414,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5391,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "tag",
                    "value": "76"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "AND"
                  },
                  {
                    "begin": 5375,
                    "end": 5384,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "AND"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SUB"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "ADD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "tag",
                    "value": "52"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1269,
                    "end": 1276,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1301,
                    "end": 1302,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1297,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "GT"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH [tag]",
                    "value": "78"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "tag",
                    "value": "78"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SUB"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "tag",
                    "value": "56"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1497,
                    "end": 1504,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "ADD"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "LT"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH [tag]",
                    "value": "80"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "tag",
                    "value": "80"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1576,
                    "end": 1577,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "tag",
                    "value": "59"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6368,
                    "end": 6389,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6368,
                    "end": 6389,
                    "name": "AND"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "PUSH [tag]",
                    "value": "82"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "tag",
                    "value": "82"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6416,
                    "end": 6428,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 6416,
                    "end": 6428,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "PUSH [tag]",
                    "value": "83"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6433,
                    "end": 6438,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 6416,
                    "end": 6432,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "AND"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "tag",
                    "value": "83"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6401,
                    "end": 6413,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 6401,
                    "end": 6439,
                    "name": "SSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "AND"
                  },
                  {
                    "begin": 6470,
                    "end": 6479,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "PUSH [tag]",
                    "value": "84"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6493,
                    "end": 6498,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 6470,
                    "end": 6492,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "AND"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "tag",
                    "value": "84"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "AND"
                  },
                  {
                    "begin": 6449,
                    "end": 6458,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6449,
                    "end": 6458,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6458,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SUB"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "ADD"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "POP"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "POP"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7459,
                    "end": 7638,
                    "name": "tag",
                    "value": "63"
                  },
                  {
                    "begin": 7459,
                    "end": 7638,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "PUSH [tag]",
                    "value": "86"
                  },
                  {
                    "begin": 7535,
                    "end": 7542,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7544,
                    "end": 7549,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7529,
                    "end": 7534,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "tag",
                    "value": "86"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "AND"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7598,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP4"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 7578,
                    "end": 7588,
                    "name": "CALLER"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 7560,
                    "end": 7631,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 7560,
                    "end": 7631,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7569,
                    "end": 7576,
                    "name": "DUP5"
                  },
                  {
                    "begin": 7569,
                    "end": 7576,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7624,
                    "end": 7629,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 7590,
                    "end": 7623,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "AND"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "JUMP",
                    "value": "[in]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "burn(uint256)": "42966c68",
            "burnFrom(address,uint256)": "79cc6790",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Token that can be irreversibly burned (destroyed).\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The account whose tokens will be burned.\",\"value\":\"uint256 The amount of token to be burned.\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Burnable Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return A uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\",\"keccak256\":\"0x612eb74ef1ba2e4ea72f85dda6c21f7dbdcc0ece01b1bf3b590f3ea4d2e7e13d\"},\"ERC20Burnable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @title Burnable Token\\n * @dev Token that can be irreversibly burned (destroyed).\\n */\\ncontract ERC20Burnable is ERC20 {\\n    /**\\n     * @dev Burns a specific amount of tokens.\\n     * @param value The amount of token to be burned.\\n     */\\n    function burn(uint256 value) public {\\n        _burn(msg.sender, value);\\n    }\\n\\n    /**\\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\\n     * @param from address The account whose tokens will be burned.\\n     * @param value uint256 The amount of token to be burned.\\n     */\\n    function burnFrom(address from, uint256 value) public {\\n        _burnFrom(from, value);\\n    }\\n}\\n\",\"keccak256\":\"0xcf6b3e804a9b1e3d6ca4a695524cbaa52cd26cc86978a2b99052ba1a5d25653f\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "ERC20Capped.sol": {
      "ERC20Capped": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "cap",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "mint",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isMinter",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "cap",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterRemoved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "Mintable token with a token cap.",
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "owner": "address The address which owns the funds.",
                "spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "spender": "The address which will spend the funds.",
                "value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "owner": "The address to query the balance of."
              },
              "return": "A uint256 representing the amount owned by the passed address."
            },
            "cap()": {
              "return": "the cap for the token minting."
            },
            "decreaseAllowance(address,uint256)": {
              "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "spender": "The address which will spend the funds.",
                "subtractedValue": "The amount of tokens to decrease the allowance by."
              }
            },
            "increaseAllowance(address,uint256)": {
              "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "addedValue": "The amount of tokens to increase the allowance by.",
                "spender": "The address which will spend the funds."
              }
            },
            "mint(address,uint256)": {
              "details": "Function to mint tokens",
              "params": {
                "to": "The address that will receive the minted tokens.",
                "value": "The amount of tokens to mint."
              },
              "return": "A boolean that indicates if the operation was successful."
            },
            "totalSupply()": {
              "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
              "details": "Transfer token to a specified address",
              "params": {
                "to": "The address to transfer to.",
                "value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
              "params": {
                "from": "address The address which you want to send tokens from",
                "to": "address The address which you want to transfer to",
                "value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "Capped token"
        },
        "evm": {
          "assembly": "    /* \"ERC20Capped.sol\":128:585  contract ERC20Capped is ERC20Mintable {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20Capped.sol\":199:285  constructor (uint256 cap) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ERC20Capped.sol\":199:285  constructor (uint256 cap) public {... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"ERC20Capped.sol\":199:285  constructor (uint256 cap) public {... */\n  mload\n    /* \"MinterRole.sol\":274:296  _addMinter(msg.sender) */\n  tag_6\n    /* \"MinterRole.sol\":285:295  msg.sender */\n  caller\n    /* \"MinterRole.sol\":274:284  _addMinter */\n  tag_7\n    /* \"ERC20Capped.sol\":199:285  constructor (uint256 cap) public {... */\n  0x20\n    /* \"MinterRole.sol\":274:284  _addMinter */\n  swap1\n  dup2\n  shl\n    /* \"MinterRole.sol\":274:296  _addMinter(msg.sender) */\n  swap1\n  shr\n  jump\t// in\ntag_6:\n    /* \"ERC20Capped.sol\":256:257  0 */\n  0x00\n    /* \"ERC20Capped.sol\":250:253  cap */\n  dup2\n    /* \"ERC20Capped.sol\":250:257  cap > 0 */\n  gt\n    /* \"ERC20Capped.sol\":242:258  require(cap > 0) */\n  tag_9\n  jumpi\n  0x00\n  dup1\n  revert\ntag_9:\n    /* \"ERC20Capped.sol\":268:272  _cap */\n  0x04\n    /* \"ERC20Capped.sol\":268:278  _cap = cap */\n  sstore\n    /* \"ERC20Capped.sol\":128:585  contract ERC20Capped is ERC20Mintable {... */\n  jump(tag_10)\n    /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\ntag_7:\n    /* \"MinterRole.sol\":740:761  _minters.add(account) */\n  tag_12\n    /* \"MinterRole.sol\":753:760  account */\n  dup2\n    /* \"MinterRole.sol\":740:748  _minters */\n  0x03\n    /* \"MinterRole.sol\":740:752  _minters.add */\n  or(tag_0_113, shl(0x20, tag_13))\n  swap1\n    /* \"MinterRole.sol\":740:761  _minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"MinterRole.sol\":776:796  MinterAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":335:356  account != address(0) */\n  dup2\n  and\n    /* \"Roles.sol\":327:357  require(account != address(0)) */\n  tag_15\n  jumpi\n  0x00\n  dup1\n  revert\ntag_15:\n    /* \"Roles.sol\":376:394  has(role, account) */\n  tag_16\n    /* \"Roles.sol\":380:384  role */\n  dup3\n    /* \"Roles.sol\":386:393  account */\n  dup3\n    /* \"Roles.sol\":376:379  has */\n  shl(0x20, tag_17)\n    /* \"Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"Roles.sol\":367:395  require(!has(role, account)) */\n  tag_18\n  jumpi\n  0x00\n  dup1\n  revert\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  and\n    /* \"Roles.sol\":406:417  role.bearer */\n  0x00\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Roles.sol\":429:433  true */\n  0x01\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  jump\t// out\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\ntag_17:\n    /* \"Roles.sol\":858:862  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":882:903  account != address(0) */\n  dup3\n  and\n    /* \"Roles.sol\":874:904  require(account != address(0)) */\n  tag_20\n  jumpi\n  0x00\n  dup1\n  revert\ntag_20:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  and\n    /* \"Roles.sol\":921:932  role.bearer */\n  0x00\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"ERC20Capped.sol\":128:585  contract ERC20Capped is ERC20Mintable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20Capped.sol\":128:585  contract ERC20Capped is ERC20Mintable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20Capped.sol\":128:585  contract ERC20Capped is ERC20Mintable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x98650275\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_25\n      jump\t// in\n        /* \"ERC20Capped.sol\":353:426  function cap() public view returns (uint256) {... */\n    tag_6:\n      tag_21\n      tag_27\n      jump\t// in\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_7:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n        /* \"ERC20Mintable.sol\":426:554  function mint(address to, uint256 value) public onlyMinter returns (bool) {... */\n    tag_8:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Mintable.sol\":426:554  function mint(address to, uint256 value) public onlyMinter returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_9:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n      pop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n      pop\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n    tag_11:\n      tag_37\n      tag_41\n      jump\t// in\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_12:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_44\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_13:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n    tag_14:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n      pop\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_50\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_15:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_53\n      jump\t// in\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_20:\n        /* \"ERC20.sol\":2777:2781  bool */\n      0x00\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      tag_55\n        /* \"ERC20.sol\":2802:2812  msg.sender */\n      caller\n        /* \"ERC20.sol\":2814:2821  spender */\n      dup5\n        /* \"ERC20.sol\":2823:2828  value */\n      dup5\n        /* \"ERC20.sol\":2793:2801  _approve */\n      tag_56\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_55:\n      pop\n        /* \"ERC20.sol\":2846:2850  true */\n      0x01\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_22:\n        /* \"ERC20.sol\":977:989  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_25:\n        /* \"ERC20.sol\":3399:3403  bool */\n      0x00\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_59\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_60\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3478:3486  _allowed */\n      0x01\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3466:3476  msg.sender */\n      caller\n        /* \"ERC20.sol\":3478:3504  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      tag_61\n      swap2\n        /* \"ERC20.sol\":3460:3464  from */\n      dup7\n      swap2\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      tag_62\n      swap1\n        /* \"ERC20.sol\":3509:3514  value */\n      dup7\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":3478:3508  _allowed[from][msg.sender].sub */\n      tag_63\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_62:\n        /* \"ERC20.sol\":3451:3459  _approve */\n      tag_56\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      jump\t// in\n    tag_61:\n      pop\n        /* \"ERC20.sol\":3533:3537  true */\n      0x01\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Capped.sol\":353:426  function cap() public view returns (uint256) {... */\n    tag_27:\n        /* \"ERC20Capped.sol\":415:419  _cap */\n      sload(0x04)\n        /* \"ERC20Capped.sol\":353:426  function cap() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_30:\n        /* \"ERC20.sol\":4163:4173  msg.sender */\n      caller\n        /* \"ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4184:4192  _allowed */\n      0x01\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4184:4213  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4138:4142  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4154:4230  _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue)) */\n      tag_55\n      swap2\n        /* \"ERC20.sol\":4175:4182  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      tag_62\n      swap1\n        /* \"ERC20.sol\":4218:4228  addedValue */\n      dup7\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4184:4217  _allowed[msg.sender][spender].add */\n      tag_68\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"ERC20Mintable.sol\":426:554  function mint(address to, uint256 value) public onlyMinter returns (bool) {... */\n    tag_33:\n        /* \"ERC20Mintable.sol\":494:498  bool */\n      0x00\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_70\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_50\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_70:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"ERC20Mintable.sol\":510:526  _mint(to, value) */\n      tag_55\n        /* \"ERC20Mintable.sol\":516:518  to */\n      dup4\n        /* \"ERC20Mintable.sol\":520:525  value */\n      dup4\n        /* \"ERC20Mintable.sol\":510:515  _mint */\n      tag_74\n        /* \"ERC20Mintable.sol\":510:526  _mint(to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      and\n        /* \"ERC20.sol\":1263:1270  uint256 */\n      0x00\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n    tag_39:\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_77\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_50\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_77:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"MinterRole.sol\":571:590  _addMinter(account) */\n      tag_80\n        /* \"MinterRole.sol\":582:589  account */\n      dup2\n        /* \"MinterRole.sol\":571:581  _addMinter */\n      tag_81\n        /* \"MinterRole.sol\":571:590  _addMinter(account) */\n      jump\t// in\n    tag_80:\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n    tag_41:\n        /* \"MinterRole.sol\":646:671  _removeMinter(msg.sender) */\n      tag_83\n        /* \"MinterRole.sol\":660:670  msg.sender */\n      caller\n        /* \"MinterRole.sol\":646:659  _removeMinter */\n      tag_84\n        /* \"MinterRole.sol\":646:671  _removeMinter(msg.sender) */\n      jump\t// in\n    tag_83:\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n      jump\t// out\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_44:\n        /* \"ERC20.sol\":4887:4897  msg.sender */\n      caller\n        /* \"ERC20.sol\":4862:4866  bool */\n      0x00\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4908:4916  _allowed */\n      0x01\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4908:4937  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4862:4866  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4878:4959  _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue)) */\n      tag_55\n      swap2\n        /* \"ERC20.sol\":4899:4906  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_62\n      swap1\n        /* \"ERC20.sol\":4942:4957  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4908:4941  _allowed[msg.sender][spender].sub */\n      tag_63\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_47:\n        /* \"ERC20.sol\":2000:2004  bool */\n      0x00\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      tag_55\n        /* \"ERC20.sol\":2026:2036  msg.sender */\n      caller\n        /* \"ERC20.sol\":2038:2040  to */\n      dup5\n        /* \"ERC20.sol\":2042:2047  value */\n      dup5\n        /* \"ERC20.sol\":2016:2025  _transfer */\n      tag_60\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n    tag_50:\n        /* \"MinterRole.sol\":450:454  bool */\n      0x00\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      tag_91\n        /* \"MinterRole.sol\":473:481  _minters */\n      0x03\n        /* \"MinterRole.sol\":486:493  account */\n      dup4\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":473:485  _minters.has */\n      tag_92\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      and\n      jump\t// in\n    tag_91:\n        /* \"MinterRole.sol\":466:494  return _minters.has(account) */\n      swap3\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":1715:1722  uint256 */\n      0x00\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1741:1749  _allowed */\n      0x01\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1741:1765  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6914:6935  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6906:6936  require(spender != address(0)) */\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6954:6973  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6946:6974  require(owner != address(0)) */\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6985:6993  _allowed */\n      0x01\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6985:7009  _allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6985:7017  _allowed[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":7032:7063  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5293:5309  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5285:5310  require(to != address(0)) */\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":5339:5348  _balances */\n      0x00\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      tag_99\n      swap1\n        /* \"ERC20.sol\":5359:5364  value */\n      dup3\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5339:5358  _balances[from].sub */\n      tag_63\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      and\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":5321:5330  _balances */\n      0x00\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":5321:5365  _balances[from] = _balances[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":5391:5404  _balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      tag_100\n      swap1\n        /* \"ERC20.sol\":5409:5414  value */\n      dup3\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5391:5408  _balances[to].add */\n      tag_68\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      and\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":5375:5384  _balances */\n      0x00\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":5375:5415  _balances[to] = _balances[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_63:\n        /* \"SafeMath.sol\":1269:1276  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1301:1302  a */\n      dup3\n        /* \"SafeMath.sol\":1296:1297  b */\n      dup3\n        /* \"SafeMath.sol\":1296:1302  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1288:1303  require(b <= a) */\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n        /* \"SafeMath.sol\":1325:1330  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"SafeMath.sol\":1497:1504  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1528:1533  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":1551:1557  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n        /* \"SafeMath.sol\":1576:1577  c */\n      swap4\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Capped.sol\":432:583  function _mint(address account, uint256 value) internal {... */\n    tag_74:\n        /* \"ERC20Capped.sol\":534:538  _cap */\n      sload(0x04)\n        /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n      tag_106\n        /* \"ERC20Capped.sol\":524:529  value */\n      dup3\n        /* \"ERC20Capped.sol\":506:519  totalSupply() */\n      tag_107\n        /* \"ERC20Capped.sol\":506:517  totalSupply */\n      tag_22\n        /* \"ERC20Capped.sol\":506:519  totalSupply() */\n      jump\t// in\n    tag_107:\n        /* \"ERC20Capped.sol\":506:523  totalSupply().add */\n      swap1\n        /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n      0xffffffff\n        /* \"ERC20Capped.sol\":506:523  totalSupply().add */\n      tag_68\n        /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n      and\n      jump\t// in\n    tag_106:\n        /* \"ERC20Capped.sol\":506:538  totalSupply().add(value) <= _cap */\n      gt\n      iszero\n        /* \"ERC20Capped.sol\":498:539  require(totalSupply().add(value) <= _cap) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n        /* \"ERC20Capped.sol\":549:576  super._mint(account, value) */\n      tag_109\n        /* \"ERC20Capped.sol\":561:568  account */\n      dup3\n        /* \"ERC20Capped.sol\":570:575  value */\n      dup3\n        /* \"ERC20Capped.sol\":549:560  super._mint */\n      tag_110\n        /* \"ERC20Capped.sol\":549:576  super._mint(account, value) */\n      jump\t// in\n    tag_109:\n        /* \"ERC20Capped.sol\":432:583  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n    tag_81:\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      tag_112\n        /* \"MinterRole.sol\":740:748  _minters */\n      0x03\n        /* \"MinterRole.sol\":753:760  account */\n      dup3\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":740:752  _minters.add */\n      tag_113\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      and\n      jump\t// in\n    tag_112:\n        /* \"MinterRole.sol\":776:796  MinterAdded(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":809:936  function _removeMinter(address account) internal {... */\n    tag_84:\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      tag_115\n        /* \"MinterRole.sol\":868:876  _minters */\n      0x03\n        /* \"MinterRole.sol\":884:891  account */\n      dup3\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":868:883  _minters.remove */\n      tag_116\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      and\n      jump\t// in\n    tag_115:\n        /* \"MinterRole.sol\":907:929  MinterRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"MinterRole.sol\":809:936  function _removeMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_92:\n        /* \"Roles.sol\":858:862  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":882:903  account != address(0) */\n      dup3\n      and\n        /* \"Roles.sol\":874:904  require(account != address(0)) */\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      and\n        /* \"Roles.sol\":921:932  role.bearer */\n      0x00\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5879:5900  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5871:5901  require(account != address(0)) */\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n        /* \"ERC20.sol\":5927:5939  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      tag_121\n      swap1\n        /* \"ERC20.sol\":5944:5949  value */\n      dup3\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5927:5943  _totalSupply.add */\n      tag_68\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_121:\n        /* \"ERC20.sol\":5912:5924  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":5912:5950  _totalSupply = _totalSupply.add(value) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5981:5999  _balances[account] */\n      dup3\n      and\n        /* \"ERC20.sol\":5981:5990  _balances */\n      0x00\n        /* \"ERC20.sol\":5981:5999  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      tag_122\n      swap1\n        /* \"ERC20.sol\":6004:6009  value */\n      dup3\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5981:6003  _balances[account].add */\n      tag_68\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      and\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      dup4\n      and\n        /* \"ERC20.sol\":5960:5969  _balances */\n      0x00\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":5960:6010  _balances[account] = _balances[account].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      swap3\n      swap4\n        /* \"ERC20.sol\":5960:5969  _balances */\n      swap2\n      swap3\n        /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":335:356  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":327:357  require(account != address(0)) */\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n        /* \"Roles.sol\":376:394  has(role, account) */\n      tag_125\n        /* \"Roles.sol\":380:384  role */\n      dup3\n        /* \"Roles.sol\":386:393  account */\n      dup3\n        /* \"Roles.sol\":376:379  has */\n      tag_92\n        /* \"Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_125:\n        /* \"Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"Roles.sol\":367:395  require(!has(role, account)) */\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      and\n        /* \"Roles.sol\":406:417  role.bearer */\n      0x00\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Roles.sol\":429:433  true */\n      0x01\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":593:614  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":585:615  require(account != address(0)) */\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n        /* \"Roles.sol\":633:651  has(role, account) */\n      tag_129\n        /* \"Roles.sol\":637:641  role */\n      dup3\n        /* \"Roles.sol\":643:650  account */\n      dup3\n        /* \"Roles.sol\":633:636  has */\n      tag_92\n        /* \"Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_129:\n        /* \"Roles.sol\":625:652  require(has(role, account)) */\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      and\n        /* \"Roles.sol\":686:691  false */\n      0x00\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":663:691  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820633b7988c20d6b019b5c878799d46f835e42c2fe814fbc7acc5adfa59d01afcc0029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506040516020806109888339810180604052602081101561003057600080fd5b505161004233610057602090811b901c565b6000811161004f57600080fd5b60045561012d565b61006f8160036100a660201b61078c1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600160a01b0381166100b957600080fd5b6100c982826100f860201b60201c565b156100d357600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b03821661010d57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61084c8061013c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d71461021a578063a9059cbb14610246578063aa271e1a14610272578063dd62ed3e14610298576100cf565b806370a08231146101c4578063983b2d56146101ea5780639865027514610212576100cf565b8063095ea7b3146100d457806318160ddd1461011457806323b872dd1461012e578063355274ea14610164578063395093511461016c57806340c10f1914610198575b600080fd5b610100600480360360408110156100ea57600080fd5b506001600160a01b0381351690602001356102c6565b604080519115158252519081900360200190f35b61011c6102dc565b60408051918252519081900360200190f35b6101006004803603606081101561014457600080fd5b506001600160a01b038135811691602081013590911690604001356102e2565b61011c610339565b6101006004803603604081101561018257600080fd5b506001600160a01b03813516906020013561033f565b610100600480360360408110156101ae57600080fd5b506001600160a01b03813516906020013561037b565b61011c600480360360208110156101da57600080fd5b50356001600160a01b0316610399565b6102106004803603602081101561020057600080fd5b50356001600160a01b03166103b4565b005b6102106103d2565b6101006004803603604081101561023057600080fd5b506001600160a01b0381351690602001356103dd565b6101006004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610419565b6101006004803603602081101561028857600080fd5b50356001600160a01b0316610426565b61011c600480360360408110156102ae57600080fd5b506001600160a01b038135811691602001351661043f565b60006102d333848461046a565b50600192915050565b60025490565b60006102ef8484846104f2565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461032f91869161032a908663ffffffff6105bd16565b61046a565b5060019392505050565b60045490565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d391859061032a908663ffffffff6105d216565b600061038633610426565b61038f57600080fd5b6102d383836105eb565b6001600160a01b031660009081526020819052604090205490565b6103bd33610426565b6103c657600080fd5b6103cf8161061f565b50565b6103db33610667565b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d391859061032a908663ffffffff6105bd16565b60006102d33384846104f2565b600061043960038363ffffffff6106af16565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661047d57600080fd5b6001600160a01b03831661049057600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661050557600080fd5b6001600160a01b03831660009081526020819052604090205461052e908263ffffffff6105bd16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610563908263ffffffff6105d216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156105cc57600080fd5b50900390565b6000828201838110156105e457600080fd5b9392505050565b600454610606826105fa6102dc565b9063ffffffff6105d216565b111561061157600080fd5b61061b82826106e4565b5050565b61063060038263ffffffff61078c16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61067860038263ffffffff6107d816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166106c457600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0382166106f757600080fd5b60025461070a908263ffffffff6105d216565b6002556001600160a01b038216600090815260208190526040902054610736908263ffffffff6105d216565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03811661079f57600080fd5b6107a982826106af565b156107b357600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166107eb57600080fd5b6107f582826106af565b6107fe57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820633b7988c20d6b019b5c878799d46f835e42c2fe814fbc7acc5adfa59d01afcc0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x988 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x42 CALLER PUSH2 0x57 PUSH1 0x20 SWAP1 DUP2 SHL SWAP1 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x12D JUMP JUMPDEST PUSH2 0x6F DUP2 PUSH1 0x3 PUSH2 0xA6 PUSH1 0x20 SHL PUSH2 0x78C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 DUP3 DUP3 PUSH2 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x84C DUP1 PUSH2 0x13C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x298 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x212 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x198 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x339 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x33F JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x399 JUMP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x426 JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x43F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 CALLER DUP5 DUP5 PUSH2 0x46A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF DUP5 DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x32F SWAP2 DUP7 SWAP2 PUSH2 0x32A SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5BD AND JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2D3 SWAP2 DUP6 SWAP1 PUSH2 0x32A SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386 CALLER PUSH2 0x426 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 DUP4 DUP4 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BD CALLER PUSH2 0x426 JUMP JUMPDEST PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x61F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3DB CALLER PUSH2 0x667 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2D3 SWAP2 DUP6 SWAP1 PUSH2 0x32A SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5BD AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 CALLER DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 PUSH1 0x3 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6AF AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x52E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5BD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x563 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x606 DUP3 PUSH2 0x5FA PUSH2 0x2DC JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST GT ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61B DUP3 DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x630 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x78C AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x678 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7D8 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x70A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x736 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A9 DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F5 DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x3B7988C2 0xd PUSH12 0x19B5C878799D46F835E42C2 INVALID DUP2 0x4f 0xbc PUSH27 0xCC5ADFA59D01AFCC00290000000000000000000000000000000000 ",
            "sourceMap": "128:457:2:-;;;199:86;8:9:-1;5:2;;;30:1;27;20:12;5:2;199:86:2;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;199:86:2;274:22:7;285:10;274;199:86:2;274:10:7;;;:22;;:::i;:::-;256:1:2;250:3;:7;242:16;;;;;;268:4;:10;128:457;;684:119:7;740:21;753:7;740:8;:12;;;;;;:21;;;;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:7;;;;;;;;684:119;:::o;259:181:11:-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;128:457:2:-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d71461021a578063a9059cbb14610246578063aa271e1a14610272578063dd62ed3e14610298576100cf565b806370a08231146101c4578063983b2d56146101ea5780639865027514610212576100cf565b8063095ea7b3146100d457806318160ddd1461011457806323b872dd1461012e578063355274ea14610164578063395093511461016c57806340c10f1914610198575b600080fd5b610100600480360360408110156100ea57600080fd5b506001600160a01b0381351690602001356102c6565b604080519115158252519081900360200190f35b61011c6102dc565b60408051918252519081900360200190f35b6101006004803603606081101561014457600080fd5b506001600160a01b038135811691602081013590911690604001356102e2565b61011c610339565b6101006004803603604081101561018257600080fd5b506001600160a01b03813516906020013561033f565b610100600480360360408110156101ae57600080fd5b506001600160a01b03813516906020013561037b565b61011c600480360360208110156101da57600080fd5b50356001600160a01b0316610399565b6102106004803603602081101561020057600080fd5b50356001600160a01b03166103b4565b005b6102106103d2565b6101006004803603604081101561023057600080fd5b506001600160a01b0381351690602001356103dd565b6101006004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610419565b6101006004803603602081101561028857600080fd5b50356001600160a01b0316610426565b61011c600480360360408110156102ae57600080fd5b506001600160a01b038135811691602001351661043f565b60006102d333848461046a565b50600192915050565b60025490565b60006102ef8484846104f2565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461032f91869161032a908663ffffffff6105bd16565b61046a565b5060019392505050565b60045490565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d391859061032a908663ffffffff6105d216565b600061038633610426565b61038f57600080fd5b6102d383836105eb565b6001600160a01b031660009081526020819052604090205490565b6103bd33610426565b6103c657600080fd5b6103cf8161061f565b50565b6103db33610667565b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d391859061032a908663ffffffff6105bd16565b60006102d33384846104f2565b600061043960038363ffffffff6106af16565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661047d57600080fd5b6001600160a01b03831661049057600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661050557600080fd5b6001600160a01b03831660009081526020819052604090205461052e908263ffffffff6105bd16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610563908263ffffffff6105d216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156105cc57600080fd5b50900390565b6000828201838110156105e457600080fd5b9392505050565b600454610606826105fa6102dc565b9063ffffffff6105d216565b111561061157600080fd5b61061b82826106e4565b5050565b61063060038263ffffffff61078c16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61067860038263ffffffff6107d816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166106c457600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0382166106f757600080fd5b60025461070a908263ffffffff6105d216565b6002556001600160a01b038216600090815260208190526040902054610736908263ffffffff6105d216565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03811661079f57600080fd5b6107a982826106af565b156107b357600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0381166107eb57600080fd5b6107f582826106af565b6107fe57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820633b7988c20d6b019b5c878799d46f835e42c2fe814fbc7acc5adfa59d01afcc0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x298 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x212 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x198 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x339 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x33F JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x399 JUMP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x426 JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x43F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 CALLER DUP5 DUP5 PUSH2 0x46A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF DUP5 DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x32F SWAP2 DUP7 SWAP2 PUSH2 0x32A SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5BD AND JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2D3 SWAP2 DUP6 SWAP1 PUSH2 0x32A SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386 CALLER PUSH2 0x426 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3 DUP4 DUP4 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BD CALLER PUSH2 0x426 JUMP JUMPDEST PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x61F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3DB CALLER PUSH2 0x667 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2D3 SWAP2 DUP6 SWAP1 PUSH2 0x32A SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5BD AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 CALLER DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 PUSH1 0x3 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6AF AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x52E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5BD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x563 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x606 DUP3 PUSH2 0x5FA PUSH2 0x2DC JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST GT ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61B DUP3 DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x630 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x78C AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x678 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7D8 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x70A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x736 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5D2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A9 DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F5 DUP3 DUP3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x3B7988C2 0xd PUSH12 0x19B5C878799D46F835E42C2 INVALID DUP2 0x4f 0xbc PUSH27 0xCC5ADFA59D01AFCC00290000000000000000000000000000000000 ",
            "sourceMap": "128:457:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;128:457:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2712:145:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;907:89;;;:::i;:::-;;;;;;;;;;;;;;;;3320:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3320:224:0;;;;;;;;;;;;;;;;;:::i;353:73:2:-;;;:::i;4058:200:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4058:200:0;;;;;;;;:::i;426:128:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;426:128:4;;;;;;;;:::i;1208:104:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1208:104:0;-1:-1:-1;;;;;1208:104:0;;:::i;507:90:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;507:90:7;-1:-1:-1;;;;;507:90:7;;:::i;:::-;;603:75;;;:::i;4777:210:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4777:210:0;;;;;;;;:::i;1939:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1939:137:0;;;;;;;;:::i;394:107:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;394:107:7;-1:-1:-1;;;;;394:107:7;;:::i;1643:129:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:129:0;;;;;;;;;;:::i;2712:145::-;2777:4;2793:36;2802:10;2814:7;2823:5;2793:8;:36::i;:::-;-1:-1:-1;2846:4:0;2712:145;;;;:::o;907:89::-;977:12;;907:89;:::o;3320:224::-;3399:4;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;;;;;3478:14:0;;;;;;:8;:14;;;;;;;;3466:10;3478:26;;;;;;;;;3451:65;;3460:4;;3478:37;;3509:5;3478:37;:30;:37;:::i;:::-;3451:8;:65::i;:::-;-1:-1:-1;3533:4:0;3320:224;;;;;:::o;353:73:2:-;415:4;;353:73;:::o;4058:200:0:-;4163:10;4138:4;4184:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4184:29:0;;;;;;;;;;4138:4;;4154:76;;4175:7;;4184:45;;4218:10;4184:45;:33;:45;:::i;426:128:4:-;494:4;349:20:7;358:10;349:8;:20::i;:::-;341:29;;;;;;510:16:4;516:2;520:5;510;:16::i;1208:104:0:-;-1:-1:-1;;;;;1289:16:0;1263:7;1289:16;;;;;;;;;;;;1208:104::o;507:90:7:-;349:20;358:10;349:8;:20::i;:::-;341:29;;;;;;571:19;582:7;571:10;:19::i;:::-;507:90;:::o;603:75::-;646:25;660:10;646:13;:25::i;:::-;603:75::o;4777:210:0:-;4887:10;4862:4;4908:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4908:29:0;;;;;;;;;;4862:4;;4878:81;;4899:7;;4908:50;;4942:15;4908:50;:33;:50;:::i;1939:137::-;2000:4;2016:32;2026:10;2038:2;2042:5;2016:9;:32::i;394:107:7:-;450:4;473:21;:8;486:7;473:21;:12;:21;:::i;:::-;466:28;394:107;-1:-1:-1;;394:107:7:o;1643:129:0:-;-1:-1:-1;;;;;1741:15:0;;;1715:7;1741:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1643:129::o;6822:248::-;-1:-1:-1;;;;;6914:21:0;;6906:30;;;;;;-1:-1:-1;;;;;6954:19:0;;6946:28;;;;;;-1:-1:-1;;;;;6985:15:0;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7032:31;;;;;;;;;;;;;;;;;6822:248;;;:::o;5206:256::-;-1:-1:-1;;;;;5293:16:0;;5285:25;;;;;;-1:-1:-1;;;;;5339:15:0;;:9;:15;;;;;;;;;;;:26;;5359:5;5339:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5321:15:0;;;:9;:15;;;;;;;;;;;:44;;;;5391:13;;;;;;;:24;;5409:5;5391:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5375:13:0;;;:9;:13;;;;;;;;;;;;:40;;;;5430:25;;;;;;;5375:13;;5430:25;;;;;;;;;;;;;5206:256;;;:::o;1211:145:12:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:12;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:12:o;432:151:2:-;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;:::-;432:151;;:::o;684:119:7:-;740:21;:8;753:7;740:21;:12;:21;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:7;;;;;;;;684:119;:::o;809:127::-;868:24;:8;884:7;868:24;:15;:24;:::i;:::-;907:22;;-1:-1:-1;;;;;907:22:7;;;;;;;;809:127;:::o;786:162:11:-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;5805:263:0:-;-1:-1:-1;;;;;5879:21:0;;5871:30;;;;;;5927:12;;:23;;5944:5;5927:23;:16;:23;:::i;:::-;5912:12;:38;-1:-1:-1;;;;;5981:18:0;;:9;:18;;;;;;;;;;;:29;;6004:5;5981:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5960:18:0;;:9;:18;;;;;;;;;;;:50;;;;6025:36;;;;;;;5960:18;;:9;;6025:36;;;;;;;;;;5805:263;;:::o;259:181:11:-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:11;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:11;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:11;;;514:184::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "424800",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "addMinter(address)": "infinite",
              "allowance(address,address)": "738",
              "approve(address,uint256)": "22390",
              "balanceOf(address)": "568",
              "cap()": "465",
              "decreaseAllowance(address,uint256)": "infinite",
              "increaseAllowance(address,uint256)": "infinite",
              "isMinter(address)": "infinite",
              "mint(address,uint256)": "infinite",
              "renounceMinter()": "infinite",
              "totalSupply()": "421",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite"
            },
            "internal": {
              "_mint(address,uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "MSTORE"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "CALLVALUE"
              },
              {
                "begin": 8,
                "end": 17,
                "name": "DUP1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "ISZERO"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPDEST"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "POP"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "MLOAD"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "DUP1"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "PUSHSIZE"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "DUP4"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "CODECOPY"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "DUP2"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "ADD"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "DUP1"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "MSTORE"
              },
              {
                "begin": 13,
                "end": 15,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 8,
                "end": 11,
                "name": "DUP2"
              },
              {
                "begin": 5,
                "end": 16,
                "name": "LT"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "ISZERO"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "PUSH [tag]",
                "value": "2"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "JUMPI"
              },
              {
                "begin": 29,
                "end": 30,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 26,
                "end": 27,
                "name": "DUP1"
              },
              {
                "begin": 19,
                "end": 31,
                "name": "REVERT"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "tag",
                "value": "2"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "MLOAD"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH [tag]",
                "value": "6"
              },
              {
                "begin": 285,
                "end": 295,
                "name": "CALLER"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH [tag]",
                "value": "7"
              },
              {
                "begin": 199,
                "end": 285,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SWAP1"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "DUP2"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SHL"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SWAP1"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SHR"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "tag",
                "value": "6"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMPDEST"
              },
              {
                "begin": 256,
                "end": 257,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 250,
                "end": 253,
                "name": "DUP2"
              },
              {
                "begin": 250,
                "end": 257,
                "name": "GT"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "PUSH [tag]",
                "value": "9"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "JUMPI"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "DUP1"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "REVERT"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "tag",
                "value": "9"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "JUMPDEST"
              },
              {
                "begin": 268,
                "end": 272,
                "name": "PUSH",
                "value": "4"
              },
              {
                "begin": 268,
                "end": 278,
                "name": "SSTORE"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH [tag]",
                "value": "10"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "JUMP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "tag",
                "value": "7"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMPDEST"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH [tag]",
                "value": "12"
              },
              {
                "begin": 753,
                "end": 760,
                "name": "DUP2"
              },
              {
                "begin": 740,
                "end": 748,
                "name": "PUSH",
                "value": "3"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "13"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SHL"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "18446744073709551729"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "OR"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP2"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SHR"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "tag",
                "value": "12"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMPDEST"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "MLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "DUP3"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "AND"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "LOG2"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "POP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "tag",
                "value": "13"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "DUP2"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "AND"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH [tag]",
                "value": "15"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPI"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "DUP1"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "REVERT"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "tag",
                "value": "15"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPDEST"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH [tag]",
                "value": "16"
              },
              {
                "begin": 380,
                "end": 384,
                "name": "DUP3"
              },
              {
                "begin": 386,
                "end": 393,
                "name": "DUP3"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH [tag]",
                "value": "17"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "SHL"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "SHR"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "tag",
                "value": "16"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMPDEST"
              },
              {
                "begin": 375,
                "end": 394,
                "name": "ISZERO"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH [tag]",
                "value": "18"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPI"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "DUP1"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "REVERT"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "tag",
                "value": "18"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "AND"
              },
              {
                "begin": 406,
                "end": 417,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "DUP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "KECCAK256"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "DUP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "AND"
              },
              {
                "begin": 429,
                "end": 433,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "OR"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SSTORE"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "tag",
                "value": "17"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMPDEST"
              },
              {
                "begin": 858,
                "end": 862,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "DUP3"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "AND"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH [tag]",
                "value": "20"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPI"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "DUP1"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "REVERT"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "tag",
                "value": "20"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 932,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "DUP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "KECCAK256"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SLOAD"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "tag",
                "value": "10"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "JUMPDEST"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "DUP1"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "CODECOPY"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 128,
                "end": 585,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a72305820633b7988c20d6b019b5c878799d46f835e42c2fe814fbc7acc5adfa59d01afcc0029",
                ".code": [
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "POP"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "LT"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "SHR"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "GT"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "GT"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "AA271E1A"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMP"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "983B2D56"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "98650275"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMP"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "355274EA"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "40C10F19"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "EQ"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "DUP1"
                  },
                  {
                    "begin": 128,
                    "end": 585,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "AND"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "RETURN"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "ADD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "RETURN"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "24"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "24"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "PUSH [tag]",
                    "value": "27"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "29"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "29"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "AND"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "ADD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "DUP1"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "32"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "32"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "DUP2"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "AND"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "ADD"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "AND"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "DUP1"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "38"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "38"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "AND"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "39"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "37"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "STOP"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "43"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "AND"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "ADD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "46"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "46"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "AND"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "ADD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "47"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "DUP1"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "49"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "AND"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "50"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "52"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "ADD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "53"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2777,
                    "end": 2781,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 2802,
                    "end": 2812,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2814,
                    "end": 2821,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2823,
                    "end": 2828,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2793,
                    "end": 2801,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "tag",
                    "value": "55"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2846,
                    "end": 2850,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "22"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3399,
                    "end": 3403,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 3425,
                    "end": 3429,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3431,
                    "end": 3433,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3435,
                    "end": 3440,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3415,
                    "end": 3424,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "tag",
                    "value": "59"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3486,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3466,
                    "end": 3476,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "PUSH [tag]",
                    "value": "61"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3509,
                    "end": 3514,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3478,
                    "end": 3508,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "tag",
                    "value": "62"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3451,
                    "end": 3459,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "tag",
                    "value": "61"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3533,
                    "end": 3537,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "tag",
                    "value": "27"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 415,
                    "end": 419,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 415,
                    "end": 419,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4163,
                    "end": 4173,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4192,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4218,
                    "end": 4228,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4184,
                    "end": 4217,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 494,
                    "end": 498,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "70"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "50"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "70"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "71"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "71"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 510,
                    "end": 526,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 516,
                    "end": 518,
                    "name": "DUP4"
                  },
                  {
                    "begin": 520,
                    "end": 525,
                    "name": "DUP4"
                  },
                  {
                    "begin": 510,
                    "end": 515,
                    "name": "PUSH [tag]",
                    "value": "74"
                  },
                  {
                    "begin": 510,
                    "end": 526,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "36"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "AND"
                  },
                  {
                    "begin": 1263,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "39"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "77"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "50"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "77"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "78"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "78"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "PUSH [tag]",
                    "value": "80"
                  },
                  {
                    "begin": 582,
                    "end": 589,
                    "name": "DUP2"
                  },
                  {
                    "begin": 571,
                    "end": 581,
                    "name": "PUSH [tag]",
                    "value": "81"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "tag",
                    "value": "80"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "41"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "PUSH [tag]",
                    "value": "83"
                  },
                  {
                    "begin": 660,
                    "end": 670,
                    "name": "CALLER"
                  },
                  {
                    "begin": 646,
                    "end": 659,
                    "name": "PUSH [tag]",
                    "value": "84"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "tag",
                    "value": "83"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "44"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4887,
                    "end": 4897,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4916,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4942,
                    "end": 4957,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4908,
                    "end": 4941,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "47"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2000,
                    "end": 2004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 2026,
                    "end": 2036,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2038,
                    "end": 2040,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2042,
                    "end": 2047,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2016,
                    "end": 2025,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "50"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 450,
                    "end": 454,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH [tag]",
                    "value": "91"
                  },
                  {
                    "begin": 473,
                    "end": 481,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 486,
                    "end": 493,
                    "name": "DUP4"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 473,
                    "end": 485,
                    "name": "PUSH [tag]",
                    "value": "92"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "AND"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "tag",
                    "value": "91"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 466,
                    "end": 494,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "53"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "AND"
                  },
                  {
                    "begin": 1715,
                    "end": 1722,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1749,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "AND"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "tag",
                    "value": "56"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "AND"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH [tag]",
                    "value": "95"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "tag",
                    "value": "95"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "AND"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH [tag]",
                    "value": "96"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "tag",
                    "value": "96"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 6993,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SUB"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "ADD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "tag",
                    "value": "60"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "AND"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH [tag]",
                    "value": "98"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "tag",
                    "value": "98"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5348,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH [tag]",
                    "value": "99"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5359,
                    "end": 5364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5339,
                    "end": 5358,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "tag",
                    "value": "99"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "AND"
                  },
                  {
                    "begin": 5321,
                    "end": 5330,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH [tag]",
                    "value": "100"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5409,
                    "end": 5414,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5391,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "tag",
                    "value": "100"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "AND"
                  },
                  {
                    "begin": 5375,
                    "end": 5384,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "AND"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SUB"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "ADD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "tag",
                    "value": "63"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1269,
                    "end": 1276,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1301,
                    "end": 1302,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1297,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "GT"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH [tag]",
                    "value": "102"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "tag",
                    "value": "102"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SUB"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "tag",
                    "value": "68"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1497,
                    "end": 1504,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "ADD"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "LT"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH [tag]",
                    "value": "104"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "tag",
                    "value": "104"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1576,
                    "end": 1577,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "tag",
                    "value": "74"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 534,
                    "end": 538,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 534,
                    "end": 538,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "PUSH [tag]",
                    "value": "106"
                  },
                  {
                    "begin": 524,
                    "end": 529,
                    "name": "DUP3"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "PUSH [tag]",
                    "value": "107"
                  },
                  {
                    "begin": 506,
                    "end": 517,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "tag",
                    "value": "107"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 506,
                    "end": 523,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 506,
                    "end": 523,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "AND"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "tag",
                    "value": "106"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 506,
                    "end": 538,
                    "name": "GT"
                  },
                  {
                    "begin": 506,
                    "end": 538,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "PUSH [tag]",
                    "value": "108"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "DUP1"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "REVERT"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "tag",
                    "value": "108"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 549,
                    "end": 576,
                    "name": "PUSH [tag]",
                    "value": "109"
                  },
                  {
                    "begin": 561,
                    "end": 568,
                    "name": "DUP3"
                  },
                  {
                    "begin": 570,
                    "end": 575,
                    "name": "DUP3"
                  },
                  {
                    "begin": 549,
                    "end": 560,
                    "name": "PUSH [tag]",
                    "value": "110"
                  },
                  {
                    "begin": 549,
                    "end": 576,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 549,
                    "end": 576,
                    "name": "tag",
                    "value": "109"
                  },
                  {
                    "begin": 549,
                    "end": 576,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "POP"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "POP"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "tag",
                    "value": "81"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH [tag]",
                    "value": "112"
                  },
                  {
                    "begin": 740,
                    "end": 748,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 753,
                    "end": 760,
                    "name": "DUP3"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 740,
                    "end": 752,
                    "name": "PUSH [tag]",
                    "value": "113"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "AND"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "tag",
                    "value": "112"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "DUP3"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "AND"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "LOG2"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "POP"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "tag",
                    "value": "84"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH [tag]",
                    "value": "115"
                  },
                  {
                    "begin": 868,
                    "end": 876,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 884,
                    "end": 891,
                    "name": "DUP3"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 868,
                    "end": 883,
                    "name": "PUSH [tag]",
                    "value": "116"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "AND"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "tag",
                    "value": "115"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "AND"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "LOG2"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "POP"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "tag",
                    "value": "92"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 858,
                    "end": 862,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "DUP3"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "AND"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "DUP1"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "REVERT"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "tag",
                    "value": "118"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 932,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "DUP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "tag",
                    "value": "110"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5879,
                    "end": 5900,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5879,
                    "end": 5900,
                    "name": "AND"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "PUSH [tag]",
                    "value": "120"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "tag",
                    "value": "120"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5927,
                    "end": 5939,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5927,
                    "end": 5939,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "PUSH [tag]",
                    "value": "121"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5944,
                    "end": 5949,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5927,
                    "end": 5943,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "AND"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "tag",
                    "value": "121"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5912,
                    "end": 5924,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5912,
                    "end": 5950,
                    "name": "SSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "AND"
                  },
                  {
                    "begin": 5981,
                    "end": 5990,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "PUSH [tag]",
                    "value": "122"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6004,
                    "end": 6009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5981,
                    "end": 6003,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "AND"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "tag",
                    "value": "122"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "AND"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SUB"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "ADD"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "POP"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "POP"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "tag",
                    "value": "113"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "DUP2"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "AND"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "124"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "DUP1"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "REVERT"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "tag",
                    "value": "124"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "PUSH [tag]",
                    "value": "125"
                  },
                  {
                    "begin": 380,
                    "end": 384,
                    "name": "DUP3"
                  },
                  {
                    "begin": 386,
                    "end": 393,
                    "name": "DUP3"
                  },
                  {
                    "begin": 376,
                    "end": 379,
                    "name": "PUSH [tag]",
                    "value": "92"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "tag",
                    "value": "125"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 375,
                    "end": 394,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH [tag]",
                    "value": "126"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "DUP1"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "REVERT"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "tag",
                    "value": "126"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "AND"
                  },
                  {
                    "begin": 406,
                    "end": 417,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "DUP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "DUP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "AND"
                  },
                  {
                    "begin": 429,
                    "end": 433,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "OR"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "tag",
                    "value": "116"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "DUP2"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "AND"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH [tag]",
                    "value": "128"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "DUP1"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "REVERT"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "tag",
                    "value": "128"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "PUSH [tag]",
                    "value": "129"
                  },
                  {
                    "begin": 637,
                    "end": 641,
                    "name": "DUP3"
                  },
                  {
                    "begin": 643,
                    "end": 650,
                    "name": "DUP3"
                  },
                  {
                    "begin": 633,
                    "end": 636,
                    "name": "PUSH [tag]",
                    "value": "92"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "tag",
                    "value": "129"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH [tag]",
                    "value": "130"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "DUP1"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "REVERT"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "tag",
                    "value": "130"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "AND"
                  },
                  {
                    "begin": 686,
                    "end": 691,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "DUP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "DUP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "AND"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "addMinter(address)": "983b2d56",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "cap()": "355274ea",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "isMinter(address)": "aa271e1a",
            "mint(address,uint256)": "40c10f19",
            "renounceMinter()": "98650275",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Mintable token with a token cap.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Capped token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return A uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\",\"keccak256\":\"0x612eb74ef1ba2e4ea72f85dda6c21f7dbdcc0ece01b1bf3b590f3ea4d2e7e13d\"},\"ERC20Capped.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20Mintable.sol\\\";\\n\\n/**\\n * @title Capped token\\n * @dev Mintable token with a token cap.\\n */\\ncontract ERC20Capped is ERC20Mintable {\\n    uint256 private _cap;\\n\\n    constructor (uint256 cap) public {\\n        require(cap > 0);\\n        _cap = cap;\\n    }\\n\\n    /**\\n     * @return the cap for the token minting.\\n     */\\n    function cap() public view returns (uint256) {\\n        return _cap;\\n    }\\n\\n    function _mint(address account, uint256 value) internal {\\n        require(totalSupply().add(value) <= _cap);\\n        super._mint(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0xe2685e6c947e69b46a8124a1f5e18cf5210ca2b90c7b2019a9c30281ecbee328\"},\"ERC20Mintable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./MinterRole.sol\\\";\\n\\n/**\\n * @title ERC20Mintable\\n * @dev ERC20 minting logic\\n */\\ncontract ERC20Mintable is ERC20, MinterRole {\\n    /**\\n     * @dev Function to mint tokens\\n     * @param to The address that will receive the minted tokens.\\n     * @param value The amount of tokens to mint.\\n     * @return A boolean that indicates if the operation was successful.\\n     */\\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\\n        _mint(to, value);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x990fbb0f5629115a277e4a09f0e648ca2388cbb2f7329b1a11f4964885d3dad8\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"},\"MinterRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract MinterRole {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () internal {\\n        _addMinter(msg.sender);\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(msg.sender));\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(msg.sender);\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe1859219b85aafa5b8f83c2db219b3a948830f0312d497e61400e44bda40f76c\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "ERC20Detailed.sol": {
      "ERC20Detailed": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "who",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "decimals",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "The decimals are only for visualization purposes. All the operations are done using the smallest and indivisible token unit, just as on Ethereum all the operations are done in wei.",
          "methods": {
            "decimals()": {
              "return": "the number of decimals of the token."
            },
            "name()": {
              "return": "the name of the token."
            },
            "symbol()": {
              "return": "the symbol of the token."
            }
          },
          "title": "ERC20Detailed token"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"The decimals are only for visualization purposes. All the operations are done using the smallest and indivisible token unit, just as on Ethereum all the operations are done in wei.\",\"methods\":{\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"name()\":{\"return\":\"the name of the token.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"}},\"title\":\"ERC20Detailed token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Detailed.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @title ERC20Detailed token\\n * @dev The decimals are only for visualization purposes.\\n * All the operations are done using the smallest and indivisible token unit,\\n * just as on Ethereum all the operations are done in wei.\\n */\\ncontract ERC20Detailed is IERC20 {\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = decimals;\\n    }\\n\\n    /**\\n     * @return the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @return the symbol of the token.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @return the number of decimals of the token.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "ERC20Mintable.sol": {
      "ERC20Mintable": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "mint",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isMinter",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterRemoved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "ERC20 minting logic",
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "owner": "address The address which owns the funds.",
                "spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "spender": "The address which will spend the funds.",
                "value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "owner": "The address to query the balance of."
              },
              "return": "A uint256 representing the amount owned by the passed address."
            },
            "decreaseAllowance(address,uint256)": {
              "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "spender": "The address which will spend the funds.",
                "subtractedValue": "The amount of tokens to decrease the allowance by."
              }
            },
            "increaseAllowance(address,uint256)": {
              "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
              "params": {
                "addedValue": "The amount of tokens to increase the allowance by.",
                "spender": "The address which will spend the funds."
              }
            },
            "mint(address,uint256)": {
              "details": "Function to mint tokens",
              "params": {
                "to": "The address that will receive the minted tokens.",
                "value": "The amount of tokens to mint."
              },
              "return": "A boolean that indicates if the operation was successful."
            },
            "totalSupply()": {
              "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
              "details": "Transfer token to a specified address",
              "params": {
                "to": "The address to transfer to.",
                "value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
              "params": {
                "from": "address The address which you want to send tokens from",
                "to": "address The address which you want to transfer to",
                "value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "ERC20Mintable"
        },
        "evm": {
          "assembly": "    /* \"ERC20Mintable.sol\":135:556  contract ERC20Mintable is ERC20, MinterRole {... */\n  mstore(0x40, 0x80)\n    /* \"MinterRole.sol\":274:296  _addMinter(msg.sender) */\n  tag_3\n    /* \"MinterRole.sol\":285:295  msg.sender */\n  caller\n    /* \"MinterRole.sol\":274:284  _addMinter */\n  shl(0x20, tag_4)\n    /* \"MinterRole.sol\":274:296  _addMinter(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_3:\n    /* \"ERC20Mintable.sol\":135:556  contract ERC20Mintable is ERC20, MinterRole {... */\n  jump(tag_5)\n    /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\ntag_4:\n    /* \"MinterRole.sol\":740:761  _minters.add(account) */\n  tag_7\n    /* \"MinterRole.sol\":753:760  account */\n  dup2\n    /* \"MinterRole.sol\":740:748  _minters */\n  0x03\n    /* \"MinterRole.sol\":740:752  _minters.add */\n  or(tag_0_106, shl(0x20, tag_8))\n  swap1\n    /* \"MinterRole.sol\":740:761  _minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"MinterRole.sol\":776:796  MinterAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_8:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":335:356  account != address(0) */\n  dup2\n  and\n    /* \"Roles.sol\":327:357  require(account != address(0)) */\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n    /* \"Roles.sol\":376:394  has(role, account) */\n  tag_11\n    /* \"Roles.sol\":380:384  role */\n  dup3\n    /* \"Roles.sol\":386:393  account */\n  dup3\n    /* \"Roles.sol\":376:379  has */\n  shl(0x20, tag_12)\n    /* \"Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"Roles.sol\":367:395  require(!has(role, account)) */\n  tag_13\n  jumpi\n  0x00\n  dup1\n  revert\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  and\n    /* \"Roles.sol\":406:417  role.bearer */\n  0x00\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Roles.sol\":429:433  true */\n  0x01\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  jump\t// out\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\ntag_12:\n    /* \"Roles.sol\":858:862  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":882:903  account != address(0) */\n  dup3\n  and\n    /* \"Roles.sol\":874:904  require(account != address(0)) */\n  tag_15\n  jumpi\n  0x00\n  dup1\n  revert\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  and\n    /* \"Roles.sol\":921:932  role.bearer */\n  0x00\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"ERC20Mintable.sol\":135:556  contract ERC20Mintable is ERC20, MinterRole {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20Mintable.sol\":135:556  contract ERC20Mintable is ERC20, MinterRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20Mintable.sol\":135:556  contract ERC20Mintable is ERC20, MinterRole {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x983b2d56\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x98650275\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_18\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_23\n      jump\t// in\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n        /* \"ERC20Mintable.sol\":426:554  function mint(address to, uint256 value) public onlyMinter returns (bool) {... */\n    tag_7:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Mintable.sol\":426:554  function mint(address to, uint256 value) public onlyMinter returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_29\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_8:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n      pop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_32\n      jump\t// in\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n      pop\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n    tag_10:\n      tag_33\n      tag_37\n      jump\t// in\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_11:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_12:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_43\n      jump\t// in\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n    tag_13:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n      pop\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_46\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_14:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_49\n      jump\t// in\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_18:\n        /* \"ERC20.sol\":2777:2781  bool */\n      0x00\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      tag_51\n        /* \"ERC20.sol\":2802:2812  msg.sender */\n      caller\n        /* \"ERC20.sol\":2814:2821  spender */\n      dup5\n        /* \"ERC20.sol\":2823:2828  value */\n      dup5\n        /* \"ERC20.sol\":2793:2801  _approve */\n      tag_52\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_51:\n      pop\n        /* \"ERC20.sol\":2846:2850  true */\n      0x01\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_20:\n        /* \"ERC20.sol\":977:989  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":3399:3403  bool */\n      0x00\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_55\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_56\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3478:3486  _allowed */\n      0x01\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3466:3476  msg.sender */\n      caller\n        /* \"ERC20.sol\":3478:3504  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      tag_57\n      swap2\n        /* \"ERC20.sol\":3460:3464  from */\n      dup7\n      swap2\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      tag_58\n      swap1\n        /* \"ERC20.sol\":3509:3514  value */\n      dup7\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":3478:3508  _allowed[from][msg.sender].sub */\n      tag_59\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":3451:3459  _approve */\n      tag_52\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"ERC20.sol\":3533:3537  true */\n      0x01\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_26:\n        /* \"ERC20.sol\":4163:4173  msg.sender */\n      caller\n        /* \"ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4184:4192  _allowed */\n      0x01\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4184:4213  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4138:4142  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4154:4230  _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue)) */\n      tag_51\n      swap2\n        /* \"ERC20.sol\":4175:4182  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      tag_58\n      swap1\n        /* \"ERC20.sol\":4218:4228  addedValue */\n      dup7\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4184:4217  _allowed[msg.sender][spender].add */\n      tag_63\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"ERC20Mintable.sol\":426:554  function mint(address to, uint256 value) public onlyMinter returns (bool) {... */\n    tag_29:\n        /* \"ERC20Mintable.sol\":494:498  bool */\n      0x00\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_65\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_46\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_65:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"ERC20Mintable.sol\":510:526  _mint(to, value) */\n      tag_51\n        /* \"ERC20Mintable.sol\":516:518  to */\n      dup4\n        /* \"ERC20Mintable.sol\":520:525  value */\n      dup4\n        /* \"ERC20Mintable.sol\":510:515  _mint */\n      tag_69\n        /* \"ERC20Mintable.sol\":510:526  _mint(to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      and\n        /* \"ERC20.sol\":1263:1270  uint256 */\n      0x00\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n    tag_35:\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_72\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_46\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_72:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n        /* \"MinterRole.sol\":571:590  _addMinter(account) */\n      tag_75\n        /* \"MinterRole.sol\":582:589  account */\n      dup2\n        /* \"MinterRole.sol\":571:581  _addMinter */\n      tag_76\n        /* \"MinterRole.sol\":571:590  _addMinter(account) */\n      jump\t// in\n    tag_75:\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n    tag_37:\n        /* \"MinterRole.sol\":646:671  _removeMinter(msg.sender) */\n      tag_78\n        /* \"MinterRole.sol\":660:670  msg.sender */\n      caller\n        /* \"MinterRole.sol\":646:659  _removeMinter */\n      tag_79\n        /* \"MinterRole.sol\":646:671  _removeMinter(msg.sender) */\n      jump\t// in\n    tag_78:\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n      jump\t// out\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_40:\n        /* \"ERC20.sol\":4887:4897  msg.sender */\n      caller\n        /* \"ERC20.sol\":4862:4866  bool */\n      0x00\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4908:4916  _allowed */\n      0x01\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4908:4937  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4862:4866  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4878:4959  _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue)) */\n      tag_51\n      swap2\n        /* \"ERC20.sol\":4899:4906  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_58\n      swap1\n        /* \"ERC20.sol\":4942:4957  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4908:4941  _allowed[msg.sender][spender].sub */\n      tag_59\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_43:\n        /* \"ERC20.sol\":2000:2004  bool */\n      0x00\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      tag_51\n        /* \"ERC20.sol\":2026:2036  msg.sender */\n      caller\n        /* \"ERC20.sol\":2038:2040  to */\n      dup5\n        /* \"ERC20.sol\":2042:2047  value */\n      dup5\n        /* \"ERC20.sol\":2016:2025  _transfer */\n      tag_56\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n    tag_46:\n        /* \"MinterRole.sol\":450:454  bool */\n      0x00\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      tag_86\n        /* \"MinterRole.sol\":473:481  _minters */\n      0x03\n        /* \"MinterRole.sol\":486:493  account */\n      dup4\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":473:485  _minters.has */\n      tag_87\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      and\n      jump\t// in\n    tag_86:\n        /* \"MinterRole.sol\":466:494  return _minters.has(account) */\n      swap3\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":1715:1722  uint256 */\n      0x00\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1741:1749  _allowed */\n      0x01\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1741:1765  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6914:6935  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6906:6936  require(spender != address(0)) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6954:6973  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6946:6974  require(owner != address(0)) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6985:6993  _allowed */\n      0x01\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6985:7009  _allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6985:7017  _allowed[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":7032:7063  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5293:5309  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5285:5310  require(to != address(0)) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":5339:5348  _balances */\n      0x00\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      tag_94\n      swap1\n        /* \"ERC20.sol\":5359:5364  value */\n      dup3\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5339:5358  _balances[from].sub */\n      tag_59\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      and\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":5321:5330  _balances */\n      0x00\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":5321:5365  _balances[from] = _balances[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":5391:5404  _balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      tag_95\n      swap1\n        /* \"ERC20.sol\":5409:5414  value */\n      dup3\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5391:5408  _balances[to].add */\n      tag_63\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      and\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":5375:5384  _balances */\n      0x00\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":5375:5415  _balances[to] = _balances[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_59:\n        /* \"SafeMath.sol\":1269:1276  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1301:1302  a */\n      dup3\n        /* \"SafeMath.sol\":1296:1297  b */\n      dup3\n        /* \"SafeMath.sol\":1296:1302  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1288:1303  require(b <= a) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n        /* \"SafeMath.sol\":1325:1330  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_63:\n        /* \"SafeMath.sol\":1497:1504  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1528:1533  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":1551:1557  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n        /* \"SafeMath.sol\":1576:1577  c */\n      swap4\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5879:5900  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5871:5901  require(account != address(0)) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"ERC20.sol\":5927:5939  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      tag_102\n      swap1\n        /* \"ERC20.sol\":5944:5949  value */\n      dup3\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5927:5943  _totalSupply.add */\n      tag_63\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_102:\n        /* \"ERC20.sol\":5912:5924  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":5912:5950  _totalSupply = _totalSupply.add(value) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5981:5999  _balances[account] */\n      dup3\n      and\n        /* \"ERC20.sol\":5981:5990  _balances */\n      0x00\n        /* \"ERC20.sol\":5981:5999  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      tag_103\n      swap1\n        /* \"ERC20.sol\":6004:6009  value */\n      dup3\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5981:6003  _balances[account].add */\n      tag_63\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      and\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      dup4\n      and\n        /* \"ERC20.sol\":5960:5969  _balances */\n      0x00\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":5960:6010  _balances[account] = _balances[account].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      swap3\n      swap4\n        /* \"ERC20.sol\":5960:5969  _balances */\n      swap2\n      swap3\n        /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n    tag_76:\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      tag_105\n        /* \"MinterRole.sol\":740:748  _minters */\n      0x03\n        /* \"MinterRole.sol\":753:760  account */\n      dup3\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":740:752  _minters.add */\n      tag_106\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      and\n      jump\t// in\n    tag_105:\n        /* \"MinterRole.sol\":776:796  MinterAdded(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":809:936  function _removeMinter(address account) internal {... */\n    tag_79:\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      tag_108\n        /* \"MinterRole.sol\":868:876  _minters */\n      0x03\n        /* \"MinterRole.sol\":884:891  account */\n      dup3\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":868:883  _minters.remove */\n      tag_109\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      and\n      jump\t// in\n    tag_108:\n        /* \"MinterRole.sol\":907:929  MinterRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"MinterRole.sol\":809:936  function _removeMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_87:\n        /* \"Roles.sol\":858:862  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":882:903  account != address(0) */\n      dup3\n      and\n        /* \"Roles.sol\":874:904  require(account != address(0)) */\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      and\n        /* \"Roles.sol\":921:932  role.bearer */\n      0x00\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":335:356  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":327:357  require(account != address(0)) */\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n        /* \"Roles.sol\":376:394  has(role, account) */\n      tag_114\n        /* \"Roles.sol\":380:384  role */\n      dup3\n        /* \"Roles.sol\":386:393  account */\n      dup3\n        /* \"Roles.sol\":376:379  has */\n      tag_87\n        /* \"Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_114:\n        /* \"Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"Roles.sol\":367:395  require(!has(role, account)) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      and\n        /* \"Roles.sol\":406:417  role.bearer */\n      0x00\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Roles.sol\":429:433  true */\n      0x01\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":593:614  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":585:615  require(account != address(0)) */\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n        /* \"Roles.sol\":633:651  has(role, account) */\n      tag_118\n        /* \"Roles.sol\":637:641  role */\n      dup3\n        /* \"Roles.sol\":643:650  account */\n      dup3\n        /* \"Roles.sol\":633:636  has */\n      tag_87\n        /* \"Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_118:\n        /* \"Roles.sol\":625:652  require(has(role, account)) */\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      and\n        /* \"Roles.sol\":686:691  false */\n      0x00\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":663:691  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058208611583ed46a866ec2ce60e4acd5aa921de1094b693397dd9fa736ccaddc9bf40029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "60806040526100133361001860201b60201c565b6100ee565b61003081600361006760201b61072f1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600160a01b03811661007a57600080fd5b61008a82826100b960201b60201c565b1561009457600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166100ce57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107ef806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d56146101c757806398650275146101ef578063a457c2d7146101f7578063a9059cbb14610223578063aa271e1a1461024f578063dd62ed3e14610275576100b4565b8063095ea7b3146100b957806318160ddd146100f957806323b872dd14610113578063395093511461014957806340c10f191461017557806370a08231146101a1575b600080fd5b6100e5600480360360408110156100cf57600080fd5b506001600160a01b0381351690602001356102a3565b604080519115158252519081900360200190f35b6101016102b9565b60408051918252519081900360200190f35b6100e56004803603606081101561012957600080fd5b506001600160a01b038135811691602081013590911690604001356102bf565b6100e56004803603604081101561015f57600080fd5b506001600160a01b038135169060200135610316565b6100e56004803603604081101561018b57600080fd5b506001600160a01b038135169060200135610352565b610101600480360360208110156101b757600080fd5b50356001600160a01b0316610370565b6101ed600480360360208110156101dd57600080fd5b50356001600160a01b031661038b565b005b6101ed6103a9565b6100e56004803603604081101561020d57600080fd5b506001600160a01b0381351690602001356103b4565b6100e56004803603604081101561023957600080fd5b506001600160a01b0381351690602001356103f0565b6100e56004803603602081101561026557600080fd5b50356001600160a01b03166103fd565b6101016004803603604081101561028b57600080fd5b506001600160a01b0381358116916020013516610416565b60006102b0338484610441565b50600192915050565b60025490565b60006102cc8484846104c9565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461030c918691610307908663ffffffff61059416565b610441565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102b0918590610307908663ffffffff6105a916565b600061035d336103fd565b61036657600080fd5b6102b083836105c2565b6001600160a01b031660009081526020819052604090205490565b610394336103fd565b61039d57600080fd5b6103a68161066a565b50565b6103b2336106b2565b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102b0918590610307908663ffffffff61059416565b60006102b03384846104c9565b600061041060038363ffffffff6106fa16565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661045457600080fd5b6001600160a01b03831661046757600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0382166104dc57600080fd5b6001600160a01b038316600090815260208190526040902054610505908263ffffffff61059416565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461053a908263ffffffff6105a916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156105a357600080fd5b50900390565b6000828201838110156105bb57600080fd5b9392505050565b6001600160a01b0382166105d557600080fd5b6002546105e8908263ffffffff6105a916565b6002556001600160a01b038216600090815260208190526040902054610614908263ffffffff6105a916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61067b60038263ffffffff61072f16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6106c360038263ffffffff61077b16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b03821661070f57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b03811661074257600080fd5b61074c82826106fa565b1561075657600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661078e57600080fd5b61079882826106fa565b6107a157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a723058208611583ed46a866ec2ce60e4acd5aa921de1094b693397dd9fa736ccaddc9bf40029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x13 CALLER PUSH2 0x18 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST PUSH2 0x30 DUP2 PUSH1 0x3 PUSH2 0x67 PUSH1 0x20 SHL PUSH2 0x72F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A DUP3 DUP3 PUSH2 0xB9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7EF DUP1 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x275 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x316 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x352 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x370 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x416 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0 CALLER DUP5 DUP5 PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP5 DUP5 DUP5 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x30C SWAP2 DUP7 SWAP2 PUSH2 0x307 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x594 AND JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2B0 SWAP2 DUP6 SWAP1 PUSH2 0x307 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D CALLER PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B0 DUP4 DUP4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x394 CALLER PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x66A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B2 CALLER PUSH2 0x6B2 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2B0 SWAP2 DUP6 SWAP1 PUSH2 0x307 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x594 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0 CALLER DUP5 DUP5 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x410 PUSH1 0x3 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6FA AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x505 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x594 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x53A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x5E8 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x614 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x72F AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6C3 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x77B AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP3 DUP3 PUSH2 0x6FA JUMP JUMPDEST ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x798 DUP3 DUP3 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP7 GT PC RETURNDATACOPY 0xd4 PUSH11 0x866EC2CE60E4ACD5AA921D 0xe1 MULMOD 0x4b PUSH10 0x3397DD9FA736CCADDC9B DELEGATECALL STOP 0x29 ",
            "sourceMap": "135:421:4:-;;;274:22:7;285:10;274;;;:22;;:::i;:::-;135:421:4;;684:119:7;740:21;753:7;740:8;:12;;;;;;:21;;;;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:7;;;;;;;;684:119;:::o;259:181:11:-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;135:421:4:-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d56146101c757806398650275146101ef578063a457c2d7146101f7578063a9059cbb14610223578063aa271e1a1461024f578063dd62ed3e14610275576100b4565b8063095ea7b3146100b957806318160ddd146100f957806323b872dd14610113578063395093511461014957806340c10f191461017557806370a08231146101a1575b600080fd5b6100e5600480360360408110156100cf57600080fd5b506001600160a01b0381351690602001356102a3565b604080519115158252519081900360200190f35b6101016102b9565b60408051918252519081900360200190f35b6100e56004803603606081101561012957600080fd5b506001600160a01b038135811691602081013590911690604001356102bf565b6100e56004803603604081101561015f57600080fd5b506001600160a01b038135169060200135610316565b6100e56004803603604081101561018b57600080fd5b506001600160a01b038135169060200135610352565b610101600480360360208110156101b757600080fd5b50356001600160a01b0316610370565b6101ed600480360360208110156101dd57600080fd5b50356001600160a01b031661038b565b005b6101ed6103a9565b6100e56004803603604081101561020d57600080fd5b506001600160a01b0381351690602001356103b4565b6100e56004803603604081101561023957600080fd5b506001600160a01b0381351690602001356103f0565b6100e56004803603602081101561026557600080fd5b50356001600160a01b03166103fd565b6101016004803603604081101561028b57600080fd5b506001600160a01b0381358116916020013516610416565b60006102b0338484610441565b50600192915050565b60025490565b60006102cc8484846104c9565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461030c918691610307908663ffffffff61059416565b610441565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102b0918590610307908663ffffffff6105a916565b600061035d336103fd565b61036657600080fd5b6102b083836105c2565b6001600160a01b031660009081526020819052604090205490565b610394336103fd565b61039d57600080fd5b6103a68161066a565b50565b6103b2336106b2565b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102b0918590610307908663ffffffff61059416565b60006102b03384846104c9565b600061041060038363ffffffff6106fa16565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661045457600080fd5b6001600160a01b03831661046757600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0382166104dc57600080fd5b6001600160a01b038316600090815260208190526040902054610505908263ffffffff61059416565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461053a908263ffffffff6105a916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156105a357600080fd5b50900390565b6000828201838110156105bb57600080fd5b9392505050565b6001600160a01b0382166105d557600080fd5b6002546105e8908263ffffffff6105a916565b6002556001600160a01b038216600090815260208190526040902054610614908263ffffffff6105a916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61067b60038263ffffffff61072f16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6106c360038263ffffffff61077b16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b03821661070f57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b03811661074257600080fd5b61074c82826106fa565b1561075657600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661078e57600080fd5b61079882826106fa565b6107a157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a723058208611583ed46a866ec2ce60e4acd5aa921de1094b693397dd9fa736ccaddc9bf40029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x275 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x316 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x352 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x370 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x416 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0 CALLER DUP5 DUP5 PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP5 DUP5 DUP5 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x30C SWAP2 DUP7 SWAP2 PUSH2 0x307 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x594 AND JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2B0 SWAP2 DUP6 SWAP1 PUSH2 0x307 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D CALLER PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B0 DUP4 DUP4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x394 CALLER PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x66A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B2 CALLER PUSH2 0x6B2 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2B0 SWAP2 DUP6 SWAP1 PUSH2 0x307 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x594 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0 CALLER DUP5 DUP5 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x410 PUSH1 0x3 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6FA AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x505 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x594 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x53A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x5E8 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x614 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x5A9 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x72F AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6C3 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x77B AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP3 DUP3 PUSH2 0x6FA JUMP JUMPDEST ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x798 DUP3 DUP3 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP7 GT PC RETURNDATACOPY 0xd4 PUSH11 0x866EC2CE60E4ACD5AA921D 0xe1 MULMOD 0x4b PUSH10 0x3397DD9FA736CCADDC9B DELEGATECALL STOP 0x29 ",
            "sourceMap": "135:421:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:421:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2712:145:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;907:89;;;:::i;:::-;;;;;;;;;;;;;;;;3320:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3320:224:0;;;;;;;;;;;;;;;;;:::i;4058:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4058:200:0;;;;;;;;:::i;426:128:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;426:128:4;;;;;;;;:::i;1208:104:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1208:104:0;-1:-1:-1;;;;;1208:104:0;;:::i;507:90:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;507:90:7;-1:-1:-1;;;;;507:90:7;;:::i;:::-;;603:75;;;:::i;4777:210:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4777:210:0;;;;;;;;:::i;1939:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1939:137:0;;;;;;;;:::i;394:107:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;394:107:7;-1:-1:-1;;;;;394:107:7;;:::i;1643:129:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:129:0;;;;;;;;;;:::i;2712:145::-;2777:4;2793:36;2802:10;2814:7;2823:5;2793:8;:36::i;:::-;-1:-1:-1;2846:4:0;2712:145;;;;:::o;907:89::-;977:12;;907:89;:::o;3320:224::-;3399:4;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;;;;;3478:14:0;;;;;;:8;:14;;;;;;;;3466:10;3478:26;;;;;;;;;3451:65;;3460:4;;3478:37;;3509:5;3478:37;:30;:37;:::i;:::-;3451:8;:65::i;:::-;-1:-1:-1;3533:4:0;3320:224;;;;;:::o;4058:200::-;4163:10;4138:4;4184:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4184:29:0;;;;;;;;;;4138:4;;4154:76;;4175:7;;4184:45;;4218:10;4184:45;:33;:45;:::i;426:128:4:-;494:4;349:20:7;358:10;349:8;:20::i;:::-;341:29;;;;;;510:16:4;516:2;520:5;510;:16::i;1208:104:0:-;-1:-1:-1;;;;;1289:16:0;1263:7;1289:16;;;;;;;;;;;;1208:104::o;507:90:7:-;349:20;358:10;349:8;:20::i;:::-;341:29;;;;;;571:19;582:7;571:10;:19::i;:::-;507:90;:::o;603:75::-;646:25;660:10;646:13;:25::i;:::-;603:75::o;4777:210:0:-;4887:10;4862:4;4908:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4908:29:0;;;;;;;;;;4862:4;;4878:81;;4899:7;;4908:50;;4942:15;4908:50;:33;:50;:::i;1939:137::-;2000:4;2016:32;2026:10;2038:2;2042:5;2016:9;:32::i;394:107:7:-;450:4;473:21;:8;486:7;473:21;:12;:21;:::i;:::-;466:28;394:107;-1:-1:-1;;394:107:7:o;1643:129:0:-;-1:-1:-1;;;;;1741:15:0;;;1715:7;1741:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1643:129::o;6822:248::-;-1:-1:-1;;;;;6914:21:0;;6906:30;;;;;;-1:-1:-1;;;;;6954:19:0;;6946:28;;;;;;-1:-1:-1;;;;;6985:15:0;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7032:31;;;;;;;;;;;;;;;;;6822:248;;;:::o;5206:256::-;-1:-1:-1;;;;;5293:16:0;;5285:25;;;;;;-1:-1:-1;;;;;5339:15:0;;:9;:15;;;;;;;;;;;:26;;5359:5;5339:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5321:15:0;;;:9;:15;;;;;;;;;;;:44;;;;5391:13;;;;;;;:24;;5409:5;5391:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5375:13:0;;;:9;:13;;;;;;;;;;;;:40;;;;5430:25;;;;;;;5375:13;;5430:25;;;;;;;;;;;;;5206:256;;;:::o;1211:145:12:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:12;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:12:o;5805:263:0:-;-1:-1:-1;;;;;5879:21:0;;5871:30;;;;;;5927:12;;:23;;5944:5;5927:23;:16;:23;:::i;:::-;5912:12;:38;-1:-1:-1;;;;;5981:18:0;;:9;:18;;;;;;;;;;;:29;;6004:5;5981:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5960:18:0;;:9;:18;;;;;;;;;;;:50;;;;6025:36;;;;;;;5960:18;;:9;;6025:36;;;;;;;;;;5805:263;;:::o;684:119:7:-;740:21;:8;753:7;740:21;:12;:21;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:7;;;;;;;;684:119;:::o;809:127::-;868:24;:8;884:7;868:24;:15;:24;:::i;:::-;907:22;;-1:-1:-1;;;;;907:22:7;;;;;;;;809:127;:::o;786:162:11:-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:11;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:11;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:11;;;514:184::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "406200",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "addMinter(address)": "infinite",
              "allowance(address,address)": "760",
              "approve(address,uint256)": "22390",
              "balanceOf(address)": "656",
              "decreaseAllowance(address,uint256)": "infinite",
              "increaseAllowance(address,uint256)": "infinite",
              "isMinter(address)": "infinite",
              "mint(address,uint256)": "infinite",
              "renounceMinter()": "infinite",
              "totalSupply()": "421",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "MSTORE"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH [tag]",
                "value": "3"
              },
              {
                "begin": 285,
                "end": 295,
                "name": "CALLER"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH [tag]",
                "value": "4"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SHL"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SHR"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "tag",
                "value": "3"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMPDEST"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH [tag]",
                "value": "5"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "JUMP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "tag",
                "value": "4"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMPDEST"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH [tag]",
                "value": "7"
              },
              {
                "begin": 753,
                "end": 760,
                "name": "DUP2"
              },
              {
                "begin": 740,
                "end": 748,
                "name": "PUSH",
                "value": "3"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "8"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SHL"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "18446744073709551722"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "OR"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP2"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SHR"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "tag",
                "value": "7"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMPDEST"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "MLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "DUP3"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "AND"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "LOG2"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "POP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "tag",
                "value": "8"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "DUP2"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "AND"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH [tag]",
                "value": "10"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPI"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "DUP1"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "REVERT"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "tag",
                "value": "10"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPDEST"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH [tag]",
                "value": "11"
              },
              {
                "begin": 380,
                "end": 384,
                "name": "DUP3"
              },
              {
                "begin": 386,
                "end": 393,
                "name": "DUP3"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH [tag]",
                "value": "12"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "SHL"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "SHR"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "tag",
                "value": "11"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMPDEST"
              },
              {
                "begin": 375,
                "end": 394,
                "name": "ISZERO"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH [tag]",
                "value": "13"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPI"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "DUP1"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "REVERT"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "tag",
                "value": "13"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "AND"
              },
              {
                "begin": 406,
                "end": 417,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "DUP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "KECCAK256"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "DUP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "AND"
              },
              {
                "begin": 429,
                "end": 433,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "OR"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SSTORE"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "tag",
                "value": "12"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMPDEST"
              },
              {
                "begin": 858,
                "end": 862,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "DUP3"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "AND"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH [tag]",
                "value": "15"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPI"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "DUP1"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "REVERT"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "tag",
                "value": "15"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 932,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "DUP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "KECCAK256"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SLOAD"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "tag",
                "value": "5"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "JUMPDEST"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "DUP1"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "CODECOPY"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 135,
                "end": 556,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a723058208611583ed46a866ec2ce60e4acd5aa921de1094b693397dd9fa736ccaddc9bf40029",
                ".code": [
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "POP"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "LT"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "SHR"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "983B2D56"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "GT"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "983B2D56"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "98650275"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "AA271E1A"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMP"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "40C10F19"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "EQ"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "DUP1"
                  },
                  {
                    "begin": 135,
                    "end": 556,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "AND"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SUB"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "ADD"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "RETURN"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "ADD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "RETURN"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "22"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "AND"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "ADD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "AND"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "ADD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "PUSH [tag]",
                    "value": "26"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "DUP1"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "28"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "28"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "DUP2"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "AND"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "ADD"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "PUSH [tag]",
                    "value": "29"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "31"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "AND"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "32"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "DUP1"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "34"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "34"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "AND"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "STOP"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "39"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "39"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "AND"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "ADD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "PUSH [tag]",
                    "value": "40"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "42"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "AND"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "ADD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "DUP1"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "45"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "AND"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "46"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "48"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "ADD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2777,
                    "end": 2781,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 2802,
                    "end": 2812,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2814,
                    "end": 2821,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2823,
                    "end": 2828,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2793,
                    "end": 2801,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "tag",
                    "value": "51"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2846,
                    "end": 2850,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "23"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3399,
                    "end": 3403,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 3425,
                    "end": 3429,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3431,
                    "end": 3433,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3435,
                    "end": 3440,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3415,
                    "end": 3424,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "tag",
                    "value": "55"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3486,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3466,
                    "end": 3476,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "PUSH [tag]",
                    "value": "57"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3509,
                    "end": 3514,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3478,
                    "end": 3508,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "tag",
                    "value": "58"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3451,
                    "end": 3459,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "tag",
                    "value": "57"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3533,
                    "end": 3537,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "26"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4163,
                    "end": 4173,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4192,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4218,
                    "end": 4228,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4184,
                    "end": 4217,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "tag",
                    "value": "29"
                  },
                  {
                    "begin": 426,
                    "end": 554,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 494,
                    "end": 498,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "65"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "46"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "65"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "66"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "66"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 510,
                    "end": 526,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 516,
                    "end": 518,
                    "name": "DUP4"
                  },
                  {
                    "begin": 520,
                    "end": 525,
                    "name": "DUP4"
                  },
                  {
                    "begin": 510,
                    "end": 515,
                    "name": "PUSH [tag]",
                    "value": "69"
                  },
                  {
                    "begin": 510,
                    "end": 526,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "32"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "AND"
                  },
                  {
                    "begin": 1263,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "46"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "72"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "73"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "73"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "PUSH [tag]",
                    "value": "75"
                  },
                  {
                    "begin": 582,
                    "end": 589,
                    "name": "DUP2"
                  },
                  {
                    "begin": 571,
                    "end": 581,
                    "name": "PUSH [tag]",
                    "value": "76"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "tag",
                    "value": "75"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "37"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "PUSH [tag]",
                    "value": "78"
                  },
                  {
                    "begin": 660,
                    "end": 670,
                    "name": "CALLER"
                  },
                  {
                    "begin": 646,
                    "end": 659,
                    "name": "PUSH [tag]",
                    "value": "79"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "tag",
                    "value": "78"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "40"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4887,
                    "end": 4897,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4916,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4942,
                    "end": 4957,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4908,
                    "end": 4941,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "43"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2000,
                    "end": 2004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 2026,
                    "end": 2036,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2038,
                    "end": 2040,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2042,
                    "end": 2047,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2016,
                    "end": 2025,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "46"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 450,
                    "end": 454,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH [tag]",
                    "value": "86"
                  },
                  {
                    "begin": 473,
                    "end": 481,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 486,
                    "end": 493,
                    "name": "DUP4"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 473,
                    "end": 485,
                    "name": "PUSH [tag]",
                    "value": "87"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "AND"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "tag",
                    "value": "86"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 466,
                    "end": 494,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "49"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "AND"
                  },
                  {
                    "begin": 1715,
                    "end": 1722,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1749,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "AND"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "tag",
                    "value": "52"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "AND"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH [tag]",
                    "value": "90"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "tag",
                    "value": "90"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "AND"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH [tag]",
                    "value": "91"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "tag",
                    "value": "91"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 6993,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SUB"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "ADD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "tag",
                    "value": "56"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "AND"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH [tag]",
                    "value": "93"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "tag",
                    "value": "93"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5348,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH [tag]",
                    "value": "94"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5359,
                    "end": 5364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5339,
                    "end": 5358,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "tag",
                    "value": "94"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "AND"
                  },
                  {
                    "begin": 5321,
                    "end": 5330,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH [tag]",
                    "value": "95"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5409,
                    "end": 5414,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5391,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "tag",
                    "value": "95"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "AND"
                  },
                  {
                    "begin": 5375,
                    "end": 5384,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "AND"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SUB"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "ADD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "tag",
                    "value": "59"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1269,
                    "end": 1276,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1301,
                    "end": 1302,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1297,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "GT"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH [tag]",
                    "value": "97"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "tag",
                    "value": "97"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SUB"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "tag",
                    "value": "63"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1497,
                    "end": 1504,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "ADD"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "LT"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH [tag]",
                    "value": "99"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "tag",
                    "value": "99"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1576,
                    "end": 1577,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "tag",
                    "value": "69"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5879,
                    "end": 5900,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5879,
                    "end": 5900,
                    "name": "AND"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "PUSH [tag]",
                    "value": "101"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "tag",
                    "value": "101"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5927,
                    "end": 5939,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5927,
                    "end": 5939,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "PUSH [tag]",
                    "value": "102"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5944,
                    "end": 5949,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5927,
                    "end": 5943,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "AND"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "tag",
                    "value": "102"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5912,
                    "end": 5924,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5912,
                    "end": 5950,
                    "name": "SSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "AND"
                  },
                  {
                    "begin": 5981,
                    "end": 5990,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "PUSH [tag]",
                    "value": "103"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6004,
                    "end": 6009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5981,
                    "end": 6003,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "AND"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "tag",
                    "value": "103"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "AND"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SUB"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "ADD"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "POP"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "POP"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "tag",
                    "value": "76"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH [tag]",
                    "value": "105"
                  },
                  {
                    "begin": 740,
                    "end": 748,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 753,
                    "end": 760,
                    "name": "DUP3"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 740,
                    "end": 752,
                    "name": "PUSH [tag]",
                    "value": "106"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "AND"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "tag",
                    "value": "105"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "DUP3"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "AND"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "LOG2"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "POP"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "tag",
                    "value": "79"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH [tag]",
                    "value": "108"
                  },
                  {
                    "begin": 868,
                    "end": 876,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 884,
                    "end": 891,
                    "name": "DUP3"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 868,
                    "end": 883,
                    "name": "PUSH [tag]",
                    "value": "109"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "AND"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "tag",
                    "value": "108"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "AND"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "LOG2"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "POP"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "tag",
                    "value": "87"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 858,
                    "end": 862,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "DUP3"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "AND"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "DUP1"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "REVERT"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "tag",
                    "value": "111"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 932,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "DUP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "tag",
                    "value": "106"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "DUP2"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "AND"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "113"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "DUP1"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "REVERT"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "tag",
                    "value": "113"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "PUSH [tag]",
                    "value": "114"
                  },
                  {
                    "begin": 380,
                    "end": 384,
                    "name": "DUP3"
                  },
                  {
                    "begin": 386,
                    "end": 393,
                    "name": "DUP3"
                  },
                  {
                    "begin": 376,
                    "end": 379,
                    "name": "PUSH [tag]",
                    "value": "87"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "tag",
                    "value": "114"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 375,
                    "end": 394,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH [tag]",
                    "value": "115"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "DUP1"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "REVERT"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "tag",
                    "value": "115"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "AND"
                  },
                  {
                    "begin": 406,
                    "end": 417,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "DUP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "DUP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "AND"
                  },
                  {
                    "begin": 429,
                    "end": 433,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "OR"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "tag",
                    "value": "109"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "DUP2"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "AND"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH [tag]",
                    "value": "117"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "DUP1"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "REVERT"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "tag",
                    "value": "117"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 637,
                    "end": 641,
                    "name": "DUP3"
                  },
                  {
                    "begin": 643,
                    "end": 650,
                    "name": "DUP3"
                  },
                  {
                    "begin": 633,
                    "end": 636,
                    "name": "PUSH [tag]",
                    "value": "87"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "tag",
                    "value": "118"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH [tag]",
                    "value": "119"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "DUP1"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "REVERT"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "tag",
                    "value": "119"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "AND"
                  },
                  {
                    "begin": 686,
                    "end": 691,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "DUP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "DUP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "AND"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "addMinter(address)": "983b2d56",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "isMinter(address)": "aa271e1a",
            "mint(address,uint256)": "40c10f19",
            "renounceMinter()": "98650275",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20 minting logic\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"ERC20Mintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20Mintable.sol\":\"ERC20Mintable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return A uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\",\"keccak256\":\"0x612eb74ef1ba2e4ea72f85dda6c21f7dbdcc0ece01b1bf3b590f3ea4d2e7e13d\"},\"ERC20Mintable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./MinterRole.sol\\\";\\n\\n/**\\n * @title ERC20Mintable\\n * @dev ERC20 minting logic\\n */\\ncontract ERC20Mintable is ERC20, MinterRole {\\n    /**\\n     * @dev Function to mint tokens\\n     * @param to The address that will receive the minted tokens.\\n     * @param value The amount of tokens to mint.\\n     * @return A boolean that indicates if the operation was successful.\\n     */\\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\\n        _mint(to, value);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x990fbb0f5629115a277e4a09f0e648ca2388cbb2f7329b1a11f4964885d3dad8\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"},\"MinterRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract MinterRole {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () internal {\\n        _addMinter(msg.sender);\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(msg.sender));\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(msg.sender);\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe1859219b85aafa5b8f83c2db219b3a948830f0312d497e61400e44bda40f76c\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "ERC20Pausable.sol": {
      "ERC20Pausable": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isPauser",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renouncePauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addPauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Paused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Unpaused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserRemoved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "ERC20 modified with pausable transfers.",
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "owner": "address The address which owns the funds.",
                "spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "owner": "The address to query the balance of."
              },
              "return": "A uint256 representing the amount owned by the passed address."
            },
            "pause()": {
              "details": "called by the owner to pause, triggers stopped state"
            },
            "paused()": {
              "return": "true if the contract is paused, false otherwise."
            },
            "totalSupply()": {
              "details": "Total number of tokens in existence"
            },
            "unpause()": {
              "details": "called by the owner to unpause, returns to normal state"
            }
          },
          "title": "Pausable token"
        },
        "evm": {
          "assembly": "    /* \"ERC20Pausable.sol\":154:1010  contract ERC20Pausable is ERC20, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"PauserRole.sol\":274:296  _addPauser(msg.sender) */\n  tag_4\n    /* \"PauserRole.sol\":285:295  msg.sender */\n  caller\n    /* \"PauserRole.sol\":274:284  _addPauser */\n  shl(0x20, tag_5)\n    /* \"PauserRole.sol\":274:296  _addPauser(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Pausable.sol\":338:345  _paused */\n  0x04\n    /* \"Pausable.sol\":338:353  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"ERC20Pausable.sol\":154:1010  contract ERC20Pausable is ERC20, Pausable {... */\n  jump(tag_7)\n    /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\ntag_5:\n    /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n  tag_9\n    /* \"PauserRole.sol\":753:760  account */\n  dup2\n    /* \"PauserRole.sol\":740:748  _pausers */\n  0x03\n    /* \"PauserRole.sol\":740:752  _pausers.add */\n  or(tag_0_130, shl(0x20, tag_10))\n  swap1\n    /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"PauserRole.sol\":776:796  PauserAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":335:356  account != address(0) */\n  dup2\n  and\n    /* \"Roles.sol\":327:357  require(account != address(0)) */\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n    /* \"Roles.sol\":376:394  has(role, account) */\n  tag_13\n    /* \"Roles.sol\":380:384  role */\n  dup3\n    /* \"Roles.sol\":386:393  account */\n  dup3\n    /* \"Roles.sol\":376:379  has */\n  shl(0x20, tag_14)\n    /* \"Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"Roles.sol\":367:395  require(!has(role, account)) */\n  tag_15\n  jumpi\n  0x00\n  dup1\n  revert\ntag_15:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  and\n    /* \"Roles.sol\":406:417  role.bearer */\n  0x00\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Roles.sol\":429:433  true */\n  0x01\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  jump\t// out\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\ntag_14:\n    /* \"Roles.sol\":858:862  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":882:903  account != address(0) */\n  dup3\n  and\n    /* \"Roles.sol\":874:904  require(account != address(0)) */\n  tag_17\n  jumpi\n  0x00\n  dup1\n  revert\ntag_17:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  and\n    /* \"Roles.sol\":921:932  role.bearer */\n  0x00\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"ERC20Pausable.sol\":154:1010  contract ERC20Pausable is ERC20, Pausable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20Pausable.sol\":154:1010  contract ERC20Pausable is ERC20, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20Pausable.sol\":154:1010  contract ERC20Pausable is ERC20, Pausable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ef8d66d\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6ef8d66d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x82dc1ec4\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x39509351\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x46fbf68e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_22\n      jump\t// in\n    tag_20:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_27\n      jump\t// in\n        /* \"ERC20Pausable.sol\":646:819  function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":646:819  function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n        /* \"Pausable.sol\":1162:1277  function unpause() public onlyPauser whenPaused {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n    tag_8:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n      pop\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_35\n      jump\t// in\n        /* \"Pausable.sol\":446:522  function paused() public view returns (bool) {... */\n    tag_9:\n      tag_20\n      tag_37\n      jump\t// in\n        /* \"PauserRole.sol\":603:678  function renouncePauser() public {... */\n    tag_10:\n      tag_31\n      tag_39\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_11:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n      pop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_42\n      jump\t// in\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n    tag_12:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_45\n      jump\t// in\n        /* \"Pausable.sol\":959:1072  function pause() public onlyPauser whenNotPaused {... */\n    tag_13:\n      tag_31\n      tag_47\n      jump\t// in\n        /* \"ERC20Pausable.sol\":825:1008  function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {... */\n    tag_14:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":825:1008  function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_50\n      jump\t// in\n        /* \"ERC20Pausable.sol\":202:332  function transfer(address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_15:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":202:332  function transfer(address to, uint256 value) public whenNotPaused returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_53\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_16:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_56\n      jump\t// in\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_22:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x04)\n        /* \"ERC20Pausable.sol\":581:585  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"ERC20Pausable.sol\":604:633  super.approve(spender, value) */\n      tag_60\n        /* \"ERC20Pausable.sol\":618:625  spender */\n      dup4\n        /* \"ERC20Pausable.sol\":627:632  value */\n      dup4\n        /* \"ERC20Pausable.sol\":604:617  super.approve */\n      tag_61\n        /* \"ERC20Pausable.sol\":604:633  super.approve(spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"ERC20Pausable.sol\":597:633  return super.approve(spender, value) */\n      swap4\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_24:\n        /* \"ERC20.sol\":977:989  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_27:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x04)\n        /* \"ERC20Pausable.sol\":431:435  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"ERC20Pausable.sol\":454:489  super.transferFrom(from, to, value) */\n      tag_66\n        /* \"ERC20Pausable.sol\":473:477  from */\n      dup5\n        /* \"ERC20Pausable.sol\":479:481  to */\n      dup5\n        /* \"ERC20Pausable.sol\":483:488  value */\n      dup5\n        /* \"ERC20Pausable.sol\":454:472  super.transferFrom */\n      tag_67\n        /* \"ERC20Pausable.sol\":454:489  super.transferFrom(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"ERC20Pausable.sol\":447:489  return super.transferFrom(from, to, value) */\n      swap5\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Pausable.sol\":646:819  function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {... */\n    tag_30:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x04)\n        /* \"ERC20Pausable.sol\":737:749  bool success */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"ERC20Pausable.sol\":768:812  super.increaseAllowance(spender, addedValue) */\n      tag_60\n        /* \"ERC20Pausable.sol\":792:799  spender */\n      dup4\n        /* \"ERC20Pausable.sol\":801:811  addedValue */\n      dup4\n        /* \"ERC20Pausable.sol\":768:791  super.increaseAllowance */\n      tag_72\n        /* \"ERC20Pausable.sol\":768:812  super.increaseAllowance(spender, addedValue) */\n      jump\t// in\n        /* \"Pausable.sol\":1162:1277  function unpause() public onlyPauser whenPaused {... */\n    tag_32:\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      tag_74\n        /* \"PauserRole.sol\":358:368  msg.sender */\n      caller\n        /* \"PauserRole.sol\":349:357  isPauser */\n      tag_35\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      jump\t// in\n    tag_74:\n        /* \"PauserRole.sol\":341:370  require(isPauser(msg.sender)) */\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n        /* \"Pausable.sol\":846:853  _paused */\n      and(0xff, sload(0x04))\n        /* \"Pausable.sol\":838:854  require(_paused) */\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n        /* \"Pausable.sol\":1220:1227  _paused */\n      0x04\n        /* \"Pausable.sol\":1220:1235  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Pausable.sol\":1250:1270  Unpaused(msg.sender) */\n      0x40\n      dup1\n      mload\n        /* \"Pausable.sol\":1259:1269  msg.sender */\n      caller\n        /* \"Pausable.sol\":1250:1270  Unpaused(msg.sender) */\n      dup2\n      mstore\n      swap1\n      mload\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"Pausable.sol\":1162:1277  function unpause() public onlyPauser whenPaused {... */\n      jump\t// out\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n    tag_35:\n        /* \"PauserRole.sol\":450:454  bool */\n      0x00\n        /* \"PauserRole.sol\":473:494  _pausers.has(account) */\n      tag_80\n        /* \"PauserRole.sol\":473:481  _pausers */\n      0x03\n        /* \"PauserRole.sol\":486:493  account */\n      dup4\n        /* \"PauserRole.sol\":473:494  _pausers.has(account) */\n      0xffffffff\n        /* \"PauserRole.sol\":473:485  _pausers.has */\n      tag_81\n        /* \"PauserRole.sol\":473:494  _pausers.has(account) */\n      and\n      jump\t// in\n    tag_80:\n        /* \"PauserRole.sol\":466:494  return _pausers.has(account) */\n      swap3\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Pausable.sol\":446:522  function paused() public view returns (bool) {... */\n    tag_37:\n        /* \"Pausable.sol\":508:515  _paused */\n      and(0xff, sload(0x04))\n        /* \"Pausable.sol\":446:522  function paused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"PauserRole.sol\":603:678  function renouncePauser() public {... */\n    tag_39:\n        /* \"PauserRole.sol\":646:671  _removePauser(msg.sender) */\n      tag_84\n        /* \"PauserRole.sol\":660:670  msg.sender */\n      caller\n        /* \"PauserRole.sol\":646:659  _removePauser */\n      tag_85\n        /* \"PauserRole.sol\":646:671  _removePauser(msg.sender) */\n      jump\t// in\n    tag_84:\n        /* \"PauserRole.sol\":603:678  function renouncePauser() public {... */\n      jump\t// out\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      and\n        /* \"ERC20.sol\":1263:1270  uint256 */\n      0x00\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n    tag_45:\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      tag_88\n        /* \"PauserRole.sol\":358:368  msg.sender */\n      caller\n        /* \"PauserRole.sol\":349:357  isPauser */\n      tag_35\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      jump\t// in\n    tag_88:\n        /* \"PauserRole.sol\":341:370  require(isPauser(msg.sender)) */\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n        /* \"PauserRole.sol\":571:590  _addPauser(account) */\n      tag_91\n        /* \"PauserRole.sol\":582:589  account */\n      dup2\n        /* \"PauserRole.sol\":571:581  _addPauser */\n      tag_92\n        /* \"PauserRole.sol\":571:590  _addPauser(account) */\n      jump\t// in\n    tag_91:\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n      pop\n      jump\t// out\n        /* \"Pausable.sol\":959:1072  function pause() public onlyPauser whenNotPaused {... */\n    tag_47:\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      tag_94\n        /* \"PauserRole.sol\":358:368  msg.sender */\n      caller\n        /* \"PauserRole.sol\":349:357  isPauser */\n      tag_35\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      jump\t// in\n    tag_94:\n        /* \"PauserRole.sol\":341:370  require(isPauser(msg.sender)) */\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n        /* \"Pausable.sol\":675:682  _paused */\n      and(0xff, sload(0x04))\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n        /* \"Pausable.sol\":1018:1025  _paused */\n      0x04\n        /* \"Pausable.sol\":1018:1032  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Pausable.sol\":1028:1032  true */\n      0x01\n        /* \"Pausable.sol\":1018:1032  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"Pausable.sol\":1047:1065  Paused(msg.sender) */\n      0x40\n      dup1\n      mload\n        /* \"Pausable.sol\":1054:1064  msg.sender */\n      caller\n        /* \"Pausable.sol\":1047:1065  Paused(msg.sender) */\n      dup2\n      mstore\n      swap1\n      mload\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"Pausable.sol\":959:1072  function pause() public onlyPauser whenNotPaused {... */\n      jump\t// out\n        /* \"ERC20Pausable.sol\":825:1008  function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {... */\n    tag_50:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x04)\n        /* \"ERC20Pausable.sol\":921:933  bool success */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n        /* \"ERC20Pausable.sol\":952:1001  super.decreaseAllowance(spender, subtractedValue) */\n      tag_60\n        /* \"ERC20Pausable.sol\":976:983  spender */\n      dup4\n        /* \"ERC20Pausable.sol\":985:1000  subtractedValue */\n      dup4\n        /* \"ERC20Pausable.sol\":952:975  super.decreaseAllowance */\n      tag_103\n        /* \"ERC20Pausable.sol\":952:1001  super.decreaseAllowance(spender, subtractedValue) */\n      jump\t// in\n        /* \"ERC20Pausable.sol\":202:332  function transfer(address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_53:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x04)\n        /* \"ERC20Pausable.sol\":277:281  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"ERC20Pausable.sol\":300:325  super.transfer(to, value) */\n      tag_60\n        /* \"ERC20Pausable.sol\":315:317  to */\n      dup4\n        /* \"ERC20Pausable.sol\":319:324  value */\n      dup4\n        /* \"ERC20Pausable.sol\":300:314  super.transfer */\n      tag_108\n        /* \"ERC20Pausable.sol\":300:325  super.transfer(to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":1715:1722  uint256 */\n      0x00\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1741:1749  _allowed */\n      0x01\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1741:1765  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_61:\n        /* \"ERC20.sol\":2777:2781  bool */\n      0x00\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      tag_111\n        /* \"ERC20.sol\":2802:2812  msg.sender */\n      caller\n        /* \"ERC20.sol\":2814:2821  spender */\n      dup5\n        /* \"ERC20.sol\":2823:2828  value */\n      dup5\n        /* \"ERC20.sol\":2793:2801  _approve */\n      tag_112\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_111:\n      pop\n        /* \"ERC20.sol\":2846:2850  true */\n      0x01\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_67:\n        /* \"ERC20.sol\":3399:3403  bool */\n      0x00\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_114\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_115\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3478:3486  _allowed */\n      0x01\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3466:3476  msg.sender */\n      caller\n        /* \"ERC20.sol\":3478:3504  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      tag_116\n      swap2\n        /* \"ERC20.sol\":3460:3464  from */\n      dup7\n      swap2\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      tag_117\n      swap1\n        /* \"ERC20.sol\":3509:3514  value */\n      dup7\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":3478:3508  _allowed[from][msg.sender].sub */\n      tag_118\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_117:\n        /* \"ERC20.sol\":3451:3459  _approve */\n      tag_112\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"ERC20.sol\":3533:3537  true */\n      0x01\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_72:\n        /* \"ERC20.sol\":4163:4173  msg.sender */\n      caller\n        /* \"ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4184:4192  _allowed */\n      0x01\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4184:4213  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4138:4142  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4154:4230  _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue)) */\n      tag_111\n      swap2\n        /* \"ERC20.sol\":4175:4182  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      tag_117\n      swap1\n        /* \"ERC20.sol\":4218:4228  addedValue */\n      dup7\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4184:4217  _allowed[msg.sender][spender].add */\n      tag_122\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_81:\n        /* \"Roles.sol\":858:862  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":882:903  account != address(0) */\n      dup3\n      and\n        /* \"Roles.sol\":874:904  require(account != address(0)) */\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      and\n        /* \"Roles.sol\":921:932  role.bearer */\n      0x00\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"PauserRole.sol\":809:936  function _removePauser(address account) internal {... */\n    tag_85:\n        /* \"PauserRole.sol\":868:892  _pausers.remove(account) */\n      tag_126\n        /* \"PauserRole.sol\":868:876  _pausers */\n      0x03\n        /* \"PauserRole.sol\":884:891  account */\n      dup3\n        /* \"PauserRole.sol\":868:892  _pausers.remove(account) */\n      0xffffffff\n        /* \"PauserRole.sol\":868:883  _pausers.remove */\n      tag_127\n        /* \"PauserRole.sol\":868:892  _pausers.remove(account) */\n      and\n      jump\t// in\n    tag_126:\n        /* \"PauserRole.sol\":907:929  PauserRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"PauserRole.sol\":809:936  function _removePauser(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\n    tag_92:\n        /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n      tag_129\n        /* \"PauserRole.sol\":740:748  _pausers */\n      0x03\n        /* \"PauserRole.sol\":753:760  account */\n      dup3\n        /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n      0xffffffff\n        /* \"PauserRole.sol\":740:752  _pausers.add */\n      tag_130\n        /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n      and\n      jump\t// in\n    tag_129:\n        /* \"PauserRole.sol\":776:796  PauserAdded(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_103:\n        /* \"ERC20.sol\":4887:4897  msg.sender */\n      caller\n        /* \"ERC20.sol\":4862:4866  bool */\n      0x00\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4908:4916  _allowed */\n      0x01\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4908:4937  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4862:4866  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4878:4959  _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue)) */\n      tag_111\n      swap2\n        /* \"ERC20.sol\":4899:4906  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_117\n      swap1\n        /* \"ERC20.sol\":4942:4957  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4908:4941  _allowed[msg.sender][spender].sub */\n      tag_118\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_108:\n        /* \"ERC20.sol\":2000:2004  bool */\n      0x00\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      tag_111\n        /* \"ERC20.sol\":2026:2036  msg.sender */\n      caller\n        /* \"ERC20.sol\":2038:2040  to */\n      dup5\n        /* \"ERC20.sol\":2042:2047  value */\n      dup5\n        /* \"ERC20.sol\":2016:2025  _transfer */\n      tag_115\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6914:6935  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6906:6936  require(spender != address(0)) */\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6954:6973  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6946:6974  require(owner != address(0)) */\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6985:6993  _allowed */\n      0x01\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6985:7009  _allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6985:7017  _allowed[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":7032:7063  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5293:5309  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5285:5310  require(to != address(0)) */\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":5339:5348  _balances */\n      0x00\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      tag_141\n      swap1\n        /* \"ERC20.sol\":5359:5364  value */\n      dup3\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5339:5358  _balances[from].sub */\n      tag_118\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      and\n      jump\t// in\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":5321:5330  _balances */\n      0x00\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":5321:5365  _balances[from] = _balances[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":5391:5404  _balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      tag_142\n      swap1\n        /* \"ERC20.sol\":5409:5414  value */\n      dup3\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5391:5408  _balances[to].add */\n      tag_122\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      and\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":5375:5384  _balances */\n      0x00\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":5375:5415  _balances[to] = _balances[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"SafeMath.sol\":1269:1276  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1301:1302  a */\n      dup3\n        /* \"SafeMath.sol\":1296:1297  b */\n      dup3\n        /* \"SafeMath.sol\":1296:1302  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1288:1303  require(b <= a) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n        /* \"SafeMath.sol\":1325:1330  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"SafeMath.sol\":1497:1504  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1528:1533  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":1551:1557  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":593:614  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":585:615  require(account != address(0)) */\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n        /* \"Roles.sol\":633:651  has(role, account) */\n      tag_149\n        /* \"Roles.sol\":637:641  role */\n      dup3\n        /* \"Roles.sol\":643:650  account */\n      dup3\n        /* \"Roles.sol\":633:636  has */\n      tag_81\n        /* \"Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_149:\n        /* \"Roles.sol\":625:652  require(has(role, account)) */\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      and\n        /* \"Roles.sol\":686:691  false */\n      0x00\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":663:691  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":335:356  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":327:357  require(account != address(0)) */\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n        /* \"Roles.sol\":376:394  has(role, account) */\n      tag_153\n        /* \"Roles.sol\":380:384  role */\n      dup3\n        /* \"Roles.sol\":386:393  account */\n      dup3\n        /* \"Roles.sol\":376:379  has */\n      tag_81\n        /* \"Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_153:\n        /* \"Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"Roles.sol\":367:395  require(!has(role, account)) */\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      and\n        /* \"Roles.sol\":406:417  role.bearer */\n      0x00\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Roles.sol\":429:433  true */\n      0x01\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058202b4c981dc702b84bd7e33b027ee6a6a79fc6fad7cf9acc45ac668fa7265f1b810029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "60806040526100133361002260201b60201c565b6004805460ff191690556100f8565b61003a81600361007160201b61083a1790919060201c565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6001600160a01b03811661008457600080fd5b61009482826100c360201b60201c565b1561009e57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166100d857600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6108b2806101076000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636ef8d66d1161008c5780638456cb59116100665780638456cb5914610237578063a457c2d71461023f578063a9059cbb1461026b578063dd62ed3e14610297576100ea565b80636ef8d66d146101e357806370a08231146101eb57806382dc1ec414610211576100ea565b806339509351116100c8578063395093511461017f5780633f4ba83a146101ab57806346fbf68e146101b55780635c975abb146101db576100ea565b8063095ea7b3146100ef57806318160ddd1461012f57806323b872dd14610149575b600080fd5b61011b6004803603604081101561010557600080fd5b506001600160a01b0381351690602001356102c5565b604080519115158252519081900360200190f35b6101376102e9565b60408051918252519081900360200190f35b61011b6004803603606081101561015f57600080fd5b506001600160a01b038135811691602081013590911690604001356102ef565b61011b6004803603604081101561019557600080fd5b506001600160a01b038135169060200135610315565b6101b3610332565b005b61011b600480360360208110156101cb57600080fd5b50356001600160a01b0316610392565b61011b6103ab565b6101b36103b4565b6101376004803603602081101561020157600080fd5b50356001600160a01b03166103bf565b6101b36004803603602081101561022757600080fd5b50356001600160a01b03166103da565b6101b36103f8565b61011b6004803603604081101561025557600080fd5b506001600160a01b03813516906020013561045c565b61011b6004803603604081101561028157600080fd5b506001600160a01b038135169060200135610479565b610137600480360360408110156102ad57600080fd5b506001600160a01b0381358116916020013516610496565b60045460009060ff16156102d857600080fd5b6102e283836104c1565b9392505050565b60025490565b60045460009060ff161561030257600080fd5b61030d8484846104d7565b949350505050565b60045460009060ff161561032857600080fd5b6102e2838361052e565b61033b33610392565b61034457600080fd5b60045460ff1661035357600080fd5b6004805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b60006103a560038363ffffffff61056a16565b92915050565b60045460ff1690565b6103bd3361059f565b565b6001600160a01b031660009081526020819052604090205490565b6103e333610392565b6103ec57600080fd5b6103f5816105e7565b50565b61040133610392565b61040a57600080fd5b60045460ff161561041a57600080fd5b6004805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60045460009060ff161561046f57600080fd5b6102e2838361062f565b60045460009060ff161561048c57600080fd5b6102e2838361066b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006104ce338484610678565b50600192915050565b60006104e4848484610700565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461052491869161051f908663ffffffff6107cb16565b610678565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104ce91859061051f908663ffffffff6107e016565b60006001600160a01b03821661057f57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6105b060038263ffffffff6107f216565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6105f860038263ffffffff61083a16565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104ce91859061051f908663ffffffff6107cb16565b60006104ce338484610700565b6001600160a01b03821661068b57600080fd5b6001600160a01b03831661069e57600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661071357600080fd5b6001600160a01b03831660009081526020819052604090205461073c908263ffffffff6107cb16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610771908263ffffffff6107e016565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107da57600080fd5b50900390565b6000828201838110156102e257600080fd5b6001600160a01b03811661080557600080fd5b61080f828261056a565b61081857600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661084d57600080fd5b610857828261056a565b1561086157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fea165627a7a723058202b4c981dc702b84bd7e33b027ee6a6a79fc6fad7cf9acc45ac668fa7265f1b810029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x13 CALLER PUSH2 0x22 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xF8 JUMP JUMPDEST PUSH2 0x3A DUP2 PUSH1 0x3 PUSH2 0x71 PUSH1 0x20 SHL PUSH2 0x83A OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94 DUP3 DUP3 PUSH2 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x8B2 DUP1 PUSH2 0x107 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EF8D66D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8456CB59 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6EF8D66D EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x82DC1EC4 EQ PUSH2 0x211 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x46FBF68E EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x315 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x332 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x392 JUMP JUMPDEST PUSH2 0x11B PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x45C JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x479 JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x496 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30D DUP5 DUP5 DUP5 PUSH2 0x4D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x52E JUMP JUMPDEST PUSH2 0x33B CALLER PUSH2 0x392 JUMP JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 PUSH1 0x3 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x56A AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3BD CALLER PUSH2 0x59F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E3 CALLER PUSH2 0x392 JUMP JUMPDEST PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F5 DUP2 PUSH2 0x5E7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x401 CALLER PUSH2 0x392 JUMP JUMPDEST PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CE CALLER DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4 DUP5 DUP5 DUP5 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x524 SWAP2 DUP7 SWAP2 PUSH2 0x51F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x7CB AND JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4CE SWAP2 DUP6 SWAP1 PUSH2 0x51F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x7E0 AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5B0 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7F2 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCD265EBAF09DF2871CC7BD4133404A235BA12EFF2041BB89D9C714A2621C7C7E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5F8 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x83A AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4CE SWAP2 DUP6 SWAP1 PUSH2 0x51F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x7CB AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CE CALLER DUP5 DUP5 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x73C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7CB AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x771 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7E0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80F DUP3 DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x857 DUP3 DUP3 PUSH2 0x56A JUMP JUMPDEST ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2b 0x4c SWAP9 SAR 0xc7 MUL 0xb8 0x4b 0xd7 0xe3 EXTCODESIZE MUL PUSH31 0xE6A6A79FC6FAD7CF9ACC45AC668FA7265F1B81002900000000000000000000 ",
            "sourceMap": "154:856:5:-;;;274:22:9;285:10;274;;;:22;;:::i;:::-;338:7:8;:15;;-1:-1:-1;;338:15:8;;;154:856:5;;684:119:9;740:21;753:7;740:8;:12;;;;;;:21;;;;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:9;;;;;;;;684:119;:::o;259:181:11:-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;154:856:5:-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636ef8d66d1161008c5780638456cb59116100665780638456cb5914610237578063a457c2d71461023f578063a9059cbb1461026b578063dd62ed3e14610297576100ea565b80636ef8d66d146101e357806370a08231146101eb57806382dc1ec414610211576100ea565b806339509351116100c8578063395093511461017f5780633f4ba83a146101ab57806346fbf68e146101b55780635c975abb146101db576100ea565b8063095ea7b3146100ef57806318160ddd1461012f57806323b872dd14610149575b600080fd5b61011b6004803603604081101561010557600080fd5b506001600160a01b0381351690602001356102c5565b604080519115158252519081900360200190f35b6101376102e9565b60408051918252519081900360200190f35b61011b6004803603606081101561015f57600080fd5b506001600160a01b038135811691602081013590911690604001356102ef565b61011b6004803603604081101561019557600080fd5b506001600160a01b038135169060200135610315565b6101b3610332565b005b61011b600480360360208110156101cb57600080fd5b50356001600160a01b0316610392565b61011b6103ab565b6101b36103b4565b6101376004803603602081101561020157600080fd5b50356001600160a01b03166103bf565b6101b36004803603602081101561022757600080fd5b50356001600160a01b03166103da565b6101b36103f8565b61011b6004803603604081101561025557600080fd5b506001600160a01b03813516906020013561045c565b61011b6004803603604081101561028157600080fd5b506001600160a01b038135169060200135610479565b610137600480360360408110156102ad57600080fd5b506001600160a01b0381358116916020013516610496565b60045460009060ff16156102d857600080fd5b6102e283836104c1565b9392505050565b60025490565b60045460009060ff161561030257600080fd5b61030d8484846104d7565b949350505050565b60045460009060ff161561032857600080fd5b6102e2838361052e565b61033b33610392565b61034457600080fd5b60045460ff1661035357600080fd5b6004805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b60006103a560038363ffffffff61056a16565b92915050565b60045460ff1690565b6103bd3361059f565b565b6001600160a01b031660009081526020819052604090205490565b6103e333610392565b6103ec57600080fd5b6103f5816105e7565b50565b61040133610392565b61040a57600080fd5b60045460ff161561041a57600080fd5b6004805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60045460009060ff161561046f57600080fd5b6102e2838361062f565b60045460009060ff161561048c57600080fd5b6102e2838361066b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006104ce338484610678565b50600192915050565b60006104e4848484610700565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461052491869161051f908663ffffffff6107cb16565b610678565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104ce91859061051f908663ffffffff6107e016565b60006001600160a01b03821661057f57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6105b060038263ffffffff6107f216565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6105f860038263ffffffff61083a16565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104ce91859061051f908663ffffffff6107cb16565b60006104ce338484610700565b6001600160a01b03821661068b57600080fd5b6001600160a01b03831661069e57600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661071357600080fd5b6001600160a01b03831660009081526020819052604090205461073c908263ffffffff6107cb16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610771908263ffffffff6107e016565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107da57600080fd5b50900390565b6000828201838110156102e257600080fd5b6001600160a01b03811661080557600080fd5b61080f828261056a565b61081857600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661084d57600080fd5b610857828261056a565b1561086157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fea165627a7a723058202b4c981dc702b84bd7e33b027ee6a6a79fc6fad7cf9acc45ac668fa7265f1b810029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EF8D66D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8456CB59 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6EF8D66D EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x82DC1EC4 EQ PUSH2 0x211 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x46FBF68E EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x315 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x332 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x392 JUMP JUMPDEST PUSH2 0x11B PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x45C JUMP JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x479 JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x496 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30D DUP5 DUP5 DUP5 PUSH2 0x4D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x52E JUMP JUMPDEST PUSH2 0x33B CALLER PUSH2 0x392 JUMP JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 PUSH1 0x3 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x56A AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3BD CALLER PUSH2 0x59F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E3 CALLER PUSH2 0x392 JUMP JUMPDEST PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F5 DUP2 PUSH2 0x5E7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x401 CALLER PUSH2 0x392 JUMP JUMPDEST PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2 DUP4 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CE CALLER DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4 DUP5 DUP5 DUP5 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x524 SWAP2 DUP7 SWAP2 PUSH2 0x51F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x7CB AND JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4CE SWAP2 DUP6 SWAP1 PUSH2 0x51F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x7E0 AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5B0 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7F2 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCD265EBAF09DF2871CC7BD4133404A235BA12EFF2041BB89D9C714A2621C7C7E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5F8 PUSH1 0x3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x83A AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4CE SWAP2 DUP6 SWAP1 PUSH2 0x51F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x7CB AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CE CALLER DUP5 DUP5 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x73C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7CB AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x771 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7E0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80F DUP3 DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x857 DUP3 DUP3 PUSH2 0x56A JUMP JUMPDEST ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2b 0x4c SWAP9 SAR 0xc7 MUL 0xb8 0x4b 0xd7 0xe3 EXTCODESIZE MUL PUSH31 0xE6A6A79FC6FAD7CF9ACC45AC668FA7265F1B81002900000000000000000000 ",
            "sourceMap": "154:856:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;154:856:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:138;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;502:138:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;907:89:0;;;:::i;:::-;;;;;;;;;;;;;;;;338:158:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;338:158:5;;;;;;;;;;;;;;;;;:::i;646:173::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;646:173:5;;;;;;;;:::i;1162:115:8:-;;;:::i;:::-;;394:107:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;394:107:9;-1:-1:-1;;;;;394:107:9;;:::i;446:76:8:-;;;:::i;603:75:9:-;;;:::i;1208:104:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1208:104:0;-1:-1:-1;;;;;1208:104:0;;:::i;507:90:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;507:90:9;-1:-1:-1;;;;;507:90:9;;:::i;959:113:8:-;;;:::i;825:183:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;825:183:5;;;;;;;;:::i;202:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;202:130:5;;;;;;;;:::i;1643:129:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:129:0;;;;;;;;;;:::i;502:138:5:-;675:7:8;;581:4:5;;675:7:8;;674:8;666:17;;;;;;604:29:5;618:7;627:5;604:13;:29::i;:::-;597:36;502:138;-1:-1:-1;;;502:138:5:o;907:89:0:-;977:12;;907:89;:::o;338:158:5:-;675:7:8;;431:4:5;;675:7:8;;674:8;666:17;;;;;;454:35:5;473:4;479:2;483:5;454:18;:35::i;:::-;447:42;338:158;-1:-1:-1;;;;338:158:5:o;646:173::-;675:7:8;;737:12:5;;675:7:8;;674:8;666:17;;;;;;768:44:5;792:7;801:10;768:23;:44::i;1162:115:8:-;349:20:9;358:10;349:8;:20::i;:::-;341:29;;;;;;846:7:8;;;;838:16;;;;;;1220:7;:15;;-1:-1:-1;;1220:15:8;;;1250:20;;;1259:10;1250:20;;;;;;;;;;;;;1162:115::o;394:107:9:-;450:4;473:21;:8;486:7;473:21;:12;:21;:::i;:::-;466:28;394:107;-1:-1:-1;;394:107:9:o;446:76:8:-;508:7;;;;446:76;:::o;603:75:9:-;646:25;660:10;646:13;:25::i;:::-;603:75::o;1208:104:0:-;-1:-1:-1;;;;;1289:16:0;1263:7;1289:16;;;;;;;;;;;;1208:104::o;507:90:9:-;349:20;358:10;349:8;:20::i;:::-;341:29;;;;;;571:19;582:7;571:10;:19::i;:::-;507:90;:::o;959:113:8:-;349:20:9;358:10;349:8;:20::i;:::-;341:29;;;;;;675:7:8;;;;674:8;666:17;;;;;;1018:7;:14;;-1:-1:-1;;1018:14:8;1028:4;1018:14;;;1047:18;;;1054:10;1047:18;;;;;;;;;;;;;959:113::o;825:183:5:-;675:7:8;;921:12:5;;675:7:8;;674:8;666:17;;;;;;952:49:5;976:7;985:15;952:23;:49::i;202:130::-;675:7:8;;277:4:5;;675:7:8;;674:8;666:17;;;;;;300:25:5;315:2;319:5;300:14;:25::i;1643:129:0:-;-1:-1:-1;;;;;1741:15:0;;;1715:7;1741:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1643:129::o;2712:145::-;2777:4;2793:36;2802:10;2814:7;2823:5;2793:8;:36::i;:::-;-1:-1:-1;2846:4:0;2712:145;;;;:::o;3320:224::-;3399:4;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;;;;;3478:14:0;;;;;;:8;:14;;;;;;;;3466:10;3478:26;;;;;;;;;3451:65;;3460:4;;3478:37;;3509:5;3478:37;:30;:37;:::i;:::-;3451:8;:65::i;:::-;-1:-1:-1;3533:4:0;3320:224;;;;;:::o;4058:200::-;4163:10;4138:4;4184:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4184:29:0;;;;;;;;;;4138:4;;4154:76;;4175:7;;4184:45;;4218:10;4184:45;:33;:45;:::i;786:162:11:-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;809:127:9:-;868:24;:8;884:7;868:24;:15;:24;:::i;:::-;907:22;;-1:-1:-1;;;;;907:22:9;;;;;;;;809:127;:::o;684:119::-;740:21;:8;753:7;740:21;:12;:21;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:9;;;;;;;;684:119;:::o;4777:210:0:-;4887:10;4862:4;4908:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4908:29:0;;;;;;;;;;4862:4;;4878:81;;4899:7;;4908:50;;4942:15;4908:50;:33;:50;:::i;1939:137::-;2000:4;2016:32;2026:10;2038:2;2042:5;2016:9;:32::i;6822:248::-;-1:-1:-1;;;;;6914:21:0;;6906:30;;;;;;-1:-1:-1;;;;;6954:19:0;;6946:28;;;;;;-1:-1:-1;;;;;6985:15:0;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7032:31;;;;;;;;;;;;;;;;;6822:248;;;:::o;5206:256::-;-1:-1:-1;;;;;5293:16:0;;5285:25;;;;;;-1:-1:-1;;;;;5339:15:0;;:9;:15;;;;;;;;;;;:26;;5359:5;5339:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5321:15:0;;;:9;:15;;;;;;;;;;;:44;;;;5391:13;;;;;;;:24;;5409:5;5391:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5375:13:0;;;:9;:13;;;;;;;;;;;;:40;;;;5430:25;;;;;;;5375:13;;5430:25;;;;;;;;;;;;;5206:256;;;:::o;1211:145:12:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:12;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;514:184:11;-1:-1:-1;;;;;593:21:11;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:11;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:11;;;514:184::o;259:181::-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "445200",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "addPauser(address)": "infinite",
              "allowance(address,address)": "738",
              "approve(address,uint256)": "22687",
              "balanceOf(address)": "590",
              "decreaseAllowance(address,uint256)": "infinite",
              "increaseAllowance(address,uint256)": "infinite",
              "isPauser(address)": "infinite",
              "pause()": "infinite",
              "paused()": "499",
              "renouncePauser()": "infinite",
              "totalSupply()": "444",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite",
              "unpause()": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "MSTORE"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH [tag]",
                "value": "4"
              },
              {
                "begin": 285,
                "end": 295,
                "name": "CALLER"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH [tag]",
                "value": "5"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SHL"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SHR"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "tag",
                "value": "4"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMPDEST"
              },
              {
                "begin": 338,
                "end": 345,
                "name": "PUSH",
                "value": "4"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "DUP1"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "AND"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "SWAP1"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "SSTORE"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH [tag]",
                "value": "7"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "JUMP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "tag",
                "value": "5"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMPDEST"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH [tag]",
                "value": "9"
              },
              {
                "begin": 753,
                "end": 760,
                "name": "DUP2"
              },
              {
                "begin": 740,
                "end": 748,
                "name": "PUSH",
                "value": "3"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "10"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SHL"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "18446744073709551746"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "OR"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP2"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SHR"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "tag",
                "value": "9"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMPDEST"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "MLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "DUP3"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "AND"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "LOG2"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "POP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "tag",
                "value": "10"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "DUP2"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "AND"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH [tag]",
                "value": "12"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPI"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "DUP1"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "REVERT"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "tag",
                "value": "12"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPDEST"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH [tag]",
                "value": "13"
              },
              {
                "begin": 380,
                "end": 384,
                "name": "DUP3"
              },
              {
                "begin": 386,
                "end": 393,
                "name": "DUP3"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH [tag]",
                "value": "14"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "SHL"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "SHR"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "tag",
                "value": "13"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMPDEST"
              },
              {
                "begin": 375,
                "end": 394,
                "name": "ISZERO"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH [tag]",
                "value": "15"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPI"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "DUP1"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "REVERT"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "tag",
                "value": "15"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "AND"
              },
              {
                "begin": 406,
                "end": 417,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "DUP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "KECCAK256"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "DUP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "AND"
              },
              {
                "begin": 429,
                "end": 433,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "OR"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SSTORE"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "tag",
                "value": "14"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMPDEST"
              },
              {
                "begin": 858,
                "end": 862,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "DUP3"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "AND"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH [tag]",
                "value": "17"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPI"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "DUP1"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "REVERT"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "tag",
                "value": "17"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 932,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "DUP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "KECCAK256"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SLOAD"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "tag",
                "value": "7"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "JUMPDEST"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "DUP1"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "CODECOPY"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 154,
                "end": 1010,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a723058202b4c981dc702b84bd7e33b027ee6a6a79fc6fad7cf9acc45ac668fa7265f1b810029",
                ".code": [
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "POP"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "LT"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "SHR"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "6EF8D66D"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "GT"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "8456CB59"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "GT"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "8456CB59"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMP"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "6EF8D66D"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "82DC1EC4"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMP"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "GT"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "3F4BA83A"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "46FBF68E"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "5C975ABB"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMP"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "EQ"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "DUP1"
                  },
                  {
                    "begin": 154,
                    "end": 1010,
                    "name": "REVERT"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP2"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "AND"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ADD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "tag",
                    "value": "20"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP3"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP2"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SUB"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ADD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "RETURN"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "24"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "23"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "ADD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "RETURN"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP1"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "26"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "26"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "AND"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "ADD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "AND"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "ADD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH [tag]",
                    "value": "27"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "DUP1"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "29"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "29"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "DUP2"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "AND"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "ADD"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "PUSH [tag]",
                    "value": "32"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "tag",
                    "value": "31"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "STOP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "DUP1"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "34"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "34"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "AND"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "39"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "41"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "AND"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "DUP1"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "44"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "AND"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "PUSH [tag]",
                    "value": "47"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "DUP1"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "49"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "DUP2"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "AND"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "ADD"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH [tag]",
                    "value": "50"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "DUP1"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "52"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "DUP2"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "AND"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "ADD"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH [tag]",
                    "value": "53"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "55"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "ADD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "tag",
                    "value": "22"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 581,
                    "end": 585,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 581,
                    "end": 585,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "58"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 618,
                    "end": 625,
                    "name": "DUP4"
                  },
                  {
                    "begin": 627,
                    "end": 632,
                    "name": "DUP4"
                  },
                  {
                    "begin": 604,
                    "end": 617,
                    "name": "PUSH [tag]",
                    "value": "61"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "tag",
                    "value": "60"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 597,
                    "end": 633,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "24"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "tag",
                    "value": "27"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 431,
                    "end": 435,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 431,
                    "end": 435,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "64"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "64"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "PUSH [tag]",
                    "value": "66"
                  },
                  {
                    "begin": 473,
                    "end": 477,
                    "name": "DUP5"
                  },
                  {
                    "begin": 479,
                    "end": 481,
                    "name": "DUP5"
                  },
                  {
                    "begin": 483,
                    "end": 488,
                    "name": "DUP5"
                  },
                  {
                    "begin": 454,
                    "end": 472,
                    "name": "PUSH [tag]",
                    "value": "67"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "tag",
                    "value": "66"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 447,
                    "end": 489,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 737,
                    "end": 749,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 737,
                    "end": 749,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "69"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "69"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 768,
                    "end": 812,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 792,
                    "end": 799,
                    "name": "DUP4"
                  },
                  {
                    "begin": 801,
                    "end": 811,
                    "name": "DUP4"
                  },
                  {
                    "begin": 768,
                    "end": 791,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 768,
                    "end": 812,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "tag",
                    "value": "32"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "74"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "74"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "75"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "75"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "AND"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "PUSH [tag]",
                    "value": "77"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "DUP1"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "REVERT"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "tag",
                    "value": "77"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1220,
                    "end": 1227,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "AND"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1259,
                    "end": 1269,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SUB"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "ADD"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "LOG1"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 450,
                    "end": 454,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH [tag]",
                    "value": "80"
                  },
                  {
                    "begin": 473,
                    "end": 481,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 486,
                    "end": 493,
                    "name": "DUP4"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 473,
                    "end": 485,
                    "name": "PUSH [tag]",
                    "value": "81"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "AND"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "tag",
                    "value": "80"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 466,
                    "end": 494,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "tag",
                    "value": "37"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "AND"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "39"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "PUSH [tag]",
                    "value": "84"
                  },
                  {
                    "begin": 660,
                    "end": 670,
                    "name": "CALLER"
                  },
                  {
                    "begin": 646,
                    "end": 659,
                    "name": "PUSH [tag]",
                    "value": "85"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "tag",
                    "value": "84"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "42"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "AND"
                  },
                  {
                    "begin": 1263,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "45"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "88"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "88"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "89"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "89"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "PUSH [tag]",
                    "value": "91"
                  },
                  {
                    "begin": 582,
                    "end": 589,
                    "name": "DUP2"
                  },
                  {
                    "begin": 571,
                    "end": 581,
                    "name": "PUSH [tag]",
                    "value": "92"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "tag",
                    "value": "91"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "tag",
                    "value": "47"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "94"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "94"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "95"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "95"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "97"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "97"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1018,
                    "end": 1025,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "AND"
                  },
                  {
                    "begin": 1028,
                    "end": 1032,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "OR"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1054,
                    "end": 1064,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "PUSH",
                    "value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SUB"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "ADD"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "LOG1"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "tag",
                    "value": "50"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 921,
                    "end": 933,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 921,
                    "end": 933,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "100"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "100"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 952,
                    "end": 1001,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 976,
                    "end": 983,
                    "name": "DUP4"
                  },
                  {
                    "begin": 985,
                    "end": 1000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 952,
                    "end": 975,
                    "name": "PUSH [tag]",
                    "value": "103"
                  },
                  {
                    "begin": 952,
                    "end": 1001,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "tag",
                    "value": "53"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 277,
                    "end": 281,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 277,
                    "end": 281,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "105"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "105"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 300,
                    "end": 325,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 315,
                    "end": 317,
                    "name": "DUP4"
                  },
                  {
                    "begin": 319,
                    "end": 324,
                    "name": "DUP4"
                  },
                  {
                    "begin": 300,
                    "end": 314,
                    "name": "PUSH [tag]",
                    "value": "108"
                  },
                  {
                    "begin": 300,
                    "end": 325,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "56"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "AND"
                  },
                  {
                    "begin": 1715,
                    "end": 1722,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1749,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "AND"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "61"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2777,
                    "end": 2781,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 2802,
                    "end": 2812,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2814,
                    "end": 2821,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2823,
                    "end": 2828,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2793,
                    "end": 2801,
                    "name": "PUSH [tag]",
                    "value": "112"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "tag",
                    "value": "111"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2846,
                    "end": 2850,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "67"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3399,
                    "end": 3403,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "PUSH [tag]",
                    "value": "114"
                  },
                  {
                    "begin": 3425,
                    "end": 3429,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3431,
                    "end": 3433,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3435,
                    "end": 3440,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3415,
                    "end": 3424,
                    "name": "PUSH [tag]",
                    "value": "115"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "tag",
                    "value": "114"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3486,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3466,
                    "end": 3476,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "PUSH [tag]",
                    "value": "116"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH [tag]",
                    "value": "117"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3509,
                    "end": 3514,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3478,
                    "end": 3508,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "tag",
                    "value": "117"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3451,
                    "end": 3459,
                    "name": "PUSH [tag]",
                    "value": "112"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "tag",
                    "value": "116"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3533,
                    "end": 3537,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "72"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4163,
                    "end": 4173,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4192,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH [tag]",
                    "value": "117"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4218,
                    "end": 4228,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4184,
                    "end": 4217,
                    "name": "PUSH [tag]",
                    "value": "122"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "tag",
                    "value": "81"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 858,
                    "end": 862,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "DUP3"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "AND"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH [tag]",
                    "value": "124"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "DUP1"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "REVERT"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "tag",
                    "value": "124"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 932,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "DUP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "tag",
                    "value": "85"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH [tag]",
                    "value": "126"
                  },
                  {
                    "begin": 868,
                    "end": 876,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 884,
                    "end": 891,
                    "name": "DUP3"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 868,
                    "end": 883,
                    "name": "PUSH [tag]",
                    "value": "127"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "AND"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "tag",
                    "value": "126"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "AND"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "CD265EBAF09DF2871CC7BD4133404A235BA12EFF2041BB89D9C714A2621C7C7E"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "LOG2"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "POP"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "tag",
                    "value": "92"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH [tag]",
                    "value": "129"
                  },
                  {
                    "begin": 740,
                    "end": 748,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 753,
                    "end": 760,
                    "name": "DUP3"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 740,
                    "end": 752,
                    "name": "PUSH [tag]",
                    "value": "130"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "AND"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "tag",
                    "value": "129"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "DUP3"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "AND"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "LOG2"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "POP"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "103"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4887,
                    "end": 4897,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4916,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH [tag]",
                    "value": "117"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4942,
                    "end": 4957,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4908,
                    "end": 4941,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "108"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2000,
                    "end": 2004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 2026,
                    "end": 2036,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2038,
                    "end": 2040,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2042,
                    "end": 2047,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2016,
                    "end": 2025,
                    "name": "PUSH [tag]",
                    "value": "115"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "tag",
                    "value": "112"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "AND"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH [tag]",
                    "value": "137"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "tag",
                    "value": "137"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "AND"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH [tag]",
                    "value": "138"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "tag",
                    "value": "138"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 6993,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SUB"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "ADD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "tag",
                    "value": "115"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "AND"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH [tag]",
                    "value": "140"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "tag",
                    "value": "140"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5348,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH [tag]",
                    "value": "141"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5359,
                    "end": 5364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5339,
                    "end": 5358,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "tag",
                    "value": "141"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "AND"
                  },
                  {
                    "begin": 5321,
                    "end": 5330,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH [tag]",
                    "value": "142"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5409,
                    "end": 5414,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5391,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "122"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "tag",
                    "value": "142"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "AND"
                  },
                  {
                    "begin": 5375,
                    "end": 5384,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "AND"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SUB"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "ADD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "tag",
                    "value": "118"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1269,
                    "end": 1276,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1301,
                    "end": 1302,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1297,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "GT"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH [tag]",
                    "value": "144"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "tag",
                    "value": "144"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SUB"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "tag",
                    "value": "122"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1497,
                    "end": 1504,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "ADD"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "LT"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "REVERT"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "tag",
                    "value": "127"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "DUP2"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "AND"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH [tag]",
                    "value": "148"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "DUP1"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "REVERT"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "tag",
                    "value": "148"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "PUSH [tag]",
                    "value": "149"
                  },
                  {
                    "begin": 637,
                    "end": 641,
                    "name": "DUP3"
                  },
                  {
                    "begin": 643,
                    "end": 650,
                    "name": "DUP3"
                  },
                  {
                    "begin": 633,
                    "end": 636,
                    "name": "PUSH [tag]",
                    "value": "81"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "tag",
                    "value": "149"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH [tag]",
                    "value": "150"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "DUP1"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "REVERT"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "tag",
                    "value": "150"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "AND"
                  },
                  {
                    "begin": 686,
                    "end": 691,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "DUP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "DUP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "AND"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "tag",
                    "value": "130"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "DUP2"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "AND"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "152"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "DUP1"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "REVERT"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "tag",
                    "value": "152"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "PUSH [tag]",
                    "value": "153"
                  },
                  {
                    "begin": 380,
                    "end": 384,
                    "name": "DUP3"
                  },
                  {
                    "begin": 386,
                    "end": 393,
                    "name": "DUP3"
                  },
                  {
                    "begin": 376,
                    "end": 379,
                    "name": "PUSH [tag]",
                    "value": "81"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "tag",
                    "value": "153"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 375,
                    "end": 394,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH [tag]",
                    "value": "154"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "DUP1"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "REVERT"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "tag",
                    "value": "154"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "AND"
                  },
                  {
                    "begin": 406,
                    "end": 417,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "DUP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "DUP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "AND"
                  },
                  {
                    "begin": 429,
                    "end": 433,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "OR"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "addPauser(address)": "82dc1ec4",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "isPauser(address)": "46fbf68e",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "renouncePauser()": "6ef8d66d",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20 modified with pausable transfers.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return A uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\",\"keccak256\":\"0x612eb74ef1ba2e4ea72f85dda6c21f7dbdcc0ece01b1bf3b590f3ea4d2e7e13d\"},\"ERC20Pausable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\n/**\\n * @title Pausable token\\n * @dev ERC20 modified with pausable transfers.\\n */\\ncontract ERC20Pausable is ERC20, Pausable {\\n    function transfer(address to, uint256 value) public whenNotPaused returns (bool) {\\n        return super.transfer(to, value);\\n    }\\n\\n    function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {\\n        return super.transferFrom(from, to, value);\\n    }\\n\\n    function approve(address spender, uint256 value) public whenNotPaused returns (bool) {\\n        return super.approve(spender, value);\\n    }\\n\\n    function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {\\n        return super.increaseAllowance(spender, addedValue);\\n    }\\n\\n    function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {\\n        return super.decreaseAllowance(spender, subtractedValue);\\n    }\\n}\\n\",\"keccak256\":\"0xfd4e0bb82615d8b50bf36cd6548847ee2099692403d1fdaadc269ed9714a0a34\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"},\"Pausable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./PauserRole.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is PauserRole {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    constructor () internal {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @return true if the contract is paused, false otherwise.\\n     */\\n    function paused() public view returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!_paused);\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     */\\n    modifier whenPaused() {\\n        require(_paused);\\n        _;\\n    }\\n\\n    /**\\n     * @dev called by the owner to pause, triggers stopped state\\n     */\\n    function pause() public onlyPauser whenNotPaused {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    /**\\n     * @dev called by the owner to unpause, returns to normal state\\n     */\\n    function unpause() public onlyPauser whenPaused {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x79fd086ef074a6b00524e0e28d507ebdcafd6c4ed1ec392d4e01bd3d25d3bad3\"},\"PauserRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract PauserRole {\\n    using Roles for Roles.Role;\\n\\n    event PauserAdded(address indexed account);\\n    event PauserRemoved(address indexed account);\\n\\n    Roles.Role private _pausers;\\n\\n    constructor () internal {\\n        _addPauser(msg.sender);\\n    }\\n\\n    modifier onlyPauser() {\\n        require(isPauser(msg.sender));\\n        _;\\n    }\\n\\n    function isPauser(address account) public view returns (bool) {\\n        return _pausers.has(account);\\n    }\\n\\n    function addPauser(address account) public onlyPauser {\\n        _addPauser(account);\\n    }\\n\\n    function renouncePauser() public {\\n        _removePauser(msg.sender);\\n    }\\n\\n    function _addPauser(address account) internal {\\n        _pausers.add(account);\\n        emit PauserAdded(account);\\n    }\\n\\n    function _removePauser(address account) internal {\\n        _pausers.remove(account);\\n        emit PauserRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x66bf431210816dd3e185e54e27e150b88265d5e2addd5ec50dce760432a3616e\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "IERC20.sol": {
      "IERC20": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "who",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "see https://eips.ethereum.org/EIPS/eip-20",
          "methods": {},
          "title": "ERC20 interface"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-20\",\"methods\":{},\"title\":\"ERC20 interface\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "MinterRole.sol": {
      "MinterRole": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isMinter",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterRemoved",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {}
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "addMinter(address)": "983b2d56",
            "isMinter(address)": "aa271e1a",
            "renounceMinter()": "98650275"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"MinterRole.sol\":\"MinterRole\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MinterRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract MinterRole {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () internal {\\n        _addMinter(msg.sender);\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(msg.sender));\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(msg.sender);\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe1859219b85aafa5b8f83c2db219b3a948830f0312d497e61400e44bda40f76c\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "Pausable.sol": {
      "Pausable": {
        "abi": [
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isPauser",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renouncePauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addPauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Paused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Unpaused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserRemoved",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "Base contract which allows children to implement an emergency stop mechanism.",
          "methods": {
            "pause()": {
              "details": "called by the owner to pause, triggers stopped state"
            },
            "paused()": {
              "return": "true if the contract is paused, false otherwise."
            },
            "unpause()": {
              "details": "called by the owner to unpause, returns to normal state"
            }
          },
          "title": "Pausable"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "addPauser(address)": "82dc1ec4",
            "isPauser(address)": "46fbf68e",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "renouncePauser()": "6ef8d66d",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Base contract which allows children to implement an emergency stop mechanism.\",\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Pausable.sol\":\"Pausable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Pausable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./PauserRole.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is PauserRole {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    constructor () internal {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @return true if the contract is paused, false otherwise.\\n     */\\n    function paused() public view returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!_paused);\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     */\\n    modifier whenPaused() {\\n        require(_paused);\\n        _;\\n    }\\n\\n    /**\\n     * @dev called by the owner to pause, triggers stopped state\\n     */\\n    function pause() public onlyPauser whenNotPaused {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    /**\\n     * @dev called by the owner to unpause, returns to normal state\\n     */\\n    function unpause() public onlyPauser whenPaused {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x79fd086ef074a6b00524e0e28d507ebdcafd6c4ed1ec392d4e01bd3d25d3bad3\"},\"PauserRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract PauserRole {\\n    using Roles for Roles.Role;\\n\\n    event PauserAdded(address indexed account);\\n    event PauserRemoved(address indexed account);\\n\\n    Roles.Role private _pausers;\\n\\n    constructor () internal {\\n        _addPauser(msg.sender);\\n    }\\n\\n    modifier onlyPauser() {\\n        require(isPauser(msg.sender));\\n        _;\\n    }\\n\\n    function isPauser(address account) public view returns (bool) {\\n        return _pausers.has(account);\\n    }\\n\\n    function addPauser(address account) public onlyPauser {\\n        _addPauser(account);\\n    }\\n\\n    function renouncePauser() public {\\n        _removePauser(msg.sender);\\n    }\\n\\n    function _addPauser(address account) internal {\\n        _pausers.add(account);\\n        emit PauserAdded(account);\\n    }\\n\\n    function _removePauser(address account) internal {\\n        _pausers.remove(account);\\n        emit PauserRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x66bf431210816dd3e185e54e27e150b88265d5e2addd5ec50dce760432a3616e\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "PauserRole.sol": {
      "PauserRole": {
        "abi": [
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isPauser",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renouncePauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addPauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserRemoved",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {}
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "addPauser(address)": "82dc1ec4",
            "isPauser(address)": "46fbf68e",
            "renouncePauser()": "6ef8d66d"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PauserRole.sol\":\"PauserRole\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"PauserRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract PauserRole {\\n    using Roles for Roles.Role;\\n\\n    event PauserAdded(address indexed account);\\n    event PauserRemoved(address indexed account);\\n\\n    Roles.Role private _pausers;\\n\\n    constructor () internal {\\n        _addPauser(msg.sender);\\n    }\\n\\n    modifier onlyPauser() {\\n        require(isPauser(msg.sender));\\n        _;\\n    }\\n\\n    function isPauser(address account) public view returns (bool) {\\n        return _pausers.has(account);\\n    }\\n\\n    function addPauser(address account) public onlyPauser {\\n        _addPauser(account);\\n    }\\n\\n    function renouncePauser() public {\\n        _removePauser(msg.sender);\\n    }\\n\\n    function _addPauser(address account) internal {\\n        _pausers.add(account);\\n        emit PauserAdded(account);\\n    }\\n\\n    function _removePauser(address account) internal {\\n        _pausers.remove(account);\\n        emit PauserRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x66bf431210816dd3e185e54e27e150b88265d5e2addd5ec50dce760432a3616e\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "RaeToken.sol": {
      "RaeToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalInPeriod",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "cap",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "mint",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "burn",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isPauser",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "mintAmount",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renouncePauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "burnFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "addresses",
                "type": "address[]"
              },
              {
                "name": "values",
                "type": "uint256[]"
              }
            ],
            "name": "mintBulk",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addPauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "account",
                "type": "address"
              }
            ],
            "name": "isMinter",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "remainingInPeriod",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "period",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "decimals",
                "type": "uint8"
              },
              {
                "name": "cap",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Paused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Unpaused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "PauserRemoved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "account",
                "type": "address"
              }
            ],
            "name": "MinterRemoved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "details": "RaeToken Contract requirements: - address that deployed RaeToken can pause contract and release pauseRole in future - address that deployed RaeToken has mintRole and can release mintRole in future - RaeMintContract has mintRole after deployment - totalSupply is capped at 34 million RAE = 34000000 RAE, or 34000000e18 ROK (1 RAE = 1e18 ROK) - every 1700 _mintPeriods _mintAmount is halved - _mintAmount starts at 10000 RAE = 10000e18 ROK - halveEvery can never be changed",
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "owner": "address The address which owns the funds.",
                "spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "owner": "The address to query the balance of."
              },
              "return": "A uint256 representing the amount owned by the passed address."
            },
            "burn(uint256)": {
              "details": "do not allow burn during pause"
            },
            "cap()": {
              "return": "the cap for the token minting."
            },
            "decimals()": {
              "return": "the number of decimals of the token."
            },
            "mint(address,uint256)": {
              "details": "do not allow mint during pause"
            },
            "mintBulk(address[],uint256[])": {
              "details": "perform a minting period requirements: - addresses.length == values.length != 0 - only addresses with minter role should be able to call this function - totalSent == _mintAmount - every time this function returns successfully (true) _mintPeriods is incremented by 1 - every 1700 _mintPeriods _mintAmount is halved. e.g. when _mintPeriods = 1700 then _mintAmount = 5000e18 - addresses[i] is minted values[i], accepatable to have duplicate addresses",
              "params": {
                "addresses": "array of addresses where amount minted to addresses[i] is values[i]",
                "values": "array of token amounts that add up to _mintAmount"
              }
            },
            "name()": {
              "return": "the name of the token."
            },
            "pause()": {
              "details": "called by the owner to pause, triggers stopped state"
            },
            "paused()": {
              "return": "true if the contract is paused, false otherwise."
            },
            "symbol()": {
              "return": "the symbol of the token."
            },
            "totalSupply()": {
              "details": "Total number of tokens in existence"
            },
            "unpause()": {
              "details": "called by the owner to unpause, returns to normal state"
            }
          }
        },
        "evm": {
          "assembly": "    /* \"RaeToken.sol\":636:3926  contract RaeToken is ERC20Detailed, ERC20Capped, ERC20Burnable, ERC20Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"RaeToken.sol\":750:759  216000e18 */\n  0x2dbd622a9ef3d7000000\n    /* \"RaeToken.sol\":720:759  uint256 private _mintAmount = 216000e18 */\n  0x0a\n  sstore\n    /* \"RaeToken.sol\":796:797  0 */\n  0x00\n    /* \"RaeToken.sol\":765:797  uint256 private _mintPeriods = 0 */\n  0x0b\n  sstore\n    /* \"RaeToken.sol\":836:837  0 */\n  0x00\n    /* \"RaeToken.sol\":803:837  uint256 private _totalInPeriod = 0 */\n  0x0c\n  sstore\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup2\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":62:83   */\n  dup3\n  add\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup2\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup5\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":213:223   */\n  dup2\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup8\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":0:372   */\n  pop\n  pop\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  swap3\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup2\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_6\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_6:\n    /* \"--CODEGEN--\":62:83   */\n  dup3\n  add\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup2\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup5\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_7:\n    /* \"--CODEGEN--\":213:223   */\n  dup2\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup8\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_8:\n  pop\n  pop\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  0x20\n  dup1\n  dup4\n  add\n  mload\n  0x40\n  swap1\n  swap4\n  add\n  mload\n    /* \"ERC20Detailed.sol\":493:505  _name = name */\n  dup7\n  mload\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  swap3\n  swap6\n  pop\n  swap3\n  swap4\n  pop\n  dup3\n  swap2\n    /* \"RaeToken.sol\":1168:1172  name */\n  dup7\n  swap2\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  dup7\n  swap2\n  dup7\n  swap2\n    /* \"ERC20Detailed.sol\":493:505  _name = name */\n  tag_16\n  swap2\n    /* \"ERC20Detailed.sol\":493:498  _name */\n  0x00\n  swap2\n    /* \"ERC20Detailed.sol\":493:505  _name = name */\n  dup7\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"ERC20Detailed.sol\":515:531  _symbol = symbol */\n  dup2\n  mload\n  tag_18\n  swap1\n    /* \"ERC20Detailed.sol\":515:522  _symbol */\n  0x01\n  swap1\n    /* \"ERC20Detailed.sol\":515:531  _symbol = symbol */\n  0x20\n  dup6\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_18:\n  pop\n    /* \"ERC20Detailed.sol\":541:550  _decimals */\n  0x02\n    /* \"ERC20Detailed.sol\":541:561  _decimals = decimals */\n  dup1\n  sload\n  not(0xff)\n  and\n  0xff\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"MinterRole.sol\":274:296  _addMinter(msg.sender) */\n  tag_20\n  swap1\n  pop\n    /* \"MinterRole.sol\":285:295  msg.sender */\n  caller\n    /* \"MinterRole.sol\":274:284  _addMinter */\n  tag_21\n  0x20\n  swap1\n  dup2\n  shl\n    /* \"MinterRole.sol\":274:296  _addMinter(msg.sender) */\n  swap1\n  shr\n  jump\t// in\ntag_20:\n    /* \"ERC20Capped.sol\":256:257  0 */\n  0x00\n    /* \"ERC20Capped.sol\":250:253  cap */\n  dup2\n    /* \"ERC20Capped.sol\":250:257  cap > 0 */\n  gt\n    /* \"ERC20Capped.sol\":242:258  require(cap > 0) */\n  tag_23\n  jumpi\n  0x00\n  dup1\n  revert\ntag_23:\n    /* \"ERC20Capped.sol\":268:272  _cap */\n  0x07\n    /* \"ERC20Capped.sol\":268:278  _cap = cap */\n  sstore\n    /* \"PauserRole.sol\":274:296  _addPauser(msg.sender) */\n  tag_25\n    /* \"PauserRole.sol\":285:295  msg.sender */\n  caller\n    /* \"PauserRole.sol\":274:284  _addPauser */\n  tag_26\n  0x20\n  swap1\n  dup2\n  shl\n    /* \"PauserRole.sol\":274:296  _addPauser(msg.sender) */\n  swap1\n  shr\n  jump\t// in\ntag_25:\n    /* \"Pausable.sol\":338:345  _paused */\n  0x09\n    /* \"Pausable.sol\":338:353  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"RaeToken.sol\":1258:1285  _mint(msg.sender, 84000e18) */\n  tag_29\n    /* \"RaeToken.sol\":1264:1274  msg.sender */\n  caller\n    /* \"RaeToken.sol\":1276:1284  84000e18 */\n  0x11c9a62d04ed0c800000\n    /* \"RaeToken.sol\":1258:1263  _mint */\n  tag_30\n  0x20\n  swap1\n  dup2\n  shl\n    /* \"RaeToken.sol\":1258:1285  _mint(msg.sender, 84000e18) */\n  swap1\n  shr\n  jump\t// in\ntag_29:\n    /* \"RaeToken.sol\":990:1292  constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)... */\n  pop\n  pop\n  pop\n  pop\n    /* \"RaeToken.sol\":636:3926  contract RaeToken is ERC20Detailed, ERC20Capped, ERC20Burnable, ERC20Pausable {... */\n  jump(tag_31)\n    /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\ntag_21:\n    /* \"MinterRole.sol\":740:761  _minters.add(account) */\n  tag_33\n    /* \"MinterRole.sol\":753:760  account */\n  dup2\n    /* \"MinterRole.sol\":740:748  _minters */\n  0x06\n    /* \"MinterRole.sol\":740:752  _minters.add */\n  or(tag_0_282, shl(0x20, tag_34))\n  swap1\n    /* \"MinterRole.sol\":740:761  _minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"MinterRole.sol\":776:796  MinterAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\ntag_26:\n    /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n  tag_36\n    /* \"PauserRole.sol\":753:760  account */\n  dup2\n    /* \"PauserRole.sol\":740:748  _pausers */\n  0x08\n    /* \"PauserRole.sol\":740:752  _pausers.add */\n  or(tag_0_282, shl(0x20, tag_34))\n  swap1\n    /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"PauserRole.sol\":776:796  PauserAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"ERC20Capped.sol\":432:583  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"ERC20Capped.sol\":534:538  _cap */\n  sload(0x07)\n    /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n  tag_38\n    /* \"ERC20Capped.sol\":524:529  value */\n  dup3\n    /* \"ERC20Capped.sol\":506:519  totalSupply() */\n  tag_39\n    /* \"ERC20Capped.sol\":506:517  totalSupply */\n  shl(0x20, tag_40)\n    /* \"ERC20Capped.sol\":506:519  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"ERC20Capped.sol\":506:523  totalSupply().add */\n  or(tag_0_193, shl(0x20, tag_41))\n  swap1\n    /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"ERC20Capped.sol\":506:538  totalSupply().add(value) <= _cap */\n  gt\n  iszero\n    /* \"ERC20Capped.sol\":498:539  require(totalSupply().add(value) <= _cap) */\n  tag_42\n  jumpi\n  0x00\n  dup1\n  revert\ntag_42:\n    /* \"ERC20Capped.sol\":549:576  super._mint(account, value) */\n  tag_43\n    /* \"ERC20Capped.sol\":561:568  account */\n  dup3\n    /* \"ERC20Capped.sol\":570:575  value */\n  dup3\n    /* \"ERC20Capped.sol\":549:560  super._mint */\n  or(tag_0_272, shl(0x20, tag_44))\n    /* \"ERC20Capped.sol\":549:576  super._mint(account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"ERC20Capped.sol\":432:583  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":335:356  account != address(0) */\n  dup2\n  and\n    /* \"Roles.sol\":327:357  require(account != address(0)) */\n  tag_46\n  jumpi\n  0x00\n  dup1\n  revert\ntag_46:\n    /* \"Roles.sol\":376:394  has(role, account) */\n  tag_47\n    /* \"Roles.sol\":380:384  role */\n  dup3\n    /* \"Roles.sol\":386:393  account */\n  dup3\n    /* \"Roles.sol\":376:379  has */\n  shl(0x20, tag_48)\n    /* \"Roles.sol\":376:394  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"Roles.sol\":375:394  !has(role, account) */\n  iszero\n    /* \"Roles.sol\":367:395  require(!has(role, account)) */\n  tag_49\n  jumpi\n  0x00\n  dup1\n  revert\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  and\n    /* \"Roles.sol\":406:417  role.bearer */\n  0x00\n    /* \"Roles.sol\":406:426  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Roles.sol\":429:433  true */\n  0x01\n    /* \"Roles.sol\":406:433  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n  jump\t// out\n    /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\ntag_40:\n    /* \"ERC20.sol\":977:989  _totalSupply */\n  sload(0x05)\n    /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\ntag_50:\n  swap1\n  jump\t// out\n    /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_41:\n    /* \"SafeMath.sol\":1497:1504  uint256 */\n  0x00\n    /* \"SafeMath.sol\":1528:1533  a + b */\n  dup3\n  dup3\n  add\n    /* \"SafeMath.sol\":1551:1557  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n  tag_52\n  jumpi\n  0x00\n  dup1\n  revert\ntag_52:\n    /* \"SafeMath.sol\":1576:1577  c */\n  swap4\n    /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\ntag_44:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":5879:5900  account != address(0) */\n  dup3\n  and\n    /* \"ERC20.sol\":5871:5901  require(account != address(0)) */\n  tag_54\n  jumpi\n  0x00\n  dup1\n  revert\ntag_54:\n    /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n  tag_55\n    /* \"ERC20.sol\":5944:5949  value */\n  dup2\n    /* \"ERC20.sol\":5927:5939  _totalSupply */\n  sload(0x05)\n    /* \"ERC20.sol\":5927:5943  _totalSupply.add */\n  or(tag_0_193, shl(0x20, tag_41))\n  swap1\n    /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_55:\n    /* \"ERC20.sol\":5912:5924  _totalSupply */\n  0x05\n    /* \"ERC20.sol\":5912:5950  _totalSupply = _totalSupply.add(value) */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":5981:5999  _balances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"ERC20.sol\":5981:5990  _balances */\n  0x03\n    /* \"ERC20.sol\":5981:5999  _balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n  tag_56\n  swap2\n    /* \"ERC20.sol\":6004:6009  value */\n  dup4\n  swap1\n    /* \"ERC20.sol\":5981:6003  _balances[account].add */\n  tag_0_193\n  tag_41\n  dup3\n  shl\n  or\n    /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n  swap1\n  shr\n  jump\t// in\ntag_56:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":5960:5978  _balances[account] */\n  dup4\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"ERC20.sol\":5960:5969  _balances */\n  0x03\n    /* \"ERC20.sol\":5960:5978  _balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"ERC20.sol\":5960:6010  _balances[account] = _balances[account].add(value) */\n  swap5\n  swap1\n  swap5\n  sstore\n    /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n  dup4\n  mload\n  dup6\n  dup2\n  mstore\n  swap4\n  mload\n    /* \"ERC20.sol\":5960:5978  _balances[account] */\n  swap3\n  swap4\n  swap2\n  swap3\n    /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\ntag_48:\n    /* \"Roles.sol\":858:862  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":882:903  account != address(0) */\n  dup3\n  and\n    /* \"Roles.sol\":874:904  require(account != address(0)) */\n  tag_58\n  jumpi\n  0x00\n  dup1\n  revert\ntag_58:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  and\n    /* \"Roles.sol\":921:932  role.bearer */\n  0x00\n    /* \"Roles.sol\":921:941  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"RaeToken.sol\":636:3926  contract RaeToken is ERC20Detailed, ERC20Capped, ERC20Burnable, ERC20Pausable {... */\ntag_17:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_60\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_62)\ntag_60:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_62\n  jumpi\n  swap2\n  dup3\n  add\ntag_61:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_62\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_61)\ntag_62:\n  pop\n  tag_63\n  swap3\n  swap2\n  pop\n  tag_64\n  jump\t// in\ntag_63:\n  pop\n  swap1\n  jump\t// out\ntag_64:\n  tag_50\n  swap2\n  swap1\ntag_66:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_63\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_66)\ntag_31:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RaeToken.sol\":636:3926  contract RaeToken is ERC20Detailed, ERC20Capped, ERC20Burnable, ERC20Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"RaeToken.sol\":636:3926  contract RaeToken is ERC20Detailed, ERC20Capped, ERC20Burnable, ERC20Pausable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ef8d66d\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x983b2d56\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xaa271e1a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb5b80f12\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xef78d4fd\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x983b2d56\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x98650275\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x7fd30df0\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x7fd30df0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x82dc1ec4\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x6ef8d66d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x39509351\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x46fbf68e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5a2bcc18\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1efe9395\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1efe9395\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20Detailed.sol\":628:709  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_41:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_41)\n    tag_43:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20Detailed.sol\":628:709  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_4:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"RaeToken.sol\":3356:3451  function totalInPeriod() external view returns (uint256) {... */\n    tag_6:\n      tag_48\n      tag_51\n      jump\t// in\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_54\n      jump\t// in\n        /* \"ERC20Detailed.sol\":930:1011  function decimals() public view returns (uint8) {... */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20Capped.sol\":353:426  function cap() public view returns (uint256) {... */\n    tag_9:\n      tag_48\n      tag_58\n      jump\t// in\n        /* \"ERC20Pausable.sol\":646:819  function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":646:819  function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"Pausable.sol\":1162:1277  function unpause() public onlyPauser whenPaused {... */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"RaeToken.sol\":3513:3659  function mint(address to, uint256 value) public whenNotPaused onlyMinter returns (bool) {... */\n    tag_12:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RaeToken.sol\":3513:3659  function mint(address to, uint256 value) public whenNotPaused onlyMinter returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"RaeToken.sol\":3721:3805  function burn(uint256 value) public whenNotPaused {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n      pop\n        /* \"RaeToken.sol\":3721:3805  function burn(uint256 value) public whenNotPaused {... */\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n    tag_14:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n      pop\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_72\n      jump\t// in\n        /* \"RaeToken.sol\":2606:2694  function mintAmount() external view returns (uint256){... */\n    tag_15:\n      tag_48\n      tag_74\n      jump\t// in\n        /* \"Pausable.sol\":446:522  function paused() public view returns (bool) {... */\n    tag_16:\n      tag_45\n      tag_76\n      jump\t// in\n        /* \"PauserRole.sol\":603:678  function renouncePauser() public {... */\n    tag_17:\n      tag_62\n      tag_78\n      jump\t// in\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_18:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n      pop\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_81\n      jump\t// in\n        /* \"RaeToken.sol\":3811:3923  function burnFrom(address from, uint256 value) public whenNotPaused {... */\n    tag_19:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RaeToken.sol\":3811:3923  function burnFrom(address from, uint256 value) public whenNotPaused {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_84\n      jump\t// in\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n    tag_20:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_89:\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      swap2\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      0x20\n      dup2\n      add\n      swap1\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_91:\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_92:\n      pop\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_93\n      jump\t// in\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n    tag_21:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_95:\n      pop\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_96\n      jump\t// in\n        /* \"Pausable.sol\":959:1072  function pause() public onlyPauser whenNotPaused {... */\n    tag_22:\n      tag_62\n      tag_98\n      jump\t// in\n        /* \"ERC20Detailed.sol\":771:856  function symbol() public view returns (string memory) {... */\n    tag_23:\n      tag_39\n      tag_100\n      jump\t// in\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n    tag_24:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n    tag_25:\n      tag_62\n      tag_109\n      jump\t// in\n        /* \"ERC20Pausable.sol\":825:1008  function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {... */\n    tag_26:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_111:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":825:1008  function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_112\n      jump\t// in\n        /* \"ERC20Pausable.sol\":202:332  function transfer(address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_27:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_114:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Pausable.sol\":202:332  function transfer(address to, uint256 value) public whenNotPaused returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_115\n      jump\t// in\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n    tag_28:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_117:\n      pop\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_118\n      jump\t// in\n        /* \"RaeToken.sol\":3237:3350  function remainingInPeriod() external view returns (uint256) {... */\n    tag_29:\n      tag_48\n      tag_120\n      jump\t// in\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_30:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_122:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_123\n      jump\t// in\n        /* \"RaeToken.sol\":2515:2600  function period() external view returns (uint256){... */\n    tag_31:\n      tag_48\n      tag_125\n      jump\t// in\n        /* \"ERC20Detailed.sol\":628:709  function name() public view returns (string memory) {... */\n    tag_40:\n        /* \"ERC20Detailed.sol\":697:702  _name */\n      0x00\n        /* \"ERC20Detailed.sol\":690:702  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20Detailed.sol\":665:678  string memory */\n      0x60\n      swap4\n        /* \"ERC20Detailed.sol\":690:702  return _name */\n      swap1\n      swap3\n        /* \"ERC20Detailed.sol\":697:702  _name */\n      swap1\n      swap2\n        /* \"ERC20Detailed.sol\":690:702  return _name */\n      dup4\n      add\n        /* \"ERC20Detailed.sol\":697:702  _name */\n      dup3\n        /* \"ERC20Detailed.sol\":690:702  return _name */\n      dup3\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20Detailed.sol\":628:709  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_47:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"ERC20Pausable.sol\":581:585  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n        /* \"ERC20Pausable.sol\":604:633  super.approve(spender, value) */\n      tag_133\n        /* \"ERC20Pausable.sol\":618:625  spender */\n      dup4\n        /* \"ERC20Pausable.sol\":627:632  value */\n      dup4\n        /* \"ERC20Pausable.sol\":604:617  super.approve */\n      tag_134\n        /* \"ERC20Pausable.sol\":604:633  super.approve(spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"ERC20Pausable.sol\":597:633  return super.approve(spender, value) */\n      swap4\n        /* \"ERC20Pausable.sol\":502:640  function approve(address spender, uint256 value) public whenNotPaused returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n    tag_49:\n        /* \"ERC20.sol\":977:989  _totalSupply */\n      sload(0x05)\n        /* \"ERC20.sol\":907:996  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"RaeToken.sol\":3356:3451  function totalInPeriod() external view returns (uint256) {... */\n    tag_51:\n        /* \"RaeToken.sol\":3430:3444  _totalInPeriod */\n      sload(0x0c)\n        /* \"RaeToken.sol\":3356:3451  function totalInPeriod() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_54:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"ERC20Pausable.sol\":431:435  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n        /* \"ERC20Pausable.sol\":454:489  super.transferFrom(from, to, value) */\n      tag_140\n        /* \"ERC20Pausable.sol\":473:477  from */\n      dup5\n        /* \"ERC20Pausable.sol\":479:481  to */\n      dup5\n        /* \"ERC20Pausable.sol\":483:488  value */\n      dup5\n        /* \"ERC20Pausable.sol\":454:472  super.transferFrom */\n      tag_141\n        /* \"ERC20Pausable.sol\":454:489  super.transferFrom(from, to, value) */\n      jump\t// in\n    tag_140:\n        /* \"ERC20Pausable.sol\":447:489  return super.transferFrom(from, to, value) */\n      swap5\n        /* \"ERC20Pausable.sol\":338:496  function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Detailed.sol\":930:1011  function decimals() public view returns (uint8) {... */\n    tag_56:\n        /* \"ERC20Detailed.sol\":995:1004  _decimals */\n      and(0xff, sload(0x02))\n        /* \"ERC20Detailed.sol\":930:1011  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20Capped.sol\":353:426  function cap() public view returns (uint256) {... */\n    tag_58:\n        /* \"ERC20Capped.sol\":415:419  _cap */\n      sload(0x07)\n        /* \"ERC20Capped.sol\":353:426  function cap() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20Pausable.sol\":646:819  function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {... */\n    tag_61:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"ERC20Pausable.sol\":737:749  bool success */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n        /* \"ERC20Pausable.sol\":768:812  super.increaseAllowance(spender, addedValue) */\n      tag_133\n        /* \"ERC20Pausable.sol\":792:799  spender */\n      dup4\n        /* \"ERC20Pausable.sol\":801:811  addedValue */\n      dup4\n        /* \"ERC20Pausable.sol\":768:791  super.increaseAllowance */\n      tag_148\n        /* \"ERC20Pausable.sol\":768:812  super.increaseAllowance(spender, addedValue) */\n      jump\t// in\n        /* \"Pausable.sol\":1162:1277  function unpause() public onlyPauser whenPaused {... */\n    tag_63:\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      tag_150\n        /* \"PauserRole.sol\":358:368  msg.sender */\n      caller\n        /* \"PauserRole.sol\":349:357  isPauser */\n      tag_72\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"PauserRole.sol\":341:370  require(isPauser(msg.sender)) */\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n        /* \"Pausable.sol\":846:853  _paused */\n      and(0xff, sload(0x09))\n        /* \"Pausable.sol\":838:854  require(_paused) */\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n        /* \"Pausable.sol\":1220:1227  _paused */\n      0x09\n        /* \"Pausable.sol\":1220:1235  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Pausable.sol\":1250:1270  Unpaused(msg.sender) */\n      0x40\n      dup1\n      mload\n        /* \"Pausable.sol\":1259:1269  msg.sender */\n      caller\n        /* \"Pausable.sol\":1250:1270  Unpaused(msg.sender) */\n      dup2\n      mstore\n      swap1\n      mload\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"Pausable.sol\":1162:1277  function unpause() public onlyPauser whenPaused {... */\n      jump\t// out\n        /* \"RaeToken.sol\":3513:3659  function mint(address to, uint256 value) public whenNotPaused onlyMinter returns (bool) {... */\n    tag_66:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"RaeToken.sol\":3595:3599  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_158\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_118\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_158:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_2\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"RaeToken.sol\":3721:3805  function burn(uint256 value) public whenNotPaused {... */\n    tag_69:\n        /* \"Pausable.sol\":675:682  _paused */\n      and(0xff, sload(0x09))\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n        /* \"RaeToken.sol\":3781:3798  super.burn(value) */\n      tag_164\n        /* \"RaeToken.sol\":3792:3797  value */\n      dup2\n        /* \"RaeToken.sol\":3781:3791  super.burn */\n      tag_165\n        /* \"RaeToken.sol\":3781:3798  super.burn(value) */\n      jump\t// in\n    tag_164:\n        /* \"RaeToken.sol\":3721:3805  function burn(uint256 value) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n    tag_72:\n        /* \"PauserRole.sol\":450:454  bool */\n      0x00\n        /* \"PauserRole.sol\":473:494  _pausers.has(account) */\n      tag_167\n        /* \"PauserRole.sol\":473:481  _pausers */\n      0x08\n        /* \"PauserRole.sol\":486:493  account */\n      dup4\n        /* \"PauserRole.sol\":473:494  _pausers.has(account) */\n      0xffffffff\n        /* \"PauserRole.sol\":473:485  _pausers.has */\n      tag_168\n        /* \"PauserRole.sol\":473:494  _pausers.has(account) */\n      and\n      jump\t// in\n    tag_167:\n        /* \"PauserRole.sol\":466:494  return _pausers.has(account) */\n      swap3\n        /* \"PauserRole.sol\":394:501  function isPauser(address account) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RaeToken.sol\":2606:2694  function mintAmount() external view returns (uint256){... */\n    tag_74:\n        /* \"RaeToken.sol\":2676:2687  _mintAmount */\n      sload(0x0a)\n        /* \"RaeToken.sol\":2606:2694  function mintAmount() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"Pausable.sol\":446:522  function paused() public view returns (bool) {... */\n    tag_76:\n        /* \"Pausable.sol\":508:515  _paused */\n      and(0xff, sload(0x09))\n        /* \"Pausable.sol\":446:522  function paused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"PauserRole.sol\":603:678  function renouncePauser() public {... */\n    tag_78:\n        /* \"PauserRole.sol\":646:671  _removePauser(msg.sender) */\n      tag_172\n        /* \"PauserRole.sol\":660:670  msg.sender */\n      caller\n        /* \"PauserRole.sol\":646:659  _removePauser */\n      tag_173\n        /* \"PauserRole.sol\":646:671  _removePauser(msg.sender) */\n      jump\t// in\n    tag_172:\n        /* \"PauserRole.sol\":603:678  function renouncePauser() public {... */\n      jump\t// out\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      and\n        /* \"ERC20.sol\":1263:1270  uint256 */\n      0x00\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1289:1298  _balances */\n      0x03\n        /* \"ERC20.sol\":1289:1305  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1208:1312  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"RaeToken.sol\":3811:3923  function burnFrom(address from, uint256 value) public whenNotPaused {... */\n    tag_84:\n        /* \"Pausable.sol\":675:682  _paused */\n      and(0xff, sload(0x09))\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n        /* \"RaeToken.sol\":3889:3916  super.burnFrom(from, value) */\n      tag_178\n        /* \"RaeToken.sol\":3904:3908  from */\n      dup3\n        /* \"RaeToken.sol\":3910:3915  value */\n      dup3\n        /* \"RaeToken.sol\":3889:3903  super.burnFrom */\n      tag_179\n        /* \"RaeToken.sol\":3889:3916  super.burnFrom(from, value) */\n      jump\t// in\n    tag_178:\n        /* \"RaeToken.sol\":3811:3923  function burnFrom(address from, uint256 value) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n    tag_93:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"RaeToken.sol\":2090:2094  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_183\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_118\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_183:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n        /* \"RaeToken.sol\":2123:2143  addresses.length > 0 */\n      dup4\n        /* \"RaeToken.sol\":2115:2144  require(addresses.length > 0) */\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n        /* \"RaeToken.sol\":2162:2195  addresses.length == values.length */\n      dup4\n      dup3\n      eq\n        /* \"RaeToken.sol\":2154:2196  require(addresses.length == values.length) */\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n        /* \"RaeToken.sol\":2211:2220  uint256 i */\n      0x00\n        /* \"RaeToken.sol\":2207:2368  for(uint256 i = 0; i < addresses.length; ++i) {... */\n    tag_188:\n        /* \"RaeToken.sol\":2226:2246  i < addresses.length */\n      dup5\n      dup2\n      lt\n        /* \"RaeToken.sol\":2207:2368  for(uint256 i = 0; i < addresses.length; ++i) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"RaeToken.sol\":2284:2313  _totalInPeriod.add(values[i]) */\n      tag_191\n        /* \"RaeToken.sol\":2303:2309  values */\n      dup5\n      dup5\n        /* \"RaeToken.sol\":2310:2311  i */\n      dup4\n        /* \"RaeToken.sol\":2303:2312  values[i] */\n      dup2\n      dup2\n      lt\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RaeToken.sol\":2284:2298  _totalInPeriod */\n      sload(0x0c)\n        /* \"RaeToken.sol\":2284:2302  _totalInPeriod.add */\n      tag_193\n      swap1\n        /* \"RaeToken.sol\":2284:2313  _totalInPeriod.add(values[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"RaeToken.sol\":2267:2281  _totalInPeriod */\n      0x0c\n        /* \"RaeToken.sol\":2267:2313  _totalInPeriod = _totalInPeriod.add(values[i]) */\n      sstore\n        /* \"RaeToken.sol\":2327:2357  _mint(addresses[i], values[i]) */\n      tag_194\n        /* \"RaeToken.sol\":2333:2342  addresses */\n      dup7\n      dup7\n        /* \"RaeToken.sol\":2343:2344  i */\n      dup4\n        /* \"RaeToken.sol\":2333:2345  addresses[i] */\n      dup2\n      dup2\n      lt\n      tag_195\n      jumpi\n      invalid\n    tag_195:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"RaeToken.sol\":2347:2353  values */\n      dup6\n      dup6\n        /* \"RaeToken.sol\":2354:2355  i */\n      dup5\n        /* \"RaeToken.sol\":2347:2356  values[i] */\n      dup2\n      dup2\n      lt\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RaeToken.sol\":2327:2332  _mint */\n      tag_197\n        /* \"RaeToken.sol\":2327:2357  _mint(addresses[i], values[i]) */\n      jump\t// in\n    tag_194:\n        /* \"RaeToken.sol\":2248:2251  ++i */\n      0x01\n      add\n        /* \"RaeToken.sol\":2207:2368  for(uint256 i = 0; i < addresses.length; ++i) {... */\n      jump(tag_188)\n    tag_189:\n      pop\n        /* \"RaeToken.sol\":2403:2414  _mintAmount */\n      sload(0x0a)\n        /* \"RaeToken.sol\":2385:2399  _totalInPeriod */\n      sload(0x0c)\n        /* \"RaeToken.sol\":2385:2414  _totalInPeriod <= _mintAmount */\n      gt\n      iszero\n        /* \"RaeToken.sol\":2377:2415  require(_totalInPeriod <= _mintAmount) */\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n        /* \"RaeToken.sol\":2447:2458  _mintAmount */\n      sload(0x0a)\n        /* \"RaeToken.sol\":2429:2443  _totalInPeriod */\n      sload(0x0c)\n        /* \"RaeToken.sol\":2429:2458  _totalInPeriod == _mintAmount */\n      eq\n        /* \"RaeToken.sol\":2425:2479  if( _totalInPeriod == _mintAmount) _updateMintParams() */\n      iszero\n      tag_199\n      jumpi\n        /* \"RaeToken.sol\":2460:2479  _updateMintParams() */\n      tag_200\n        /* \"RaeToken.sol\":2460:2477  _updateMintParams */\n      tag_201\n        /* \"RaeToken.sol\":2460:2479  _updateMintParams() */\n      jump\t// in\n    tag_200:\n      pop\n        /* \"RaeToken.sol\":2425:2479  if( _totalInPeriod == _mintAmount) _updateMintParams() */\n    tag_199:\n      pop\n        /* \"RaeToken.sol\":2497:2501  true */\n      0x01\n        /* \"RaeToken.sol\":1972:2508  function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PauserRole.sol\":507:597  function addPauser(address account) public onlyPauser {... */\n    tag_96:\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      tag_203\n        /* \"PauserRole.sol\":358:368  msg.sender */\n      caller\n        /* \"PauserRole.sol\":349:357  isPauser */\n      tag_72\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      jump\t// in\n    tag_203:\n        /* \"PauserRole.sol\":341:370  require(isPauser(msg.sender)) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"PauserRole.sol\":571:590  _addPauser(account) */\n      tag_164\n        /* \"PauserRole.sol\":582:589  account */\n      dup2\n        /* \"PauserRole.sol\":571:581  _addPauser */\n      tag_207\n        /* \"PauserRole.sol\":571:590  _addPauser(account) */\n      jump\t// in\n        /* \"Pausable.sol\":959:1072  function pause() public onlyPauser whenNotPaused {... */\n    tag_98:\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      tag_209\n        /* \"PauserRole.sol\":358:368  msg.sender */\n      caller\n        /* \"PauserRole.sol\":349:357  isPauser */\n      tag_72\n        /* \"PauserRole.sol\":349:369  isPauser(msg.sender) */\n      jump\t// in\n    tag_209:\n        /* \"PauserRole.sol\":341:370  require(isPauser(msg.sender)) */\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n        /* \"Pausable.sol\":675:682  _paused */\n      and(0xff, sload(0x09))\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n        /* \"Pausable.sol\":1018:1025  _paused */\n      0x09\n        /* \"Pausable.sol\":1018:1032  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Pausable.sol\":1028:1032  true */\n      0x01\n        /* \"Pausable.sol\":1018:1032  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"Pausable.sol\":1047:1065  Paused(msg.sender) */\n      0x40\n      dup1\n      mload\n        /* \"Pausable.sol\":1054:1064  msg.sender */\n      caller\n        /* \"Pausable.sol\":1047:1065  Paused(msg.sender) */\n      dup2\n      mstore\n      swap1\n      mload\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"Pausable.sol\":959:1072  function pause() public onlyPauser whenNotPaused {... */\n      jump\t// out\n        /* \"ERC20Detailed.sol\":771:856  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"ERC20Detailed.sol\":842:849  _symbol */\n      0x01\n        /* \"ERC20Detailed.sol\":835:849  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      dup8\n      dup10\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20Detailed.sol\":810:823  string memory */\n      0x60\n      swap4\n        /* \"ERC20Detailed.sol\":835:849  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20Detailed.sol\":842:849  _symbol */\n      swap1\n      swap2\n        /* \"ERC20Detailed.sol\":835:849  return _symbol */\n      dup4\n      add\n        /* \"ERC20Detailed.sol\":842:849  _symbol */\n      dup3\n        /* \"ERC20Detailed.sol\":835:849  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n        /* \"MinterRole.sol\":507:597  function addMinter(address account) public onlyMinter {... */\n    tag_107:\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      tag_219\n        /* \"MinterRole.sol\":358:368  msg.sender */\n      caller\n        /* \"MinterRole.sol\":349:357  isMinter */\n      tag_118\n        /* \"MinterRole.sol\":349:369  isMinter(msg.sender) */\n      jump\t// in\n    tag_219:\n        /* \"MinterRole.sol\":341:370  require(isMinter(msg.sender)) */\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n        /* \"MinterRole.sol\":571:590  _addMinter(account) */\n      tag_164\n        /* \"MinterRole.sol\":582:589  account */\n      dup2\n        /* \"MinterRole.sol\":571:581  _addMinter */\n      tag_223\n        /* \"MinterRole.sol\":571:590  _addMinter(account) */\n      jump\t// in\n        /* \"MinterRole.sol\":603:678  function renounceMinter() public {... */\n    tag_109:\n        /* \"MinterRole.sol\":646:671  _removeMinter(msg.sender) */\n      tag_172\n        /* \"MinterRole.sol\":660:670  msg.sender */\n      caller\n        /* \"MinterRole.sol\":646:659  _removeMinter */\n      tag_226\n        /* \"MinterRole.sol\":646:671  _removeMinter(msg.sender) */\n      jump\t// in\n        /* \"ERC20Pausable.sol\":825:1008  function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {... */\n    tag_112:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"ERC20Pausable.sol\":921:933  bool success */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n        /* \"ERC20Pausable.sol\":952:1001  super.decreaseAllowance(spender, subtractedValue) */\n      tag_133\n        /* \"ERC20Pausable.sol\":976:983  spender */\n      dup4\n        /* \"ERC20Pausable.sol\":985:1000  subtractedValue */\n      dup4\n        /* \"ERC20Pausable.sol\":952:975  super.decreaseAllowance */\n      tag_231\n        /* \"ERC20Pausable.sol\":952:1001  super.decreaseAllowance(spender, subtractedValue) */\n      jump\t// in\n        /* \"ERC20Pausable.sol\":202:332  function transfer(address to, uint256 value) public whenNotPaused returns (bool) {... */\n    tag_115:\n        /* \"Pausable.sol\":675:682  _paused */\n      sload(0x09)\n        /* \"ERC20Pausable.sol\":277:281  bool */\n      0x00\n      swap1\n        /* \"Pausable.sol\":675:682  _paused */\n      0xff\n      and\n        /* \"Pausable.sol\":674:682  !_paused */\n      iszero\n        /* \"Pausable.sol\":666:683  require(!_paused) */\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n        /* \"ERC20Pausable.sol\":300:325  super.transfer(to, value) */\n      tag_133\n        /* \"ERC20Pausable.sol\":315:317  to */\n      dup4\n        /* \"ERC20Pausable.sol\":319:324  value */\n      dup4\n        /* \"ERC20Pausable.sol\":300:314  super.transfer */\n      tag_236\n        /* \"ERC20Pausable.sol\":300:325  super.transfer(to, value) */\n      jump\t// in\n        /* \"MinterRole.sol\":394:501  function isMinter(address account) public view returns (bool) {... */\n    tag_118:\n        /* \"MinterRole.sol\":450:454  bool */\n      0x00\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      tag_167\n        /* \"MinterRole.sol\":473:481  _minters */\n      0x06\n        /* \"MinterRole.sol\":486:493  account */\n      dup4\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":473:485  _minters.has */\n      tag_168\n        /* \"MinterRole.sol\":473:494  _minters.has(account) */\n      and\n      jump\t// in\n        /* \"RaeToken.sol\":3237:3350  function remainingInPeriod() external view returns (uint256) {... */\n    tag_120:\n        /* \"RaeToken.sol\":3329:3343  _totalInPeriod */\n      sload(0x0c)\n        /* \"RaeToken.sol\":3315:3326  _mintAmount */\n      sload(0x0a)\n        /* \"RaeToken.sol\":3315:3343  _mintAmount - _totalInPeriod */\n      sub\n        /* \"RaeToken.sol\":3237:3350  function remainingInPeriod() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":1715:1722  uint256 */\n      0x00\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":1741:1749  _allowed */\n      0x04\n        /* \"ERC20.sol\":1741:1756  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1741:1765  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":1643:1772  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"RaeToken.sol\":2515:2600  function period() external view returns (uint256){... */\n    tag_125:\n        /* \"RaeToken.sol\":2581:2593  _mintPeriods */\n      sload(0x0b)\n        /* \"RaeToken.sol\":2515:2600  function period() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_134:\n        /* \"ERC20.sol\":2777:2781  bool */\n      0x00\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      tag_243\n        /* \"ERC20.sol\":2802:2812  msg.sender */\n      caller\n        /* \"ERC20.sol\":2814:2821  spender */\n      dup5\n        /* \"ERC20.sol\":2823:2828  value */\n      dup5\n        /* \"ERC20.sol\":2793:2801  _approve */\n      tag_244\n        /* \"ERC20.sol\":2793:2829  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_243:\n      pop\n        /* \"ERC20.sol\":2846:2850  true */\n      0x01\n        /* \"ERC20.sol\":2712:2857  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_141:\n        /* \"ERC20.sol\":3399:3403  bool */\n      0x00\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_246\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_247\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3478:3486  _allowed */\n      0x04\n        /* \"ERC20.sol\":3478:3492  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3466:3476  msg.sender */\n      caller\n        /* \"ERC20.sol\":3478:3504  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      tag_248\n      swap2\n        /* \"ERC20.sol\":3460:3464  from */\n      dup7\n      swap2\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      tag_249\n      swap1\n        /* \"ERC20.sol\":3509:3514  value */\n      dup7\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":3478:3508  _allowed[from][msg.sender].sub */\n      tag_250\n        /* \"ERC20.sol\":3478:3515  _allowed[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_249:\n        /* \"ERC20.sol\":3451:3459  _approve */\n      tag_244\n        /* \"ERC20.sol\":3451:3516  _approve(from, msg.sender, _allowed[from][msg.sender].sub(value)) */\n      jump\t// in\n    tag_248:\n      pop\n        /* \"ERC20.sol\":3533:3537  true */\n      0x01\n        /* \"ERC20.sol\":3320:3544  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4058:4258  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_148:\n        /* \"ERC20.sol\":4163:4173  msg.sender */\n      caller\n        /* \"ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4184:4192  _allowed */\n      0x04\n        /* \"ERC20.sol\":4184:4204  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4184:4213  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4138:4142  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4154:4230  _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue)) */\n      tag_243\n      swap2\n        /* \"ERC20.sol\":4175:4182  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      tag_249\n      swap1\n        /* \"ERC20.sol\":4218:4228  addedValue */\n      dup7\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4184:4217  _allowed[msg.sender][spender].add */\n      tag_193\n        /* \"ERC20.sol\":4184:4229  _allowed[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"ERC20Burnable.sol\":295:372  function burn(uint256 value) public {... */\n    tag_165:\n        /* \"ERC20Burnable.sol\":341:365  _burn(msg.sender, value) */\n      tag_164\n        /* \"ERC20Burnable.sol\":347:357  msg.sender */\n      caller\n        /* \"ERC20Burnable.sol\":359:364  value */\n      dup3\n        /* \"ERC20Burnable.sol\":341:346  _burn */\n      tag_256\n        /* \"ERC20Burnable.sol\":341:365  _burn(msg.sender, value) */\n      jump\t// in\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_168:\n        /* \"Roles.sol\":858:862  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":882:903  account != address(0) */\n      dup3\n      and\n        /* \"Roles.sol\":874:904  require(account != address(0)) */\n      tag_258\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_258:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      and\n        /* \"Roles.sol\":921:932  role.bearer */\n      0x00\n        /* \"Roles.sol\":921:941  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Roles.sol\":786:948  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"PauserRole.sol\":809:936  function _removePauser(address account) internal {... */\n    tag_173:\n        /* \"PauserRole.sol\":868:892  _pausers.remove(account) */\n      tag_260\n        /* \"PauserRole.sol\":868:876  _pausers */\n      0x08\n        /* \"PauserRole.sol\":884:891  account */\n      dup3\n        /* \"PauserRole.sol\":868:892  _pausers.remove(account) */\n      0xffffffff\n        /* \"PauserRole.sol\":868:883  _pausers.remove */\n      tag_261\n        /* \"PauserRole.sol\":868:892  _pausers.remove(account) */\n      and\n      jump\t// in\n    tag_260:\n        /* \"PauserRole.sol\":907:929  PauserRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"PauserRole.sol\":809:936  function _removePauser(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"ERC20Burnable.sol\":619:712  function burnFrom(address from, uint256 value) public {... */\n    tag_179:\n        /* \"ERC20Burnable.sol\":683:705  _burnFrom(from, value) */\n      tag_178\n        /* \"ERC20Burnable.sol\":693:697  from */\n      dup3\n        /* \"ERC20Burnable.sol\":699:704  value */\n      dup3\n        /* \"ERC20Burnable.sol\":683:692  _burnFrom */\n      tag_264\n        /* \"ERC20Burnable.sol\":683:705  _burnFrom(from, value) */\n      jump\t// in\n        /* \"SafeMath.sol\":1439:1584  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_193:\n        /* \"SafeMath.sol\":1497:1504  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1528:1533  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":1551:1557  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":1543:1558  require(c >= a) */\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ERC20Capped.sol\":432:583  function _mint(address account, uint256 value) internal {... */\n    tag_197:\n        /* \"ERC20Capped.sol\":534:538  _cap */\n      sload(0x07)\n        /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n      tag_268\n        /* \"ERC20Capped.sol\":524:529  value */\n      dup3\n        /* \"ERC20Capped.sol\":506:519  totalSupply() */\n      tag_269\n        /* \"ERC20Capped.sol\":506:517  totalSupply */\n      tag_49\n        /* \"ERC20Capped.sol\":506:519  totalSupply() */\n      jump\t// in\n    tag_269:\n        /* \"ERC20Capped.sol\":506:523  totalSupply().add */\n      swap1\n        /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n      0xffffffff\n        /* \"ERC20Capped.sol\":506:523  totalSupply().add */\n      tag_193\n        /* \"ERC20Capped.sol\":506:530  totalSupply().add(value) */\n      and\n      jump\t// in\n    tag_268:\n        /* \"ERC20Capped.sol\":506:538  totalSupply().add(value) <= _cap */\n      gt\n      iszero\n        /* \"ERC20Capped.sol\":498:539  require(totalSupply().add(value) <= _cap) */\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n        /* \"ERC20Capped.sol\":549:576  super._mint(account, value) */\n      tag_178\n        /* \"ERC20Capped.sol\":561:568  account */\n      dup3\n        /* \"ERC20Capped.sol\":570:575  value */\n      dup3\n        /* \"ERC20Capped.sol\":549:560  super._mint */\n      tag_272\n        /* \"ERC20Capped.sol\":549:576  super._mint(account, value) */\n      jump\t// in\n        /* \"RaeToken.sol\":2700:3231  function _updateMintParams() internal returns (bool) {... */\n    tag_201:\n        /* \"RaeToken.sol\":2747:2751  bool */\n      0x00\n        /* \"RaeToken.sol\":2854:2866  _mintPeriods */\n      sload(0x0b)\n        /* \"RaeToken.sol\":2870:2871  0 */\n      0x00\n        /* \"RaeToken.sol\":2854:2871  _mintPeriods == 0 */\n      eq\n        /* \"RaeToken.sol\":2851:2895  if(_mintPeriods == 0) _mintAmount = 10000e18 */\n      iszero\n      tag_274\n      jumpi\n        /* \"RaeToken.sol\":2887:2895  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"RaeToken.sol\":2873:2884  _mintAmount */\n      0x0a\n        /* \"RaeToken.sol\":2873:2895  _mintAmount = 10000e18 */\n      sstore\n        /* \"RaeToken.sol\":2851:2895  if(_mintPeriods == 0) _mintAmount = 10000e18 */\n    tag_274:\n        /* \"RaeToken.sol\":2949:2961  _mintPeriods */\n      sload(0x0b)\n        /* \"RaeToken.sol\":2949:2968  _mintPeriods.add(1) */\n      tag_275\n      swap1\n        /* \"RaeToken.sol\":2966:2967  1 */\n      0x01\n        /* \"RaeToken.sol\":2949:2968  _mintPeriods.add(1) */\n      0xffffffff\n        /* \"RaeToken.sol\":2949:2965  _mintPeriods.add */\n      tag_193\n        /* \"RaeToken.sol\":2949:2968  _mintPeriods.add(1) */\n      and\n      jump\t// in\n    tag_275:\n        /* \"RaeToken.sol\":2934:2946  _mintPeriods */\n      0x0b\n        /* \"RaeToken.sol\":2934:2968  _mintPeriods = _mintPeriods.add(1) */\n      dup2\n      swap1\n      sstore\n        /* \"RaeToken.sol\":882:886  1700 */\n      0x06a4\n      swap1\n        /* \"RaeToken.sol\":3067:3093  _mintPeriods % _halveEvery */\n      mod\n        /* \"RaeToken.sol\":3064:3132  if(_mintPeriods % _halveEvery == 0) _mintAmount = _mintAmount.div(2) */\n      tag_277\n      jumpi\n        /* \"RaeToken.sol\":3114:3125  _mintAmount */\n      sload(0x0a)\n        /* \"RaeToken.sol\":3114:3132  _mintAmount.div(2) */\n      tag_278\n      swap1\n        /* \"RaeToken.sol\":3130:3131  2 */\n      0x02\n        /* \"RaeToken.sol\":3114:3132  _mintAmount.div(2) */\n      0xffffffff\n        /* \"RaeToken.sol\":3114:3129  _mintAmount.div */\n      tag_279\n        /* \"RaeToken.sol\":3114:3132  _mintAmount.div(2) */\n      and\n      jump\t// in\n    tag_278:\n        /* \"RaeToken.sol\":3100:3111  _mintAmount */\n      0x0a\n        /* \"RaeToken.sol\":3100:3132  _mintAmount = _mintAmount.div(2) */\n      sstore\n        /* \"RaeToken.sol\":3064:3132  if(_mintPeriods % _halveEvery == 0) _mintAmount = _mintAmount.div(2) */\n    tag_277:\n      pop\n        /* \"RaeToken.sol\":3201:3202  0 */\n      0x00\n        /* \"RaeToken.sol\":3184:3198  _totalInPeriod */\n      0x0c\n        /* \"RaeToken.sol\":3184:3202  _totalInPeriod = 0 */\n      sstore\n        /* \"RaeToken.sol\":3220:3224  true */\n      0x01\n        /* \"RaeToken.sol\":2700:3231  function _updateMintParams() internal returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\n    tag_207:\n        /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n      tag_281\n        /* \"PauserRole.sol\":740:748  _pausers */\n      0x08\n        /* \"PauserRole.sol\":753:760  account */\n      dup3\n        /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n      0xffffffff\n        /* \"PauserRole.sol\":740:752  _pausers.add */\n      tag_282\n        /* \"PauserRole.sol\":740:761  _pausers.add(account) */\n      and\n      jump\t// in\n    tag_281:\n        /* \"PauserRole.sol\":776:796  PauserAdded(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"PauserRole.sol\":684:803  function _addPauser(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n    tag_223:\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      tag_284\n        /* \"MinterRole.sol\":740:748  _minters */\n      0x06\n        /* \"MinterRole.sol\":753:760  account */\n      dup3\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":740:752  _minters.add */\n      tag_282\n        /* \"MinterRole.sol\":740:761  _minters.add(account) */\n      and\n      jump\t// in\n    tag_284:\n        /* \"MinterRole.sol\":776:796  MinterAdded(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"MinterRole.sol\":684:803  function _addMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"MinterRole.sol\":809:936  function _removeMinter(address account) internal {... */\n    tag_226:\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      tag_286\n        /* \"MinterRole.sol\":868:876  _minters */\n      0x06\n        /* \"MinterRole.sol\":884:891  account */\n      dup3\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      0xffffffff\n        /* \"MinterRole.sol\":868:883  _minters.remove */\n      tag_261\n        /* \"MinterRole.sol\":868:892  _minters.remove(account) */\n      and\n      jump\t// in\n    tag_286:\n        /* \"MinterRole.sol\":907:929  MinterRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"MinterRole.sol\":809:936  function _removeMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4777:4987  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_231:\n        /* \"ERC20.sol\":4887:4897  msg.sender */\n      caller\n        /* \"ERC20.sol\":4862:4866  bool */\n      0x00\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4908:4916  _allowed */\n      0x04\n        /* \"ERC20.sol\":4908:4928  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4908:4937  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":4862:4866  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":4878:4959  _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue)) */\n      tag_243\n      swap2\n        /* \"ERC20.sol\":4899:4906  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_249\n      swap1\n        /* \"ERC20.sol\":4942:4957  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"ERC20.sol\":4908:4941  _allowed[msg.sender][spender].sub */\n      tag_250\n        /* \"ERC20.sol\":4908:4958  _allowed[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":1939:2076  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_236:\n        /* \"ERC20.sol\":2000:2004  bool */\n      0x00\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      tag_243\n        /* \"ERC20.sol\":2026:2036  msg.sender */\n      caller\n        /* \"ERC20.sol\":2038:2040  to */\n      dup5\n        /* \"ERC20.sol\":2042:2047  value */\n      dup5\n        /* \"ERC20.sol\":2016:2025  _transfer */\n      tag_247\n        /* \"ERC20.sol\":2016:2048  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6914:6935  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6906:6936  require(spender != address(0)) */\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6954:6973  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":6946:6974  require(owner != address(0)) */\n      tag_294\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6985:6993  _allowed */\n      0x04\n        /* \"ERC20.sol\":6985:7000  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6985:7009  _allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":6985:7017  _allowed[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":7032:7063  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6822:7070  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5293:5309  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5285:5310  require(to != address(0)) */\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5339:5348  _balances */\n      0x03\n        /* \"ERC20.sol\":5339:5354  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      tag_297\n      swap1\n        /* \"ERC20.sol\":5359:5364  value */\n      dup3\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5339:5358  _balances[from].sub */\n      tag_250\n        /* \"ERC20.sol\":5339:5365  _balances[from].sub(value) */\n      and\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5321:5330  _balances */\n      0x03\n        /* \"ERC20.sol\":5321:5336  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":5321:5365  _balances[from] = _balances[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":5391:5404  _balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      tag_298\n      swap1\n        /* \"ERC20.sol\":5409:5414  value */\n      dup3\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5391:5408  _balances[to].add */\n      tag_193\n        /* \"ERC20.sol\":5391:5415  _balances[to].add(value) */\n      and\n      jump\t// in\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":5375:5384  _balances */\n      0x03\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":5375:5415  _balances[to] = _balances[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":5375:5388  _balances[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":5430:5455  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5206:5462  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_250:\n        /* \"SafeMath.sol\":1269:1276  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1301:1302  a */\n      dup3\n        /* \"SafeMath.sol\":1296:1297  b */\n      dup3\n        /* \"SafeMath.sol\":1296:1302  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1288:1303  require(b <= a) */\n      tag_300\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_300:\n      pop\n        /* \"SafeMath.sol\":1325:1330  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1211:1356  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":6294:6557  function _burn(address account, uint256 value) internal {... */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6368:6389  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":6360:6390  require(account != address(0)) */\n      tag_302\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_302:\n        /* \"ERC20.sol\":6416:6428  _totalSupply */\n      sload(0x05)\n        /* \"ERC20.sol\":6416:6439  _totalSupply.sub(value) */\n      tag_303\n      swap1\n        /* \"ERC20.sol\":6433:6438  value */\n      dup3\n        /* \"ERC20.sol\":6416:6439  _totalSupply.sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":6416:6432  _totalSupply.sub */\n      tag_250\n        /* \"ERC20.sol\":6416:6439  _totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_303:\n        /* \"ERC20.sol\":6401:6413  _totalSupply */\n      0x05\n        /* \"ERC20.sol\":6401:6439  _totalSupply = _totalSupply.sub(value) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6470:6488  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":6470:6479  _balances */\n      0x03\n        /* \"ERC20.sol\":6470:6488  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":6470:6499  _balances[account].sub(value) */\n      tag_304\n      swap1\n        /* \"ERC20.sol\":6493:6498  value */\n      dup3\n        /* \"ERC20.sol\":6470:6499  _balances[account].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":6470:6492  _balances[account].sub */\n      tag_250\n        /* \"ERC20.sol\":6470:6499  _balances[account].sub(value) */\n      and\n      jump\t// in\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6449:6467  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":6449:6458  _balances */\n      0x03\n        /* \"ERC20.sol\":6449:6467  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":6449:6499  _balances[account] = _balances[account].sub(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":6514:6550  Transfer(account, address(0), value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":6449:6467  _balances[account] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":6514:6550  Transfer(account, address(0), value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":6294:6557  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":593:614  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":585:615  require(account != address(0)) */\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n        /* \"Roles.sol\":633:651  has(role, account) */\n      tag_307\n        /* \"Roles.sol\":637:641  role */\n      dup3\n        /* \"Roles.sol\":643:650  account */\n      dup3\n        /* \"Roles.sol\":633:636  has */\n      tag_168\n        /* \"Roles.sol\":633:651  has(role, account) */\n      jump\t// in\n    tag_307:\n        /* \"Roles.sol\":625:652  require(has(role, account)) */\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      and\n        /* \"Roles.sol\":686:691  false */\n      0x00\n        /* \"Roles.sol\":663:683  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":663:691  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Roles.sol\":514:698  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"ERC20.sol\":7459:7638  function _burnFrom(address account, uint256 value) internal {... */\n    tag_264:\n        /* \"ERC20.sol\":7529:7550  _burn(account, value) */\n      tag_310\n        /* \"ERC20.sol\":7535:7542  account */\n      dup3\n        /* \"ERC20.sol\":7544:7549  value */\n      dup3\n        /* \"ERC20.sol\":7529:7534  _burn */\n      tag_256\n        /* \"ERC20.sol\":7529:7550  _burn(account, value) */\n      jump\t// in\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7590:7607  _allowed[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":7590:7598  _allowed */\n      0x04\n        /* \"ERC20.sol\":7590:7607  _allowed[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":7578:7588  msg.sender */\n      caller\n        /* \"ERC20.sol\":7590:7619  _allowed[account][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ERC20.sol\":7560:7631  _approve(account, msg.sender, _allowed[account][msg.sender].sub(value)) */\n      tag_178\n      swap2\n        /* \"ERC20.sol\":7569:7576  account */\n      dup5\n      swap2\n        /* \"ERC20.sol\":7590:7630  _allowed[account][msg.sender].sub(value) */\n      tag_249\n      swap1\n        /* \"ERC20.sol\":7624:7629  value */\n      dup6\n        /* \"ERC20.sol\":7590:7630  _allowed[account][msg.sender].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":7590:7623  _allowed[account][msg.sender].sub */\n      tag_250\n        /* \"ERC20.sol\":7590:7630  _allowed[account][msg.sender].sub(value) */\n      and\n      jump\t// in\n        /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5879:5900  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":5871:5901  require(account != address(0)) */\n      tag_314\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_314:\n        /* \"ERC20.sol\":5927:5939  _totalSupply */\n      sload(0x05)\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      tag_315\n      swap1\n        /* \"ERC20.sol\":5944:5949  value */\n      dup3\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5927:5943  _totalSupply.add */\n      tag_193\n        /* \"ERC20.sol\":5927:5950  _totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_315:\n        /* \"ERC20.sol\":5912:5924  _totalSupply */\n      0x05\n        /* \"ERC20.sol\":5912:5950  _totalSupply = _totalSupply.add(value) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5981:5999  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5981:5990  _balances */\n      0x03\n        /* \"ERC20.sol\":5981:5999  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      tag_316\n      swap1\n        /* \"ERC20.sol\":6004:6009  value */\n      dup3\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":5981:6003  _balances[account].add */\n      tag_193\n        /* \"ERC20.sol\":5981:6010  _balances[account].add(value) */\n      and\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":5960:5969  _balances */\n      0x03\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":5960:6010  _balances[account] = _balances[account].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":5960:5978  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"ERC20.sol\":6025:6061  Transfer(address(0), account, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":5805:6068  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":782:1078  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_279:\n        /* \"SafeMath.sol\":840:847  uint256 */\n      0x00\n        /* \"SafeMath.sol\":937:938  0 */\n      dup1\n        /* \"SafeMath.sol\":933:934  b */\n      dup3\n        /* \"SafeMath.sol\":933:938  b > 0 */\n      gt\n        /* \"SafeMath.sol\":925:939  require(b > 0) */\n      tag_318\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_318:\n        /* \"SafeMath.sol\":949:958  uint256 c */\n      0x00\n        /* \"SafeMath.sol\":965:966  b */\n      dup3\n        /* \"SafeMath.sol\":961:962  a */\n      dup5\n        /* \"SafeMath.sol\":961:966  a / b */\n      dup2\n      tag_319\n      jumpi\n      invalid\n    tag_319:\n      div\n      swap5\n        /* \"SafeMath.sol\":782:1078  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":335:356  account != address(0) */\n      dup2\n      and\n        /* \"Roles.sol\":327:357  require(account != address(0)) */\n      tag_321\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_321:\n        /* \"Roles.sol\":376:394  has(role, account) */\n      tag_322\n        /* \"Roles.sol\":380:384  role */\n      dup3\n        /* \"Roles.sol\":386:393  account */\n      dup3\n        /* \"Roles.sol\":376:379  has */\n      tag_168\n        /* \"Roles.sol\":376:394  has(role, account) */\n      jump\t// in\n    tag_322:\n        /* \"Roles.sol\":375:394  !has(role, account) */\n      iszero\n        /* \"Roles.sol\":367:395  require(!has(role, account)) */\n      tag_323\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      and\n        /* \"Roles.sol\":406:417  role.bearer */\n      0x00\n        /* \"Roles.sol\":406:426  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Roles.sol\":429:433  true */\n      0x01\n        /* \"Roles.sol\":406:433  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Roles.sol\":259:440  function add(Role storage role, address account) internal {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c1565d949495e22cc8bf49d90d4520bcf2e7403a2c97408a881a2f45338f038e0029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052692dbd622a9ef3d7000000600a556000600b556000600c553480156200002957600080fd5b506040516200162d3803806200162d833981018060405260808110156200004f57600080fd5b8101908080516401000000008111156200006857600080fd5b820160208101848111156200007c57600080fd5b81516401000000008111828201871017156200009757600080fd5b50509291906020018051640100000000811115620000b457600080fd5b82016020810184811115620000c857600080fd5b8151640100000000811182820187101715620000e357600080fd5b505060208083015160409093015186519295509293508291869186918691620001129160009186019062000407565b5081516200012890600190602085019062000407565b506002805460ff191660ff929092169190911790555062000152905033620001a6602090811b901c565b600081116200016057600080fd5b6007556200017533620001f8602090811b901c565b6009805460ff191690556200019c336911c9a62d04ed0c8000006200024a602090811b901c565b50505050620004a9565b620001c18160066200029d60201b620010fc1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620002138160086200029d60201b620010fc1790919060201c565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600754620002768262000262620002f360201b60201c565b620002fa60201b62000bcc1790919060201c565b11156200028257600080fd5b6200029982826200031460201b620010301760201c565b5050565b6001600160a01b038116620002b157600080fd5b620002c38282620003d160201b60201c565b15620002ce57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6005545b90565b6000828201838110156200030d57600080fd5b9392505050565b6001600160a01b0382166200032857600080fd5b6200034481600554620002fa60201b62000bcc1790919060201c565b6005556001600160a01b0382166000908152600360209081526040909120546200037991839062000bcc620002fa821b17901c565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b038216620003e757600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200044a57805160ff19168380011785556200047a565b828001600101855582156200047a579182015b828111156200047a5782518255916020019190600101906200045d565b50620004889291506200048c565b5090565b620002f791905b8082111562000488576000815560010162000493565b61117480620004b96000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636ef8d66d11610104578063983b2d56116100a2578063aa271e1a11610071578063aa271e1a1461059c578063b5b80f12146105c2578063dd62ed3e146105ca578063ef78d4fd146105f8576101cf565b8063983b2d5614610516578063986502751461053c578063a457c2d714610544578063a9059cbb14610570576101cf565b80637fd30df0116100de5780637fd30df01461041e57806382dc1ec4146104e05780638456cb591461050657806395d89b411461050e576101cf565b80636ef8d66d146103c457806370a08231146103cc57806379cc6790146103f2576101cf565b8063395093511161017157806342966c681161014b57806342966c681461037157806346fbf68e1461038e5780635a2bcc18146103b45780635c975abb146103bc576101cf565b8063395093511461030f5780633f4ba83a1461033b57806340c10f1914610345576101cf565b80631efe9395116101ad5780631efe9395146102ab57806323b872dd146102b3578063313ce567146102e9578063355274ea14610307576101cf565b806306fdde03146101d4578063095ea7b31461025157806318160ddd14610291575b600080fd5b6101dc610600565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561026757600080fd5b506001600160a01b038135169060200135610696565b604080519115158252519081900360200190f35b6102996106ba565b60408051918252519081900360200190f35b6102996106c0565b61027d600480360360608110156102c957600080fd5b506001600160a01b038135811691602081013590911690604001356106c6565b6102f16106ec565b6040805160ff9092168252519081900360200190f35b6102996106f5565b61027d6004803603604081101561032557600080fd5b506001600160a01b0381351690602001356106fb565b610343610718565b005b61027d6004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610778565b6103436004803603602081101561038757600080fd5b503561079d565b61027d600480360360208110156103a457600080fd5b50356001600160a01b03166107b9565b6102996107d2565b61027d6107d8565b6103436107e1565b610299600480360360208110156103e257600080fd5b50356001600160a01b03166107ec565b6103436004803603604081101561040857600080fd5b506001600160a01b038135169060200135610807565b61027d6004803603604081101561043457600080fd5b81019060208101813564010000000081111561044f57600080fd5b82018360208201111561046157600080fd5b8035906020019184602083028401116401000000008311171561048357600080fd5b9193909290916020810190356401000000008111156104a157600080fd5b8201836020820111156104b357600080fd5b803590602001918460208302840111640100000000831117156104d557600080fd5b509092509050610825565b610343600480360360208110156104f657600080fd5b50356001600160a01b0316610907565b610343610922565b6101dc610986565b6103436004803603602081101561052c57600080fd5b50356001600160a01b03166109e6565b610343610a01565b61027d6004803603604081101561055a57600080fd5b506001600160a01b038135169060200135610a0a565b61027d6004803603604081101561058657600080fd5b506001600160a01b038135169060200135610a27565b61027d600480360360208110156105b257600080fd5b50356001600160a01b0316610a44565b610299610a57565b610299600480360360408110156105e057600080fd5b506001600160a01b0381358116916020013516610a61565b610299610a8c565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561068c5780601f106106615761010080835404028352916020019161068c565b820191906000526020600020905b81548152906001019060200180831161066f57829003601f168201915b5050505050905090565b60095460009060ff16156106a957600080fd5b6106b38383610a92565b9392505050565b60055490565b600c5490565b60095460009060ff16156106d957600080fd5b6106e4848484610aa8565b949350505050565b60025460ff1690565b60075490565b60095460009060ff161561070e57600080fd5b6106b38383610aff565b610721336107b9565b61072a57600080fd5b60095460ff1661073957600080fd5b6009805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b60095460009060ff161561078b57600080fd5b61079433610a44565b6101cf57600080fd5b60095460ff16156107ad57600080fd5b6107b681610b3b565b50565b60006107cc60088363ffffffff610b4516565b92915050565b600a5490565b60095460ff1690565b6107ea33610b7a565b565b6001600160a01b031660009081526003602052604090205490565b60095460ff161561081757600080fd5b6108218282610bc2565b5050565b60095460009060ff161561083857600080fd5b61084133610a44565b61084a57600080fd5b8361085457600080fd5b83821461086057600080fd5b60005b848110156108d45761089284848381811061087a57fe5b90506020020135600c54610bcc90919063ffffffff16565b600c556108cc8686838181106108a457fe5b905060200201356001600160a01b03168585848181106108c057fe5b90506020020135610bde565b600101610863565b50600a54600c5411156108e657600080fd5b600a54600c5414156108fc576108fa610c0e565b505b506001949350505050565b610910336107b9565b61091957600080fd5b6107b681610c6f565b61092b336107b9565b61093457600080fd5b60095460ff161561094457600080fd5b6009805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561068c5780601f106106615761010080835404028352916020019161068c565b6109ef33610a44565b6109f857600080fd5b6107b681610cb7565b6107ea33610cff565b60095460009060ff1615610a1d57600080fd5b6106b38383610d47565b60095460009060ff1615610a3a57600080fd5b6106b38383610d83565b60006107cc60068363ffffffff610b4516565b600c54600a540390565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b600b5490565b6000610a9f338484610d90565b50600192915050565b6000610ab5848484610e18565b6001600160a01b038416600090815260046020908152604080832033808552925290912054610af5918691610af0908663ffffffff610ee516565b610d90565b5060019392505050565b3360008181526004602090815260408083206001600160a01b03871684529091528120549091610a9f918590610af0908663ffffffff610bcc16565b6107b63382610efa565b60006001600160a01b038216610b5a57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610b8b60088263ffffffff610fa316565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6108218282610feb565b6000828201838110156106b357600080fd5b600754610bf982610bed6106ba565b9063ffffffff610bcc16565b1115610c0457600080fd5b6108218282611030565b6000600b5460001415610c2a5769021e19e0c9bab2400000600a555b600b54610c3e90600163ffffffff610bcc16565b600b8190556106a49006610c6457600a54610c6090600263ffffffff6110da16565b600a555b506000600c55600190565b610c8060088263ffffffff6110fc16565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b610cc860068263ffffffff6110fc16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610d1060068263ffffffff610fa316565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b3360008181526004602090815260408083206001600160a01b03871684529091528120549091610a9f918590610af0908663ffffffff610ee516565b6000610a9f338484610e18565b6001600160a01b038216610da357600080fd5b6001600160a01b038316610db657600080fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610e2b57600080fd5b6001600160a01b038316600090815260036020526040902054610e54908263ffffffff610ee516565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610e89908263ffffffff610bcc16565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610ef457600080fd5b50900390565b6001600160a01b038216610f0d57600080fd5b600554610f20908263ffffffff610ee516565b6005556001600160a01b038216600090815260036020526040902054610f4c908263ffffffff610ee516565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038116610fb657600080fd5b610fc08282610b45565b610fc957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610ff58282610efa565b6001600160a01b038216600090815260046020908152604080832033808552925290912054610821918491610af0908563ffffffff610ee516565b6001600160a01b03821661104357600080fd5b600554611056908263ffffffff610bcc16565b6005556001600160a01b038216600090815260036020526040902054611082908263ffffffff610bcc16565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008082116110e857600080fd5b60008284816110f357fe5b04949350505050565b6001600160a01b03811661110f57600080fd5b6111198282610b45565b1561112357600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fea165627a7a72305820c1565d949495e22cc8bf49d90d4520bcf2e7403a2c97408a881a2f45338f038e0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x2DBD622A9EF3D7000000 PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x162D CODESIZE SUB DUP1 PUSH3 0x162D DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH3 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH3 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH3 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH3 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 SWAP1 SWAP4 ADD MLOAD DUP7 MLOAD SWAP3 SWAP6 POP SWAP3 SWAP4 POP DUP3 SWAP2 DUP7 SWAP2 DUP7 SWAP2 DUP7 SWAP2 PUSH3 0x112 SWAP2 PUSH1 0x0 SWAP2 DUP7 ADD SWAP1 PUSH3 0x407 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x128 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x407 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x152 SWAP1 POP CALLER PUSH3 0x1A6 PUSH1 0x20 SWAP1 DUP2 SHL SWAP1 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SSTORE PUSH3 0x175 CALLER PUSH3 0x1F8 PUSH1 0x20 SWAP1 DUP2 SHL SWAP1 SHR JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x19C CALLER PUSH10 0x11C9A62D04ED0C800000 PUSH3 0x24A PUSH1 0x20 SWAP1 DUP2 SHL SWAP1 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x1C1 DUP2 PUSH1 0x6 PUSH3 0x29D PUSH1 0x20 SHL PUSH3 0x10FC OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x213 DUP2 PUSH1 0x8 PUSH3 0x29D PUSH1 0x20 SHL PUSH3 0x10FC OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0x276 DUP3 PUSH3 0x262 PUSH3 0x2F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2FA PUSH1 0x20 SHL PUSH3 0xBCC OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x299 DUP3 DUP3 PUSH3 0x314 PUSH1 0x20 SHL PUSH3 0x1030 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2C3 DUP3 DUP3 PUSH3 0x3D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x344 DUP2 PUSH1 0x5 SLOAD PUSH3 0x2FA PUSH1 0x20 SHL PUSH3 0xBCC OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x379 SWAP2 DUP4 SWAP1 PUSH3 0xBCC PUSH3 0x2FA DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x44A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x47A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x47A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x47A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x45D JUMP JUMPDEST POP PUSH3 0x488 SWAP3 SWAP2 POP PUSH3 0x48C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x488 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x493 JUMP JUMPDEST PUSH2 0x1174 DUP1 PUSH3 0x4B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EF8D66D GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x983B2D56 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAA271E1A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xB5B80F12 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x5F8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x570 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7FD30DF0 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7FD30DF0 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x82DC1EC4 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6EF8D66D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F2 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x46FBF68E EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x5A2BCC18 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3BC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x345 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1EFE9395 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1EFE9395 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x307 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x243 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x343 PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x79D JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x343 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x825 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x907 JUMP JUMPDEST PUSH2 0x343 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x986 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x343 PUSH2 0xA01 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x299 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xA61 JUMP JUMPDEST PUSH2 0x299 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x68C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x661 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x66F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xA92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E4 DUP5 DUP5 DUP5 PUSH2 0xAA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x721 CALLER PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x794 CALLER PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xB3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH1 0x8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xB45 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7EA CALLER PUSH2 0xB7A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x821 DUP3 DUP3 PUSH2 0xBC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x841 CALLER PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 EQ PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x892 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x87A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xC SLOAD PUSH2 0xBCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x8CC DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x8A4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x8C0 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x863 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xC SLOAD GT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xC SLOAD EQ ISZERO PUSH2 0x8FC JUMPI PUSH2 0x8FA PUSH2 0xC0E JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x910 CALLER PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x92B CALLER PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x68C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x661 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x9EF CALLER PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x7EA CALLER PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH1 0x6 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xB45 AND JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F CALLER DUP5 DUP5 PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 DUP5 DUP5 DUP5 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xAF5 SWAP2 DUP7 SWAP2 PUSH2 0xAF0 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xA9F SWAP2 DUP6 SWAP1 PUSH2 0xAF0 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH2 0x7B6 CALLER DUP3 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x8 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xFA3 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCD265EBAF09DF2871CC7BD4133404A235BA12EFF2041BB89D9C714A2621C7C7E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x821 DUP3 DUP3 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xBF9 DUP3 PUSH2 0xBED PUSH2 0x6BA JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST GT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x821 DUP3 DUP3 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xC2A JUMPI PUSH10 0x21E19E0C9BAB2400000 PUSH1 0xA SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH2 0xC3E SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE PUSH2 0x6A4 SWAP1 MOD PUSH2 0xC64 JUMPI PUSH1 0xA SLOAD PUSH2 0xC60 SWAP1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x10DA AND JUMP JUMPDEST PUSH1 0xA SSTORE JUMPDEST POP PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH1 0x8 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10FC AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xCC8 PUSH1 0x6 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10FC AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xD10 PUSH1 0x6 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xFA3 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xA9F SWAP2 DUP6 SWAP1 PUSH2 0xAF0 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F CALLER DUP5 DUP5 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE54 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE89 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF20 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF4C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC0 DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xFC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFF5 DUP3 DUP3 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x821 SWAP2 DUP5 SWAP2 PUSH2 0xAF0 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1056 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1082 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x10F3 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x110F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1119 DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST ISZERO PUSH2 0x1123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc1 JUMP 0x5d SWAP5 SWAP5 SWAP6 0xe2 0x2c 0xc8 0xbf 0x49 0xd9 0xd GASLIMIT KECCAK256 0xbc CALLCODE 0xe7 BLOCKHASH GASPRICE 0x2c SWAP8 BLOCKHASH DUP11 DUP9 BYTE 0x2f GASLIMIT CALLER DUP16 SUB DUP15 STOP 0x29 ",
            "sourceMap": "636:3290:10:-;;;750:9;720:39;;796:1;765:32;;836:1;803:34;;990:302;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:302:10;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;990:302:10;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;990:302:10;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;990:302:10;;;;;;;;;;493:12:3;;990:302:10;;-1:-1:-1;990:302:10;;-1:-1:-1;990:302:10;;1168:4;;990:302;;;;493:12:3;;:5;;:12;;;;:::i;:::-;-1:-1:-1;515:16:3;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:3;:20;;-1:-1:-1;;541:20:3;;;;;;;;;;;;-1:-1:-1;274:22:7;;-1:-1:-1;285:10:7;274;;;;;:22;;:::i;:::-;256:1:2;250:3;:7;242:16;;;;;;268:4;:10;274:22:9;285:10;274;;;;;:22;;:::i;:::-;338:7:8;:15;;-1:-1:-1;;338:15:8;;;1258:27:10;1264:10;1276:8;1258:5;;;;;:27;;:::i;:::-;990:302;;;;636:3290;;684:119:7;740:21;753:7;740:8;:12;;;;;;:21;;;;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:7;;;;;;;;684:119;:::o;::9:-;740:21;753:7;740:8;:12;;;;;;:21;;;;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:9;;;;;;;;684:119;:::o;432:151:2:-;534:4;;506:24;524:5;506:13;:11;;;:13;;:::i;:::-;:17;;;;;;:24;;;;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;;;;;:27;;:::i;:::-;432:151;;:::o;259:181:11:-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o;907:89:0:-;977:12;;907:89;;:::o;1439:145:12:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:12:o;5805:263:0:-;-1:-1:-1;;;;;5879:21:0;;5871:30;;;;;;5927:23;5944:5;5927:12;;:16;;;;;;:23;;;;:::i;:::-;5912:12;:38;-1:-1:-1;;;;;5981:18:0;;;;;;:9;:18;;;;;;;;;:29;;6004:5;;5981:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;5960:18:0;;;;;;:9;:18;;;;;;;;:50;;;;6025:36;;;;;;;5960:18;;;;6025:36;;;;;;;;;;5805:263;;:::o;786:162:11:-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;636:3290:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;636:3290:10;;;-1:-1:-1;636:3290:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636ef8d66d11610104578063983b2d56116100a2578063aa271e1a11610071578063aa271e1a1461059c578063b5b80f12146105c2578063dd62ed3e146105ca578063ef78d4fd146105f8576101cf565b8063983b2d5614610516578063986502751461053c578063a457c2d714610544578063a9059cbb14610570576101cf565b80637fd30df0116100de5780637fd30df01461041e57806382dc1ec4146104e05780638456cb591461050657806395d89b411461050e576101cf565b80636ef8d66d146103c457806370a08231146103cc57806379cc6790146103f2576101cf565b8063395093511161017157806342966c681161014b57806342966c681461037157806346fbf68e1461038e5780635a2bcc18146103b45780635c975abb146103bc576101cf565b8063395093511461030f5780633f4ba83a1461033b57806340c10f1914610345576101cf565b80631efe9395116101ad5780631efe9395146102ab57806323b872dd146102b3578063313ce567146102e9578063355274ea14610307576101cf565b806306fdde03146101d4578063095ea7b31461025157806318160ddd14610291575b600080fd5b6101dc610600565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561026757600080fd5b506001600160a01b038135169060200135610696565b604080519115158252519081900360200190f35b6102996106ba565b60408051918252519081900360200190f35b6102996106c0565b61027d600480360360608110156102c957600080fd5b506001600160a01b038135811691602081013590911690604001356106c6565b6102f16106ec565b6040805160ff9092168252519081900360200190f35b6102996106f5565b61027d6004803603604081101561032557600080fd5b506001600160a01b0381351690602001356106fb565b610343610718565b005b61027d6004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610778565b6103436004803603602081101561038757600080fd5b503561079d565b61027d600480360360208110156103a457600080fd5b50356001600160a01b03166107b9565b6102996107d2565b61027d6107d8565b6103436107e1565b610299600480360360208110156103e257600080fd5b50356001600160a01b03166107ec565b6103436004803603604081101561040857600080fd5b506001600160a01b038135169060200135610807565b61027d6004803603604081101561043457600080fd5b81019060208101813564010000000081111561044f57600080fd5b82018360208201111561046157600080fd5b8035906020019184602083028401116401000000008311171561048357600080fd5b9193909290916020810190356401000000008111156104a157600080fd5b8201836020820111156104b357600080fd5b803590602001918460208302840111640100000000831117156104d557600080fd5b509092509050610825565b610343600480360360208110156104f657600080fd5b50356001600160a01b0316610907565b610343610922565b6101dc610986565b6103436004803603602081101561052c57600080fd5b50356001600160a01b03166109e6565b610343610a01565b61027d6004803603604081101561055a57600080fd5b506001600160a01b038135169060200135610a0a565b61027d6004803603604081101561058657600080fd5b506001600160a01b038135169060200135610a27565b61027d600480360360208110156105b257600080fd5b50356001600160a01b0316610a44565b610299610a57565b610299600480360360408110156105e057600080fd5b506001600160a01b0381358116916020013516610a61565b610299610a8c565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561068c5780601f106106615761010080835404028352916020019161068c565b820191906000526020600020905b81548152906001019060200180831161066f57829003601f168201915b5050505050905090565b60095460009060ff16156106a957600080fd5b6106b38383610a92565b9392505050565b60055490565b600c5490565b60095460009060ff16156106d957600080fd5b6106e4848484610aa8565b949350505050565b60025460ff1690565b60075490565b60095460009060ff161561070e57600080fd5b6106b38383610aff565b610721336107b9565b61072a57600080fd5b60095460ff1661073957600080fd5b6009805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b60095460009060ff161561078b57600080fd5b61079433610a44565b6101cf57600080fd5b60095460ff16156107ad57600080fd5b6107b681610b3b565b50565b60006107cc60088363ffffffff610b4516565b92915050565b600a5490565b60095460ff1690565b6107ea33610b7a565b565b6001600160a01b031660009081526003602052604090205490565b60095460ff161561081757600080fd5b6108218282610bc2565b5050565b60095460009060ff161561083857600080fd5b61084133610a44565b61084a57600080fd5b8361085457600080fd5b83821461086057600080fd5b60005b848110156108d45761089284848381811061087a57fe5b90506020020135600c54610bcc90919063ffffffff16565b600c556108cc8686838181106108a457fe5b905060200201356001600160a01b03168585848181106108c057fe5b90506020020135610bde565b600101610863565b50600a54600c5411156108e657600080fd5b600a54600c5414156108fc576108fa610c0e565b505b506001949350505050565b610910336107b9565b61091957600080fd5b6107b681610c6f565b61092b336107b9565b61093457600080fd5b60095460ff161561094457600080fd5b6009805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561068c5780601f106106615761010080835404028352916020019161068c565b6109ef33610a44565b6109f857600080fd5b6107b681610cb7565b6107ea33610cff565b60095460009060ff1615610a1d57600080fd5b6106b38383610d47565b60095460009060ff1615610a3a57600080fd5b6106b38383610d83565b60006107cc60068363ffffffff610b4516565b600c54600a540390565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b600b5490565b6000610a9f338484610d90565b50600192915050565b6000610ab5848484610e18565b6001600160a01b038416600090815260046020908152604080832033808552925290912054610af5918691610af0908663ffffffff610ee516565b610d90565b5060019392505050565b3360008181526004602090815260408083206001600160a01b03871684529091528120549091610a9f918590610af0908663ffffffff610bcc16565b6107b63382610efa565b60006001600160a01b038216610b5a57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610b8b60088263ffffffff610fa316565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6108218282610feb565b6000828201838110156106b357600080fd5b600754610bf982610bed6106ba565b9063ffffffff610bcc16565b1115610c0457600080fd5b6108218282611030565b6000600b5460001415610c2a5769021e19e0c9bab2400000600a555b600b54610c3e90600163ffffffff610bcc16565b600b8190556106a49006610c6457600a54610c6090600263ffffffff6110da16565b600a555b506000600c55600190565b610c8060088263ffffffff6110fc16565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b610cc860068263ffffffff6110fc16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610d1060068263ffffffff610fa316565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b3360008181526004602090815260408083206001600160a01b03871684529091528120549091610a9f918590610af0908663ffffffff610ee516565b6000610a9f338484610e18565b6001600160a01b038216610da357600080fd5b6001600160a01b038316610db657600080fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610e2b57600080fd5b6001600160a01b038316600090815260036020526040902054610e54908263ffffffff610ee516565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610e89908263ffffffff610bcc16565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610ef457600080fd5b50900390565b6001600160a01b038216610f0d57600080fd5b600554610f20908263ffffffff610ee516565b6005556001600160a01b038216600090815260036020526040902054610f4c908263ffffffff610ee516565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038116610fb657600080fd5b610fc08282610b45565b610fc957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610ff58282610efa565b6001600160a01b038216600090815260046020908152604080832033808552925290912054610821918491610af0908563ffffffff610ee516565b6001600160a01b03821661104357600080fd5b600554611056908263ffffffff610bcc16565b6005556001600160a01b038216600090815260036020526040902054611082908263ffffffff610bcc16565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008082116110e857600080fd5b60008284816110f357fe5b04949350505050565b6001600160a01b03811661110f57600080fd5b6111198282610b45565b1561112357600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fea165627a7a72305820c1565d949495e22cc8bf49d90d4520bcf2e7403a2c97408a881a2f45338f038e0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EF8D66D GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x983B2D56 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAA271E1A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xB5B80F12 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x5F8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x570 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7FD30DF0 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7FD30DF0 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x82DC1EC4 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6EF8D66D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F2 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x46FBF68E EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x5A2BCC18 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3BC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x345 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1EFE9395 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1EFE9395 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x307 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x243 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x343 PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x79D JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x343 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x825 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x907 JUMP JUMPDEST PUSH2 0x343 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x986 JUMP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x343 PUSH2 0xA01 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x299 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xA61 JUMP JUMPDEST PUSH2 0x299 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x68C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x661 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x66F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xA92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E4 DUP5 DUP5 DUP5 PUSH2 0xAA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x721 CALLER PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x794 CALLER PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xB3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH1 0x8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xB45 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7EA CALLER PUSH2 0xB7A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x821 DUP3 DUP3 PUSH2 0xBC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x841 CALLER PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 EQ PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x892 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x87A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xC SLOAD PUSH2 0xBCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x8CC DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x8A4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x8C0 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x863 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xC SLOAD GT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xC SLOAD EQ ISZERO PUSH2 0x8FC JUMPI PUSH2 0x8FA PUSH2 0xC0E JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x910 CALLER PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x92B CALLER PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x68C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x661 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x9EF CALLER PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP2 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x7EA CALLER PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B3 DUP4 DUP4 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC PUSH1 0x6 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xB45 AND JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F CALLER DUP5 DUP5 PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 DUP5 DUP5 DUP5 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xAF5 SWAP2 DUP7 SWAP2 PUSH2 0xAF0 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xA9F SWAP2 DUP6 SWAP1 PUSH2 0xAF0 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH2 0x7B6 CALLER DUP3 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x8 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xFA3 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCD265EBAF09DF2871CC7BD4133404A235BA12EFF2041BB89D9C714A2621C7C7E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x821 DUP3 DUP3 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xBF9 DUP3 PUSH2 0xBED PUSH2 0x6BA JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST GT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x821 DUP3 DUP3 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xC2A JUMPI PUSH10 0x21E19E0C9BAB2400000 PUSH1 0xA SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH2 0xC3E SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE PUSH2 0x6A4 SWAP1 MOD PUSH2 0xC64 JUMPI PUSH1 0xA SLOAD PUSH2 0xC60 SWAP1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x10DA AND JUMP JUMPDEST PUSH1 0xA SSTORE JUMPDEST POP PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH1 0x8 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10FC AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xCC8 PUSH1 0x6 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10FC AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xD10 PUSH1 0x6 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xFA3 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xA9F SWAP2 DUP6 SWAP1 PUSH2 0xAF0 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F CALLER DUP5 DUP5 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE54 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE89 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF20 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF4C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC0 DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xFC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFF5 DUP3 DUP3 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x821 SWAP2 DUP5 SWAP2 PUSH2 0xAF0 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEE5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1056 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1082 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xBCC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x10F3 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x110F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1119 DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST ISZERO PUSH2 0x1123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc1 JUMP 0x5d SWAP5 SWAP5 SWAP6 0xe2 0x2c 0xc8 0xbf 0x49 0xd9 0xd GASLIMIT KECCAK256 0xbc CALLCODE 0xe7 BLOCKHASH GASPRICE 0x2c SWAP8 BLOCKHASH DUP11 DUP9 BYTE 0x2f GASLIMIT CALLER DUP16 SUB DUP15 STOP 0x29 ",
            "sourceMap": "636:3290:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:3290:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:138:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;502:138:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;907:89:0;;;:::i;:::-;;;;;;;;;;;;;;;;3356:95:10;;;:::i;338:158:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;338:158:5;;;;;;;;;;;;;;;;;:::i;930:81:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;353:73:2;;;:::i;646:173:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;646:173:5;;;;;;;;:::i;1162:115:8:-;;;:::i;:::-;;3513:146:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3513:146:10;;;;;;;;:::i;3721:84::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3721:84:10;;:::i;394:107:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;394:107:9;-1:-1:-1;;;;;394:107:9;;:::i;2606:88:10:-;;;:::i;446:76:8:-;;;:::i;603:75:9:-;;;:::i;1208:104:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1208:104:0;-1:-1:-1;;;;;1208:104:0;;:::i;3811:112:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3811:112:10;;;;;;;;:::i;1972:536::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:536:10;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1972:536:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1972:536:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1972:536:10;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1972:536:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1972:536:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;1972:536:10;;-1:-1:-1;1972:536:10;-1:-1:-1;1972:536:10;:::i;507:90:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;507:90:9;-1:-1:-1;;;;;507:90:9;;:::i;959:113:8:-;;;:::i;771:85:3:-;;;:::i;507:90:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;507:90:7;-1:-1:-1;;;;;507:90:7;;:::i;603:75::-;;;:::i;825:183:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;825:183:5;;;;;;;;:::i;202:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;202:130:5;;;;;;;;:::i;394:107:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;394:107:7;-1:-1:-1;;;;;394:107:7;;:::i;3237:113:10:-;;;:::i;1643:129:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:129:0;;;;;;;;;;:::i;2515:85:10:-;;;:::i;628:81:3:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;502:138:5:-;675:7:8;;581:4:5;;675:7:8;;674:8;666:17;;;;;;604:29:5;618:7;627:5;604:13;:29::i;:::-;597:36;502:138;-1:-1:-1;;;502:138:5:o;907:89:0:-;977:12;;907:89;:::o;3356:95:10:-;3430:14;;3356:95;:::o;338:158:5:-;675:7:8;;431:4:5;;675:7:8;;674:8;666:17;;;;;;454:35:5;473:4;479:2;483:5;454:18;:35::i;:::-;447:42;338:158;-1:-1:-1;;;;338:158:5:o;930:81:3:-;995:9;;;;930:81;:::o;353:73:2:-;415:4;;353:73;:::o;646:173:5:-;675:7:8;;737:12:5;;675:7:8;;674:8;666:17;;;;;;768:44:5;792:7;801:10;768:23;:44::i;1162:115:8:-;349:20:9;358:10;349:8;:20::i;:::-;341:29;;;;;;846:7:8;;;;838:16;;;;;;1220:7;:15;;-1:-1:-1;;1220:15:8;;;1250:20;;;1259:10;1250:20;;;;;;;;;;;;;1162:115::o;3513:146:10:-;675:7:8;;3595:4:10;;675:7:8;;674:8;666:17;;;;;;349:20:7;358:10;349:8;:20::i;:::-;341:29;;;;;3721:84:10;675:7:8;;;;674:8;666:17;;;;;;3781::10;3792:5;3781:10;:17::i;:::-;3721:84;:::o;394:107:9:-;450:4;473:21;:8;486:7;473:21;:12;:21;:::i;:::-;466:28;394:107;-1:-1:-1;;394:107:9:o;2606:88:10:-;2676:11;;2606:88;:::o;446:76:8:-;508:7;;;;446:76;:::o;603:75:9:-;646:25;660:10;646:13;:25::i;:::-;603:75::o;1208:104:0:-;-1:-1:-1;;;;;1289:16:0;1263:7;1289:16;;;:9;:16;;;;;;;1208:104::o;3811:112:10:-;675:7:8;;;;674:8;666:17;;;;;;3889:27:10;3904:4;3910:5;3889:14;:27::i;:::-;3811:112;;:::o;1972:536::-;675:7:8;;2090:4:10;;675:7:8;;674:8;666:17;;;;;;349:20:7;358:10;349:8;:20::i;:::-;341:29;;;;;;2123:20:10;2115:29;;;;;;2162:33;;;2154:42;;;;;;2211:9;2207:161;2226:20;;;2207:161;;;2284:29;2303:6;;2310:1;2303:9;;;;;;;;;;;;;2284:14;;:18;;:29;;;;:::i;:::-;2267:14;:46;2327:30;2333:9;;2343:1;2333:12;;;;;;;;;;;;;-1:-1:-1;;;;;2333:12:10;2347:6;;2354:1;2347:9;;;;;;;;;;;;;2327:5;:30::i;:::-;2248:3;;2207:161;;;;2403:11;;2385:14;;:29;;2377:38;;;;;;2447:11;;2429:14;;:29;2425:54;;;2460:19;:17;:19::i;:::-;;2425:54;-1:-1:-1;2497:4:10;1972:536;;;;;;:::o;507:90:9:-;349:20;358:10;349:8;:20::i;:::-;341:29;;;;;;571:19;582:7;571:10;:19::i;959:113:8:-;349:20:9;358:10;349:8;:20::i;:::-;341:29;;;;;;675:7:8;;;;674:8;666:17;;;;;;1018:7;:14;;-1:-1:-1;;1018:14:8;1028:4;1018:14;;;1047:18;;;1054:10;1047:18;;;;;;;;;;;;;959:113::o;771:85:3:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;507:90:7;349:20;358:10;349:8;:20::i;:::-;341:29;;;;;;571:19;582:7;571:10;:19::i;603:75::-;646:25;660:10;646:13;:25::i;825:183:5:-;675:7:8;;921:12:5;;675:7:8;;674:8;666:17;;;;;;952:49:5;976:7;985:15;952:23;:49::i;202:130::-;675:7:8;;277:4:5;;675:7:8;;674:8;666:17;;;;;;300:25:5;315:2;319:5;300:14;:25::i;394:107:7:-;450:4;473:21;:8;486:7;473:21;:12;:21;:::i;3237:113:10:-;3329:14;;3315:11;;:28;3237:113;:::o;1643:129:0:-;-1:-1:-1;;;;;1741:15:0;;;1715:7;1741:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1643:129::o;2515:85:10:-;2581:12;;2515:85;:::o;2712:145:0:-;2777:4;2793:36;2802:10;2814:7;2823:5;2793:8;:36::i;:::-;-1:-1:-1;2846:4:0;2712:145;;;;:::o;3320:224::-;3399:4;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;;;;;3478:14:0;;;;;;:8;:14;;;;;;;;3466:10;3478:26;;;;;;;;;3451:65;;3460:4;;3478:37;;3509:5;3478:37;:30;:37;:::i;:::-;3451:8;:65::i;:::-;-1:-1:-1;3533:4:0;3320:224;;;;;:::o;4058:200::-;4163:10;4138:4;4184:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4184:29:0;;;;;;;;;;4138:4;;4154:76;;4175:7;;4184:45;;4218:10;4184:45;:33;:45;:::i;295:77:1:-;341:24;347:10;359:5;341;:24::i;786:162:11:-;858:4;-1:-1:-1;;;;;882:21:11;;874:30;;;;;;-1:-1:-1;;;;;;921:20:11;:11;:20;;;;;;;;;;;;;;;786:162::o;809:127:9:-;868:24;:8;884:7;868:24;:15;:24;:::i;:::-;907:22;;-1:-1:-1;;;;;907:22:9;;;;;;;;809:127;:::o;619:93:1:-;683:22;693:4;699:5;683:9;:22::i;1439:145:12:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;432:151:2;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;2700:531:10:-;2747:4;2854:12;;2870:1;2854:17;2851:44;;;2887:8;2873:11;:22;2851:44;2949:12;;:19;;2966:1;2949:19;:16;:19;:::i;:::-;2934:12;:34;;;882:4;;3067:26;3064:68;;3114:11;;:18;;3130:1;3114:18;:15;:18;:::i;:::-;3100:11;:32;3064:68;-1:-1:-1;3201:1:10;3184:14;:18;3220:4;2700:531;:::o;684:119:9:-;740:21;:8;753:7;740:21;:12;:21;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:9;;;;;;;;684:119;:::o;::7:-;740:21;:8;753:7;740:21;:12;:21;:::i;:::-;776:20;;-1:-1:-1;;;;;776:20:7;;;;;;;;684:119;:::o;809:127::-;868:24;:8;884:7;868:24;:15;:24;:::i;:::-;907:22;;-1:-1:-1;;;;;907:22:7;;;;;;;;809:127;:::o;4777:210:0:-;4887:10;4862:4;4908:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4908:29:0;;;;;;;;;;4862:4;;4878:81;;4899:7;;4908:50;;4942:15;4908:50;:33;:50;:::i;1939:137::-;2000:4;2016:32;2026:10;2038:2;2042:5;2016:9;:32::i;6822:248::-;-1:-1:-1;;;;;6914:21:0;;6906:30;;;;;;-1:-1:-1;;;;;6954:19:0;;6946:28;;;;;;-1:-1:-1;;;;;6985:15:0;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7032:31;;;;;;;;;;;;;;;;;6822:248;;;:::o;5206:256::-;-1:-1:-1;;;;;5293:16:0;;5285:25;;;;;;-1:-1:-1;;;;;5339:15:0;;;;;;:9;:15;;;;;;:26;;5359:5;5339:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5321:15:0;;;;;;;:9;:15;;;;;;:44;;;;5391:13;;;;;;;:24;;5409:5;5391:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5375:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;5430:25;;;;;;;5375:13;;5430:25;;;;;;;;;;;;;5206:256;;;:::o;1211:145:12:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:12;;;1211:145::o;6294:263:0:-;-1:-1:-1;;;;;6368:21:0;;6360:30;;;;;;6416:12;;:23;;6433:5;6416:23;:16;:23;:::i;:::-;6401:12;:38;-1:-1:-1;;;;;6470:18:0;;;;;;:9;:18;;;;;;:29;;6493:5;6470:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6449:18:0;;;;;;:9;:18;;;;;;;;:50;;;;6514:36;;;;;;;6449:18;;6514:36;;;;;;;;;;;6294:263;;:::o;514:184:11:-;-1:-1:-1;;;;;593:21:11;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:11;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:11;;;514:184::o;7459:179:0:-;7529:21;7535:7;7544:5;7529;:21::i;:::-;-1:-1:-1;;;;;7590:17:0;;;;;;:8;:17;;;;;;;;7578:10;7590:29;;;;;;;;;7560:71;;7569:7;;7590:40;;7624:5;7590:40;:33;:40;:::i;5805:263::-;-1:-1:-1;;;;;5879:21:0;;5871:30;;;;;;5927:12;;:23;;5944:5;5927:23;:16;:23;:::i;:::-;5912:12;:38;-1:-1:-1;;;;;5981:18:0;;;;;;:9;:18;;;;;;:29;;6004:5;5981:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5960:18:0;;;;;;:9;:18;;;;;;;;:50;;;;6025:36;;;;;;;5960:18;;;;6025:36;;;;;;;;;;5805:263;;:::o;782:296:12:-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:12:o;259:181:11:-;-1:-1:-1;;;;;335:21:11;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:11;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:11;429:4;406:27;;;259:181::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "893600",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "addMinter(address)": "infinite",
              "addPauser(address)": "infinite",
              "allowance(address,address)": "738",
              "approve(address,uint256)": "22732",
              "balanceOf(address)": "610",
              "burn(uint256)": "infinite",
              "burnFrom(address,uint256)": "infinite",
              "cap()": "510",
              "decimals()": "503",
              "decreaseAllowance(address,uint256)": "infinite",
              "increaseAllowance(address,uint256)": "infinite",
              "isMinter(address)": "infinite",
              "isPauser(address)": "infinite",
              "mint(address,uint256)": "infinite",
              "mintAmount()": "487",
              "mintBulk(address[],uint256[])": "infinite",
              "name()": "infinite",
              "pause()": "infinite",
              "paused()": "521",
              "period()": "508",
              "remainingInPeriod()": "670",
              "renounceMinter()": "infinite",
              "renouncePauser()": "infinite",
              "symbol()": "infinite",
              "totalInPeriod()": "444",
              "totalSupply()": "489",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite",
              "unpause()": "infinite"
            },
            "internal": {
              "_updateMintParams()": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "MSTORE"
              },
              {
                "begin": 750,
                "end": 759,
                "name": "PUSH",
                "value": "2DBD622A9EF3D7000000"
              },
              {
                "begin": 720,
                "end": 759,
                "name": "PUSH",
                "value": "A"
              },
              {
                "begin": 720,
                "end": 759,
                "name": "SSTORE"
              },
              {
                "begin": 796,
                "end": 797,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 765,
                "end": 797,
                "name": "PUSH",
                "value": "B"
              },
              {
                "begin": 765,
                "end": 797,
                "name": "SSTORE"
              },
              {
                "begin": 836,
                "end": 837,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 803,
                "end": 837,
                "name": "PUSH",
                "value": "C"
              },
              {
                "begin": 803,
                "end": 837,
                "name": "SSTORE"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "CALLVALUE"
              },
              {
                "begin": 8,
                "end": 17,
                "name": "DUP1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "ISZERO"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPDEST"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "MLOAD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSHSIZE"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "CODESIZE"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SUB"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSHSIZE"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP4"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "CODECOPY"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP2"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "ADD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "MSTORE"
              },
              {
                "begin": 13,
                "end": 16,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 8,
                "end": 11,
                "name": "DUP2"
              },
              {
                "begin": 5,
                "end": 17,
                "name": "LT"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "ISZERO"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "PUSH [tag]",
                "value": "2"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "tag",
                "value": "2"
              },
              {
                "begin": 2,
                "end": 4,
                "name": "JUMPDEST"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP2"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "ADD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "MLOAD"
              },
              {
                "begin": 19,
                "end": 30,
                "name": "PUSH",
                "value": "100000000"
              },
              {
                "begin": 14,
                "end": 17,
                "name": "DUP2"
              },
              {
                "begin": 11,
                "end": 31,
                "name": "GT"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "ISZERO"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "PUSH [tag]",
                "value": "3"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "JUMPI"
              },
              {
                "begin": 44,
                "end": 45,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 41,
                "end": 42,
                "name": "DUP1"
              },
              {
                "begin": 34,
                "end": 46,
                "name": "REVERT"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "tag",
                "value": "3"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "JUMPDEST"
              },
              {
                "begin": 62,
                "end": 83,
                "name": "DUP3"
              },
              {
                "begin": 62,
                "end": 83,
                "name": "ADD"
              },
              {
                "begin": 123,
                "end": 127,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 114,
                "end": 128,
                "name": "DUP2"
              },
              {
                "begin": 114,
                "end": 128,
                "name": "ADD"
              },
              {
                "begin": 138,
                "end": 169,
                "name": "DUP5"
              },
              {
                "begin": 138,
                "end": 169,
                "name": "DUP2"
              },
              {
                "begin": 138,
                "end": 169,
                "name": "GT"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "ISZERO"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "PUSH [tag]",
                "value": "4"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "JUMPI"
              },
              {
                "begin": 182,
                "end": 183,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 179,
                "end": 180,
                "name": "DUP1"
              },
              {
                "begin": 172,
                "end": 184,
                "name": "REVERT"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "tag",
                "value": "4"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "JUMPDEST"
              },
              {
                "begin": 213,
                "end": 223,
                "name": "DUP2"
              },
              {
                "begin": 213,
                "end": 223,
                "name": "MLOAD"
              },
              {
                "begin": 261,
                "end": 272,
                "name": "PUSH",
                "value": "100000000"
              },
              {
                "begin": 244,
                "end": 273,
                "name": "DUP2"
              },
              {
                "begin": 244,
                "end": 273,
                "name": "GT"
              },
              {
                "begin": 285,
                "end": 328,
                "name": "DUP3"
              },
              {
                "begin": 285,
                "end": 328,
                "name": "DUP3"
              },
              {
                "begin": 285,
                "end": 328,
                "name": "ADD"
              },
              {
                "begin": 282,
                "end": 340,
                "name": "DUP8"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "LT"
              },
              {
                "begin": 233,
                "end": 348,
                "name": "OR"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "ISZERO"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "PUSH [tag]",
                "value": "5"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "JUMPI"
              },
              {
                "begin": 361,
                "end": 362,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 358,
                "end": 359,
                "name": "DUP1"
              },
              {
                "begin": 351,
                "end": 363,
                "name": "REVERT"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "tag",
                "value": "5"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "JUMPDEST"
              },
              {
                "begin": 0,
                "end": 372,
                "name": "POP"
              },
              {
                "begin": 0,
                "end": 372,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP3"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP2"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "ADD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "MLOAD"
              },
              {
                "begin": 19,
                "end": 30,
                "name": "PUSH",
                "value": "100000000"
              },
              {
                "begin": 14,
                "end": 17,
                "name": "DUP2"
              },
              {
                "begin": 11,
                "end": 31,
                "name": "GT"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "ISZERO"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "PUSH [tag]",
                "value": "6"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "JUMPI"
              },
              {
                "begin": 44,
                "end": 45,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 41,
                "end": 42,
                "name": "DUP1"
              },
              {
                "begin": 34,
                "end": 46,
                "name": "REVERT"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "tag",
                "value": "6"
              },
              {
                "begin": 8,
                "end": 10,
                "name": "JUMPDEST"
              },
              {
                "begin": 62,
                "end": 83,
                "name": "DUP3"
              },
              {
                "begin": 62,
                "end": 83,
                "name": "ADD"
              },
              {
                "begin": 123,
                "end": 127,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 114,
                "end": 128,
                "name": "DUP2"
              },
              {
                "begin": 114,
                "end": 128,
                "name": "ADD"
              },
              {
                "begin": 138,
                "end": 169,
                "name": "DUP5"
              },
              {
                "begin": 138,
                "end": 169,
                "name": "DUP2"
              },
              {
                "begin": 138,
                "end": 169,
                "name": "GT"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "ISZERO"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "PUSH [tag]",
                "value": "7"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "JUMPI"
              },
              {
                "begin": 182,
                "end": 183,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 179,
                "end": 180,
                "name": "DUP1"
              },
              {
                "begin": 172,
                "end": 184,
                "name": "REVERT"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "tag",
                "value": "7"
              },
              {
                "begin": 135,
                "end": 137,
                "name": "JUMPDEST"
              },
              {
                "begin": 213,
                "end": 223,
                "name": "DUP2"
              },
              {
                "begin": 213,
                "end": 223,
                "name": "MLOAD"
              },
              {
                "begin": 261,
                "end": 272,
                "name": "PUSH",
                "value": "100000000"
              },
              {
                "begin": 244,
                "end": 273,
                "name": "DUP2"
              },
              {
                "begin": 244,
                "end": 273,
                "name": "GT"
              },
              {
                "begin": 285,
                "end": 328,
                "name": "DUP3"
              },
              {
                "begin": 285,
                "end": 328,
                "name": "DUP3"
              },
              {
                "begin": 285,
                "end": 328,
                "name": "ADD"
              },
              {
                "begin": 282,
                "end": 340,
                "name": "DUP8"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "LT"
              },
              {
                "begin": 233,
                "end": 348,
                "name": "OR"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "ISZERO"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "PUSH [tag]",
                "value": "8"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "JUMPI"
              },
              {
                "begin": 361,
                "end": 362,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 358,
                "end": 359,
                "name": "DUP1"
              },
              {
                "begin": 351,
                "end": 363,
                "name": "REVERT"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "tag",
                "value": "8"
              },
              {
                "begin": 230,
                "end": 232,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP4"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "ADD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "MLOAD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP1"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP4"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "ADD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "MLOAD"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "DUP7"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "MLOAD"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP3"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP6"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP3"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP4"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP3"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP2"
              },
              {
                "begin": 1168,
                "end": 1172,
                "name": "DUP7"
              },
              {
                "begin": 1168,
                "end": 1172,
                "name": "SWAP2"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP7"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP2"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "DUP7"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "SWAP2"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "PUSH [tag]",
                "value": "16"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "SWAP2"
              },
              {
                "begin": 493,
                "end": 498,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 493,
                "end": 498,
                "name": "SWAP2"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "DUP7"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "ADD"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "SWAP1"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "PUSH [tag]",
                "value": "17"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "tag",
                "value": "16"
              },
              {
                "begin": 493,
                "end": 505,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "DUP2"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "MLOAD"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "PUSH [tag]",
                "value": "18"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "SWAP1"
              },
              {
                "begin": 515,
                "end": 522,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 515,
                "end": 522,
                "name": "SWAP1"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "DUP6"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "ADD"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "SWAP1"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "PUSH [tag]",
                "value": "17"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "tag",
                "value": "18"
              },
              {
                "begin": 515,
                "end": 531,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 541,
                "end": 550,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "DUP1"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "AND"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP3"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP1"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP3"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "AND"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP2"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP1"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP2"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "OR"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SWAP1"
              },
              {
                "begin": 541,
                "end": 561,
                "name": "SSTORE"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH [tag]",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SWAP1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 285,
                "end": 295,
                "name": "CALLER"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH [tag]",
                "value": "21"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SWAP1"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "DUP2"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SHL"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SWAP1"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SHR"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "tag",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMPDEST"
              },
              {
                "begin": 256,
                "end": 257,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 250,
                "end": 253,
                "name": "DUP2"
              },
              {
                "begin": 250,
                "end": 257,
                "name": "GT"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "PUSH [tag]",
                "value": "23"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "JUMPI"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "DUP1"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "REVERT"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "tag",
                "value": "23"
              },
              {
                "begin": 242,
                "end": 258,
                "name": "JUMPDEST"
              },
              {
                "begin": 268,
                "end": 272,
                "name": "PUSH",
                "value": "7"
              },
              {
                "begin": 268,
                "end": 278,
                "name": "SSTORE"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "PUSH [tag]",
                "value": "25"
              },
              {
                "begin": 285,
                "end": 295,
                "name": "CALLER"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH [tag]",
                "value": "26"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SWAP1"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "DUP2"
              },
              {
                "begin": 274,
                "end": 284,
                "name": "SHL"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SWAP1"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "SHR"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "tag",
                "value": "25"
              },
              {
                "begin": 274,
                "end": 296,
                "name": "JUMPDEST"
              },
              {
                "begin": 338,
                "end": 345,
                "name": "PUSH",
                "value": "9"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "DUP1"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "AND"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "SWAP1"
              },
              {
                "begin": 338,
                "end": 353,
                "name": "SSTORE"
              },
              {
                "begin": 1258,
                "end": 1285,
                "name": "PUSH [tag]",
                "value": "29"
              },
              {
                "begin": 1264,
                "end": 1274,
                "name": "CALLER"
              },
              {
                "begin": 1276,
                "end": 1284,
                "name": "PUSH",
                "value": "11C9A62D04ED0C800000"
              },
              {
                "begin": 1258,
                "end": 1263,
                "name": "PUSH [tag]",
                "value": "30"
              },
              {
                "begin": 1258,
                "end": 1263,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 1258,
                "end": 1263,
                "name": "SWAP1"
              },
              {
                "begin": 1258,
                "end": 1263,
                "name": "DUP2"
              },
              {
                "begin": 1258,
                "end": 1263,
                "name": "SHL"
              },
              {
                "begin": 1258,
                "end": 1285,
                "name": "SWAP1"
              },
              {
                "begin": 1258,
                "end": 1285,
                "name": "SHR"
              },
              {
                "begin": 1258,
                "end": 1285,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 1258,
                "end": 1285,
                "name": "tag",
                "value": "29"
              },
              {
                "begin": 1258,
                "end": 1285,
                "name": "JUMPDEST"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "POP"
              },
              {
                "begin": 990,
                "end": 1292,
                "name": "POP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "31"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "tag",
                "value": "21"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMPDEST"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH [tag]",
                "value": "33"
              },
              {
                "begin": 753,
                "end": 760,
                "name": "DUP2"
              },
              {
                "begin": 740,
                "end": 748,
                "name": "PUSH",
                "value": "6"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "34"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SHL"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "18446744073709551898"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "OR"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP2"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SHR"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "tag",
                "value": "33"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMPDEST"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "MLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "DUP3"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "AND"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "LOG2"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "POP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "tag",
                "value": "26"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMPDEST"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH [tag]",
                "value": "36"
              },
              {
                "begin": 753,
                "end": 760,
                "name": "DUP2"
              },
              {
                "begin": 740,
                "end": 748,
                "name": "PUSH",
                "value": "8"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "34"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SHL"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "PUSH [tag]",
                "value": "18446744073709551898"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "OR"
              },
              {
                "begin": 740,
                "end": 752,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP2"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SWAP1"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "SHR"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "tag",
                "value": "36"
              },
              {
                "begin": 740,
                "end": 761,
                "name": "JUMPDEST"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "MLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "DUP3"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "AND"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "SWAP1"
              },
              {
                "begin": 776,
                "end": 796,
                "name": "LOG2"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "POP"
              },
              {
                "begin": 684,
                "end": 803,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 432,
                "end": 583,
                "name": "tag",
                "value": "30"
              },
              {
                "begin": 432,
                "end": 583,
                "name": "JUMPDEST"
              },
              {
                "begin": 534,
                "end": 538,
                "name": "PUSH",
                "value": "7"
              },
              {
                "begin": 534,
                "end": 538,
                "name": "SLOAD"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "PUSH [tag]",
                "value": "38"
              },
              {
                "begin": 524,
                "end": 529,
                "name": "DUP3"
              },
              {
                "begin": 506,
                "end": 519,
                "name": "PUSH [tag]",
                "value": "39"
              },
              {
                "begin": 506,
                "end": 517,
                "name": "PUSH [tag]",
                "value": "40"
              },
              {
                "begin": 506,
                "end": 517,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 506,
                "end": 517,
                "name": "SHL"
              },
              {
                "begin": 506,
                "end": 519,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 506,
                "end": 519,
                "name": "SHR"
              },
              {
                "begin": 506,
                "end": 519,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 506,
                "end": 519,
                "name": "tag",
                "value": "39"
              },
              {
                "begin": 506,
                "end": 519,
                "name": "JUMPDEST"
              },
              {
                "begin": 506,
                "end": 523,
                "name": "PUSH [tag]",
                "value": "41"
              },
              {
                "begin": 506,
                "end": 523,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 506,
                "end": 523,
                "name": "SHL"
              },
              {
                "begin": 506,
                "end": 523,
                "name": "PUSH [tag]",
                "value": "18446744073709551809"
              },
              {
                "begin": 506,
                "end": 523,
                "name": "OR"
              },
              {
                "begin": 506,
                "end": 523,
                "name": "SWAP1"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "SWAP2"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "SWAP1"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "SHR"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "tag",
                "value": "38"
              },
              {
                "begin": 506,
                "end": 530,
                "name": "JUMPDEST"
              },
              {
                "begin": 506,
                "end": 538,
                "name": "GT"
              },
              {
                "begin": 506,
                "end": 538,
                "name": "ISZERO"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "PUSH [tag]",
                "value": "42"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "JUMPI"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "DUP1"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "REVERT"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "tag",
                "value": "42"
              },
              {
                "begin": 498,
                "end": 539,
                "name": "JUMPDEST"
              },
              {
                "begin": 549,
                "end": 576,
                "name": "PUSH [tag]",
                "value": "43"
              },
              {
                "begin": 561,
                "end": 568,
                "name": "DUP3"
              },
              {
                "begin": 570,
                "end": 575,
                "name": "DUP3"
              },
              {
                "begin": 549,
                "end": 560,
                "name": "PUSH [tag]",
                "value": "44"
              },
              {
                "begin": 549,
                "end": 560,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 549,
                "end": 560,
                "name": "SHL"
              },
              {
                "begin": 549,
                "end": 560,
                "name": "PUSH [tag]",
                "value": "18446744073709551888"
              },
              {
                "begin": 549,
                "end": 560,
                "name": "OR"
              },
              {
                "begin": 549,
                "end": 576,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 549,
                "end": 576,
                "name": "SHR"
              },
              {
                "begin": 549,
                "end": 576,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 549,
                "end": 576,
                "name": "tag",
                "value": "43"
              },
              {
                "begin": 549,
                "end": 576,
                "name": "JUMPDEST"
              },
              {
                "begin": 432,
                "end": 583,
                "name": "POP"
              },
              {
                "begin": 432,
                "end": 583,
                "name": "POP"
              },
              {
                "begin": 432,
                "end": 583,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "tag",
                "value": "34"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "DUP2"
              },
              {
                "begin": 335,
                "end": 356,
                "name": "AND"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH [tag]",
                "value": "46"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPI"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "DUP1"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "REVERT"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "tag",
                "value": "46"
              },
              {
                "begin": 327,
                "end": 357,
                "name": "JUMPDEST"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH [tag]",
                "value": "47"
              },
              {
                "begin": 380,
                "end": 384,
                "name": "DUP3"
              },
              {
                "begin": 386,
                "end": 393,
                "name": "DUP3"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH [tag]",
                "value": "48"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 379,
                "name": "SHL"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "SHR"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "tag",
                "value": "47"
              },
              {
                "begin": 376,
                "end": 394,
                "name": "JUMPDEST"
              },
              {
                "begin": 375,
                "end": 394,
                "name": "ISZERO"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH [tag]",
                "value": "49"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPI"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "DUP1"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "REVERT"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "tag",
                "value": "49"
              },
              {
                "begin": 367,
                "end": 395,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "AND"
              },
              {
                "begin": 406,
                "end": 417,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "DUP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP2"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "MSTORE"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 426,
                "name": "KECCAK256"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "DUP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "AND"
              },
              {
                "begin": 429,
                "end": 433,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "OR"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SWAP1"
              },
              {
                "begin": 406,
                "end": 433,
                "name": "SSTORE"
              },
              {
                "begin": 259,
                "end": 440,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 907,
                "end": 996,
                "name": "tag",
                "value": "40"
              },
              {
                "begin": 907,
                "end": 996,
                "name": "JUMPDEST"
              },
              {
                "begin": 977,
                "end": 989,
                "name": "PUSH",
                "value": "5"
              },
              {
                "begin": 977,
                "end": 989,
                "name": "SLOAD"
              },
              {
                "begin": 907,
                "end": 996,
                "name": "tag",
                "value": "50"
              },
              {
                "begin": 907,
                "end": 996,
                "name": "JUMPDEST"
              },
              {
                "begin": 907,
                "end": 996,
                "name": "SWAP1"
              },
              {
                "begin": 907,
                "end": 996,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 1439,
                "end": 1584,
                "name": "tag",
                "value": "41"
              },
              {
                "begin": 1439,
                "end": 1584,
                "name": "JUMPDEST"
              },
              {
                "begin": 1497,
                "end": 1504,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 1528,
                "end": 1533,
                "name": "DUP3"
              },
              {
                "begin": 1528,
                "end": 1533,
                "name": "DUP3"
              },
              {
                "begin": 1528,
                "end": 1533,
                "name": "ADD"
              },
              {
                "begin": 1551,
                "end": 1557,
                "name": "DUP4"
              },
              {
                "begin": 1551,
                "end": 1557,
                "name": "DUP2"
              },
              {
                "begin": 1551,
                "end": 1557,
                "name": "LT"
              },
              {
                "begin": 1551,
                "end": 1557,
                "name": "ISZERO"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "PUSH [tag]",
                "value": "52"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "JUMPI"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "DUP1"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "REVERT"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "tag",
                "value": "52"
              },
              {
                "begin": 1543,
                "end": 1558,
                "name": "JUMPDEST"
              },
              {
                "begin": 1576,
                "end": 1577,
                "name": "SWAP4"
              },
              {
                "begin": 1439,
                "end": 1584,
                "name": "SWAP3"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 1439,
                "end": 1584,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 5805,
                "end": 6068,
                "name": "tag",
                "value": "44"
              },
              {
                "begin": 5805,
                "end": 6068,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 5879,
                "end": 5900,
                "name": "DUP3"
              },
              {
                "begin": 5879,
                "end": 5900,
                "name": "AND"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "PUSH [tag]",
                "value": "54"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "JUMPI"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "DUP1"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "REVERT"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "tag",
                "value": "54"
              },
              {
                "begin": 5871,
                "end": 5901,
                "name": "JUMPDEST"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "PUSH [tag]",
                "value": "55"
              },
              {
                "begin": 5944,
                "end": 5949,
                "name": "DUP2"
              },
              {
                "begin": 5927,
                "end": 5939,
                "name": "PUSH",
                "value": "5"
              },
              {
                "begin": 5927,
                "end": 5939,
                "name": "SLOAD"
              },
              {
                "begin": 5927,
                "end": 5943,
                "name": "PUSH [tag]",
                "value": "41"
              },
              {
                "begin": 5927,
                "end": 5943,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 5927,
                "end": 5943,
                "name": "SHL"
              },
              {
                "begin": 5927,
                "end": 5943,
                "name": "PUSH [tag]",
                "value": "18446744073709551809"
              },
              {
                "begin": 5927,
                "end": 5943,
                "name": "OR"
              },
              {
                "begin": 5927,
                "end": 5943,
                "name": "SWAP1"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "SWAP2"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "SWAP1"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "SHR"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "tag",
                "value": "55"
              },
              {
                "begin": 5927,
                "end": 5950,
                "name": "JUMPDEST"
              },
              {
                "begin": 5912,
                "end": 5924,
                "name": "PUSH",
                "value": "5"
              },
              {
                "begin": 5912,
                "end": 5950,
                "name": "SSTORE"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "DUP3"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "AND"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "SWAP1"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "DUP2"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "MSTORE"
              },
              {
                "begin": 5981,
                "end": 5990,
                "name": "PUSH",
                "value": "3"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "SWAP1"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "DUP2"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "MSTORE"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "SWAP1"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "SWAP2"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "KECCAK256"
              },
              {
                "begin": 5981,
                "end": 5999,
                "name": "SLOAD"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "PUSH [tag]",
                "value": "56"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "SWAP2"
              },
              {
                "begin": 6004,
                "end": 6009,
                "name": "DUP4"
              },
              {
                "begin": 6004,
                "end": 6009,
                "name": "SWAP1"
              },
              {
                "begin": 5981,
                "end": 6003,
                "name": "PUSH [tag]",
                "value": "18446744073709551809"
              },
              {
                "begin": 5981,
                "end": 6003,
                "name": "PUSH [tag]",
                "value": "41"
              },
              {
                "begin": 5981,
                "end": 6003,
                "name": "DUP3"
              },
              {
                "begin": 5981,
                "end": 6003,
                "name": "SHL"
              },
              {
                "begin": 5981,
                "end": 6003,
                "name": "OR"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "SWAP1"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "SHR"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "tag",
                "value": "56"
              },
              {
                "begin": 5981,
                "end": 6010,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "DUP4"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "AND"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "DUP2"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "DUP2"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "MSTORE"
              },
              {
                "begin": 5960,
                "end": 5969,
                "name": "PUSH",
                "value": "3"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "SWAP1"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "DUP2"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "MSTORE"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "DUP1"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "DUP4"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "KECCAK256"
              },
              {
                "begin": 5960,
                "end": 6010,
                "name": "SWAP5"
              },
              {
                "begin": 5960,
                "end": 6010,
                "name": "SWAP1"
              },
              {
                "begin": 5960,
                "end": 6010,
                "name": "SWAP5"
              },
              {
                "begin": 5960,
                "end": 6010,
                "name": "SSTORE"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "DUP4"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "MLOAD"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "DUP6"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "DUP2"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "MSTORE"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SWAP4"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "MLOAD"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "SWAP3"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "SWAP4"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "SWAP2"
              },
              {
                "begin": 5960,
                "end": 5978,
                "name": "SWAP3"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "PUSH",
                "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SWAP3"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "DUP2"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SWAP1"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SUB"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SWAP1"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SWAP2"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "ADD"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "SWAP1"
              },
              {
                "begin": 6025,
                "end": 6061,
                "name": "LOG3"
              },
              {
                "begin": 5805,
                "end": 6068,
                "name": "POP"
              },
              {
                "begin": 5805,
                "end": 6068,
                "name": "POP"
              },
              {
                "begin": 5805,
                "end": 6068,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "tag",
                "value": "48"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMPDEST"
              },
              {
                "begin": 858,
                "end": 862,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "DUP3"
              },
              {
                "begin": 882,
                "end": 903,
                "name": "AND"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH [tag]",
                "value": "58"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPI"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "DUP1"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "REVERT"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "tag",
                "value": "58"
              },
              {
                "begin": 874,
                "end": 904,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 932,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "DUP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP2"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "MSTORE"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "KECCAK256"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SLOAD"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "AND"
              },
              {
                "begin": 921,
                "end": 941,
                "name": "SWAP1"
              },
              {
                "begin": 786,
                "end": 948,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "17"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SLOAD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "AND"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ISZERO"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "100"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "MUL"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SUB"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "AND"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DIV"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "MSTORE"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "KECCAK256"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1F"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DIV"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1F"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "LT"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "60"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPI"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "MLOAD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "NOT"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "AND"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP4"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "OR"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP6"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SSTORE"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "62"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "60"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP6"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SSTORE"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ISZERO"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "62"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPI"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "61"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "GT"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ISZERO"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "62"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPI"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "MLOAD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SSTORE"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "61"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "62"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "63"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "64"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "63"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "POP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "64"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "50"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SWAP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "66"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP3"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "GT"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ISZERO"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "63"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPI"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP2"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "SSTORE"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "ADD"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [tag]",
                "value": "66"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMP"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "tag",
                "value": "31"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "JUMPDEST"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "DUP1"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "CODECOPY"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 636,
                "end": 3926,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a72305820c1565d949495e22cc8bf49d90d4520bcf2e7403a2c97408a881a2f45338f038e0029",
                ".code": [
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "POP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "LT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "SHR"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "6EF8D66D"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "32"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "983B2D56"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "AA271E1A"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "34"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "AA271E1A"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "28"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "B5B80F12"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "29"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "EF78D4FD"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "34"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "983B2D56"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "24"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "98650275"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "A457C2D7"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "26"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "27"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "7FD30DF0"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "7FD30DF0"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "82DC1EC4"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "8456CB59"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "95D89B41"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "6EF8D66D"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "79CC6790"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "32"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "42966C68"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "42966C68"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "46FBF68E"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "5A2BCC18"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "5C975ABB"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "37"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "39509351"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "3F4BA83A"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "40C10F19"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "36"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "1EFE9395"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "GT"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "38"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "1EFE9395"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "313CE567"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "355274EA"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMP"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "38"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "6FDDE03"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "EQ"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "DUP1"
                  },
                  {
                    "begin": 636,
                    "end": 3926,
                    "name": "REVERT"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH [tag]",
                    "value": "39"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH [tag]",
                    "value": "40"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "tag",
                    "value": "39"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP3"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "ADD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "ADD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP6"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "ADD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "tag",
                    "value": "41"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 33,
                    "end": 36,
                    "name": "DUP4"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "DUP2"
                  },
                  {
                    "begin": 27,
                    "end": 37,
                    "name": "LT"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 90,
                    "end": 101,
                    "name": "DUP2"
                  },
                  {
                    "begin": 90,
                    "end": 101,
                    "name": "DUP2"
                  },
                  {
                    "begin": 90,
                    "end": 101,
                    "name": "ADD"
                  },
                  {
                    "begin": 84,
                    "end": 102,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 71,
                    "end": 82,
                    "name": "DUP4"
                  },
                  {
                    "begin": 71,
                    "end": 82,
                    "name": "DUP3"
                  },
                  {
                    "begin": 71,
                    "end": 82,
                    "name": "ADD"
                  },
                  {
                    "begin": 64,
                    "end": 103,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 52,
                    "end": 54,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 45,
                    "end": 55,
                    "name": "ADD"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "tag",
                    "value": "43"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12,
                    "end": 26,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "ADD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "AND"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP3"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SUB"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP4"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SUB"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "EXP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SUB"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "NOT"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "AND"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "ADD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "tag",
                    "value": "44"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "DUP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SUB"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "RETURN"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "46"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "46"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP2"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "AND"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ADD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH [tag]",
                    "value": "47"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "tag",
                    "value": "45"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP3"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "DUP2"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SUB"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "ADD"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "RETURN"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "48"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "DUP2"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "ADD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "RETURN"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "PUSH [tag]",
                    "value": "51"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP1"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "53"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "53"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "AND"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "DUP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "ADD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "AND"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "ADD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "tag",
                    "value": "55"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "DUP1"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "AND"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "DUP3"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "DUP2"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SUB"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "ADD"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "RETURN"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "DUP1"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "60"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "DUP2"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "AND"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "ADD"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "PUSH [tag]",
                    "value": "61"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "PUSH [tag]",
                    "value": "63"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "tag",
                    "value": "62"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "STOP"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "65"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "65"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "AND"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "ADD"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "PUSH [tag]",
                    "value": "66"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "68"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "PUSH [tag]",
                    "value": "69"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "DUP1"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "71"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "71"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "AND"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "PUSH [tag]",
                    "value": "74"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "PUSH [tag]",
                    "value": "76"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "78"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "80"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "80"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "AND"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "PUSH [tag]",
                    "value": "81"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "83"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "83"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "AND"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "ADD"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "PUSH [tag]",
                    "value": "84"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "tag",
                    "value": "20"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "86"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "86"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 21,
                    "end": 32,
                    "name": "PUSH",
                    "value": "100000000"
                  },
                  {
                    "begin": 5,
                    "end": 33,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 33,
                    "name": "GT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "87"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 46,
                    "end": 47,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 43,
                    "end": 44,
                    "name": "DUP1"
                  },
                  {
                    "begin": 36,
                    "end": 48,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "87"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 35,
                    "end": 44,
                    "name": "DUP4"
                  },
                  {
                    "begin": 28,
                    "end": 32,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 12,
                    "end": 26,
                    "name": "DUP3"
                  },
                  {
                    "begin": 8,
                    "end": 33,
                    "name": "ADD"
                  },
                  {
                    "begin": 5,
                    "end": 45,
                    "name": "GT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "88"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 58,
                    "end": 59,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 55,
                    "end": 56,
                    "name": "DUP1"
                  },
                  {
                    "begin": 48,
                    "end": 60,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "88"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 101,
                    "end": 110,
                    "name": "DUP5"
                  },
                  {
                    "begin": 95,
                    "end": 97,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 81,
                    "end": 93,
                    "name": "DUP4"
                  },
                  {
                    "begin": 77,
                    "end": 98,
                    "name": "MUL"
                  },
                  {
                    "begin": 67,
                    "end": 75,
                    "name": "DUP5"
                  },
                  {
                    "begin": 63,
                    "end": 99,
                    "name": "ADD"
                  },
                  {
                    "begin": 60,
                    "end": 111,
                    "name": "GT"
                  },
                  {
                    "begin": 39,
                    "end": 50,
                    "name": "PUSH",
                    "value": "100000000"
                  },
                  {
                    "begin": 25,
                    "end": 37,
                    "name": "DUP4"
                  },
                  {
                    "begin": 22,
                    "end": 51,
                    "name": "GT"
                  },
                  {
                    "begin": 11,
                    "end": 119,
                    "name": "OR"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "PUSH [tag]",
                    "value": "89"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 132,
                    "end": 133,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 129,
                    "end": 130,
                    "name": "DUP1"
                  },
                  {
                    "begin": 122,
                    "end": 134,
                    "name": "REVERT"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "tag",
                    "value": "89"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 21,
                    "end": 32,
                    "name": "PUSH",
                    "value": "100000000"
                  },
                  {
                    "begin": 5,
                    "end": 33,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 33,
                    "name": "GT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "90"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 46,
                    "end": 47,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 43,
                    "end": 44,
                    "name": "DUP1"
                  },
                  {
                    "begin": 36,
                    "end": 48,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "90"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 35,
                    "end": 44,
                    "name": "DUP4"
                  },
                  {
                    "begin": 28,
                    "end": 32,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 12,
                    "end": 26,
                    "name": "DUP3"
                  },
                  {
                    "begin": 8,
                    "end": 33,
                    "name": "ADD"
                  },
                  {
                    "begin": 5,
                    "end": 45,
                    "name": "GT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "91"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 58,
                    "end": 59,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 55,
                    "end": 56,
                    "name": "DUP1"
                  },
                  {
                    "begin": 48,
                    "end": 60,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "91"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "ADD"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 101,
                    "end": 110,
                    "name": "DUP5"
                  },
                  {
                    "begin": 95,
                    "end": 97,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 81,
                    "end": 93,
                    "name": "DUP4"
                  },
                  {
                    "begin": 77,
                    "end": 98,
                    "name": "MUL"
                  },
                  {
                    "begin": 67,
                    "end": 75,
                    "name": "DUP5"
                  },
                  {
                    "begin": 63,
                    "end": 99,
                    "name": "ADD"
                  },
                  {
                    "begin": 60,
                    "end": 111,
                    "name": "GT"
                  },
                  {
                    "begin": 39,
                    "end": 50,
                    "name": "PUSH",
                    "value": "100000000"
                  },
                  {
                    "begin": 25,
                    "end": 37,
                    "name": "DUP4"
                  },
                  {
                    "begin": 22,
                    "end": 51,
                    "name": "GT"
                  },
                  {
                    "begin": 11,
                    "end": 119,
                    "name": "OR"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "PUSH [tag]",
                    "value": "92"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 132,
                    "end": 133,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 129,
                    "end": 130,
                    "name": "DUP1"
                  },
                  {
                    "begin": 122,
                    "end": 134,
                    "name": "REVERT"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "tag",
                    "value": "92"
                  },
                  {
                    "begin": 8,
                    "end": 10,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "PUSH [tag]",
                    "value": "93"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "DUP1"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "95"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "95"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "AND"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "96"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "tag",
                    "value": "22"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "PUSH [tag]",
                    "value": "98"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "tag",
                    "value": "23"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "PUSH [tag]",
                    "value": "39"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "PUSH [tag]",
                    "value": "100"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "24"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "DUP1"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "106"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "106"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "AND"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "PUSH [tag]",
                    "value": "107"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "PUSH [tag]",
                    "value": "109"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "tag",
                    "value": "26"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "DUP1"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "111"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "DUP2"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "AND"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "ADD"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "PUSH [tag]",
                    "value": "112"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "tag",
                    "value": "27"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "DUP1"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "114"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "114"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "DUP2"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "AND"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "ADD"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "PUSH [tag]",
                    "value": "115"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "28"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "45"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "DUP1"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "117"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "117"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "AND"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "tag",
                    "value": "29"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "PUSH [tag]",
                    "value": "120"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SUB"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "122"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "122"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "ADD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "AND"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "PUSH [tag]",
                    "value": "123"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "tag",
                    "value": "31"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "PUSH [tag]",
                    "value": "125"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "tag",
                    "value": "40"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 697,
                    "end": 702,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP9"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "AND"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MUL"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP6"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "AND"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DIV"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP5"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DIV"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MUL"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 665,
                    "end": 678,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 665,
                    "end": 678,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 697,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 697,
                    "end": 702,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP4"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 697,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH [tag]",
                    "value": "127"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "LT"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH [tag]",
                    "value": "128"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP4"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DIV"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MUL"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP4"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH [tag]",
                    "value": "127"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMP"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "tag",
                    "value": "128"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "tag",
                    "value": "129"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP4"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "GT"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH [tag]",
                    "value": "129"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SUB"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "AND"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "DUP3"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "ADD"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "tag",
                    "value": "127"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "POP"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "POP"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "POP"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "POP"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "POP"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 690,
                    "end": 702,
                    "name": "POP"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 628,
                    "end": 709,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "tag",
                    "value": "47"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 581,
                    "end": 585,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 581,
                    "end": 585,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "131"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "131"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "PUSH [tag]",
                    "value": "133"
                  },
                  {
                    "begin": 618,
                    "end": 625,
                    "name": "DUP4"
                  },
                  {
                    "begin": 627,
                    "end": 632,
                    "name": "DUP4"
                  },
                  {
                    "begin": 604,
                    "end": 617,
                    "name": "PUSH [tag]",
                    "value": "134"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "tag",
                    "value": "133"
                  },
                  {
                    "begin": 604,
                    "end": 633,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 597,
                    "end": 633,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 502,
                    "end": 640,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "tag",
                    "value": "49"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 977,
                    "end": 989,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 996,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "tag",
                    "value": "51"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3430,
                    "end": 3444,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 3430,
                    "end": 3444,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3356,
                    "end": 3451,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "tag",
                    "value": "54"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 431,
                    "end": 435,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 431,
                    "end": 435,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "138"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "138"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "PUSH [tag]",
                    "value": "140"
                  },
                  {
                    "begin": 473,
                    "end": 477,
                    "name": "DUP5"
                  },
                  {
                    "begin": 479,
                    "end": 481,
                    "name": "DUP5"
                  },
                  {
                    "begin": 483,
                    "end": 488,
                    "name": "DUP5"
                  },
                  {
                    "begin": 454,
                    "end": 472,
                    "name": "PUSH [tag]",
                    "value": "141"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "tag",
                    "value": "140"
                  },
                  {
                    "begin": 454,
                    "end": 489,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 447,
                    "end": 489,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "SWAP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 338,
                    "end": 496,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "tag",
                    "value": "56"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 995,
                    "end": 1004,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 995,
                    "end": 1004,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 995,
                    "end": 1004,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 995,
                    "end": 1004,
                    "name": "AND"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 930,
                    "end": 1011,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "tag",
                    "value": "58"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 415,
                    "end": 419,
                    "name": "PUSH",
                    "value": "7"
                  },
                  {
                    "begin": 415,
                    "end": 419,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 353,
                    "end": 426,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "tag",
                    "value": "61"
                  },
                  {
                    "begin": 646,
                    "end": 819,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 737,
                    "end": 749,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 737,
                    "end": 749,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "145"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "145"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 768,
                    "end": 812,
                    "name": "PUSH [tag]",
                    "value": "133"
                  },
                  {
                    "begin": 792,
                    "end": 799,
                    "name": "DUP4"
                  },
                  {
                    "begin": 801,
                    "end": 811,
                    "name": "DUP4"
                  },
                  {
                    "begin": 768,
                    "end": 791,
                    "name": "PUSH [tag]",
                    "value": "148"
                  },
                  {
                    "begin": 768,
                    "end": 812,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "tag",
                    "value": "63"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "150"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "150"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "151"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "151"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 846,
                    "end": 853,
                    "name": "AND"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "PUSH [tag]",
                    "value": "153"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "DUP1"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "REVERT"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "tag",
                    "value": "153"
                  },
                  {
                    "begin": 838,
                    "end": 854,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1220,
                    "end": 1227,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "AND"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1220,
                    "end": 1235,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1259,
                    "end": 1269,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SUB"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "ADD"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1250,
                    "end": 1270,
                    "name": "LOG1"
                  },
                  {
                    "begin": 1162,
                    "end": 1277,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "tag",
                    "value": "66"
                  },
                  {
                    "begin": 3513,
                    "end": 3659,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3595,
                    "end": 3599,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3595,
                    "end": 3599,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "156"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "156"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "158"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "158"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "tag",
                    "value": "69"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "162"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "162"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3781,
                    "end": 3798,
                    "name": "PUSH [tag]",
                    "value": "164"
                  },
                  {
                    "begin": 3792,
                    "end": 3797,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3781,
                    "end": 3791,
                    "name": "PUSH [tag]",
                    "value": "165"
                  },
                  {
                    "begin": 3781,
                    "end": 3798,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3781,
                    "end": 3798,
                    "name": "tag",
                    "value": "164"
                  },
                  {
                    "begin": 3781,
                    "end": 3798,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "POP"
                  },
                  {
                    "begin": 3721,
                    "end": 3805,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "72"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 450,
                    "end": 454,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH [tag]",
                    "value": "167"
                  },
                  {
                    "begin": 473,
                    "end": 481,
                    "name": "PUSH",
                    "value": "8"
                  },
                  {
                    "begin": 486,
                    "end": 493,
                    "name": "DUP4"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 473,
                    "end": 485,
                    "name": "PUSH [tag]",
                    "value": "168"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "AND"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "tag",
                    "value": "167"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 466,
                    "end": 494,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "tag",
                    "value": "74"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2676,
                    "end": 2687,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 2676,
                    "end": 2687,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2606,
                    "end": 2694,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "tag",
                    "value": "76"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 508,
                    "end": 515,
                    "name": "AND"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 446,
                    "end": 522,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "78"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "PUSH [tag]",
                    "value": "172"
                  },
                  {
                    "begin": 660,
                    "end": 670,
                    "name": "CALLER"
                  },
                  {
                    "begin": 646,
                    "end": 659,
                    "name": "PUSH [tag]",
                    "value": "173"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "tag",
                    "value": "172"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "tag",
                    "value": "81"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "AND"
                  },
                  {
                    "begin": 1263,
                    "end": 1270,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1298,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1289,
                    "end": 1305,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1208,
                    "end": 1312,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "tag",
                    "value": "84"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "176"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "176"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3889,
                    "end": 3916,
                    "name": "PUSH [tag]",
                    "value": "178"
                  },
                  {
                    "begin": 3904,
                    "end": 3908,
                    "name": "DUP3"
                  },
                  {
                    "begin": 3910,
                    "end": 3915,
                    "name": "DUP3"
                  },
                  {
                    "begin": 3889,
                    "end": 3903,
                    "name": "PUSH [tag]",
                    "value": "179"
                  },
                  {
                    "begin": 3889,
                    "end": 3916,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3889,
                    "end": 3916,
                    "name": "tag",
                    "value": "178"
                  },
                  {
                    "begin": 3889,
                    "end": 3916,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "POP"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "POP"
                  },
                  {
                    "begin": 3811,
                    "end": 3923,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "tag",
                    "value": "93"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2090,
                    "end": 2094,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2090,
                    "end": 2094,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "181"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "181"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "183"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "183"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "184"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "184"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2123,
                    "end": 2143,
                    "name": "DUP4"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "PUSH [tag]",
                    "value": "186"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "tag",
                    "value": "186"
                  },
                  {
                    "begin": 2115,
                    "end": 2144,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2162,
                    "end": 2195,
                    "name": "DUP4"
                  },
                  {
                    "begin": 2162,
                    "end": 2195,
                    "name": "DUP3"
                  },
                  {
                    "begin": 2162,
                    "end": 2195,
                    "name": "EQ"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "PUSH [tag]",
                    "value": "187"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "tag",
                    "value": "187"
                  },
                  {
                    "begin": 2154,
                    "end": 2196,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2211,
                    "end": 2220,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "tag",
                    "value": "188"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2226,
                    "end": 2246,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2226,
                    "end": 2246,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2226,
                    "end": 2246,
                    "name": "LT"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "PUSH [tag]",
                    "value": "189"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "PUSH [tag]",
                    "value": "191"
                  },
                  {
                    "begin": 2303,
                    "end": 2309,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2303,
                    "end": 2309,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2310,
                    "end": 2311,
                    "name": "DUP4"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "LT"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "PUSH [tag]",
                    "value": "192"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "INVALID"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "tag",
                    "value": "192"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "POP"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "MUL"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "ADD"
                  },
                  {
                    "begin": 2303,
                    "end": 2312,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2284,
                    "end": 2298,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 2284,
                    "end": 2298,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2284,
                    "end": 2302,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 2284,
                    "end": 2302,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "AND"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "tag",
                    "value": "191"
                  },
                  {
                    "begin": 2284,
                    "end": 2313,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2267,
                    "end": 2281,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 2267,
                    "end": 2313,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 2327,
                    "end": 2357,
                    "name": "PUSH [tag]",
                    "value": "194"
                  },
                  {
                    "begin": 2333,
                    "end": 2342,
                    "name": "DUP7"
                  },
                  {
                    "begin": 2333,
                    "end": 2342,
                    "name": "DUP7"
                  },
                  {
                    "begin": 2343,
                    "end": 2344,
                    "name": "DUP4"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "LT"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "PUSH [tag]",
                    "value": "195"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "INVALID"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "tag",
                    "value": "195"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "POP"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "MUL"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "ADD"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 2333,
                    "end": 2345,
                    "name": "AND"
                  },
                  {
                    "begin": 2347,
                    "end": 2353,
                    "name": "DUP6"
                  },
                  {
                    "begin": 2347,
                    "end": 2353,
                    "name": "DUP6"
                  },
                  {
                    "begin": 2354,
                    "end": 2355,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "LT"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "PUSH [tag]",
                    "value": "196"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "INVALID"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "tag",
                    "value": "196"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "POP"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "MUL"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "ADD"
                  },
                  {
                    "begin": 2347,
                    "end": 2356,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2327,
                    "end": 2332,
                    "name": "PUSH [tag]",
                    "value": "197"
                  },
                  {
                    "begin": 2327,
                    "end": 2357,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2327,
                    "end": 2357,
                    "name": "tag",
                    "value": "194"
                  },
                  {
                    "begin": 2327,
                    "end": 2357,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2248,
                    "end": 2251,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2248,
                    "end": 2251,
                    "name": "ADD"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "PUSH [tag]",
                    "value": "188"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "JUMP"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "tag",
                    "value": "189"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2207,
                    "end": 2368,
                    "name": "POP"
                  },
                  {
                    "begin": 2403,
                    "end": 2414,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 2403,
                    "end": 2414,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2385,
                    "end": 2399,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 2385,
                    "end": 2399,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2385,
                    "end": 2414,
                    "name": "GT"
                  },
                  {
                    "begin": 2385,
                    "end": 2414,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "PUSH [tag]",
                    "value": "198"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "DUP1"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "tag",
                    "value": "198"
                  },
                  {
                    "begin": 2377,
                    "end": 2415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2447,
                    "end": 2458,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 2447,
                    "end": 2458,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2429,
                    "end": 2443,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 2429,
                    "end": 2443,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2429,
                    "end": 2458,
                    "name": "EQ"
                  },
                  {
                    "begin": 2425,
                    "end": 2479,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2425,
                    "end": 2479,
                    "name": "PUSH [tag]",
                    "value": "199"
                  },
                  {
                    "begin": 2425,
                    "end": 2479,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2460,
                    "end": 2479,
                    "name": "PUSH [tag]",
                    "value": "200"
                  },
                  {
                    "begin": 2460,
                    "end": 2477,
                    "name": "PUSH [tag]",
                    "value": "201"
                  },
                  {
                    "begin": 2460,
                    "end": 2479,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2460,
                    "end": 2479,
                    "name": "tag",
                    "value": "200"
                  },
                  {
                    "begin": 2460,
                    "end": 2479,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2460,
                    "end": 2479,
                    "name": "POP"
                  },
                  {
                    "begin": 2425,
                    "end": 2479,
                    "name": "tag",
                    "value": "199"
                  },
                  {
                    "begin": 2425,
                    "end": 2479,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2497,
                    "end": 2501,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "POP"
                  },
                  {
                    "begin": 1972,
                    "end": 2508,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "96"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "203"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "203"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "204"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "204"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "PUSH [tag]",
                    "value": "164"
                  },
                  {
                    "begin": 582,
                    "end": 589,
                    "name": "DUP2"
                  },
                  {
                    "begin": 571,
                    "end": 581,
                    "name": "PUSH [tag]",
                    "value": "207"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "tag",
                    "value": "98"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "209"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "72"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "209"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "210"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "210"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "212"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "212"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1018,
                    "end": 1025,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "AND"
                  },
                  {
                    "begin": 1028,
                    "end": 1032,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "OR"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1018,
                    "end": 1032,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1054,
                    "end": 1064,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "PUSH",
                    "value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SUB"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "ADD"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1047,
                    "end": 1065,
                    "name": "LOG1"
                  },
                  {
                    "begin": 959,
                    "end": 1072,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "tag",
                    "value": "100"
                  },
                  {
                    "begin": 771,
                    "end": 856,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 842,
                    "end": 849,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP8"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP10"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "AND"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MUL"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ADD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP6"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "AND"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DIV"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP5"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ADD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DIV"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MUL"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP3"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ADD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ADD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP3"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 810,
                    "end": 823,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 810,
                    "end": 823,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 842,
                    "end": 849,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 842,
                    "end": 849,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP4"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ADD"
                  },
                  {
                    "begin": 842,
                    "end": 849,
                    "name": "DUP3"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP3"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH [tag]",
                    "value": "127"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "LT"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH [tag]",
                    "value": "128"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP1"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP4"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DIV"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MUL"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "DUP4"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "ADD"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "PUSH [tag]",
                    "value": "127"
                  },
                  {
                    "begin": 835,
                    "end": 849,
                    "name": "JUMP"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "tag",
                    "value": "107"
                  },
                  {
                    "begin": 507,
                    "end": 597,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "PUSH [tag]",
                    "value": "219"
                  },
                  {
                    "begin": 358,
                    "end": 368,
                    "name": "CALLER"
                  },
                  {
                    "begin": 349,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "118"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "tag",
                    "value": "219"
                  },
                  {
                    "begin": 349,
                    "end": 369,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH [tag]",
                    "value": "220"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "DUP1"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "REVERT"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "tag",
                    "value": "220"
                  },
                  {
                    "begin": 341,
                    "end": 370,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "PUSH [tag]",
                    "value": "164"
                  },
                  {
                    "begin": 582,
                    "end": 589,
                    "name": "DUP2"
                  },
                  {
                    "begin": 571,
                    "end": 581,
                    "name": "PUSH [tag]",
                    "value": "223"
                  },
                  {
                    "begin": 571,
                    "end": 590,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "tag",
                    "value": "109"
                  },
                  {
                    "begin": 603,
                    "end": 678,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "PUSH [tag]",
                    "value": "172"
                  },
                  {
                    "begin": 660,
                    "end": 670,
                    "name": "CALLER"
                  },
                  {
                    "begin": 646,
                    "end": 659,
                    "name": "PUSH [tag]",
                    "value": "226"
                  },
                  {
                    "begin": 646,
                    "end": 671,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "tag",
                    "value": "112"
                  },
                  {
                    "begin": 825,
                    "end": 1008,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 921,
                    "end": 933,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 921,
                    "end": 933,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "228"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "228"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 952,
                    "end": 1001,
                    "name": "PUSH [tag]",
                    "value": "133"
                  },
                  {
                    "begin": 976,
                    "end": 983,
                    "name": "DUP4"
                  },
                  {
                    "begin": 985,
                    "end": 1000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 952,
                    "end": 975,
                    "name": "PUSH [tag]",
                    "value": "231"
                  },
                  {
                    "begin": 952,
                    "end": 1001,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "tag",
                    "value": "115"
                  },
                  {
                    "begin": 202,
                    "end": 332,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 277,
                    "end": 281,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 277,
                    "end": 281,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 675,
                    "end": 682,
                    "name": "AND"
                  },
                  {
                    "begin": 674,
                    "end": 682,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH [tag]",
                    "value": "233"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "DUP1"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "REVERT"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "tag",
                    "value": "233"
                  },
                  {
                    "begin": 666,
                    "end": 683,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 300,
                    "end": 325,
                    "name": "PUSH [tag]",
                    "value": "133"
                  },
                  {
                    "begin": 315,
                    "end": 317,
                    "name": "DUP4"
                  },
                  {
                    "begin": 319,
                    "end": 324,
                    "name": "DUP4"
                  },
                  {
                    "begin": 300,
                    "end": 314,
                    "name": "PUSH [tag]",
                    "value": "236"
                  },
                  {
                    "begin": 300,
                    "end": 325,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "tag",
                    "value": "118"
                  },
                  {
                    "begin": 394,
                    "end": 501,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 450,
                    "end": 454,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH [tag]",
                    "value": "167"
                  },
                  {
                    "begin": 473,
                    "end": 481,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 486,
                    "end": 493,
                    "name": "DUP4"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 473,
                    "end": 485,
                    "name": "PUSH [tag]",
                    "value": "168"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "AND"
                  },
                  {
                    "begin": 473,
                    "end": 494,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "tag",
                    "value": "120"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3329,
                    "end": 3343,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 3329,
                    "end": 3343,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3315,
                    "end": 3326,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 3315,
                    "end": 3326,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3315,
                    "end": 3343,
                    "name": "SUB"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3237,
                    "end": 3350,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "tag",
                    "value": "123"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "AND"
                  },
                  {
                    "begin": 1715,
                    "end": 1722,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1749,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1756,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "AND"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 1741,
                    "end": 1765,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1643,
                    "end": 1772,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "tag",
                    "value": "125"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2581,
                    "end": 2593,
                    "name": "PUSH",
                    "value": "B"
                  },
                  {
                    "begin": 2581,
                    "end": 2593,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2515,
                    "end": 2600,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "tag",
                    "value": "134"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2777,
                    "end": 2781,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "PUSH [tag]",
                    "value": "243"
                  },
                  {
                    "begin": 2802,
                    "end": 2812,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2814,
                    "end": 2821,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2823,
                    "end": 2828,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2793,
                    "end": 2801,
                    "name": "PUSH [tag]",
                    "value": "244"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "tag",
                    "value": "243"
                  },
                  {
                    "begin": 2793,
                    "end": 2829,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2846,
                    "end": 2850,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "POP"
                  },
                  {
                    "begin": 2712,
                    "end": 2857,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "tag",
                    "value": "141"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3399,
                    "end": 3403,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "PUSH [tag]",
                    "value": "246"
                  },
                  {
                    "begin": 3425,
                    "end": 3429,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3431,
                    "end": 3433,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3435,
                    "end": 3440,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3415,
                    "end": 3424,
                    "name": "PUSH [tag]",
                    "value": "247"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "tag",
                    "value": "246"
                  },
                  {
                    "begin": 3415,
                    "end": 3441,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3486,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3478,
                    "end": 3492,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3466,
                    "end": 3476,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3478,
                    "end": 3504,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "PUSH [tag]",
                    "value": "248"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3460,
                    "end": 3464,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH [tag]",
                    "value": "249"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3509,
                    "end": 3514,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3478,
                    "end": 3508,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "AND"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "tag",
                    "value": "249"
                  },
                  {
                    "begin": 3478,
                    "end": 3515,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3451,
                    "end": 3459,
                    "name": "PUSH [tag]",
                    "value": "244"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "tag",
                    "value": "248"
                  },
                  {
                    "begin": 3451,
                    "end": 3516,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3533,
                    "end": 3537,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "POP"
                  },
                  {
                    "begin": 3320,
                    "end": 3544,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "tag",
                    "value": "148"
                  },
                  {
                    "begin": 4058,
                    "end": 4258,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4163,
                    "end": 4173,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4192,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4184,
                    "end": 4204,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4184,
                    "end": 4213,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4138,
                    "end": 4142,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "PUSH [tag]",
                    "value": "243"
                  },
                  {
                    "begin": 4154,
                    "end": 4230,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4175,
                    "end": 4182,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH [tag]",
                    "value": "249"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4218,
                    "end": 4228,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4184,
                    "end": 4217,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "AND"
                  },
                  {
                    "begin": 4184,
                    "end": 4229,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "tag",
                    "value": "165"
                  },
                  {
                    "begin": 295,
                    "end": 372,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 341,
                    "end": 365,
                    "name": "PUSH [tag]",
                    "value": "164"
                  },
                  {
                    "begin": 347,
                    "end": 357,
                    "name": "CALLER"
                  },
                  {
                    "begin": 359,
                    "end": 364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 341,
                    "end": 346,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 341,
                    "end": 365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "tag",
                    "value": "168"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 858,
                    "end": 862,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "DUP3"
                  },
                  {
                    "begin": 882,
                    "end": 903,
                    "name": "AND"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH [tag]",
                    "value": "258"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "DUP1"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "REVERT"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "tag",
                    "value": "258"
                  },
                  {
                    "begin": 874,
                    "end": 904,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 932,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "DUP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "AND"
                  },
                  {
                    "begin": 921,
                    "end": 941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 786,
                    "end": 948,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "tag",
                    "value": "173"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH [tag]",
                    "value": "260"
                  },
                  {
                    "begin": 868,
                    "end": 876,
                    "name": "PUSH",
                    "value": "8"
                  },
                  {
                    "begin": 884,
                    "end": 891,
                    "name": "DUP3"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 868,
                    "end": 883,
                    "name": "PUSH [tag]",
                    "value": "261"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "AND"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "tag",
                    "value": "260"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "AND"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "CD265EBAF09DF2871CC7BD4133404A235BA12EFF2041BB89D9C714A2621C7C7E"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "LOG2"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "POP"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "tag",
                    "value": "179"
                  },
                  {
                    "begin": 619,
                    "end": 712,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 683,
                    "end": 705,
                    "name": "PUSH [tag]",
                    "value": "178"
                  },
                  {
                    "begin": 693,
                    "end": 697,
                    "name": "DUP3"
                  },
                  {
                    "begin": 699,
                    "end": 704,
                    "name": "DUP3"
                  },
                  {
                    "begin": 683,
                    "end": 692,
                    "name": "PUSH [tag]",
                    "value": "264"
                  },
                  {
                    "begin": 683,
                    "end": 705,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "tag",
                    "value": "193"
                  },
                  {
                    "begin": 1439,
                    "end": 1584,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1497,
                    "end": 1504,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1528,
                    "end": 1533,
                    "name": "ADD"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "LT"
                  },
                  {
                    "begin": 1551,
                    "end": 1557,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH [tag]",
                    "value": "133"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1543,
                    "end": 1558,
                    "name": "REVERT"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "tag",
                    "value": "197"
                  },
                  {
                    "begin": 432,
                    "end": 583,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 534,
                    "end": 538,
                    "name": "PUSH",
                    "value": "7"
                  },
                  {
                    "begin": 534,
                    "end": 538,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "PUSH [tag]",
                    "value": "268"
                  },
                  {
                    "begin": 524,
                    "end": 529,
                    "name": "DUP3"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "PUSH [tag]",
                    "value": "269"
                  },
                  {
                    "begin": 506,
                    "end": 517,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "tag",
                    "value": "269"
                  },
                  {
                    "begin": 506,
                    "end": 519,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 506,
                    "end": 523,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 506,
                    "end": 523,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "AND"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "tag",
                    "value": "268"
                  },
                  {
                    "begin": 506,
                    "end": 530,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 506,
                    "end": 538,
                    "name": "GT"
                  },
                  {
                    "begin": 506,
                    "end": 538,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "PUSH [tag]",
                    "value": "270"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "DUP1"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "REVERT"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "tag",
                    "value": "270"
                  },
                  {
                    "begin": 498,
                    "end": 539,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 549,
                    "end": 576,
                    "name": "PUSH [tag]",
                    "value": "178"
                  },
                  {
                    "begin": 561,
                    "end": 568,
                    "name": "DUP3"
                  },
                  {
                    "begin": 570,
                    "end": 575,
                    "name": "DUP3"
                  },
                  {
                    "begin": 549,
                    "end": 560,
                    "name": "PUSH [tag]",
                    "value": "272"
                  },
                  {
                    "begin": 549,
                    "end": 576,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2700,
                    "end": 3231,
                    "name": "tag",
                    "value": "201"
                  },
                  {
                    "begin": 2700,
                    "end": 3231,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2747,
                    "end": 2751,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2854,
                    "end": 2866,
                    "name": "PUSH",
                    "value": "B"
                  },
                  {
                    "begin": 2854,
                    "end": 2866,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2870,
                    "end": 2871,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2854,
                    "end": 2871,
                    "name": "EQ"
                  },
                  {
                    "begin": 2851,
                    "end": 2895,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2851,
                    "end": 2895,
                    "name": "PUSH [tag]",
                    "value": "274"
                  },
                  {
                    "begin": 2851,
                    "end": 2895,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 2887,
                    "end": 2895,
                    "name": "PUSH",
                    "value": "21E19E0C9BAB2400000"
                  },
                  {
                    "begin": 2873,
                    "end": 2884,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 2873,
                    "end": 2895,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 2851,
                    "end": 2895,
                    "name": "tag",
                    "value": "274"
                  },
                  {
                    "begin": 2851,
                    "end": 2895,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2949,
                    "end": 2961,
                    "name": "PUSH",
                    "value": "B"
                  },
                  {
                    "begin": 2949,
                    "end": 2961,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "PUSH [tag]",
                    "value": "275"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2966,
                    "end": 2967,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 2949,
                    "end": 2965,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "AND"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "tag",
                    "value": "275"
                  },
                  {
                    "begin": 2949,
                    "end": 2968,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2934,
                    "end": 2946,
                    "name": "PUSH",
                    "value": "B"
                  },
                  {
                    "begin": 2934,
                    "end": 2968,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2934,
                    "end": 2968,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2934,
                    "end": 2968,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 882,
                    "end": 886,
                    "name": "PUSH",
                    "value": "6A4"
                  },
                  {
                    "begin": 882,
                    "end": 886,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3067,
                    "end": 3093,
                    "name": "MOD"
                  },
                  {
                    "begin": 3064,
                    "end": 3132,
                    "name": "PUSH [tag]",
                    "value": "277"
                  },
                  {
                    "begin": 3064,
                    "end": 3132,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3114,
                    "end": 3125,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 3114,
                    "end": 3125,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "PUSH [tag]",
                    "value": "278"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3130,
                    "end": 3131,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3114,
                    "end": 3129,
                    "name": "PUSH [tag]",
                    "value": "279"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "AND"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "tag",
                    "value": "278"
                  },
                  {
                    "begin": 3114,
                    "end": 3132,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3100,
                    "end": 3111,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 3100,
                    "end": 3132,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 3064,
                    "end": 3132,
                    "name": "tag",
                    "value": "277"
                  },
                  {
                    "begin": 3064,
                    "end": 3132,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3201,
                    "end": 3202,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3184,
                    "end": 3198,
                    "name": "PUSH",
                    "value": "C"
                  },
                  {
                    "begin": 3184,
                    "end": 3202,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 3220,
                    "end": 3224,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2700,
                    "end": 3231,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2700,
                    "end": 3231,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "tag",
                    "value": "207"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH [tag]",
                    "value": "281"
                  },
                  {
                    "begin": 740,
                    "end": 748,
                    "name": "PUSH",
                    "value": "8"
                  },
                  {
                    "begin": 753,
                    "end": 760,
                    "name": "DUP3"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 740,
                    "end": 752,
                    "name": "PUSH [tag]",
                    "value": "282"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "AND"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "tag",
                    "value": "281"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "DUP3"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "AND"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "6719D08C1888103BEA251A4ED56406BD0C3E69723C8A1686E017E7BBE159B6F8"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "LOG2"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "POP"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "tag",
                    "value": "223"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH [tag]",
                    "value": "284"
                  },
                  {
                    "begin": 740,
                    "end": 748,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 753,
                    "end": 760,
                    "name": "DUP3"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 740,
                    "end": 752,
                    "name": "PUSH [tag]",
                    "value": "282"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "AND"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "tag",
                    "value": "284"
                  },
                  {
                    "begin": 740,
                    "end": 761,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "DUP3"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "AND"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 776,
                    "end": 796,
                    "name": "LOG2"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "POP"
                  },
                  {
                    "begin": 684,
                    "end": 803,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "tag",
                    "value": "226"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH [tag]",
                    "value": "286"
                  },
                  {
                    "begin": 868,
                    "end": 876,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 884,
                    "end": 891,
                    "name": "DUP3"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 868,
                    "end": 883,
                    "name": "PUSH [tag]",
                    "value": "261"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "AND"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "tag",
                    "value": "286"
                  },
                  {
                    "begin": 868,
                    "end": 892,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "DUP3"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "AND"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 907,
                    "end": 929,
                    "name": "LOG2"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "POP"
                  },
                  {
                    "begin": 809,
                    "end": 936,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "tag",
                    "value": "231"
                  },
                  {
                    "begin": 4777,
                    "end": 4987,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4887,
                    "end": 4897,
                    "name": "CALLER"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4916,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4908,
                    "end": 4928,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP8"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4908,
                    "end": 4937,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4862,
                    "end": 4866,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "PUSH [tag]",
                    "value": "243"
                  },
                  {
                    "begin": 4878,
                    "end": 4959,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "DUP6"
                  },
                  {
                    "begin": 4899,
                    "end": 4906,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH [tag]",
                    "value": "249"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4942,
                    "end": 4957,
                    "name": "DUP7"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 4908,
                    "end": 4941,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "AND"
                  },
                  {
                    "begin": 4908,
                    "end": 4958,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "tag",
                    "value": "236"
                  },
                  {
                    "begin": 1939,
                    "end": 2076,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2000,
                    "end": 2004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "PUSH [tag]",
                    "value": "243"
                  },
                  {
                    "begin": 2026,
                    "end": 2036,
                    "name": "CALLER"
                  },
                  {
                    "begin": 2038,
                    "end": 2040,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2042,
                    "end": 2047,
                    "name": "DUP5"
                  },
                  {
                    "begin": 2016,
                    "end": 2025,
                    "name": "PUSH [tag]",
                    "value": "247"
                  },
                  {
                    "begin": 2016,
                    "end": 2048,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "tag",
                    "value": "244"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6914,
                    "end": 6935,
                    "name": "AND"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH [tag]",
                    "value": "293"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "tag",
                    "value": "293"
                  },
                  {
                    "begin": 6906,
                    "end": 6936,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6954,
                    "end": 6973,
                    "name": "AND"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH [tag]",
                    "value": "294"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "tag",
                    "value": "294"
                  },
                  {
                    "begin": 6946,
                    "end": 6974,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 6993,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6985,
                    "end": 7000,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "AND"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7009,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6985,
                    "end": 7017,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SUB"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "ADD"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7032,
                    "end": 7063,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "POP"
                  },
                  {
                    "begin": 6822,
                    "end": 7070,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "tag",
                    "value": "247"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5293,
                    "end": 5309,
                    "name": "AND"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH [tag]",
                    "value": "296"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "tag",
                    "value": "296"
                  },
                  {
                    "begin": 5285,
                    "end": 5310,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5348,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5339,
                    "end": 5354,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH [tag]",
                    "value": "297"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5359,
                    "end": 5364,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5339,
                    "end": 5358,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "AND"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "tag",
                    "value": "297"
                  },
                  {
                    "begin": 5339,
                    "end": 5365,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "AND"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5330,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5321,
                    "end": 5336,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5321,
                    "end": 5365,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5391,
                    "end": 5404,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH [tag]",
                    "value": "298"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5409,
                    "end": 5414,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5391,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "AND"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "tag",
                    "value": "298"
                  },
                  {
                    "begin": 5391,
                    "end": 5415,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "AND"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5384,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5375,
                    "end": 5415,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5375,
                    "end": 5388,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "AND"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SUB"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "ADD"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5430,
                    "end": 5455,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "POP"
                  },
                  {
                    "begin": 5206,
                    "end": 5462,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "tag",
                    "value": "250"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1269,
                    "end": 1276,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1301,
                    "end": 1302,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1297,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "GT"
                  },
                  {
                    "begin": 1296,
                    "end": 1302,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH [tag]",
                    "value": "300"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "tag",
                    "value": "300"
                  },
                  {
                    "begin": 1288,
                    "end": 1303,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SUB"
                  },
                  {
                    "begin": 1325,
                    "end": 1330,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1211,
                    "end": 1356,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "tag",
                    "value": "256"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6368,
                    "end": 6389,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6368,
                    "end": 6389,
                    "name": "AND"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "PUSH [tag]",
                    "value": "302"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "tag",
                    "value": "302"
                  },
                  {
                    "begin": 6360,
                    "end": 6390,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6416,
                    "end": 6428,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 6416,
                    "end": 6428,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "PUSH [tag]",
                    "value": "303"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6433,
                    "end": 6438,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 6416,
                    "end": 6432,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "AND"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "tag",
                    "value": "303"
                  },
                  {
                    "begin": 6416,
                    "end": 6439,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6401,
                    "end": 6413,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 6401,
                    "end": 6439,
                    "name": "SSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "AND"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6470,
                    "end": 6479,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6470,
                    "end": 6488,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "PUSH [tag]",
                    "value": "304"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6493,
                    "end": 6498,
                    "name": "DUP3"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 6470,
                    "end": 6492,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "AND"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "tag",
                    "value": "304"
                  },
                  {
                    "begin": 6470,
                    "end": 6499,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "AND"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6449,
                    "end": 6458,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 6449,
                    "end": 6499,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6449,
                    "end": 6467,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SUB"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "ADD"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6514,
                    "end": 6550,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "POP"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "POP"
                  },
                  {
                    "begin": 6294,
                    "end": 6557,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "tag",
                    "value": "261"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "DUP2"
                  },
                  {
                    "begin": 593,
                    "end": 614,
                    "name": "AND"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH [tag]",
                    "value": "306"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "DUP1"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "REVERT"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "tag",
                    "value": "306"
                  },
                  {
                    "begin": 585,
                    "end": 615,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "PUSH [tag]",
                    "value": "307"
                  },
                  {
                    "begin": 637,
                    "end": 641,
                    "name": "DUP3"
                  },
                  {
                    "begin": 643,
                    "end": 650,
                    "name": "DUP3"
                  },
                  {
                    "begin": 633,
                    "end": 636,
                    "name": "PUSH [tag]",
                    "value": "168"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "tag",
                    "value": "307"
                  },
                  {
                    "begin": 633,
                    "end": 651,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH [tag]",
                    "value": "308"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "DUP1"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "REVERT"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "tag",
                    "value": "308"
                  },
                  {
                    "begin": 625,
                    "end": 652,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "AND"
                  },
                  {
                    "begin": 686,
                    "end": 691,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "DUP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 683,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "DUP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "AND"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 663,
                    "end": 691,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 514,
                    "end": 698,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7459,
                    "end": 7638,
                    "name": "tag",
                    "value": "264"
                  },
                  {
                    "begin": 7459,
                    "end": 7638,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "PUSH [tag]",
                    "value": "310"
                  },
                  {
                    "begin": 7535,
                    "end": 7542,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7544,
                    "end": 7549,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7529,
                    "end": 7534,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "tag",
                    "value": "310"
                  },
                  {
                    "begin": 7529,
                    "end": 7550,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "AND"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7598,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "DUP4"
                  },
                  {
                    "begin": 7590,
                    "end": 7607,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 7578,
                    "end": 7588,
                    "name": "CALLER"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 7590,
                    "end": 7619,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 7560,
                    "end": 7631,
                    "name": "PUSH [tag]",
                    "value": "178"
                  },
                  {
                    "begin": 7560,
                    "end": 7631,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7569,
                    "end": 7576,
                    "name": "DUP5"
                  },
                  {
                    "begin": 7569,
                    "end": 7576,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "PUSH [tag]",
                    "value": "249"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7624,
                    "end": 7629,
                    "name": "DUP6"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 7590,
                    "end": 7623,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "AND"
                  },
                  {
                    "begin": 7590,
                    "end": 7630,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "tag",
                    "value": "272"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5879,
                    "end": 5900,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5879,
                    "end": 5900,
                    "name": "AND"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "PUSH [tag]",
                    "value": "314"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "tag",
                    "value": "314"
                  },
                  {
                    "begin": 5871,
                    "end": 5901,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5927,
                    "end": 5939,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 5927,
                    "end": 5939,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "PUSH [tag]",
                    "value": "315"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5944,
                    "end": 5949,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5927,
                    "end": 5943,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "AND"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "tag",
                    "value": "315"
                  },
                  {
                    "begin": 5927,
                    "end": 5950,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5912,
                    "end": 5924,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 5912,
                    "end": 5950,
                    "name": "SSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "AND"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5981,
                    "end": 5990,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5981,
                    "end": 5999,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "PUSH [tag]",
                    "value": "316"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6004,
                    "end": 6009,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5981,
                    "end": 6003,
                    "name": "PUSH [tag]",
                    "value": "193"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "AND"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "tag",
                    "value": "316"
                  },
                  {
                    "begin": 5981,
                    "end": 6010,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "AND"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5960,
                    "end": 5969,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5960,
                    "end": 6010,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5960,
                    "end": 5978,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "PUSH",
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SUB"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "ADD"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6025,
                    "end": 6061,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "POP"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "POP"
                  },
                  {
                    "begin": 5805,
                    "end": 6068,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 782,
                    "end": 1078,
                    "name": "tag",
                    "value": "279"
                  },
                  {
                    "begin": 782,
                    "end": 1078,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 840,
                    "end": 847,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 937,
                    "end": 938,
                    "name": "DUP1"
                  },
                  {
                    "begin": 933,
                    "end": 934,
                    "name": "DUP3"
                  },
                  {
                    "begin": 933,
                    "end": 938,
                    "name": "GT"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "PUSH [tag]",
                    "value": "318"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "DUP1"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "REVERT"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "tag",
                    "value": "318"
                  },
                  {
                    "begin": 925,
                    "end": 939,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 949,
                    "end": 958,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 965,
                    "end": 966,
                    "name": "DUP3"
                  },
                  {
                    "begin": 961,
                    "end": 962,
                    "name": "DUP5"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "DUP2"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "PUSH [tag]",
                    "value": "319"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "INVALID"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "tag",
                    "value": "319"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "DIV"
                  },
                  {
                    "begin": 961,
                    "end": 966,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 782,
                    "end": 1078,
                    "name": "SWAP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 782,
                    "end": 1078,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "tag",
                    "value": "282"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "DUP2"
                  },
                  {
                    "begin": 335,
                    "end": 356,
                    "name": "AND"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH [tag]",
                    "value": "321"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "DUP1"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "REVERT"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "tag",
                    "value": "321"
                  },
                  {
                    "begin": 327,
                    "end": 357,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "PUSH [tag]",
                    "value": "322"
                  },
                  {
                    "begin": 380,
                    "end": 384,
                    "name": "DUP3"
                  },
                  {
                    "begin": 386,
                    "end": 393,
                    "name": "DUP3"
                  },
                  {
                    "begin": 376,
                    "end": 379,
                    "name": "PUSH [tag]",
                    "value": "168"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "tag",
                    "value": "322"
                  },
                  {
                    "begin": 376,
                    "end": 394,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 375,
                    "end": 394,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH [tag]",
                    "value": "323"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "DUP1"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "REVERT"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "tag",
                    "value": "323"
                  },
                  {
                    "begin": 367,
                    "end": 395,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "AND"
                  },
                  {
                    "begin": 406,
                    "end": 417,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "DUP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 426,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "DUP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "AND"
                  },
                  {
                    "begin": 429,
                    "end": 433,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "OR"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 406,
                    "end": 433,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 259,
                    "end": 440,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "addMinter(address)": "983b2d56",
            "addPauser(address)": "82dc1ec4",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "burn(uint256)": "42966c68",
            "burnFrom(address,uint256)": "79cc6790",
            "cap()": "355274ea",
            "decimals()": "313ce567",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "isMinter(address)": "aa271e1a",
            "isPauser(address)": "46fbf68e",
            "mint(address,uint256)": "40c10f19",
            "mintAmount()": "5a2bcc18",
            "mintBulk(address[],uint256[])": "7fd30df0",
            "name()": "06fdde03",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "period()": "ef78d4fd",
            "remainingInPeriod()": "b5b80f12",
            "renounceMinter()": "98650275",
            "renouncePauser()": "6ef8d66d",
            "symbol()": "95d89b41",
            "totalInPeriod()": "1efe9395",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"mintBulk\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingInPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"RaeToken Contract requirements: - address that deployed RaeToken can pause contract and release pauseRole in future - address that deployed RaeToken has mintRole and can release mintRole in future - RaeMintContract has mintRole after deployment - totalSupply is capped at 34 million RAE = 34000000 RAE, or 34000000e18 ROK (1 RAE = 1e18 ROK) - every 1700 _mintPeriods _mintAmount is halved - _mintAmount starts at 10000 RAE = 10000e18 ROK - halveEvery can never be changed\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"do not allow burn during pause\"},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"mint(address,uint256)\":{\"details\":\"do not allow mint during pause\"},\"mintBulk(address[],uint256[])\":{\"details\":\"perform a minting period requirements: - addresses.length == values.length != 0 - only addresses with minter role should be able to call this function - totalSent == _mintAmount - every time this function returns successfully (true) _mintPeriods is incremented by 1 - every 1700 _mintPeriods _mintAmount is halved. e.g. when _mintPeriods = 1700 then _mintAmount = 5000e18 - addresses[i] is minted values[i], accepatable to have duplicate addresses\",\"params\":{\"addresses\":\"array of addresses where amount minted to addresses[i] is values[i]\",\"values\":\"array of token amounts that add up to _mintAmount\"}},\"name()\":{\"return\":\"the name of the token.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"RaeToken.sol\":\"RaeToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return A uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\",\"keccak256\":\"0x612eb74ef1ba2e4ea72f85dda6c21f7dbdcc0ece01b1bf3b590f3ea4d2e7e13d\"},\"ERC20Burnable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @title Burnable Token\\n * @dev Token that can be irreversibly burned (destroyed).\\n */\\ncontract ERC20Burnable is ERC20 {\\n    /**\\n     * @dev Burns a specific amount of tokens.\\n     * @param value The amount of token to be burned.\\n     */\\n    function burn(uint256 value) public {\\n        _burn(msg.sender, value);\\n    }\\n\\n    /**\\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\\n     * @param from address The account whose tokens will be burned.\\n     * @param value uint256 The amount of token to be burned.\\n     */\\n    function burnFrom(address from, uint256 value) public {\\n        _burnFrom(from, value);\\n    }\\n}\\n\",\"keccak256\":\"0xcf6b3e804a9b1e3d6ca4a695524cbaa52cd26cc86978a2b99052ba1a5d25653f\"},\"ERC20Capped.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20Mintable.sol\\\";\\n\\n/**\\n * @title Capped token\\n * @dev Mintable token with a token cap.\\n */\\ncontract ERC20Capped is ERC20Mintable {\\n    uint256 private _cap;\\n\\n    constructor (uint256 cap) public {\\n        require(cap > 0);\\n        _cap = cap;\\n    }\\n\\n    /**\\n     * @return the cap for the token minting.\\n     */\\n    function cap() public view returns (uint256) {\\n        return _cap;\\n    }\\n\\n    function _mint(address account, uint256 value) internal {\\n        require(totalSupply().add(value) <= _cap);\\n        super._mint(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0xe2685e6c947e69b46a8124a1f5e18cf5210ca2b90c7b2019a9c30281ecbee328\"},\"ERC20Detailed.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @title ERC20Detailed token\\n * @dev The decimals are only for visualization purposes.\\n * All the operations are done using the smallest and indivisible token unit,\\n * just as on Ethereum all the operations are done in wei.\\n */\\ncontract ERC20Detailed is IERC20 {\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = decimals;\\n    }\\n\\n    /**\\n     * @return the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @return the symbol of the token.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @return the number of decimals of the token.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\"},\"ERC20Mintable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./MinterRole.sol\\\";\\n\\n/**\\n * @title ERC20Mintable\\n * @dev ERC20 minting logic\\n */\\ncontract ERC20Mintable is ERC20, MinterRole {\\n    /**\\n     * @dev Function to mint tokens\\n     * @param to The address that will receive the minted tokens.\\n     * @param value The amount of tokens to mint.\\n     * @return A boolean that indicates if the operation was successful.\\n     */\\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\\n        _mint(to, value);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x990fbb0f5629115a277e4a09f0e648ca2388cbb2f7329b1a11f4964885d3dad8\"},\"ERC20Pausable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\n/**\\n * @title Pausable token\\n * @dev ERC20 modified with pausable transfers.\\n */\\ncontract ERC20Pausable is ERC20, Pausable {\\n    function transfer(address to, uint256 value) public whenNotPaused returns (bool) {\\n        return super.transfer(to, value);\\n    }\\n\\n    function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {\\n        return super.transferFrom(from, to, value);\\n    }\\n\\n    function approve(address spender, uint256 value) public whenNotPaused returns (bool) {\\n        return super.approve(spender, value);\\n    }\\n\\n    function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {\\n        return super.increaseAllowance(spender, addedValue);\\n    }\\n\\n    function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {\\n        return super.decreaseAllowance(spender, subtractedValue);\\n    }\\n}\\n\",\"keccak256\":\"0xfd4e0bb82615d8b50bf36cd6548847ee2099692403d1fdaadc269ed9714a0a34\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\"},\"MinterRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract MinterRole {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () internal {\\n        _addMinter(msg.sender);\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(msg.sender));\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(msg.sender);\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe1859219b85aafa5b8f83c2db219b3a948830f0312d497e61400e44bda40f76c\"},\"Pausable.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./PauserRole.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is PauserRole {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    constructor () internal {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @return true if the contract is paused, false otherwise.\\n     */\\n    function paused() public view returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!_paused);\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     */\\n    modifier whenPaused() {\\n        require(_paused);\\n        _;\\n    }\\n\\n    /**\\n     * @dev called by the owner to pause, triggers stopped state\\n     */\\n    function pause() public onlyPauser whenNotPaused {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    /**\\n     * @dev called by the owner to unpause, returns to normal state\\n     */\\n    function unpause() public onlyPauser whenPaused {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x79fd086ef074a6b00524e0e28d507ebdcafd6c4ed1ec392d4e01bd3d25d3bad3\"},\"PauserRole.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract PauserRole {\\n    using Roles for Roles.Role;\\n\\n    event PauserAdded(address indexed account);\\n    event PauserRemoved(address indexed account);\\n\\n    Roles.Role private _pausers;\\n\\n    constructor () internal {\\n        _addPauser(msg.sender);\\n    }\\n\\n    modifier onlyPauser() {\\n        require(isPauser(msg.sender));\\n        _;\\n    }\\n\\n    function isPauser(address account) public view returns (bool) {\\n        return _pausers.has(account);\\n    }\\n\\n    function addPauser(address account) public onlyPauser {\\n        _addPauser(account);\\n    }\\n\\n    function renouncePauser() public {\\n        _removePauser(msg.sender);\\n    }\\n\\n    function _addPauser(address account) internal {\\n        _pausers.add(account);\\n        emit PauserAdded(account);\\n    }\\n\\n    function _removePauser(address account) internal {\\n        _pausers.remove(account);\\n        emit PauserRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x66bf431210816dd3e185e54e27e150b88265d5e2addd5ec50dce760432a3616e\"},\"RaeToken.sol\":{\"content\":\"pragma solidity 0.5.7;\\n\\nimport \\\"./ERC20Detailed.sol\\\";\\nimport \\\"./ERC20Burnable.sol\\\";\\nimport \\\"./ERC20Capped.sol\\\";\\nimport \\\"./ERC20Pausable.sol\\\";\\n\\n\\n/**\\n@dev RaeToken Contract\\nrequirements:\\n - address that deployed RaeToken can pause contract and release pauseRole in future\\n - address that deployed RaeToken has mintRole and can release mintRole in future\\n - RaeMintContract has mintRole after deployment\\n - totalSupply is capped at 34 million RAE = 34000000 RAE, or 34000000e18 ROK (1 RAE = 1e18 ROK)\\n - every 1700 _mintPeriods _mintAmount is halved\\n - _mintAmount starts at 10000 RAE = 10000e18 ROK\\n - halveEvery can never be changed\\n */\\ncontract RaeToken is ERC20Detailed, ERC20Capped, ERC20Burnable, ERC20Pausable {\\n    uint256 private _mintAmount = 216000e18;\\n    uint256 private _mintPeriods = 0;\\n    uint256 private _totalInPeriod = 0;\\n    uint256 constant private _halveEvery = 1700; // halve mint amount every 1700 mint periods\\n    mapping (address => uint256) private _balances;\\n\\n    constructor(string memory name, string memory symbol, uint8 decimals, uint256 cap)\\n        ERC20Burnable()\\n        ERC20Mintable()\\n        ERC20Capped(cap)\\n        ERC20Detailed(name, symbol, decimals)\\n        ERC20Pausable()\\n        ERC20()\\n    public \\n    {\\n        _mint(msg.sender, 84000e18);\\n    }\\n\\n    /**\\n    * @dev perform a minting period\\n    * requirements:\\n    * - addresses.length == values.length != 0\\n    * - only addresses with minter role should be able to call this function\\n    * - totalSent == _mintAmount\\n    * - every time this function returns successfully (true) _mintPeriods is incremented by 1\\n    * - every 1700 _mintPeriods _mintAmount is halved. e.g. when _mintPeriods = 1700 then _mintAmount = 5000e18\\n    * - addresses[i] is minted values[i], accepatable to have duplicate addresses\\n    @param addresses array of addresses where amount minted to addresses[i] is values[i]\\n    @param values array of token amounts that add up to _mintAmount\\n     */\\n    function mintBulk(address[] calldata addresses, uint256[] calldata values) external whenNotPaused onlyMinter returns (bool) {\\n        \\n        require(addresses.length > 0);\\n        require(addresses.length == values.length);\\n\\n        for(uint256 i = 0; i < addresses.length; ++i) {\\n            _totalInPeriod = _totalInPeriod.add(values[i]);\\n            _mint(addresses[i], values[i]);\\n        }\\n        require(_totalInPeriod <= _mintAmount);\\n        if( _totalInPeriod == _mintAmount) _updateMintParams();\\n\\n        return true;\\n    }\\n\\n\\n    function period() external view returns (uint256){\\n        return _mintPeriods;\\n    }\\n\\n    function mintAmount() external view returns (uint256){\\n        return _mintAmount;\\n    }\\n\\n    function _updateMintParams() internal returns (bool) {\\n        // first period is for 216,000 RAE, after this will go to 10000 RAE until decay\\n        if(_mintPeriods == 0) _mintAmount = 10000e18;\\n\\n        // increment period\\n        _mintPeriods = _mintPeriods.add(1);\\n\\n        // decay if _mintPeriods is 1700, 3400, 5100, etc. Target for 1 mint per day\\n        if(_mintPeriods % _halveEvery == 0) _mintAmount = _mintAmount.div(2);\\n\\n        // reset the _totalInPeriod to 0\\n        _totalInPeriod = 0;\\n\\n        return true;\\n    }\\n\\n    function remainingInPeriod() external view returns (uint256) {\\n        return _mintAmount - _totalInPeriod;\\n    }\\n\\n    function totalInPeriod() external view returns (uint256) {\\n        return _totalInPeriod;\\n    }\\n\\n    /**\\n    @dev do not allow mint during pause\\n     */\\n    function mint(address to, uint256 value) public whenNotPaused onlyMinter returns (bool) {\\n        //super.mint(to, value);\\n        revert();\\n    }\\n\\n    /**\\n    @dev do not allow burn during pause\\n     */\\n    function burn(uint256 value) public whenNotPaused {\\n        super.burn(value);\\n    }\\n\\n    function burnFrom(address from, uint256 value) public whenNotPaused {\\n        super.burnFrom(from, value);\\n    }\\n\\n}\",\"keccak256\":\"0x74382f95c5b5cb9fdf96528bc9b71ae8cfa75d2b3a6a9ac00ca4be5e8afbf466\"},\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "Roles.sol": {
      "Roles": {
        "abi": [],
        "devdoc": {
          "details": "Library for managing addresses assigned to a Role.",
          "methods": {},
          "title": "Roles"
        },
        "evm": {
          "assembly": "    /* \"Roles.sol\":108:950  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Roles.sol\":108:950  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820b0d9b3aab30db2f9b5731b8908ba15b4737e1060b2256217d549ea8f7d3d902b0029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820b0d9b3aab30db2f9b5731b8908ba15b4737e1060b2256217d549ea8f7d3d902b0029",
            "opcodes": "PUSH1 0x4C PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xd9 0xb3 0xaa 0xb3 0xd 0xb2 0xf9 0xb5 PUSH20 0x1B8908BA15B4737E1060B2256217D549EA8F7D3D SWAP1 0x2b STOP 0x29 ",
            "sourceMap": "108:842:11:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820b0d9b3aab30db2f9b5731b8908ba15b4737e1060b2256217d549ea8f7d3d902b0029",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xd9 0xb3 0xaa 0xb3 0xd 0xb2 0xf9 0xb5 PUSH20 0x1B8908BA15B4737E1060B2256217D549EA8F7D3D SWAP1 0x2b STOP 0x29 ",
            "sourceMap": "108:842:11:-;;;;;;;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "15200",
              "executionCost": "94",
              "totalCost": "15294"
            },
            "internal": {
              "add(struct Roles.Role storage pointer,address)": "infinite",
              "has(struct Roles.Role storage pointer,address)": "infinite",
              "remove(struct Roles.Role storage pointer,address)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 108,
                "end": 950,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 108,
                "end": 950,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 132,
                "end": 134,
                "name": "PUSH",
                "value": "B"
              },
              {
                "begin": 166,
                "end": 173,
                "name": "DUP3"
              },
              {
                "begin": 155,
                "end": 164,
                "name": "DUP3"
              },
              {
                "begin": 146,
                "end": 153,
                "name": "DUP3"
              },
              {
                "begin": 137,
                "end": 174,
                "name": "CODECOPY"
              },
              {
                "begin": 255,
                "end": 262,
                "name": "DUP1"
              },
              {
                "begin": 249,
                "end": 263,
                "name": "MLOAD"
              },
              {
                "begin": 246,
                "end": 247,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 241,
                "end": 264,
                "name": "BYTE"
              },
              {
                "begin": 235,
                "end": 239,
                "name": "PUSH",
                "value": "73"
              },
              {
                "begin": 232,
                "end": 265,
                "name": "EQ"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "JUMPI"
              },
              {
                "begin": 269,
                "end": 278,
                "name": "INVALID"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "JUMPDEST"
              },
              {
                "begin": 293,
                "end": 302,
                "name": "ADDRESS"
              },
              {
                "begin": 290,
                "end": 291,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 283,
                "end": 303,
                "name": "MSTORE"
              },
              {
                "begin": 323,
                "end": 327,
                "name": "PUSH",
                "value": "73"
              },
              {
                "begin": 314,
                "end": 321,
                "name": "DUP2"
              },
              {
                "begin": 306,
                "end": 328,
                "name": "MSTORE8"
              },
              {
                "begin": 347,
                "end": 354,
                "name": "DUP3"
              },
              {
                "begin": 338,
                "end": 345,
                "name": "DUP2"
              },
              {
                "begin": 331,
                "end": 355,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a72305820b0d9b3aab30db2f9b5731b8908ba15b4737e1060b2256217d549ea8f7d3d902b0029",
                ".code": [
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "PUSHDEPLOYADDRESS"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "ADDRESS"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "EQ"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "DUP1"
                  },
                  {
                    "begin": 108,
                    "end": 950,
                    "name": "REVERT"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {}
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"methods\":{},\"title\":\"Roles\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Roles.sol\":\"Roles\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Roles.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    },
    "SafeMath.sol": {
      "SafeMath": {
        "abi": [],
        "devdoc": {
          "details": "Unsigned math operations with safety checks that revert on error",
          "methods": {},
          "title": "SafeMath"
        },
        "evm": {
          "assembly": "    /* \"SafeMath.sol\":125:1862  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":125:1862  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582000e113310f5b84367f2015e12069716745d1b2c33ab1fd6a93567c310c3ef1d20029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a7230582000e113310f5b84367f2015e12069716745d1b2c33ab1fd6a93567c310c3ef1d20029",
            "opcodes": "PUSH1 0x4C PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP 0xe1 SGT BALANCE 0xf JUMPDEST DUP5 CALLDATASIZE PUSH32 0x2015E12069716745D1B2C33AB1FD6A93567C310C3EF1D2002900000000000000 ",
            "sourceMap": "125:1737:12:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a7230582000e113310f5b84367f2015e12069716745d1b2c33ab1fd6a93567c310c3ef1d20029",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP 0xe1 SGT BALANCE 0xf JUMPDEST DUP5 CALLDATASIZE PUSH32 0x2015E12069716745D1B2C33AB1FD6A93567C310C3EF1D2002900000000000000 ",
            "sourceMap": "125:1737:12:-;;;;;;;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "15200",
              "executionCost": "94",
              "totalCost": "15294"
            },
            "internal": {
              "add(uint256,uint256)": "infinite",
              "div(uint256,uint256)": "infinite",
              "mod(uint256,uint256)": "infinite",
              "mul(uint256,uint256)": "infinite",
              "sub(uint256,uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 125,
                "end": 1862,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 125,
                "end": 1862,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 132,
                "end": 134,
                "name": "PUSH",
                "value": "B"
              },
              {
                "begin": 166,
                "end": 173,
                "name": "DUP3"
              },
              {
                "begin": 155,
                "end": 164,
                "name": "DUP3"
              },
              {
                "begin": 146,
                "end": 153,
                "name": "DUP3"
              },
              {
                "begin": 137,
                "end": 174,
                "name": "CODECOPY"
              },
              {
                "begin": 255,
                "end": 262,
                "name": "DUP1"
              },
              {
                "begin": 249,
                "end": 263,
                "name": "MLOAD"
              },
              {
                "begin": 246,
                "end": 247,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 241,
                "end": 264,
                "name": "BYTE"
              },
              {
                "begin": 235,
                "end": 239,
                "name": "PUSH",
                "value": "73"
              },
              {
                "begin": 232,
                "end": 265,
                "name": "EQ"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "JUMPI"
              },
              {
                "begin": 269,
                "end": 278,
                "name": "INVALID"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 222,
                "end": 224,
                "name": "JUMPDEST"
              },
              {
                "begin": 293,
                "end": 302,
                "name": "ADDRESS"
              },
              {
                "begin": 290,
                "end": 291,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 283,
                "end": 303,
                "name": "MSTORE"
              },
              {
                "begin": 323,
                "end": 327,
                "name": "PUSH",
                "value": "73"
              },
              {
                "begin": 314,
                "end": 321,
                "name": "DUP2"
              },
              {
                "begin": 306,
                "end": 328,
                "name": "MSTORE8"
              },
              {
                "begin": 347,
                "end": 354,
                "name": "DUP3"
              },
              {
                "begin": 338,
                "end": 345,
                "name": "DUP2"
              },
              {
                "begin": 331,
                "end": 355,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a7230582000e113310f5b84367f2015e12069716745d1b2c33ab1fd6a93567c310c3ef1d20029",
                ".code": [
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "PUSHDEPLOYADDRESS"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "ADDRESS"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "EQ"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "DUP1"
                  },
                  {
                    "begin": 125,
                    "end": 1862,
                    "name": "REVERT"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {}
        },
        "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Unsigned math operations with safety checks that revert on error\",\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "formattedMessage": "RaeToken.sol:102:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function mint(address to, uint256 value) public whenNotPaused onlyMinter returns (bool) {\n                  ^--------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3537,
        "file": "RaeToken.sol",
        "start": 3527
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "RaeToken.sol:102:31: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function mint(address to, uint256 value) public whenNotPaused onlyMinter returns (bool) {\n                              ^-----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3552,
        "file": "RaeToken.sol",
        "start": 3539
      },
      "type": "Warning"
    }
  ],
  "sources": {
    "ERC20.sol": {
      "ast": {
        "absolutePath": "ERC20.sol",
        "exportedSymbols": {
          "ERC20": [
            382
          ]
        },
        "id": 383,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:0"
          },
          {
            "absolutePath": "IERC20.sol",
            "file": "./IERC20.sol",
            "id": 2,
            "nodeType": "ImportDirective",
            "scope": 383,
            "sourceUnit": 728,
            "src": "25:22:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "SafeMath.sol",
            "file": "./SafeMath.sol",
            "id": 3,
            "nodeType": "ImportDirective",
            "scope": 383,
            "sourceUnit": 1503,
            "src": "48:24:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 4,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 727,
                  "src": "636:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$727",
                    "typeString": "contract IERC20"
                  }
                },
                "id": 5,
                "nodeType": "InheritanceSpecifier",
                "src": "636:6:0"
              }
            ],
            "contractDependencies": [
              727
            ],
            "contractKind": "contract",
            "documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\nhttps://eips.ethereum.org/EIPS/eip-20\nOriginally based on code by FirstBlood:\nhttps://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\nall accounts just by listening to said events. Note that this isn't required by the specification, and other\ncompliant implementations may not do it.",
            "fullyImplemented": true,
            "id": 382,
            "linearizedBaseContracts": [
              382,
              727
            ],
            "name": "ERC20",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 8,
                "libraryName": {
                  "contractScope": null,
                  "id": 6,
                  "name": "SafeMath",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1502,
                  "src": "655:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SafeMath_$1502",
                    "typeString": "library SafeMath"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "649:27:0",
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "668:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              {
                "constant": false,
                "id": 12,
                "name": "_balances",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "682:46:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 11,
                  "keyType": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "682:28:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 18,
                "name": "_allowed",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "735:66:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 17,
                  "keyType": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "735:49:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 16,
                    "keyType": {
                      "id": 14,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "755:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 15,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "775:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 20,
                "name": "_totalSupply",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "808:28:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "808:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 27,
                  "nodeType": "Block",
                  "src": "960:36:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "977:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 24,
                      "id": 26,
                      "nodeType": "Return",
                      "src": "970:19:0"
                    }
                  ]
                },
                "documentation": "@dev Total number of tokens in existence",
                "id": 28,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 21,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "927:2:0"
                },
                "returnParameters": {
                  "id": 24,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 23,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "951:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "951:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "950:9:0"
                },
                "scope": 382,
                "src": "907:89:0",
                "stateMutability": "view",
                "superFunction": 694,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 39,
                  "nodeType": "Block",
                  "src": "1272:40:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 35,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1289:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 37,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1299:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 34,
                      "id": 38,
                      "nodeType": "Return",
                      "src": "1282:23:0"
                    }
                  ]
                },
                "documentation": "@dev Gets the balance of the specified address.\n@param owner The address to query the balance of.\n@return A uint256 representing the amount owned by the passed address.",
                "id": 40,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 31,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 30,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 40,
                      "src": "1227:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1227:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1226:15:0"
                },
                "returnParameters": {
                  "id": 34,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 33,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 40,
                      "src": "1263:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1263:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1262:9:0"
                },
                "scope": 382,
                "src": "1208:104:0",
                "stateMutability": "view",
                "superFunction": 701,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 55,
                  "nodeType": "Block",
                  "src": "1724:48:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "_allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1741:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "1750:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1741:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 53,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1757:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1741:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 48,
                      "id": 54,
                      "nodeType": "Return",
                      "src": "1734:31:0"
                    }
                  ]
                },
                "documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param owner address The address which owns the funds.\n@param spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.",
                "id": 56,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 45,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 42,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "1662:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1662:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "1677:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1677:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1661:32:0"
                },
                "returnParameters": {
                  "id": 48,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 47,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "1715:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1715:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1714:9:0"
                },
                "scope": 382,
                "src": "1643:129:0",
                "stateMutability": "view",
                "superFunction": 710,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 74,
                  "nodeType": "Block",
                  "src": "2006:70:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 66,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "2026:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2026:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2038:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2042:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 65,
                          "name": "_transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "2016:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2016:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 71,
                      "nodeType": "ExpressionStatement",
                      "src": "2016:32:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2065:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 64,
                      "id": 73,
                      "nodeType": "Return",
                      "src": "2058:11:0"
                    }
                  ]
                },
                "documentation": "@dev Transfer token to a specified address\n@param to The address to transfer to.\n@param value The amount to be transferred.",
                "id": 75,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 61,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 58,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "1957:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1957:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "1969:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1969:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1956:27:0"
                },
                "returnParameters": {
                  "id": 64,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 63,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "2000:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2000:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1999:6:0"
                },
                "scope": 382,
                "src": "1939:137:0",
                "stateMutability": "nonpayable",
                "superFunction": 669,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 93,
                  "nodeType": "Block",
                  "src": "2783:74:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "2802:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2802:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "2814:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2823:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 84,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "2793:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2793:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 90,
                      "nodeType": "ExpressionStatement",
                      "src": "2793:36:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2846:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 83,
                      "id": 92,
                      "nodeType": "Return",
                      "src": "2839:11:0"
                    }
                  ]
                },
                "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\nBeware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param spender The address which will spend the funds.\n@param value The amount of tokens to be spent.",
                "id": 94,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 80,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 77,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "2729:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2729:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 79,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "2746:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2746:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2728:32:0"
                },
                "returnParameters": {
                  "id": 83,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 82,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "2777:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2777:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2776:6:0"
                },
                "scope": 382,
                "src": "2712:145:0",
                "stateMutability": "nonpayable",
                "superFunction": 678,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 128,
                  "nodeType": "Block",
                  "src": "3405:139:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "3425:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "3431:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "3435:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 105,
                          "name": "_transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "3415:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3415:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 110,
                      "nodeType": "ExpressionStatement",
                      "src": "3415:26:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "3460:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "3466:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3466:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 122,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "3509:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 115,
                                    "name": "_allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "3478:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 117,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 116,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3487:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3478:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 120,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 118,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1517,
                                    "src": "3493:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3493:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3478:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1457,
                              "src": "3478:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3478:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 111,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "3451:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 125,
                      "nodeType": "ExpressionStatement",
                      "src": "3451:65:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3533:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 104,
                      "id": 127,
                      "nodeType": "Return",
                      "src": "3526:11:0"
                    }
                  ]
                },
                "documentation": "@dev Transfer tokens from one address to another.\nNote that while this function emits an Approval event, this is not required as per the specification,\nand other compliant implementations may not emit the event.\n@param from address The address which you want to send tokens from\n@param to address The address which you want to transfer to\n@param value uint256 the amount of tokens to be transferred",
                "id": 129,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 101,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 96,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "3342:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3342:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 98,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "3356:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 97,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3356:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 100,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "3368:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3368:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3341:41:0"
                },
                "returnParameters": {
                  "id": 104,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 103,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
                      "src": "3399:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 102,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3399:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3398:6:0"
                },
                "scope": 382,
                "src": "3320:224:0",
                "stateMutability": "nonpayable",
                "superFunction": 689,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 155,
                  "nodeType": "Block",
                  "src": "4144:114:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 139,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "4163:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4163:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "4175:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 149,
                                "name": "addedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "4218:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 142,
                                    "name": "_allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "4184:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 145,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 143,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1517,
                                      "src": "4193:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "4193:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4184:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 147,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 146,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 131,
                                  "src": "4205:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4184:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1481,
                              "src": "4184:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4184:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 138,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "4154:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4154:76:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 152,
                      "nodeType": "ExpressionStatement",
                      "src": "4154:76:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4247:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 137,
                      "id": 154,
                      "nodeType": "Return",
                      "src": "4240:11:0"
                    }
                  ]
                },
                "documentation": "@dev Increase the amount of tokens that an owner allowed to a spender.\napprove should be called when _allowed[msg.sender][spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\nEmits an Approval event.\n@param spender The address which will spend the funds.\n@param addedValue The amount of tokens to increase the allowance by.",
                "id": 156,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "increaseAllowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 134,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 131,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "4085:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4085:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 133,
                      "name": "addedValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "4102:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4084:37:0"
                },
                "returnParameters": {
                  "id": 137,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 136,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "4138:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4138:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4137:6:0"
                },
                "scope": 382,
                "src": "4058:200:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 182,
                  "nodeType": "Block",
                  "src": "4868:119:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "4887:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4887:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 168,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 158,
                            "src": "4899:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 176,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 160,
                                "src": "4942:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 169,
                                    "name": "_allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "4908:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 172,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 170,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1517,
                                      "src": "4917:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "4917:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4908:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 174,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 173,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 158,
                                  "src": "4929:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4908:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1457,
                              "src": "4908:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4908:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 165,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "4878:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4878:81:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 179,
                      "nodeType": "ExpressionStatement",
                      "src": "4878:81:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4976:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 164,
                      "id": 181,
                      "nodeType": "Return",
                      "src": "4969:11:0"
                    }
                  ]
                },
                "documentation": "@dev Decrease the amount of tokens that an owner allowed to a spender.\napprove should be called when _allowed[msg.sender][spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\nEmits an Approval event.\n@param spender The address which will spend the funds.\n@param subtractedValue The amount of tokens to decrease the allowance by.",
                "id": 183,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "decreaseAllowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 161,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 158,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "4804:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4804:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 160,
                      "name": "subtractedValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "4821:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4821:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4803:42:0"
                },
                "returnParameters": {
                  "id": 164,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 163,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "4862:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 162,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4862:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4861:6:0"
                },
                "scope": 382,
                "src": "4777:210:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 228,
                  "nodeType": "Block",
                  "src": "5275:187:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "5293:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5307:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5299:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5299:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "5293:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 192,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "5285:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5285:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 199,
                      "nodeType": "ExpressionStatement",
                      "src": "5285:25:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 200,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "5321:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 202,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "5331:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5321:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 207,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "5359:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 203,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "5339:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 204,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "5349:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5339:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1457,
                            "src": "5339:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5339:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5321:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 210,
                      "nodeType": "ExpressionStatement",
                      "src": "5321:44:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 211,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "5375:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "5385:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5375:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "5409:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 214,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "5391:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 216,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 215,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "5401:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5391:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1481,
                            "src": "5391:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5391:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5375:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 221,
                      "nodeType": "ExpressionStatement",
                      "src": "5375:40:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 223,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "5439:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "5445:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "5449:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 222,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "5430:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5430:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 227,
                      "nodeType": "EmitStatement",
                      "src": "5425:30:0"
                    }
                  ]
                },
                "documentation": "@dev Transfer token for a specified addresses\n@param from The address to transfer from.\n@param to The address to transfer to.\n@param value The amount to be transferred.",
                "id": 229,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 190,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 185,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "5225:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 184,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5225:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 187,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "5239:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5239:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 189,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "5251:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 188,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5251:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5224:41:0"
                },
                "returnParameters": {
                  "id": 191,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5275:0:0"
                },
                "scope": 382,
                "src": "5206:256:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 270,
                  "nodeType": "Block",
                  "src": "5861:207:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 237,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "5879:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5898:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5890:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5890:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "5879:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 236,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "5871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5871:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 243,
                      "nodeType": "ExpressionStatement",
                      "src": "5871:30:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 244,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "5912:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 247,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "5944:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 245,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "5927:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1481,
                            "src": "5927:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5927:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5912:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 250,
                      "nodeType": "ExpressionStatement",
                      "src": "5912:38:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 251,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "5960:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 253,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "5970:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5960:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 258,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "6004:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 254,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "5981:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 256,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "5991:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5981:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1481,
                            "src": "5981:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5981:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5960:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 261,
                      "nodeType": "ExpressionStatement",
                      "src": "5960:50:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6042:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6034:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6034:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 266,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "6046:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "6055:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 262,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "6025:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6025:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 269,
                      "nodeType": "EmitStatement",
                      "src": "6020:41:0"
                    }
                  ]
                },
                "documentation": "@dev Internal function that mints an amount of the token and assigns it to\nan account. This encapsulates the modification of balances such that the\nproper events are emitted.\n@param account The account that will receive the created tokens.\n@param value The amount that will be created.",
                "id": 271,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_mint",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 234,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 231,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "5820:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5820:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 233,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "5837:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5837:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5819:32:0"
                },
                "returnParameters": {
                  "id": 235,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5861:0:0"
                },
                "scope": 382,
                "src": "5805:263:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 312,
                  "nodeType": "Block",
                  "src": "6350:207:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "6368:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6387:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6379:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6379:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "6368:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 278,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "6360:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6360:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 285,
                      "nodeType": "ExpressionStatement",
                      "src": "6360:30:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "6401:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 289,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "6433:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 287,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "6416:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1457,
                            "src": "6416:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6416:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6401:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 292,
                      "nodeType": "ExpressionStatement",
                      "src": "6401:38:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "6449:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 294,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "6459:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6449:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 300,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "6493:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 296,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "6470:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 298,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 297,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "6480:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6470:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1457,
                            "src": "6470:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6470:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6449:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 303,
                      "nodeType": "ExpressionStatement",
                      "src": "6449:50:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 305,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "6523:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6540:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6532:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6532:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 309,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "6544:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 304,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "6514:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6514:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 311,
                      "nodeType": "EmitStatement",
                      "src": "6509:41:0"
                    }
                  ]
                },
                "documentation": "@dev Internal function that burns an amount of the token of a given\naccount.\n@param account The account whose tokens will be burnt.\n@param value The amount that will be burnt.",
                "id": 313,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_burn",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 276,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 273,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "6309:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 275,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "6326:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6308:32:0"
                },
                "returnParameters": {
                  "id": 277,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6350:0:0"
                },
                "scope": 382,
                "src": "6294:263:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 352,
                  "nodeType": "Block",
                  "src": "6896:174:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 323,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 317,
                              "src": "6914:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6933:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6925:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6925:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "6914:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 322,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "6906:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6906:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 329,
                      "nodeType": "ExpressionStatement",
                      "src": "6906:30:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "6954:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6971:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6963:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6963:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "6954:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 330,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "6946:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6946:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 337,
                      "nodeType": "ExpressionStatement",
                      "src": "6946:28:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 338,
                              "name": "_allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "6985:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 341,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 339,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "6994:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6985:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 342,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 340,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "7001:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6985:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 343,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "7012:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6985:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 345,
                      "nodeType": "ExpressionStatement",
                      "src": "6985:32:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 347,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "7041:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 348,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "7048:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "7057:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 346,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 726,
                          "src": "7032:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7032:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 351,
                      "nodeType": "EmitStatement",
                      "src": "7027:36:0"
                    }
                  ]
                },
                "documentation": "@dev Approve an address to spend another addresses' tokens.\n@param owner The address that owns the tokens.\n@param spender The address that will spend the tokens.\n@param value The number of tokens that can be spent.",
                "id": 353,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 320,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 315,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 353,
                      "src": "6840:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6840:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 317,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 353,
                      "src": "6855:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6855:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 319,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 353,
                      "src": "6872:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6872:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6839:47:0"
                },
                "returnParameters": {
                  "id": 321,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6896:0:0"
                },
                "scope": 382,
                "src": "6822:248:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 380,
                  "nodeType": "Block",
                  "src": "7519:119:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 361,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "7535:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 362,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "7544:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 360,
                          "name": "_burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "7529:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7529:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 364,
                      "nodeType": "ExpressionStatement",
                      "src": "7529:21:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "7569:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 367,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "7578:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7578:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 376,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "7624:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 369,
                                    "name": "_allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "7590:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 371,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 370,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 355,
                                    "src": "7599:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7590:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 374,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 372,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1517,
                                    "src": "7608:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7608:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7590:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1457,
                              "src": "7590:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7590:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 365,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "7560:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7560:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 379,
                      "nodeType": "ExpressionStatement",
                      "src": "7560:71:0"
                    }
                  ]
                },
                "documentation": "@dev Internal function that burns an amount of the token of a given\naccount, deducting from the sender's allowance for said account. Uses the\ninternal burn function.\nEmits an Approval event (reflecting the reduced allowance).\n@param account The account whose tokens will be burnt.\n@param value The amount that will be burnt.",
                "id": 381,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_burnFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 358,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 355,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "7478:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7478:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 357,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "7495:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 356,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7495:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7477:32:0"
                },
                "returnParameters": {
                  "id": 359,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7519:0:0"
                },
                "scope": 382,
                "src": "7459:179:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 383,
            "src": "618:7022:0"
          }
        ],
        "src": "0:7641:0"
      },
      "id": 0,
      "legacyAST": {
        "attributes": {
          "absolutePath": "ERC20.sol",
          "exportedSymbols": {
            "ERC20": [
              382
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 1,
            "name": "PragmaDirective",
            "src": "0:23:0"
          },
          {
            "attributes": {
              "SourceUnit": 728,
              "absolutePath": "IERC20.sol",
              "file": "./IERC20.sol",
              "scope": 383,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 2,
            "name": "ImportDirective",
            "src": "25:22:0"
          },
          {
            "attributes": {
              "SourceUnit": 1503,
              "absolutePath": "SafeMath.sol",
              "file": "./SafeMath.sol",
              "scope": 383,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 3,
            "name": "ImportDirective",
            "src": "48:24:0"
          },
          {
            "attributes": {
              "contractDependencies": [
                727
              ],
              "contractKind": "contract",
              "documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\nhttps://eips.ethereum.org/EIPS/eip-20\nOriginally based on code by FirstBlood:\nhttps://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\nall accounts just by listening to said events. Note that this isn't required by the specification, and other\ncompliant implementations may not do it.",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                382,
                727
              ],
              "name": "ERC20",
              "scope": 383
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "IERC20",
                      "referencedDeclaration": 727,
                      "type": "contract IERC20"
                    },
                    "id": 4,
                    "name": "UserDefinedTypeName",
                    "src": "636:6:0"
                  }
                ],
                "id": 5,
                "name": "InheritanceSpecifier",
                "src": "636:6:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "SafeMath",
                      "referencedDeclaration": 1502,
                      "type": "library SafeMath"
                    },
                    "id": 6,
                    "name": "UserDefinedTypeName",
                    "src": "655:8:0"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7,
                    "name": "ElementaryTypeName",
                    "src": "668:7:0"
                  }
                ],
                "id": 8,
                "name": "UsingForDirective",
                "src": "649:27:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_balances",
                  "scope": 382,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "mapping(address => uint256)",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(address => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 9,
                        "name": "ElementaryTypeName",
                        "src": "691:7:0"
                      },
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10,
                        "name": "ElementaryTypeName",
                        "src": "702:7:0"
                      }
                    ],
                    "id": 11,
                    "name": "Mapping",
                    "src": "682:28:0"
                  }
                ],
                "id": 12,
                "name": "VariableDeclaration",
                "src": "682:46:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_allowed",
                  "scope": 382,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "mapping(address => mapping(address => uint256))",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(address => mapping(address => uint256))"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 13,
                        "name": "ElementaryTypeName",
                        "src": "744:7:0"
                      },
                      {
                        "attributes": {
                          "type": "mapping(address => uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "type": "address"
                            },
                            "id": 14,
                            "name": "ElementaryTypeName",
                            "src": "764:7:0"
                          },
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 15,
                            "name": "ElementaryTypeName",
                            "src": "775:7:0"
                          }
                        ],
                        "id": 16,
                        "name": "Mapping",
                        "src": "755:28:0"
                      }
                    ],
                    "id": 17,
                    "name": "Mapping",
                    "src": "735:49:0"
                  }
                ],
                "id": 18,
                "name": "VariableDeclaration",
                "src": "735:66:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_totalSupply",
                  "scope": 382,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
                    "src": "808:7:0"
                  }
                ],
                "id": 20,
                "name": "VariableDeclaration",
                "src": "808:28:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Total number of tokens in existence",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "totalSupply",
                  "scope": 382,
                  "stateMutability": "view",
                  "superFunction": 694,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 21,
                    "name": "ParameterList",
                    "src": "927:2:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 28,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 22,
                            "name": "ElementaryTypeName",
                            "src": "951:7:0"
                          }
                        ],
                        "id": 23,
                        "name": "VariableDeclaration",
                        "src": "951:7:0"
                      }
                    ],
                    "id": 24,
                    "name": "ParameterList",
                    "src": "950:9:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 24
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 20,
                              "type": "uint256",
                              "value": "_totalSupply"
                            },
                            "id": 25,
                            "name": "Identifier",
                            "src": "977:12:0"
                          }
                        ],
                        "id": 26,
                        "name": "Return",
                        "src": "970:19:0"
                      }
                    ],
                    "id": 27,
                    "name": "Block",
                    "src": "960:36:0"
                  }
                ],
                "id": 28,
                "name": "FunctionDefinition",
                "src": "907:89:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Gets the balance of the specified address.\n@param owner The address to query the balance of.\n@return A uint256 representing the amount owned by the passed address.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "balanceOf",
                  "scope": 382,
                  "stateMutability": "view",
                  "superFunction": 701,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "owner",
                          "scope": 40,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 29,
                            "name": "ElementaryTypeName",
                            "src": "1227:7:0"
                          }
                        ],
                        "id": 30,
                        "name": "VariableDeclaration",
                        "src": "1227:13:0"
                      }
                    ],
                    "id": 31,
                    "name": "ParameterList",
                    "src": "1226:15:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 40,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 32,
                            "name": "ElementaryTypeName",
                            "src": "1263:7:0"
                          }
                        ],
                        "id": 33,
                        "name": "VariableDeclaration",
                        "src": "1263:7:0"
                      }
                    ],
                    "id": 34,
                    "name": "ParameterList",
                    "src": "1262:9:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 34
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "mapping(address => uint256)",
                                  "value": "_balances"
                                },
                                "id": 35,
                                "name": "Identifier",
                                "src": "1289:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 36,
                                "name": "Identifier",
                                "src": "1299:5:0"
                              }
                            ],
                            "id": 37,
                            "name": "IndexAccess",
                            "src": "1289:16:0"
                          }
                        ],
                        "id": 38,
                        "name": "Return",
                        "src": "1282:23:0"
                      }
                    ],
                    "id": 39,
                    "name": "Block",
                    "src": "1272:40:0"
                  }
                ],
                "id": 40,
                "name": "FunctionDefinition",
                "src": "1208:104:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param owner address The address which owns the funds.\n@param spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "allowance",
                  "scope": 382,
                  "stateMutability": "view",
                  "superFunction": 710,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "owner",
                          "scope": 56,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 41,
                            "name": "ElementaryTypeName",
                            "src": "1662:7:0"
                          }
                        ],
                        "id": 42,
                        "name": "VariableDeclaration",
                        "src": "1662:13:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 56,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 43,
                            "name": "ElementaryTypeName",
                            "src": "1677:7:0"
                          }
                        ],
                        "id": 44,
                        "name": "VariableDeclaration",
                        "src": "1677:15:0"
                      }
                    ],
                    "id": 45,
                    "name": "ParameterList",
                    "src": "1661:32:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 56,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 46,
                            "name": "ElementaryTypeName",
                            "src": "1715:7:0"
                          }
                        ],
                        "id": 47,
                        "name": "VariableDeclaration",
                        "src": "1715:7:0"
                      }
                    ],
                    "id": 48,
                    "name": "ParameterList",
                    "src": "1714:9:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 48
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(address => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 18,
                                      "type": "mapping(address => mapping(address => uint256))",
                                      "value": "_allowed"
                                    },
                                    "id": 49,
                                    "name": "Identifier",
                                    "src": "1741:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 42,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 50,
                                    "name": "Identifier",
                                    "src": "1750:5:0"
                                  }
                                ],
                                "id": 51,
                                "name": "IndexAccess",
                                "src": "1741:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 52,
                                "name": "Identifier",
                                "src": "1757:7:0"
                              }
                            ],
                            "id": 53,
                            "name": "IndexAccess",
                            "src": "1741:24:0"
                          }
                        ],
                        "id": 54,
                        "name": "Return",
                        "src": "1734:31:0"
                      }
                    ],
                    "id": 55,
                    "name": "Block",
                    "src": "1724:48:0"
                  }
                ],
                "id": 56,
                "name": "FunctionDefinition",
                "src": "1643:129:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Transfer token to a specified address\n@param to The address to transfer to.\n@param value The amount to be transferred.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "transfer",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": 669,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 75,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 57,
                            "name": "ElementaryTypeName",
                            "src": "1957:7:0"
                          }
                        ],
                        "id": 58,
                        "name": "VariableDeclaration",
                        "src": "1957:10:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 75,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 59,
                            "name": "ElementaryTypeName",
                            "src": "1969:7:0"
                          }
                        ],
                        "id": 60,
                        "name": "VariableDeclaration",
                        "src": "1969:13:0"
                      }
                    ],
                    "id": 61,
                    "name": "ParameterList",
                    "src": "1956:27:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 75,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 62,
                            "name": "ElementaryTypeName",
                            "src": "2000:4:0"
                          }
                        ],
                        "id": 63,
                        "name": "VariableDeclaration",
                        "src": "2000:4:0"
                      }
                    ],
                    "id": 64,
                    "name": "ParameterList",
                    "src": "1999:6:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 229,
                                  "type": "function (address,address,uint256)",
                                  "value": "_transfer"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "2016:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 66,
                                    "name": "Identifier",
                                    "src": "2026:3:0"
                                  }
                                ],
                                "id": 67,
                                "name": "MemberAccess",
                                "src": "2026:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 68,
                                "name": "Identifier",
                                "src": "2038:2:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 69,
                                "name": "Identifier",
                                "src": "2042:5:0"
                              }
                            ],
                            "id": 70,
                            "name": "FunctionCall",
                            "src": "2016:32:0"
                          }
                        ],
                        "id": 71,
                        "name": "ExpressionStatement",
                        "src": "2016:32:0"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 64
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 72,
                            "name": "Literal",
                            "src": "2065:4:0"
                          }
                        ],
                        "id": 73,
                        "name": "Return",
                        "src": "2058:11:0"
                      }
                    ],
                    "id": 74,
                    "name": "Block",
                    "src": "2006:70:0"
                  }
                ],
                "id": 75,
                "name": "FunctionDefinition",
                "src": "1939:137:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\nBeware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param spender The address which will spend the funds.\n@param value The amount of tokens to be spent.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "approve",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": 678,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 94,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 76,
                            "name": "ElementaryTypeName",
                            "src": "2729:7:0"
                          }
                        ],
                        "id": 77,
                        "name": "VariableDeclaration",
                        "src": "2729:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 94,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 78,
                            "name": "ElementaryTypeName",
                            "src": "2746:7:0"
                          }
                        ],
                        "id": 79,
                        "name": "VariableDeclaration",
                        "src": "2746:13:0"
                      }
                    ],
                    "id": 80,
                    "name": "ParameterList",
                    "src": "2728:32:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 94,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 81,
                            "name": "ElementaryTypeName",
                            "src": "2777:4:0"
                          }
                        ],
                        "id": 82,
                        "name": "VariableDeclaration",
                        "src": "2777:4:0"
                      }
                    ],
                    "id": 83,
                    "name": "ParameterList",
                    "src": "2776:6:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 353,
                                  "type": "function (address,address,uint256)",
                                  "value": "_approve"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "2793:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 85,
                                    "name": "Identifier",
                                    "src": "2802:3:0"
                                  }
                                ],
                                "id": 86,
                                "name": "MemberAccess",
                                "src": "2802:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 77,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 87,
                                "name": "Identifier",
                                "src": "2814:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 79,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 88,
                                "name": "Identifier",
                                "src": "2823:5:0"
                              }
                            ],
                            "id": 89,
                            "name": "FunctionCall",
                            "src": "2793:36:0"
                          }
                        ],
                        "id": 90,
                        "name": "ExpressionStatement",
                        "src": "2793:36:0"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 83
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 91,
                            "name": "Literal",
                            "src": "2846:4:0"
                          }
                        ],
                        "id": 92,
                        "name": "Return",
                        "src": "2839:11:0"
                      }
                    ],
                    "id": 93,
                    "name": "Block",
                    "src": "2783:74:0"
                  }
                ],
                "id": 94,
                "name": "FunctionDefinition",
                "src": "2712:145:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Transfer tokens from one address to another.\nNote that while this function emits an Approval event, this is not required as per the specification,\nand other compliant implementations may not emit the event.\n@param from address The address which you want to send tokens from\n@param to address The address which you want to transfer to\n@param value uint256 the amount of tokens to be transferred",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "transferFrom",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": 689,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "from",
                          "scope": 129,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 95,
                            "name": "ElementaryTypeName",
                            "src": "3342:7:0"
                          }
                        ],
                        "id": 96,
                        "name": "VariableDeclaration",
                        "src": "3342:12:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 129,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 97,
                            "name": "ElementaryTypeName",
                            "src": "3356:7:0"
                          }
                        ],
                        "id": 98,
                        "name": "VariableDeclaration",
                        "src": "3356:10:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 129,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 99,
                            "name": "ElementaryTypeName",
                            "src": "3368:7:0"
                          }
                        ],
                        "id": 100,
                        "name": "VariableDeclaration",
                        "src": "3368:13:0"
                      }
                    ],
                    "id": 101,
                    "name": "ParameterList",
                    "src": "3341:41:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 129,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 102,
                            "name": "ElementaryTypeName",
                            "src": "3399:4:0"
                          }
                        ],
                        "id": 103,
                        "name": "VariableDeclaration",
                        "src": "3399:4:0"
                      }
                    ],
                    "id": 104,
                    "name": "ParameterList",
                    "src": "3398:6:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 229,
                                  "type": "function (address,address,uint256)",
                                  "value": "_transfer"
                                },
                                "id": 105,
                                "name": "Identifier",
                                "src": "3415:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 106,
                                "name": "Identifier",
                                "src": "3425:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 98,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 107,
                                "name": "Identifier",
                                "src": "3431:2:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 100,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 108,
                                "name": "Identifier",
                                "src": "3435:5:0"
                              }
                            ],
                            "id": 109,
                            "name": "FunctionCall",
                            "src": "3415:26:0"
                          }
                        ],
                        "id": 110,
                        "name": "ExpressionStatement",
                        "src": "3415:26:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 353,
                                  "type": "function (address,address,uint256)",
                                  "value": "_approve"
                                },
                                "id": 111,
                                "name": "Identifier",
                                "src": "3451:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 112,
                                "name": "Identifier",
                                "src": "3460:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 113,
                                    "name": "Identifier",
                                    "src": "3466:3:0"
                                  }
                                ],
                                "id": 114,
                                "name": "MemberAccess",
                                "src": "3466:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1457,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(address => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 18,
                                                  "type": "mapping(address => mapping(address => uint256))",
                                                  "value": "_allowed"
                                                },
                                                "id": 115,
                                                "name": "Identifier",
                                                "src": "3478:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 96,
                                                  "type": "address",
                                                  "value": "from"
                                                },
                                                "id": 116,
                                                "name": "Identifier",
                                                "src": "3487:4:0"
                                              }
                                            ],
                                            "id": 117,
                                            "name": "IndexAccess",
                                            "src": "3478:14:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1517,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 118,
                                                "name": "Identifier",
                                                "src": "3493:3:0"
                                              }
                                            ],
                                            "id": 119,
                                            "name": "MemberAccess",
                                            "src": "3493:10:0"
                                          }
                                        ],
                                        "id": 120,
                                        "name": "IndexAccess",
                                        "src": "3478:26:0"
                                      }
                                    ],
                                    "id": 121,
                                    "name": "MemberAccess",
                                    "src": "3478:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 100,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 122,
                                    "name": "Identifier",
                                    "src": "3509:5:0"
                                  }
                                ],
                                "id": 123,
                                "name": "FunctionCall",
                                "src": "3478:37:0"
                              }
                            ],
                            "id": 124,
                            "name": "FunctionCall",
                            "src": "3451:65:0"
                          }
                        ],
                        "id": 125,
                        "name": "ExpressionStatement",
                        "src": "3451:65:0"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 104
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 126,
                            "name": "Literal",
                            "src": "3533:4:0"
                          }
                        ],
                        "id": 127,
                        "name": "Return",
                        "src": "3526:11:0"
                      }
                    ],
                    "id": 128,
                    "name": "Block",
                    "src": "3405:139:0"
                  }
                ],
                "id": 129,
                "name": "FunctionDefinition",
                "src": "3320:224:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Increase the amount of tokens that an owner allowed to a spender.\napprove should be called when _allowed[msg.sender][spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\nEmits an Approval event.\n@param spender The address which will spend the funds.\n@param addedValue The amount of tokens to increase the allowance by.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "increaseAllowance",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 156,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 130,
                            "name": "ElementaryTypeName",
                            "src": "4085:7:0"
                          }
                        ],
                        "id": 131,
                        "name": "VariableDeclaration",
                        "src": "4085:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "addedValue",
                          "scope": 156,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 132,
                            "name": "ElementaryTypeName",
                            "src": "4102:7:0"
                          }
                        ],
                        "id": 133,
                        "name": "VariableDeclaration",
                        "src": "4102:18:0"
                      }
                    ],
                    "id": 134,
                    "name": "ParameterList",
                    "src": "4084:37:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 156,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 135,
                            "name": "ElementaryTypeName",
                            "src": "4138:4:0"
                          }
                        ],
                        "id": 136,
                        "name": "VariableDeclaration",
                        "src": "4138:4:0"
                      }
                    ],
                    "id": 137,
                    "name": "ParameterList",
                    "src": "4137:6:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 353,
                                  "type": "function (address,address,uint256)",
                                  "value": "_approve"
                                },
                                "id": 138,
                                "name": "Identifier",
                                "src": "4154:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 139,
                                    "name": "Identifier",
                                    "src": "4163:3:0"
                                  }
                                ],
                                "id": 140,
                                "name": "MemberAccess",
                                "src": "4163:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 131,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 141,
                                "name": "Identifier",
                                "src": "4175:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 1481,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(address => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 18,
                                                  "type": "mapping(address => mapping(address => uint256))",
                                                  "value": "_allowed"
                                                },
                                                "id": 142,
                                                "name": "Identifier",
                                                "src": "4184:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1517,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 143,
                                                    "name": "Identifier",
                                                    "src": "4193:3:0"
                                                  }
                                                ],
                                                "id": 144,
                                                "name": "MemberAccess",
                                                "src": "4193:10:0"
                                              }
                                            ],
                                            "id": 145,
                                            "name": "IndexAccess",
                                            "src": "4184:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 131,
                                              "type": "address",
                                              "value": "spender"
                                            },
                                            "id": 146,
                                            "name": "Identifier",
                                            "src": "4205:7:0"
                                          }
                                        ],
                                        "id": 147,
                                        "name": "IndexAccess",
                                        "src": "4184:29:0"
                                      }
                                    ],
                                    "id": 148,
                                    "name": "MemberAccess",
                                    "src": "4184:33:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 133,
                                      "type": "uint256",
                                      "value": "addedValue"
                                    },
                                    "id": 149,
                                    "name": "Identifier",
                                    "src": "4218:10:0"
                                  }
                                ],
                                "id": 150,
                                "name": "FunctionCall",
                                "src": "4184:45:0"
                              }
                            ],
                            "id": 151,
                            "name": "FunctionCall",
                            "src": "4154:76:0"
                          }
                        ],
                        "id": 152,
                        "name": "ExpressionStatement",
                        "src": "4154:76:0"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 137
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 153,
                            "name": "Literal",
                            "src": "4247:4:0"
                          }
                        ],
                        "id": 154,
                        "name": "Return",
                        "src": "4240:11:0"
                      }
                    ],
                    "id": 155,
                    "name": "Block",
                    "src": "4144:114:0"
                  }
                ],
                "id": 156,
                "name": "FunctionDefinition",
                "src": "4058:200:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Decrease the amount of tokens that an owner allowed to a spender.\napprove should be called when _allowed[msg.sender][spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\nEmits an Approval event.\n@param spender The address which will spend the funds.\n@param subtractedValue The amount of tokens to decrease the allowance by.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "decreaseAllowance",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 183,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 157,
                            "name": "ElementaryTypeName",
                            "src": "4804:7:0"
                          }
                        ],
                        "id": 158,
                        "name": "VariableDeclaration",
                        "src": "4804:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "subtractedValue",
                          "scope": 183,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 159,
                            "name": "ElementaryTypeName",
                            "src": "4821:7:0"
                          }
                        ],
                        "id": 160,
                        "name": "VariableDeclaration",
                        "src": "4821:23:0"
                      }
                    ],
                    "id": 161,
                    "name": "ParameterList",
                    "src": "4803:42:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 183,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 162,
                            "name": "ElementaryTypeName",
                            "src": "4862:4:0"
                          }
                        ],
                        "id": 163,
                        "name": "VariableDeclaration",
                        "src": "4862:4:0"
                      }
                    ],
                    "id": 164,
                    "name": "ParameterList",
                    "src": "4861:6:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 353,
                                  "type": "function (address,address,uint256)",
                                  "value": "_approve"
                                },
                                "id": 165,
                                "name": "Identifier",
                                "src": "4878:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 166,
                                    "name": "Identifier",
                                    "src": "4887:3:0"
                                  }
                                ],
                                "id": 167,
                                "name": "MemberAccess",
                                "src": "4887:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 158,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 168,
                                "name": "Identifier",
                                "src": "4899:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1457,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(address => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 18,
                                                  "type": "mapping(address => mapping(address => uint256))",
                                                  "value": "_allowed"
                                                },
                                                "id": 169,
                                                "name": "Identifier",
                                                "src": "4908:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1517,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 170,
                                                    "name": "Identifier",
                                                    "src": "4917:3:0"
                                                  }
                                                ],
                                                "id": 171,
                                                "name": "MemberAccess",
                                                "src": "4917:10:0"
                                              }
                                            ],
                                            "id": 172,
                                            "name": "IndexAccess",
                                            "src": "4908:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 158,
                                              "type": "address",
                                              "value": "spender"
                                            },
                                            "id": 173,
                                            "name": "Identifier",
                                            "src": "4929:7:0"
                                          }
                                        ],
                                        "id": 174,
                                        "name": "IndexAccess",
                                        "src": "4908:29:0"
                                      }
                                    ],
                                    "id": 175,
                                    "name": "MemberAccess",
                                    "src": "4908:33:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 160,
                                      "type": "uint256",
                                      "value": "subtractedValue"
                                    },
                                    "id": 176,
                                    "name": "Identifier",
                                    "src": "4942:15:0"
                                  }
                                ],
                                "id": 177,
                                "name": "FunctionCall",
                                "src": "4908:50:0"
                              }
                            ],
                            "id": 178,
                            "name": "FunctionCall",
                            "src": "4878:81:0"
                          }
                        ],
                        "id": 179,
                        "name": "ExpressionStatement",
                        "src": "4878:81:0"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 164
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 180,
                            "name": "Literal",
                            "src": "4976:4:0"
                          }
                        ],
                        "id": 181,
                        "name": "Return",
                        "src": "4969:11:0"
                      }
                    ],
                    "id": 182,
                    "name": "Block",
                    "src": "4868:119:0"
                  }
                ],
                "id": 183,
                "name": "FunctionDefinition",
                "src": "4777:210:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Transfer token for a specified addresses\n@param from The address to transfer from.\n@param to The address to transfer to.\n@param value The amount to be transferred.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_transfer",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "from",
                          "scope": 229,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 184,
                            "name": "ElementaryTypeName",
                            "src": "5225:7:0"
                          }
                        ],
                        "id": 185,
                        "name": "VariableDeclaration",
                        "src": "5225:12:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 229,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 186,
                            "name": "ElementaryTypeName",
                            "src": "5239:7:0"
                          }
                        ],
                        "id": 187,
                        "name": "VariableDeclaration",
                        "src": "5239:10:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 229,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 188,
                            "name": "ElementaryTypeName",
                            "src": "5251:7:0"
                          }
                        ],
                        "id": 189,
                        "name": "VariableDeclaration",
                        "src": "5251:13:0"
                      }
                    ],
                    "id": 190,
                    "name": "ParameterList",
                    "src": "5224:41:0"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 191,
                    "name": "ParameterList",
                    "src": "5275:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 192,
                                "name": "Identifier",
                                "src": "5285:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 187,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 193,
                                    "name": "Identifier",
                                    "src": "5293:2:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 194,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "5299:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 195,
                                        "name": "Literal",
                                        "src": "5307:1:0"
                                      }
                                    ],
                                    "id": 196,
                                    "name": "FunctionCall",
                                    "src": "5299:10:0"
                                  }
                                ],
                                "id": 197,
                                "name": "BinaryOperation",
                                "src": "5293:16:0"
                              }
                            ],
                            "id": 198,
                            "name": "FunctionCall",
                            "src": "5285:25:0"
                          }
                        ],
                        "id": 199,
                        "name": "ExpressionStatement",
                        "src": "5285:25:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 200,
                                    "name": "Identifier",
                                    "src": "5321:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 185,
                                      "type": "address",
                                      "value": "from"
                                    },
                                    "id": 201,
                                    "name": "Identifier",
                                    "src": "5331:4:0"
                                  }
                                ],
                                "id": 202,
                                "name": "IndexAccess",
                                "src": "5321:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1457,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12,
                                              "type": "mapping(address => uint256)",
                                              "value": "_balances"
                                            },
                                            "id": 203,
                                            "name": "Identifier",
                                            "src": "5339:9:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 185,
                                              "type": "address",
                                              "value": "from"
                                            },
                                            "id": 204,
                                            "name": "Identifier",
                                            "src": "5349:4:0"
                                          }
                                        ],
                                        "id": 205,
                                        "name": "IndexAccess",
                                        "src": "5339:15:0"
                                      }
                                    ],
                                    "id": 206,
                                    "name": "MemberAccess",
                                    "src": "5339:19:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 189,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 207,
                                    "name": "Identifier",
                                    "src": "5359:5:0"
                                  }
                                ],
                                "id": 208,
                                "name": "FunctionCall",
                                "src": "5339:26:0"
                              }
                            ],
                            "id": 209,
                            "name": "Assignment",
                            "src": "5321:44:0"
                          }
                        ],
                        "id": 210,
                        "name": "ExpressionStatement",
                        "src": "5321:44:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 211,
                                    "name": "Identifier",
                                    "src": "5375:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 187,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 212,
                                    "name": "Identifier",
                                    "src": "5385:2:0"
                                  }
                                ],
                                "id": 213,
                                "name": "IndexAccess",
                                "src": "5375:13:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 1481,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12,
                                              "type": "mapping(address => uint256)",
                                              "value": "_balances"
                                            },
                                            "id": 214,
                                            "name": "Identifier",
                                            "src": "5391:9:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 187,
                                              "type": "address",
                                              "value": "to"
                                            },
                                            "id": 215,
                                            "name": "Identifier",
                                            "src": "5401:2:0"
                                          }
                                        ],
                                        "id": 216,
                                        "name": "IndexAccess",
                                        "src": "5391:13:0"
                                      }
                                    ],
                                    "id": 217,
                                    "name": "MemberAccess",
                                    "src": "5391:17:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 189,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 218,
                                    "name": "Identifier",
                                    "src": "5409:5:0"
                                  }
                                ],
                                "id": 219,
                                "name": "FunctionCall",
                                "src": "5391:24:0"
                              }
                            ],
                            "id": 220,
                            "name": "Assignment",
                            "src": "5375:40:0"
                          }
                        ],
                        "id": 221,
                        "name": "ExpressionStatement",
                        "src": "5375:40:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 718,
                                  "type": "function (address,address,uint256)",
                                  "value": "Transfer"
                                },
                                "id": 222,
                                "name": "Identifier",
                                "src": "5430:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 185,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 223,
                                "name": "Identifier",
                                "src": "5439:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 187,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 224,
                                "name": "Identifier",
                                "src": "5445:2:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 189,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 225,
                                "name": "Identifier",
                                "src": "5449:5:0"
                              }
                            ],
                            "id": 226,
                            "name": "FunctionCall",
                            "src": "5430:25:0"
                          }
                        ],
                        "id": 227,
                        "name": "EmitStatement",
                        "src": "5425:30:0"
                      }
                    ],
                    "id": 228,
                    "name": "Block",
                    "src": "5275:187:0"
                  }
                ],
                "id": 229,
                "name": "FunctionDefinition",
                "src": "5206:256:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Internal function that mints an amount of the token and assigns it to\nan account. This encapsulates the modification of balances such that the\nproper events are emitted.\n@param account The account that will receive the created tokens.\n@param value The amount that will be created.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_mint",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 271,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 230,
                            "name": "ElementaryTypeName",
                            "src": "5820:7:0"
                          }
                        ],
                        "id": 231,
                        "name": "VariableDeclaration",
                        "src": "5820:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 271,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 232,
                            "name": "ElementaryTypeName",
                            "src": "5837:7:0"
                          }
                        ],
                        "id": 233,
                        "name": "VariableDeclaration",
                        "src": "5837:13:0"
                      }
                    ],
                    "id": 234,
                    "name": "ParameterList",
                    "src": "5819:32:0"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 235,
                    "name": "ParameterList",
                    "src": "5861:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 236,
                                "name": "Identifier",
                                "src": "5871:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 231,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 237,
                                    "name": "Identifier",
                                    "src": "5879:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 238,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "5890:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 239,
                                        "name": "Literal",
                                        "src": "5898:1:0"
                                      }
                                    ],
                                    "id": 240,
                                    "name": "FunctionCall",
                                    "src": "5890:10:0"
                                  }
                                ],
                                "id": 241,
                                "name": "BinaryOperation",
                                "src": "5879:21:0"
                              }
                            ],
                            "id": 242,
                            "name": "FunctionCall",
                            "src": "5871:30:0"
                          }
                        ],
                        "id": 243,
                        "name": "ExpressionStatement",
                        "src": "5871:30:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "uint256",
                                  "value": "_totalSupply"
                                },
                                "id": 244,
                                "name": "Identifier",
                                "src": "5912:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 1481,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 20,
                                          "type": "uint256",
                                          "value": "_totalSupply"
                                        },
                                        "id": 245,
                                        "name": "Identifier",
                                        "src": "5927:12:0"
                                      }
                                    ],
                                    "id": 246,
                                    "name": "MemberAccess",
                                    "src": "5927:16:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 233,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 247,
                                    "name": "Identifier",
                                    "src": "5944:5:0"
                                  }
                                ],
                                "id": 248,
                                "name": "FunctionCall",
                                "src": "5927:23:0"
                              }
                            ],
                            "id": 249,
                            "name": "Assignment",
                            "src": "5912:38:0"
                          }
                        ],
                        "id": 250,
                        "name": "ExpressionStatement",
                        "src": "5912:38:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 251,
                                    "name": "Identifier",
                                    "src": "5960:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 231,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 252,
                                    "name": "Identifier",
                                    "src": "5970:7:0"
                                  }
                                ],
                                "id": 253,
                                "name": "IndexAccess",
                                "src": "5960:18:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 1481,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12,
                                              "type": "mapping(address => uint256)",
                                              "value": "_balances"
                                            },
                                            "id": 254,
                                            "name": "Identifier",
                                            "src": "5981:9:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 231,
                                              "type": "address",
                                              "value": "account"
                                            },
                                            "id": 255,
                                            "name": "Identifier",
                                            "src": "5991:7:0"
                                          }
                                        ],
                                        "id": 256,
                                        "name": "IndexAccess",
                                        "src": "5981:18:0"
                                      }
                                    ],
                                    "id": 257,
                                    "name": "MemberAccess",
                                    "src": "5981:22:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 233,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 258,
                                    "name": "Identifier",
                                    "src": "6004:5:0"
                                  }
                                ],
                                "id": 259,
                                "name": "FunctionCall",
                                "src": "5981:29:0"
                              }
                            ],
                            "id": 260,
                            "name": "Assignment",
                            "src": "5960:50:0"
                          }
                        ],
                        "id": 261,
                        "name": "ExpressionStatement",
                        "src": "5960:50:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 718,
                                  "type": "function (address,address,uint256)",
                                  "value": "Transfer"
                                },
                                "id": 262,
                                "name": "Identifier",
                                "src": "6025:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 263,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "6034:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 264,
                                    "name": "Literal",
                                    "src": "6042:1:0"
                                  }
                                ],
                                "id": 265,
                                "name": "FunctionCall",
                                "src": "6034:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 231,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 266,
                                "name": "Identifier",
                                "src": "6046:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 233,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 267,
                                "name": "Identifier",
                                "src": "6055:5:0"
                              }
                            ],
                            "id": 268,
                            "name": "FunctionCall",
                            "src": "6025:36:0"
                          }
                        ],
                        "id": 269,
                        "name": "EmitStatement",
                        "src": "6020:41:0"
                      }
                    ],
                    "id": 270,
                    "name": "Block",
                    "src": "5861:207:0"
                  }
                ],
                "id": 271,
                "name": "FunctionDefinition",
                "src": "5805:263:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Internal function that burns an amount of the token of a given\naccount.\n@param account The account whose tokens will be burnt.\n@param value The amount that will be burnt.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_burn",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 313,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 272,
                            "name": "ElementaryTypeName",
                            "src": "6309:7:0"
                          }
                        ],
                        "id": 273,
                        "name": "VariableDeclaration",
                        "src": "6309:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 313,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 274,
                            "name": "ElementaryTypeName",
                            "src": "6326:7:0"
                          }
                        ],
                        "id": 275,
                        "name": "VariableDeclaration",
                        "src": "6326:13:0"
                      }
                    ],
                    "id": 276,
                    "name": "ParameterList",
                    "src": "6308:32:0"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 277,
                    "name": "ParameterList",
                    "src": "6350:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 278,
                                "name": "Identifier",
                                "src": "6360:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 273,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 279,
                                    "name": "Identifier",
                                    "src": "6368:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 280,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "6379:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 281,
                                        "name": "Literal",
                                        "src": "6387:1:0"
                                      }
                                    ],
                                    "id": 282,
                                    "name": "FunctionCall",
                                    "src": "6379:10:0"
                                  }
                                ],
                                "id": 283,
                                "name": "BinaryOperation",
                                "src": "6368:21:0"
                              }
                            ],
                            "id": 284,
                            "name": "FunctionCall",
                            "src": "6360:30:0"
                          }
                        ],
                        "id": 285,
                        "name": "ExpressionStatement",
                        "src": "6360:30:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "uint256",
                                  "value": "_totalSupply"
                                },
                                "id": 286,
                                "name": "Identifier",
                                "src": "6401:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1457,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 20,
                                          "type": "uint256",
                                          "value": "_totalSupply"
                                        },
                                        "id": 287,
                                        "name": "Identifier",
                                        "src": "6416:12:0"
                                      }
                                    ],
                                    "id": 288,
                                    "name": "MemberAccess",
                                    "src": "6416:16:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 275,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 289,
                                    "name": "Identifier",
                                    "src": "6433:5:0"
                                  }
                                ],
                                "id": 290,
                                "name": "FunctionCall",
                                "src": "6416:23:0"
                              }
                            ],
                            "id": 291,
                            "name": "Assignment",
                            "src": "6401:38:0"
                          }
                        ],
                        "id": 292,
                        "name": "ExpressionStatement",
                        "src": "6401:38:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 293,
                                    "name": "Identifier",
                                    "src": "6449:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 273,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 294,
                                    "name": "Identifier",
                                    "src": "6459:7:0"
                                  }
                                ],
                                "id": 295,
                                "name": "IndexAccess",
                                "src": "6449:18:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1457,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12,
                                              "type": "mapping(address => uint256)",
                                              "value": "_balances"
                                            },
                                            "id": 296,
                                            "name": "Identifier",
                                            "src": "6470:9:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 273,
                                              "type": "address",
                                              "value": "account"
                                            },
                                            "id": 297,
                                            "name": "Identifier",
                                            "src": "6480:7:0"
                                          }
                                        ],
                                        "id": 298,
                                        "name": "IndexAccess",
                                        "src": "6470:18:0"
                                      }
                                    ],
                                    "id": 299,
                                    "name": "MemberAccess",
                                    "src": "6470:22:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 275,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 300,
                                    "name": "Identifier",
                                    "src": "6493:5:0"
                                  }
                                ],
                                "id": 301,
                                "name": "FunctionCall",
                                "src": "6470:29:0"
                              }
                            ],
                            "id": 302,
                            "name": "Assignment",
                            "src": "6449:50:0"
                          }
                        ],
                        "id": 303,
                        "name": "ExpressionStatement",
                        "src": "6449:50:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 718,
                                  "type": "function (address,address,uint256)",
                                  "value": "Transfer"
                                },
                                "id": 304,
                                "name": "Identifier",
                                "src": "6514:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 273,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 305,
                                "name": "Identifier",
                                "src": "6523:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 306,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "6532:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 307,
                                    "name": "Literal",
                                    "src": "6540:1:0"
                                  }
                                ],
                                "id": 308,
                                "name": "FunctionCall",
                                "src": "6532:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 275,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 309,
                                "name": "Identifier",
                                "src": "6544:5:0"
                              }
                            ],
                            "id": 310,
                            "name": "FunctionCall",
                            "src": "6514:36:0"
                          }
                        ],
                        "id": 311,
                        "name": "EmitStatement",
                        "src": "6509:41:0"
                      }
                    ],
                    "id": 312,
                    "name": "Block",
                    "src": "6350:207:0"
                  }
                ],
                "id": 313,
                "name": "FunctionDefinition",
                "src": "6294:263:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Approve an address to spend another addresses' tokens.\n@param owner The address that owns the tokens.\n@param spender The address that will spend the tokens.\n@param value The number of tokens that can be spent.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_approve",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "owner",
                          "scope": 353,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 314,
                            "name": "ElementaryTypeName",
                            "src": "6840:7:0"
                          }
                        ],
                        "id": 315,
                        "name": "VariableDeclaration",
                        "src": "6840:13:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 353,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 316,
                            "name": "ElementaryTypeName",
                            "src": "6855:7:0"
                          }
                        ],
                        "id": 317,
                        "name": "VariableDeclaration",
                        "src": "6855:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 353,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 318,
                            "name": "ElementaryTypeName",
                            "src": "6872:7:0"
                          }
                        ],
                        "id": 319,
                        "name": "VariableDeclaration",
                        "src": "6872:13:0"
                      }
                    ],
                    "id": 320,
                    "name": "ParameterList",
                    "src": "6839:47:0"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 321,
                    "name": "ParameterList",
                    "src": "6896:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 322,
                                "name": "Identifier",
                                "src": "6906:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 317,
                                      "type": "address",
                                      "value": "spender"
                                    },
                                    "id": 323,
                                    "name": "Identifier",
                                    "src": "6914:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 324,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "6925:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 325,
                                        "name": "Literal",
                                        "src": "6933:1:0"
                                      }
                                    ],
                                    "id": 326,
                                    "name": "FunctionCall",
                                    "src": "6925:10:0"
                                  }
                                ],
                                "id": 327,
                                "name": "BinaryOperation",
                                "src": "6914:21:0"
                              }
                            ],
                            "id": 328,
                            "name": "FunctionCall",
                            "src": "6906:30:0"
                          }
                        ],
                        "id": 329,
                        "name": "ExpressionStatement",
                        "src": "6906:30:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 330,
                                "name": "Identifier",
                                "src": "6946:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 315,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 331,
                                    "name": "Identifier",
                                    "src": "6954:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 332,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "6963:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 333,
                                        "name": "Literal",
                                        "src": "6971:1:0"
                                      }
                                    ],
                                    "id": 334,
                                    "name": "FunctionCall",
                                    "src": "6963:10:0"
                                  }
                                ],
                                "id": 335,
                                "name": "BinaryOperation",
                                "src": "6954:19:0"
                              }
                            ],
                            "id": 336,
                            "name": "FunctionCall",
                            "src": "6946:28:0"
                          }
                        ],
                        "id": 337,
                        "name": "ExpressionStatement",
                        "src": "6946:28:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 18,
                                          "type": "mapping(address => mapping(address => uint256))",
                                          "value": "_allowed"
                                        },
                                        "id": 338,
                                        "name": "Identifier",
                                        "src": "6985:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 315,
                                          "type": "address",
                                          "value": "owner"
                                        },
                                        "id": 339,
                                        "name": "Identifier",
                                        "src": "6994:5:0"
                                      }
                                    ],
                                    "id": 341,
                                    "name": "IndexAccess",
                                    "src": "6985:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 317,
                                      "type": "address",
                                      "value": "spender"
                                    },
                                    "id": 340,
                                    "name": "Identifier",
                                    "src": "7001:7:0"
                                  }
                                ],
                                "id": 342,
                                "name": "IndexAccess",
                                "src": "6985:24:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 319,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 343,
                                "name": "Identifier",
                                "src": "7012:5:0"
                              }
                            ],
                            "id": 344,
                            "name": "Assignment",
                            "src": "6985:32:0"
                          }
                        ],
                        "id": 345,
                        "name": "ExpressionStatement",
                        "src": "6985:32:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 726,
                                  "type": "function (address,address,uint256)",
                                  "value": "Approval"
                                },
                                "id": 346,
                                "name": "Identifier",
                                "src": "7032:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 315,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 347,
                                "name": "Identifier",
                                "src": "7041:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 317,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 348,
                                "name": "Identifier",
                                "src": "7048:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 319,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 349,
                                "name": "Identifier",
                                "src": "7057:5:0"
                              }
                            ],
                            "id": 350,
                            "name": "FunctionCall",
                            "src": "7032:31:0"
                          }
                        ],
                        "id": 351,
                        "name": "EmitStatement",
                        "src": "7027:36:0"
                      }
                    ],
                    "id": 352,
                    "name": "Block",
                    "src": "6896:174:0"
                  }
                ],
                "id": 353,
                "name": "FunctionDefinition",
                "src": "6822:248:0"
              },
              {
                "attributes": {
                  "documentation": "@dev Internal function that burns an amount of the token of a given\naccount, deducting from the sender's allowance for said account. Uses the\ninternal burn function.\nEmits an Approval event (reflecting the reduced allowance).\n@param account The account whose tokens will be burnt.\n@param value The amount that will be burnt.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_burnFrom",
                  "scope": 382,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 381,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 354,
                            "name": "ElementaryTypeName",
                            "src": "7478:7:0"
                          }
                        ],
                        "id": 355,
                        "name": "VariableDeclaration",
                        "src": "7478:15:0"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 381,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 356,
                            "name": "ElementaryTypeName",
                            "src": "7495:7:0"
                          }
                        ],
                        "id": 357,
                        "name": "VariableDeclaration",
                        "src": "7495:13:0"
                      }
                    ],
                    "id": 358,
                    "name": "ParameterList",
                    "src": "7477:32:0"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 359,
                    "name": "ParameterList",
                    "src": "7519:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 313,
                                  "type": "function (address,uint256)",
                                  "value": "_burn"
                                },
                                "id": 360,
                                "name": "Identifier",
                                "src": "7529:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 355,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 361,
                                "name": "Identifier",
                                "src": "7535:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 357,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 362,
                                "name": "Identifier",
                                "src": "7544:5:0"
                              }
                            ],
                            "id": 363,
                            "name": "FunctionCall",
                            "src": "7529:21:0"
                          }
                        ],
                        "id": 364,
                        "name": "ExpressionStatement",
                        "src": "7529:21:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 353,
                                  "type": "function (address,address,uint256)",
                                  "value": "_approve"
                                },
                                "id": 365,
                                "name": "Identifier",
                                "src": "7560:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 355,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 366,
                                "name": "Identifier",
                                "src": "7569:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 367,
                                    "name": "Identifier",
                                    "src": "7578:3:0"
                                  }
                                ],
                                "id": 368,
                                "name": "MemberAccess",
                                "src": "7578:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1457,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(address => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 18,
                                                  "type": "mapping(address => mapping(address => uint256))",
                                                  "value": "_allowed"
                                                },
                                                "id": 369,
                                                "name": "Identifier",
                                                "src": "7590:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 355,
                                                  "type": "address",
                                                  "value": "account"
                                                },
                                                "id": 370,
                                                "name": "Identifier",
                                                "src": "7599:7:0"
                                              }
                                            ],
                                            "id": 371,
                                            "name": "IndexAccess",
                                            "src": "7590:17:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1517,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 372,
                                                "name": "Identifier",
                                                "src": "7608:3:0"
                                              }
                                            ],
                                            "id": 373,
                                            "name": "MemberAccess",
                                            "src": "7608:10:0"
                                          }
                                        ],
                                        "id": 374,
                                        "name": "IndexAccess",
                                        "src": "7590:29:0"
                                      }
                                    ],
                                    "id": 375,
                                    "name": "MemberAccess",
                                    "src": "7590:33:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 357,
                                      "type": "uint256",
                                      "value": "value"
                                    },
                                    "id": 376,
                                    "name": "Identifier",
                                    "src": "7624:5:0"
                                  }
                                ],
                                "id": 377,
                                "name": "FunctionCall",
                                "src": "7590:40:0"
                              }
                            ],
                            "id": 378,
                            "name": "FunctionCall",
                            "src": "7560:71:0"
                          }
                        ],
                        "id": 379,
                        "name": "ExpressionStatement",
                        "src": "7560:71:0"
                      }
                    ],
                    "id": 380,
                    "name": "Block",
                    "src": "7519:119:0"
                  }
                ],
                "id": 381,
                "name": "FunctionDefinition",
                "src": "7459:179:0"
              }
            ],
            "id": 382,
            "name": "ContractDefinition",
            "src": "618:7022:0"
          }
        ],
        "id": 383,
        "name": "SourceUnit",
        "src": "0:7641:0"
      }
    },
    "ERC20Burnable.sol": {
      "ast": {
        "absolutePath": "ERC20Burnable.sol",
        "exportedSymbols": {
          "ERC20Burnable": [
            413
          ]
        },
        "id": 414,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 384,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:1"
          },
          {
            "absolutePath": "ERC20.sol",
            "file": "./ERC20.sol",
            "id": 385,
            "nodeType": "ImportDirective",
            "scope": 414,
            "sourceUnit": 383,
            "src": "25:21:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 386,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 382,
                  "src": "166:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$382",
                    "typeString": "contract ERC20"
                  }
                },
                "id": 387,
                "nodeType": "InheritanceSpecifier",
                "src": "166:5:1"
              }
            ],
            "contractDependencies": [
              382,
              727
            ],
            "contractKind": "contract",
            "documentation": "@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).",
            "fullyImplemented": true,
            "id": 413,
            "linearizedBaseContracts": [
              413,
              382,
              727
            ],
            "name": "ERC20Burnable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 398,
                  "nodeType": "Block",
                  "src": "331:41:1",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 393,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "347:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "347:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 395,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "359:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 392,
                          "name": "_burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "341:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "341:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 397,
                      "nodeType": "ExpressionStatement",
                      "src": "341:24:1"
                    }
                  ]
                },
                "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
                "id": 399,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "burn",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 390,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 389,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "309:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "308:15:1"
                },
                "returnParameters": {
                  "id": 391,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "331:0:1"
                },
                "scope": 413,
                "src": "295:77:1",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 411,
                  "nodeType": "Block",
                  "src": "673:39:1",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "693:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 408,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "699:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 406,
                          "name": "_burnFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "683:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "683:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 410,
                      "nodeType": "ExpressionStatement",
                      "src": "683:22:1"
                    }
                  ]
                },
                "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The account whose tokens will be burned.\n@param value uint256 The amount of token to be burned.",
                "id": 412,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "burnFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 404,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 412,
                      "src": "637:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 400,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "637:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 403,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 412,
                      "src": "651:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "651:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "636:29:1"
                },
                "returnParameters": {
                  "id": 405,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "673:0:1"
                },
                "scope": 413,
                "src": "619:93:1",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 414,
            "src": "140:574:1"
          }
        ],
        "src": "0:715:1"
      },
      "id": 1,
      "legacyAST": {
        "attributes": {
          "absolutePath": "ERC20Burnable.sol",
          "exportedSymbols": {
            "ERC20Burnable": [
              413
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 384,
            "name": "PragmaDirective",
            "src": "0:23:1"
          },
          {
            "attributes": {
              "SourceUnit": 383,
              "absolutePath": "ERC20.sol",
              "file": "./ERC20.sol",
              "scope": 414,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 385,
            "name": "ImportDirective",
            "src": "25:21:1"
          },
          {
            "attributes": {
              "contractDependencies": [
                382,
                727
              ],
              "contractKind": "contract",
              "documentation": "@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                413,
                382,
                727
              ],
              "name": "ERC20Burnable",
              "scope": 414
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 382,
                      "type": "contract ERC20"
                    },
                    "id": 386,
                    "name": "UserDefinedTypeName",
                    "src": "166:5:1"
                  }
                ],
                "id": 387,
                "name": "InheritanceSpecifier",
                "src": "166:5:1"
              },
              {
                "attributes": {
                  "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "burn",
                  "scope": 413,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 399,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 388,
                            "name": "ElementaryTypeName",
                            "src": "309:7:1"
                          }
                        ],
                        "id": 389,
                        "name": "VariableDeclaration",
                        "src": "309:13:1"
                      }
                    ],
                    "id": 390,
                    "name": "ParameterList",
                    "src": "308:15:1"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 391,
                    "name": "ParameterList",
                    "src": "331:0:1"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 313,
                                  "type": "function (address,uint256)",
                                  "value": "_burn"
                                },
                                "id": 392,
                                "name": "Identifier",
                                "src": "341:5:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 393,
                                    "name": "Identifier",
                                    "src": "347:3:1"
                                  }
                                ],
                                "id": 394,
                                "name": "MemberAccess",
                                "src": "347:10:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 389,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 395,
                                "name": "Identifier",
                                "src": "359:5:1"
                              }
                            ],
                            "id": 396,
                            "name": "FunctionCall",
                            "src": "341:24:1"
                          }
                        ],
                        "id": 397,
                        "name": "ExpressionStatement",
                        "src": "341:24:1"
                      }
                    ],
                    "id": 398,
                    "name": "Block",
                    "src": "331:41:1"
                  }
                ],
                "id": 399,
                "name": "FunctionDefinition",
                "src": "295:77:1"
              },
              {
                "attributes": {
                  "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The account whose tokens will be burned.\n@param value uint256 The amount of token to be burned.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "burnFrom",
                  "scope": 413,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "from",
                          "scope": 412,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 400,
                            "name": "ElementaryTypeName",
                            "src": "637:7:1"
                          }
                        ],
                        "id": 401,
                        "name": "VariableDeclaration",
                        "src": "637:12:1"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 412,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 402,
                            "name": "ElementaryTypeName",
                            "src": "651:7:1"
                          }
                        ],
                        "id": 403,
                        "name": "VariableDeclaration",
                        "src": "651:13:1"
                      }
                    ],
                    "id": 404,
                    "name": "ParameterList",
                    "src": "636:29:1"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 405,
                    "name": "ParameterList",
                    "src": "673:0:1"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 381,
                                  "type": "function (address,uint256)",
                                  "value": "_burnFrom"
                                },
                                "id": 406,
                                "name": "Identifier",
                                "src": "683:9:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 401,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 407,
                                "name": "Identifier",
                                "src": "693:4:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 403,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 408,
                                "name": "Identifier",
                                "src": "699:5:1"
                              }
                            ],
                            "id": 409,
                            "name": "FunctionCall",
                            "src": "683:22:1"
                          }
                        ],
                        "id": 410,
                        "name": "ExpressionStatement",
                        "src": "683:22:1"
                      }
                    ],
                    "id": 411,
                    "name": "Block",
                    "src": "673:39:1"
                  }
                ],
                "id": 412,
                "name": "FunctionDefinition",
                "src": "619:93:1"
              }
            ],
            "id": 413,
            "name": "ContractDefinition",
            "src": "140:574:1"
          }
        ],
        "id": 414,
        "name": "SourceUnit",
        "src": "0:715:1"
      }
    },
    "ERC20Capped.sol": {
      "ast": {
        "absolutePath": "ERC20Capped.sol",
        "exportedSymbols": {
          "ERC20Capped": [
            470
          ]
        },
        "id": 471,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 415,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:2"
          },
          {
            "absolutePath": "ERC20Mintable.sol",
            "file": "./ERC20Mintable.sol",
            "id": 416,
            "nodeType": "ImportDirective",
            "scope": 471,
            "sourceUnit": 557,
            "src": "25:29:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 417,
                  "name": "ERC20Mintable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 556,
                  "src": "152:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$556",
                    "typeString": "contract ERC20Mintable"
                  }
                },
                "id": 418,
                "nodeType": "InheritanceSpecifier",
                "src": "152:13:2"
              }
            ],
            "contractDependencies": [
              382,
              556,
              727,
              830
            ],
            "contractKind": "contract",
            "documentation": "@title Capped token\n@dev Mintable token with a token cap.",
            "fullyImplemented": true,
            "id": 470,
            "linearizedBaseContracts": [
              470,
              556,
              830,
              382,
              727
            ],
            "name": "ERC20Capped",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 420,
                "name": "_cap",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "172:20:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 419,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 435,
                  "nodeType": "Block",
                  "src": "232:53:2",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "cap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "250:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "256:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "250:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 425,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "242:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "242:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 430,
                      "nodeType": "ExpressionStatement",
                      "src": "242:16:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 431,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "268:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 432,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "275:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "268:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 434,
                      "nodeType": "ExpressionStatement",
                      "src": "268:10:2"
                    }
                  ]
                },
                "documentation": null,
                "id": 436,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 423,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 422,
                      "name": "cap",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "212:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "212:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "211:13:2"
                },
                "returnParameters": {
                  "id": 424,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "232:0:2"
                },
                "scope": 470,
                "src": "199:86:2",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 443,
                  "nodeType": "Block",
                  "src": "398:28:2",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "_cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "415:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 440,
                      "id": 442,
                      "nodeType": "Return",
                      "src": "408:11:2"
                    }
                  ]
                },
                "documentation": "@return the cap for the token minting.",
                "id": 444,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "cap",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 437,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "365:2:2"
                },
                "returnParameters": {
                  "id": 440,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 439,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "389:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "389:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "388:9:2"
                },
                "scope": 470,
                "src": "353:73:2",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 468,
                  "nodeType": "Block",
                  "src": "488:95:2",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 455,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "524:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 452,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "506:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "506:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1481,
                                "src": "506:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "506:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 457,
                              "name": "_cap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "534:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "506:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 451,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "498:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "498:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 460,
                      "nodeType": "ExpressionStatement",
                      "src": "498:41:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 464,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "561:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "570:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 461,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1546,
                            "src": "549:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_ERC20Capped_$470",
                              "typeString": "contract super ERC20Capped"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 271,
                          "src": "549:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "549:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 467,
                      "nodeType": "ExpressionStatement",
                      "src": "549:27:2"
                    }
                  ]
                },
                "documentation": null,
                "id": 469,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_mint",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 449,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 446,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 469,
                      "src": "447:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "447:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 448,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 469,
                      "src": "464:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "464:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "446:32:2"
                },
                "returnParameters": {
                  "id": 450,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "488:0:2"
                },
                "scope": 470,
                "src": "432:151:2",
                "stateMutability": "nonpayable",
                "superFunction": 271,
                "visibility": "internal"
              }
            ],
            "scope": 471,
            "src": "128:457:2"
          }
        ],
        "src": "0:586:2"
      },
      "id": 2,
      "legacyAST": {
        "attributes": {
          "absolutePath": "ERC20Capped.sol",
          "exportedSymbols": {
            "ERC20Capped": [
              470
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 415,
            "name": "PragmaDirective",
            "src": "0:23:2"
          },
          {
            "attributes": {
              "SourceUnit": 557,
              "absolutePath": "ERC20Mintable.sol",
              "file": "./ERC20Mintable.sol",
              "scope": 471,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 416,
            "name": "ImportDirective",
            "src": "25:29:2"
          },
          {
            "attributes": {
              "contractDependencies": [
                382,
                556,
                727,
                830
              ],
              "contractKind": "contract",
              "documentation": "@title Capped token\n@dev Mintable token with a token cap.",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                470,
                556,
                830,
                382,
                727
              ],
              "name": "ERC20Capped",
              "scope": 471
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20Mintable",
                      "referencedDeclaration": 556,
                      "type": "contract ERC20Mintable"
                    },
                    "id": 417,
                    "name": "UserDefinedTypeName",
                    "src": "152:13:2"
                  }
                ],
                "id": 418,
                "name": "InheritanceSpecifier",
                "src": "152:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_cap",
                  "scope": 470,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 419,
                    "name": "ElementaryTypeName",
                    "src": "172:7:2"
                  }
                ],
                "id": 420,
                "name": "VariableDeclaration",
                "src": "172:20:2"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "modifiers": [
                    null
                  ],
                  "name": "",
                  "scope": 470,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "cap",
                          "scope": 436,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 421,
                            "name": "ElementaryTypeName",
                            "src": "212:7:2"
                          }
                        ],
                        "id": 422,
                        "name": "VariableDeclaration",
                        "src": "212:11:2"
                      }
                    ],
                    "id": 423,
                    "name": "ParameterList",
                    "src": "211:13:2"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 424,
                    "name": "ParameterList",
                    "src": "232:0:2"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 425,
                                "name": "Identifier",
                                "src": "242:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 422,
                                      "type": "uint256",
                                      "value": "cap"
                                    },
                                    "id": 426,
                                    "name": "Identifier",
                                    "src": "250:3:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 427,
                                    "name": "Literal",
                                    "src": "256:1:2"
                                  }
                                ],
                                "id": 428,
                                "name": "BinaryOperation",
                                "src": "250:7:2"
                              }
                            ],
                            "id": 429,
                            "name": "FunctionCall",
                            "src": "242:16:2"
                          }
                        ],
                        "id": 430,
                        "name": "ExpressionStatement",
                        "src": "242:16:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 420,
                                  "type": "uint256",
                                  "value": "_cap"
                                },
                                "id": 431,
                                "name": "Identifier",
                                "src": "268:4:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 422,
                                  "type": "uint256",
                                  "value": "cap"
                                },
                                "id": 432,
                                "name": "Identifier",
                                "src": "275:3:2"
                              }
                            ],
                            "id": 433,
                            "name": "Assignment",
                            "src": "268:10:2"
                          }
                        ],
                        "id": 434,
                        "name": "ExpressionStatement",
                        "src": "268:10:2"
                      }
                    ],
                    "id": 435,
                    "name": "Block",
                    "src": "232:53:2"
                  }
                ],
                "id": 436,
                "name": "FunctionDefinition",
                "src": "199:86:2"
              },
              {
                "attributes": {
                  "documentation": "@return the cap for the token minting.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "cap",
                  "scope": 470,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 437,
                    "name": "ParameterList",
                    "src": "365:2:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 444,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 438,
                            "name": "ElementaryTypeName",
                            "src": "389:7:2"
                          }
                        ],
                        "id": 439,
                        "name": "VariableDeclaration",
                        "src": "389:7:2"
                      }
                    ],
                    "id": 440,
                    "name": "ParameterList",
                    "src": "388:9:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 440
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 420,
                              "type": "uint256",
                              "value": "_cap"
                            },
                            "id": 441,
                            "name": "Identifier",
                            "src": "415:4:2"
                          }
                        ],
                        "id": 442,
                        "name": "Return",
                        "src": "408:11:2"
                      }
                    ],
                    "id": 443,
                    "name": "Block",
                    "src": "398:28:2"
                  }
                ],
                "id": 444,
                "name": "FunctionDefinition",
                "src": "353:73:2"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_mint",
                  "scope": 470,
                  "stateMutability": "nonpayable",
                  "superFunction": 271,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 469,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 445,
                            "name": "ElementaryTypeName",
                            "src": "447:7:2"
                          }
                        ],
                        "id": 446,
                        "name": "VariableDeclaration",
                        "src": "447:15:2"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 469,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 447,
                            "name": "ElementaryTypeName",
                            "src": "464:7:2"
                          }
                        ],
                        "id": 448,
                        "name": "VariableDeclaration",
                        "src": "464:13:2"
                      }
                    ],
                    "id": 449,
                    "name": "ParameterList",
                    "src": "446:32:2"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 450,
                    "name": "ParameterList",
                    "src": "488:0:2"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 451,
                                "name": "Identifier",
                                "src": "498:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "add",
                                          "referencedDeclaration": 1481,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 28,
                                                  "type": "function () view returns (uint256)",
                                                  "value": "totalSupply"
                                                },
                                                "id": 452,
                                                "name": "Identifier",
                                                "src": "506:11:2"
                                              }
                                            ],
                                            "id": 453,
                                            "name": "FunctionCall",
                                            "src": "506:13:2"
                                          }
                                        ],
                                        "id": 454,
                                        "name": "MemberAccess",
                                        "src": "506:17:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 448,
                                          "type": "uint256",
                                          "value": "value"
                                        },
                                        "id": 455,
                                        "name": "Identifier",
                                        "src": "524:5:2"
                                      }
                                    ],
                                    "id": 456,
                                    "name": "FunctionCall",
                                    "src": "506:24:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 420,
                                      "type": "uint256",
                                      "value": "_cap"
                                    },
                                    "id": 457,
                                    "name": "Identifier",
                                    "src": "534:4:2"
                                  }
                                ],
                                "id": 458,
                                "name": "BinaryOperation",
                                "src": "506:32:2"
                              }
                            ],
                            "id": 459,
                            "name": "FunctionCall",
                            "src": "498:41:2"
                          }
                        ],
                        "id": 460,
                        "name": "ExpressionStatement",
                        "src": "498:41:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_mint",
                                  "referencedDeclaration": 271,
                                  "type": "function (address,uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1546,
                                      "type": "contract super ERC20Capped",
                                      "value": "super"
                                    },
                                    "id": 461,
                                    "name": "Identifier",
                                    "src": "549:5:2"
                                  }
                                ],
                                "id": 463,
                                "name": "MemberAccess",
                                "src": "549:11:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 446,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 464,
                                "name": "Identifier",
                                "src": "561:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 448,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 465,
                                "name": "Identifier",
                                "src": "570:5:2"
                              }
                            ],
                            "id": 466,
                            "name": "FunctionCall",
                            "src": "549:27:2"
                          }
                        ],
                        "id": 467,
                        "name": "ExpressionStatement",
                        "src": "549:27:2"
                      }
                    ],
                    "id": 468,
                    "name": "Block",
                    "src": "488:95:2"
                  }
                ],
                "id": 469,
                "name": "FunctionDefinition",
                "src": "432:151:2"
              }
            ],
            "id": 470,
            "name": "ContractDefinition",
            "src": "128:457:2"
          }
        ],
        "id": 471,
        "name": "SourceUnit",
        "src": "0:586:2"
      }
    },
    "ERC20Detailed.sol": {
      "ast": {
        "absolutePath": "ERC20Detailed.sol",
        "exportedSymbols": {
          "ERC20Detailed": [
            528
          ]
        },
        "id": 529,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 472,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:3"
          },
          {
            "absolutePath": "IERC20.sol",
            "file": "./IERC20.sol",
            "id": 473,
            "nodeType": "ImportDirective",
            "scope": 529,
            "sourceUnit": 728,
            "src": "25:22:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 474,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 727,
                  "src": "308:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$727",
                    "typeString": "contract IERC20"
                  }
                },
                "id": 475,
                "nodeType": "InheritanceSpecifier",
                "src": "308:6:3"
              }
            ],
            "contractDependencies": [
              727
            ],
            "contractKind": "contract",
            "documentation": "@title ERC20Detailed token\n@dev The decimals are only for visualization purposes.\nAll the operations are done using the smallest and indivisible token unit,\njust as on Ethereum all the operations are done in wei.",
            "fullyImplemented": false,
            "id": 528,
            "linearizedBaseContracts": [
              528,
              727
            ],
            "name": "ERC20Detailed",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 477,
                "name": "_name",
                "nodeType": "VariableDeclaration",
                "scope": 528,
                "src": "321:20:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 476,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "321:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 479,
                "name": "_symbol",
                "nodeType": "VariableDeclaration",
                "scope": 528,
                "src": "347:22:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 478,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "347:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 481,
                "name": "_decimals",
                "nodeType": "VariableDeclaration",
                "scope": 528,
                "src": "375:23:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 480,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "375:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 502,
                  "nodeType": "Block",
                  "src": "483:85:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 490,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 477,
                          "src": "493:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 491,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "501:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "493:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 493,
                      "nodeType": "ExpressionStatement",
                      "src": "493:12:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 494,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "515:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "525:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "515:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 497,
                      "nodeType": "ExpressionStatement",
                      "src": "515:16:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 498,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 481,
                          "src": "541:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 499,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "553:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "541:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 501,
                      "nodeType": "ExpressionStatement",
                      "src": "541:20:3"
                    }
                  ]
                },
                "documentation": null,
                "id": 503,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 488,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 483,
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "418:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "418:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 485,
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "438:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "438:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 487,
                      "name": "decimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "460:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 486,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "417:58:3"
                },
                "returnParameters": {
                  "id": 489,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "483:0:3"
                },
                "scope": 528,
                "src": "405:163:3",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 510,
                  "nodeType": "Block",
                  "src": "680:29:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "697:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 507,
                      "id": 509,
                      "nodeType": "Return",
                      "src": "690:12:3"
                    }
                  ]
                },
                "documentation": "@return the name of the token.",
                "id": 511,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 504,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "641:2:3"
                },
                "returnParameters": {
                  "id": 507,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 506,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "665:13:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 505,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "665:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "664:15:3"
                },
                "scope": 528,
                "src": "628:81:3",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 518,
                  "nodeType": "Block",
                  "src": "825:31:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "842:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 515,
                      "id": 517,
                      "nodeType": "Return",
                      "src": "835:14:3"
                    }
                  ]
                },
                "documentation": "@return the symbol of the token.",
                "id": 519,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 512,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "786:2:3"
                },
                "returnParameters": {
                  "id": 515,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 514,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "810:13:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 513,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "810:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "809:15:3"
                },
                "scope": 528,
                "src": "771:85:3",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 526,
                  "nodeType": "Block",
                  "src": "978:33:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 524,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "995:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 523,
                      "id": 525,
                      "nodeType": "Return",
                      "src": "988:16:3"
                    }
                  ]
                },
                "documentation": "@return the number of decimals of the token.",
                "id": 527,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 520,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "947:2:3"
                },
                "returnParameters": {
                  "id": 523,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 522,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "971:5:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "971:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "970:7:3"
                },
                "scope": 528,
                "src": "930:81:3",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 529,
            "src": "282:731:3"
          }
        ],
        "src": "0:1014:3"
      },
      "id": 3,
      "legacyAST": {
        "attributes": {
          "absolutePath": "ERC20Detailed.sol",
          "exportedSymbols": {
            "ERC20Detailed": [
              528
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 472,
            "name": "PragmaDirective",
            "src": "0:23:3"
          },
          {
            "attributes": {
              "SourceUnit": 728,
              "absolutePath": "IERC20.sol",
              "file": "./IERC20.sol",
              "scope": 529,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 473,
            "name": "ImportDirective",
            "src": "25:22:3"
          },
          {
            "attributes": {
              "contractDependencies": [
                727
              ],
              "contractKind": "contract",
              "documentation": "@title ERC20Detailed token\n@dev The decimals are only for visualization purposes.\nAll the operations are done using the smallest and indivisible token unit,\njust as on Ethereum all the operations are done in wei.",
              "fullyImplemented": false,
              "linearizedBaseContracts": [
                528,
                727
              ],
              "name": "ERC20Detailed",
              "scope": 529
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "IERC20",
                      "referencedDeclaration": 727,
                      "type": "contract IERC20"
                    },
                    "id": 474,
                    "name": "UserDefinedTypeName",
                    "src": "308:6:3"
                  }
                ],
                "id": 475,
                "name": "InheritanceSpecifier",
                "src": "308:6:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_name",
                  "scope": 528,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 476,
                    "name": "ElementaryTypeName",
                    "src": "321:6:3"
                  }
                ],
                "id": 477,
                "name": "VariableDeclaration",
                "src": "321:20:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_symbol",
                  "scope": 528,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 478,
                    "name": "ElementaryTypeName",
                    "src": "347:6:3"
                  }
                ],
                "id": 479,
                "name": "VariableDeclaration",
                "src": "347:22:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_decimals",
                  "scope": 528,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint8",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 480,
                    "name": "ElementaryTypeName",
                    "src": "375:5:3"
                  }
                ],
                "id": 481,
                "name": "VariableDeclaration",
                "src": "375:23:3"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "modifiers": [
                    null
                  ],
                  "name": "",
                  "scope": 528,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "name",
                          "scope": 503,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 482,
                            "name": "ElementaryTypeName",
                            "src": "418:6:3"
                          }
                        ],
                        "id": 483,
                        "name": "VariableDeclaration",
                        "src": "418:18:3"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "symbol",
                          "scope": 503,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 484,
                            "name": "ElementaryTypeName",
                            "src": "438:6:3"
                          }
                        ],
                        "id": 485,
                        "name": "VariableDeclaration",
                        "src": "438:20:3"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "decimals",
                          "scope": 503,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint8",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint8",
                              "type": "uint8"
                            },
                            "id": 486,
                            "name": "ElementaryTypeName",
                            "src": "460:5:3"
                          }
                        ],
                        "id": 487,
                        "name": "VariableDeclaration",
                        "src": "460:14:3"
                      }
                    ],
                    "id": 488,
                    "name": "ParameterList",
                    "src": "417:58:3"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 489,
                    "name": "ParameterList",
                    "src": "483:0:3"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 477,
                                  "type": "string storage ref",
                                  "value": "_name"
                                },
                                "id": 490,
                                "name": "Identifier",
                                "src": "493:5:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 483,
                                  "type": "string memory",
                                  "value": "name"
                                },
                                "id": 491,
                                "name": "Identifier",
                                "src": "501:4:3"
                              }
                            ],
                            "id": 492,
                            "name": "Assignment",
                            "src": "493:12:3"
                          }
                        ],
                        "id": 493,
                        "name": "ExpressionStatement",
                        "src": "493:12:3"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 479,
                                  "type": "string storage ref",
                                  "value": "_symbol"
                                },
                                "id": 494,
                                "name": "Identifier",
                                "src": "515:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 485,
                                  "type": "string memory",
                                  "value": "symbol"
                                },
                                "id": 495,
                                "name": "Identifier",
                                "src": "525:6:3"
                              }
                            ],
                            "id": 496,
                            "name": "Assignment",
                            "src": "515:16:3"
                          }
                        ],
                        "id": 497,
                        "name": "ExpressionStatement",
                        "src": "515:16:3"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint8"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 481,
                                  "type": "uint8",
                                  "value": "_decimals"
                                },
                                "id": 498,
                                "name": "Identifier",
                                "src": "541:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 487,
                                  "type": "uint8",
                                  "value": "decimals"
                                },
                                "id": 499,
                                "name": "Identifier",
                                "src": "553:8:3"
                              }
                            ],
                            "id": 500,
                            "name": "Assignment",
                            "src": "541:20:3"
                          }
                        ],
                        "id": 501,
                        "name": "ExpressionStatement",
                        "src": "541:20:3"
                      }
                    ],
                    "id": 502,
                    "name": "Block",
                    "src": "483:85:3"
                  }
                ],
                "id": 503,
                "name": "FunctionDefinition",
                "src": "405:163:3"
              },
              {
                "attributes": {
                  "documentation": "@return the name of the token.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "name",
                  "scope": 528,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 504,
                    "name": "ParameterList",
                    "src": "641:2:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 511,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 505,
                            "name": "ElementaryTypeName",
                            "src": "665:6:3"
                          }
                        ],
                        "id": 506,
                        "name": "VariableDeclaration",
                        "src": "665:13:3"
                      }
                    ],
                    "id": 507,
                    "name": "ParameterList",
                    "src": "664:15:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 507
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 477,
                              "type": "string storage ref",
                              "value": "_name"
                            },
                            "id": 508,
                            "name": "Identifier",
                            "src": "697:5:3"
                          }
                        ],
                        "id": 509,
                        "name": "Return",
                        "src": "690:12:3"
                      }
                    ],
                    "id": 510,
                    "name": "Block",
                    "src": "680:29:3"
                  }
                ],
                "id": 511,
                "name": "FunctionDefinition",
                "src": "628:81:3"
              },
              {
                "attributes": {
                  "documentation": "@return the symbol of the token.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "symbol",
                  "scope": 528,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 512,
                    "name": "ParameterList",
                    "src": "786:2:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 519,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 513,
                            "name": "ElementaryTypeName",
                            "src": "810:6:3"
                          }
                        ],
                        "id": 514,
                        "name": "VariableDeclaration",
                        "src": "810:13:3"
                      }
                    ],
                    "id": 515,
                    "name": "ParameterList",
                    "src": "809:15:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 515
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 479,
                              "type": "string storage ref",
                              "value": "_symbol"
                            },
                            "id": 516,
                            "name": "Identifier",
                            "src": "842:7:3"
                          }
                        ],
                        "id": 517,
                        "name": "Return",
                        "src": "835:14:3"
                      }
                    ],
                    "id": 518,
                    "name": "Block",
                    "src": "825:31:3"
                  }
                ],
                "id": 519,
                "name": "FunctionDefinition",
                "src": "771:85:3"
              },
              {
                "attributes": {
                  "documentation": "@return the number of decimals of the token.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "decimals",
                  "scope": 528,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 520,
                    "name": "ParameterList",
                    "src": "947:2:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 527,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint8",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint8",
                              "type": "uint8"
                            },
                            "id": 521,
                            "name": "ElementaryTypeName",
                            "src": "971:5:3"
                          }
                        ],
                        "id": 522,
                        "name": "VariableDeclaration",
                        "src": "971:5:3"
                      }
                    ],
                    "id": 523,
                    "name": "ParameterList",
                    "src": "970:7:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 523
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 481,
                              "type": "uint8",
                              "value": "_decimals"
                            },
                            "id": 524,
                            "name": "Identifier",
                            "src": "995:9:3"
                          }
                        ],
                        "id": 525,
                        "name": "Return",
                        "src": "988:16:3"
                      }
                    ],
                    "id": 526,
                    "name": "Block",
                    "src": "978:33:3"
                  }
                ],
                "id": 527,
                "name": "FunctionDefinition",
                "src": "930:81:3"
              }
            ],
            "id": 528,
            "name": "ContractDefinition",
            "src": "282:731:3"
          }
        ],
        "id": 529,
        "name": "SourceUnit",
        "src": "0:1014:3"
      }
    },
    "ERC20Mintable.sol": {
      "ast": {
        "absolutePath": "ERC20Mintable.sol",
        "exportedSymbols": {
          "ERC20Mintable": [
            556
          ]
        },
        "id": 557,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 530,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:4"
          },
          {
            "absolutePath": "ERC20.sol",
            "file": "./ERC20.sol",
            "id": 531,
            "nodeType": "ImportDirective",
            "scope": 557,
            "sourceUnit": 383,
            "src": "25:21:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "MinterRole.sol",
            "file": "./MinterRole.sol",
            "id": 532,
            "nodeType": "ImportDirective",
            "scope": 557,
            "sourceUnit": 831,
            "src": "47:26:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 533,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 382,
                  "src": "161:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$382",
                    "typeString": "contract ERC20"
                  }
                },
                "id": 534,
                "nodeType": "InheritanceSpecifier",
                "src": "161:5:4"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 535,
                  "name": "MinterRole",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 830,
                  "src": "168:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MinterRole_$830",
                    "typeString": "contract MinterRole"
                  }
                },
                "id": 536,
                "nodeType": "InheritanceSpecifier",
                "src": "168:10:4"
              }
            ],
            "contractDependencies": [
              382,
              727,
              830
            ],
            "contractKind": "contract",
            "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
            "fullyImplemented": true,
            "id": 556,
            "linearizedBaseContracts": [
              556,
              830,
              382,
              727
            ],
            "name": "ERC20Mintable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 554,
                  "nodeType": "Block",
                  "src": "500:54:4",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 548,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "516:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 549,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "520:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 547,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "510:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "510:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 551,
                      "nodeType": "ExpressionStatement",
                      "src": "510:16:4"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "543:4:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 546,
                      "id": 553,
                      "nodeType": "Return",
                      "src": "536:11:4"
                    }
                  ]
                },
                "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
                "id": 555,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 543,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 542,
                      "name": "onlyMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "474:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "474:10:4"
                  }
                ],
                "name": "mint",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 541,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 538,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "440:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "440:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 540,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "452:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 539,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "452:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "439:27:4"
                },
                "returnParameters": {
                  "id": 546,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 545,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "494:4:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "494:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "493:6:4"
                },
                "scope": 556,
                "src": "426:128:4",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 557,
            "src": "135:421:4"
          }
        ],
        "src": "0:557:4"
      },
      "id": 4,
      "legacyAST": {
        "attributes": {
          "absolutePath": "ERC20Mintable.sol",
          "exportedSymbols": {
            "ERC20Mintable": [
              556
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 530,
            "name": "PragmaDirective",
            "src": "0:23:4"
          },
          {
            "attributes": {
              "SourceUnit": 383,
              "absolutePath": "ERC20.sol",
              "file": "./ERC20.sol",
              "scope": 557,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 531,
            "name": "ImportDirective",
            "src": "25:21:4"
          },
          {
            "attributes": {
              "SourceUnit": 831,
              "absolutePath": "MinterRole.sol",
              "file": "./MinterRole.sol",
              "scope": 557,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 532,
            "name": "ImportDirective",
            "src": "47:26:4"
          },
          {
            "attributes": {
              "contractDependencies": [
                382,
                727,
                830
              ],
              "contractKind": "contract",
              "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                556,
                830,
                382,
                727
              ],
              "name": "ERC20Mintable",
              "scope": 557
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 382,
                      "type": "contract ERC20"
                    },
                    "id": 533,
                    "name": "UserDefinedTypeName",
                    "src": "161:5:4"
                  }
                ],
                "id": 534,
                "name": "InheritanceSpecifier",
                "src": "161:5:4"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "MinterRole",
                      "referencedDeclaration": 830,
                      "type": "contract MinterRole"
                    },
                    "id": 535,
                    "name": "UserDefinedTypeName",
                    "src": "168:10:4"
                  }
                ],
                "id": 536,
                "name": "InheritanceSpecifier",
                "src": "168:10:4"
              },
              {
                "attributes": {
                  "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "mint",
                  "scope": 556,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 555,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 537,
                            "name": "ElementaryTypeName",
                            "src": "440:7:4"
                          }
                        ],
                        "id": 538,
                        "name": "VariableDeclaration",
                        "src": "440:10:4"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 555,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 539,
                            "name": "ElementaryTypeName",
                            "src": "452:7:4"
                          }
                        ],
                        "id": 540,
                        "name": "VariableDeclaration",
                        "src": "452:13:4"
                      }
                    ],
                    "id": 541,
                    "name": "ParameterList",
                    "src": "439:27:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 555,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 544,
                            "name": "ElementaryTypeName",
                            "src": "494:4:4"
                          }
                        ],
                        "id": 545,
                        "name": "VariableDeclaration",
                        "src": "494:4:4"
                      }
                    ],
                    "id": 546,
                    "name": "ParameterList",
                    "src": "493:6:4"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 763,
                          "type": "modifier ()",
                          "value": "onlyMinter"
                        },
                        "id": 542,
                        "name": "Identifier",
                        "src": "474:10:4"
                      }
                    ],
                    "id": 543,
                    "name": "ModifierInvocation",
                    "src": "474:10:4"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 271,
                                  "type": "function (address,uint256)",
                                  "value": "_mint"
                                },
                                "id": 547,
                                "name": "Identifier",
                                "src": "510:5:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 538,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 548,
                                "name": "Identifier",
                                "src": "516:2:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 540,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 549,
                                "name": "Identifier",
                                "src": "520:5:4"
                              }
                            ],
                            "id": 550,
                            "name": "FunctionCall",
                            "src": "510:16:4"
                          }
                        ],
                        "id": 551,
                        "name": "ExpressionStatement",
                        "src": "510:16:4"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 546
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 552,
                            "name": "Literal",
                            "src": "543:4:4"
                          }
                        ],
                        "id": 553,
                        "name": "Return",
                        "src": "536:11:4"
                      }
                    ],
                    "id": 554,
                    "name": "Block",
                    "src": "500:54:4"
                  }
                ],
                "id": 555,
                "name": "FunctionDefinition",
                "src": "426:128:4"
              }
            ],
            "id": 556,
            "name": "ContractDefinition",
            "src": "135:421:4"
          }
        ],
        "id": 557,
        "name": "SourceUnit",
        "src": "0:557:4"
      }
    },
    "ERC20Pausable.sol": {
      "ast": {
        "absolutePath": "ERC20Pausable.sol",
        "exportedSymbols": {
          "ERC20Pausable": [
            658
          ]
        },
        "id": 659,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 558,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:5"
          },
          {
            "absolutePath": "ERC20.sol",
            "file": "./ERC20.sol",
            "id": 559,
            "nodeType": "ImportDirective",
            "scope": 659,
            "sourceUnit": 383,
            "src": "25:21:5",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "Pausable.sol",
            "file": "./Pausable.sol",
            "id": 560,
            "nodeType": "ImportDirective",
            "scope": 659,
            "sourceUnit": 914,
            "src": "47:24:5",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 561,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 382,
                  "src": "180:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$382",
                    "typeString": "contract ERC20"
                  }
                },
                "id": 562,
                "nodeType": "InheritanceSpecifier",
                "src": "180:5:5"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 563,
                  "name": "Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 913,
                  "src": "187:8:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pausable_$913",
                    "typeString": "contract Pausable"
                  }
                },
                "id": 564,
                "nodeType": "InheritanceSpecifier",
                "src": "187:8:5"
              }
            ],
            "contractDependencies": [
              382,
              727,
              913,
              1016
            ],
            "contractKind": "contract",
            "documentation": "@title Pausable token\n@dev ERC20 modified with pausable transfers.",
            "fullyImplemented": true,
            "id": 658,
            "linearizedBaseContracts": [
              658,
              913,
              1016,
              382,
              727
            ],
            "name": "ERC20Pausable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 581,
                  "nodeType": "Block",
                  "src": "283:49:5",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 577,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "315:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "319:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 575,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "300:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_ERC20Pausable_$658",
                              "typeString": "contract super ERC20Pausable"
                            }
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "300:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "300:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 574,
                      "id": 580,
                      "nodeType": "Return",
                      "src": "293:32:5"
                    }
                  ]
                },
                "documentation": null,
                "id": 582,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 571,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "254:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "254:13:5"
                  }
                ],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 569,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 566,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "220:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "220:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 568,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "232:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "232:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "219:27:5"
                },
                "returnParameters": {
                  "id": 574,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 573,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "277:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "277:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "276:6:5"
                },
                "scope": 658,
                "src": "202:130:5",
                "stateMutability": "nonpayable",
                "superFunction": 75,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 602,
                  "nodeType": "Block",
                  "src": "437:59:5",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "473:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "479:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "483:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 595,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "454:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_ERC20Pausable_$658",
                              "typeString": "contract super ERC20Pausable"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 129,
                          "src": "454:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "454:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 594,
                      "id": 601,
                      "nodeType": "Return",
                      "src": "447:42:5"
                    }
                  ]
                },
                "documentation": null,
                "id": 603,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 591,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 590,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "408:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "408:13:5"
                  }
                ],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 589,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 584,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "360:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "360:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 586,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "374:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "374:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 588,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "386:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 587,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "386:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "359:41:5"
                },
                "returnParameters": {
                  "id": 594,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 593,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "431:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 592,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "431:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "430:6:5"
                },
                "scope": 658,
                "src": "338:158:5",
                "stateMutability": "nonpayable",
                "superFunction": 129,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 620,
                  "nodeType": "Block",
                  "src": "587:53:5",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 616,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "618:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 617,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "627:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "604:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_ERC20Pausable_$658",
                              "typeString": "contract super ERC20Pausable"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "604:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "604:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 613,
                      "id": 619,
                      "nodeType": "Return",
                      "src": "597:36:5"
                    }
                  ]
                },
                "documentation": null,
                "id": 621,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 610,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "558:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "558:13:5"
                  }
                ],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 608,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 605,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "519:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "519:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 607,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "536:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "536:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "518:32:5"
                },
                "returnParameters": {
                  "id": 613,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 612,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "581:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "581:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "580:6:5"
                },
                "scope": 658,
                "src": "502:138:5",
                "stateMutability": "nonpayable",
                "superFunction": 94,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 638,
                  "nodeType": "Block",
                  "src": "751:68:5",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 634,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "792:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 635,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "801:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "768:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_ERC20Pausable_$658",
                              "typeString": "contract super ERC20Pausable"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "increaseAllowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "768:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "768:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 631,
                      "id": 637,
                      "nodeType": "Return",
                      "src": "761:51:5"
                    }
                  ]
                },
                "documentation": null,
                "id": 639,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 628,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 627,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "714:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "714:13:5"
                  }
                ],
                "name": "increaseAllowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 626,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 623,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "673:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 622,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "673:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 625,
                      "name": "addedValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "690:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "690:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "672:34:5"
                },
                "returnParameters": {
                  "id": 631,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 630,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "737:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 629,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "737:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "736:14:5"
                },
                "scope": 658,
                "src": "646:173:5",
                "stateMutability": "nonpayable",
                "superFunction": 156,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 656,
                  "nodeType": "Block",
                  "src": "935:73:5",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 652,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "976:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 653,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "985:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 650,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "952:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_ERC20Pausable_$658",
                              "typeString": "contract super ERC20Pausable"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decreaseAllowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 183,
                          "src": "952:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "952:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 649,
                      "id": 655,
                      "nodeType": "Return",
                      "src": "945:56:5"
                    }
                  ]
                },
                "documentation": null,
                "id": 657,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 646,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 645,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "898:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "898:13:5"
                  }
                ],
                "name": "decreaseAllowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 644,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 641,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "852:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 640,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "852:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 643,
                      "name": "subtractedValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "869:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 642,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "869:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "851:39:5"
                },
                "returnParameters": {
                  "id": 649,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 648,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "921:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "921:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "920:14:5"
                },
                "scope": 658,
                "src": "825:183:5",
                "stateMutability": "nonpayable",
                "superFunction": 183,
                "visibility": "public"
              }
            ],
            "scope": 659,
            "src": "154:856:5"
          }
        ],
        "src": "0:1011:5"
      },
      "id": 5,
      "legacyAST": {
        "attributes": {
          "absolutePath": "ERC20Pausable.sol",
          "exportedSymbols": {
            "ERC20Pausable": [
              658
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 558,
            "name": "PragmaDirective",
            "src": "0:23:5"
          },
          {
            "attributes": {
              "SourceUnit": 383,
              "absolutePath": "ERC20.sol",
              "file": "./ERC20.sol",
              "scope": 659,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 559,
            "name": "ImportDirective",
            "src": "25:21:5"
          },
          {
            "attributes": {
              "SourceUnit": 914,
              "absolutePath": "Pausable.sol",
              "file": "./Pausable.sol",
              "scope": 659,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 560,
            "name": "ImportDirective",
            "src": "47:24:5"
          },
          {
            "attributes": {
              "contractDependencies": [
                382,
                727,
                913,
                1016
              ],
              "contractKind": "contract",
              "documentation": "@title Pausable token\n@dev ERC20 modified with pausable transfers.",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                658,
                913,
                1016,
                382,
                727
              ],
              "name": "ERC20Pausable",
              "scope": 659
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 382,
                      "type": "contract ERC20"
                    },
                    "id": 561,
                    "name": "UserDefinedTypeName",
                    "src": "180:5:5"
                  }
                ],
                "id": 562,
                "name": "InheritanceSpecifier",
                "src": "180:5:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Pausable",
                      "referencedDeclaration": 913,
                      "type": "contract Pausable"
                    },
                    "id": 563,
                    "name": "UserDefinedTypeName",
                    "src": "187:8:5"
                  }
                ],
                "id": 564,
                "name": "InheritanceSpecifier",
                "src": "187:8:5"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "transfer",
                  "scope": 658,
                  "stateMutability": "nonpayable",
                  "superFunction": 75,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 582,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 565,
                            "name": "ElementaryTypeName",
                            "src": "220:7:5"
                          }
                        ],
                        "id": 566,
                        "name": "VariableDeclaration",
                        "src": "220:10:5"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 582,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 567,
                            "name": "ElementaryTypeName",
                            "src": "232:7:5"
                          }
                        ],
                        "id": 568,
                        "name": "VariableDeclaration",
                        "src": "232:13:5"
                      }
                    ],
                    "id": 569,
                    "name": "ParameterList",
                    "src": "219:27:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 582,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 572,
                            "name": "ElementaryTypeName",
                            "src": "277:4:5"
                          }
                        ],
                        "id": 573,
                        "name": "VariableDeclaration",
                        "src": "277:4:5"
                      }
                    ],
                    "id": 574,
                    "name": "ParameterList",
                    "src": "276:6:5"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 570,
                        "name": "Identifier",
                        "src": "254:13:5"
                      }
                    ],
                    "id": 571,
                    "name": "ModifierInvocation",
                    "src": "254:13:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 574
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transfer",
                                  "referencedDeclaration": 75,
                                  "type": "function (address,uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1554,
                                      "type": "contract super ERC20Pausable",
                                      "value": "super"
                                    },
                                    "id": 575,
                                    "name": "Identifier",
                                    "src": "300:5:5"
                                  }
                                ],
                                "id": 576,
                                "name": "MemberAccess",
                                "src": "300:14:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 566,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 577,
                                "name": "Identifier",
                                "src": "315:2:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 568,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 578,
                                "name": "Identifier",
                                "src": "319:5:5"
                              }
                            ],
                            "id": 579,
                            "name": "FunctionCall",
                            "src": "300:25:5"
                          }
                        ],
                        "id": 580,
                        "name": "Return",
                        "src": "293:32:5"
                      }
                    ],
                    "id": 581,
                    "name": "Block",
                    "src": "283:49:5"
                  }
                ],
                "id": 582,
                "name": "FunctionDefinition",
                "src": "202:130:5"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "transferFrom",
                  "scope": 658,
                  "stateMutability": "nonpayable",
                  "superFunction": 129,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "from",
                          "scope": 603,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 583,
                            "name": "ElementaryTypeName",
                            "src": "360:7:5"
                          }
                        ],
                        "id": 584,
                        "name": "VariableDeclaration",
                        "src": "360:12:5"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 603,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 585,
                            "name": "ElementaryTypeName",
                            "src": "374:7:5"
                          }
                        ],
                        "id": 586,
                        "name": "VariableDeclaration",
                        "src": "374:10:5"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 603,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 587,
                            "name": "ElementaryTypeName",
                            "src": "386:7:5"
                          }
                        ],
                        "id": 588,
                        "name": "VariableDeclaration",
                        "src": "386:13:5"
                      }
                    ],
                    "id": 589,
                    "name": "ParameterList",
                    "src": "359:41:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 603,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 592,
                            "name": "ElementaryTypeName",
                            "src": "431:4:5"
                          }
                        ],
                        "id": 593,
                        "name": "VariableDeclaration",
                        "src": "431:4:5"
                      }
                    ],
                    "id": 594,
                    "name": "ParameterList",
                    "src": "430:6:5"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 590,
                        "name": "Identifier",
                        "src": "408:13:5"
                      }
                    ],
                    "id": 591,
                    "name": "ModifierInvocation",
                    "src": "408:13:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 594
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 129,
                                  "type": "function (address,address,uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1554,
                                      "type": "contract super ERC20Pausable",
                                      "value": "super"
                                    },
                                    "id": 595,
                                    "name": "Identifier",
                                    "src": "454:5:5"
                                  }
                                ],
                                "id": 596,
                                "name": "MemberAccess",
                                "src": "454:18:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 584,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 597,
                                "name": "Identifier",
                                "src": "473:4:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 586,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 598,
                                "name": "Identifier",
                                "src": "479:2:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 588,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 599,
                                "name": "Identifier",
                                "src": "483:5:5"
                              }
                            ],
                            "id": 600,
                            "name": "FunctionCall",
                            "src": "454:35:5"
                          }
                        ],
                        "id": 601,
                        "name": "Return",
                        "src": "447:42:5"
                      }
                    ],
                    "id": 602,
                    "name": "Block",
                    "src": "437:59:5"
                  }
                ],
                "id": 603,
                "name": "FunctionDefinition",
                "src": "338:158:5"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "approve",
                  "scope": 658,
                  "stateMutability": "nonpayable",
                  "superFunction": 94,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 621,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 604,
                            "name": "ElementaryTypeName",
                            "src": "519:7:5"
                          }
                        ],
                        "id": 605,
                        "name": "VariableDeclaration",
                        "src": "519:15:5"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 621,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 606,
                            "name": "ElementaryTypeName",
                            "src": "536:7:5"
                          }
                        ],
                        "id": 607,
                        "name": "VariableDeclaration",
                        "src": "536:13:5"
                      }
                    ],
                    "id": 608,
                    "name": "ParameterList",
                    "src": "518:32:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 621,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 611,
                            "name": "ElementaryTypeName",
                            "src": "581:4:5"
                          }
                        ],
                        "id": 612,
                        "name": "VariableDeclaration",
                        "src": "581:4:5"
                      }
                    ],
                    "id": 613,
                    "name": "ParameterList",
                    "src": "580:6:5"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 609,
                        "name": "Identifier",
                        "src": "558:13:5"
                      }
                    ],
                    "id": 610,
                    "name": "ModifierInvocation",
                    "src": "558:13:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 613
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "approve",
                                  "referencedDeclaration": 94,
                                  "type": "function (address,uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1554,
                                      "type": "contract super ERC20Pausable",
                                      "value": "super"
                                    },
                                    "id": 614,
                                    "name": "Identifier",
                                    "src": "604:5:5"
                                  }
                                ],
                                "id": 615,
                                "name": "MemberAccess",
                                "src": "604:13:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 605,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 616,
                                "name": "Identifier",
                                "src": "618:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 607,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 617,
                                "name": "Identifier",
                                "src": "627:5:5"
                              }
                            ],
                            "id": 618,
                            "name": "FunctionCall",
                            "src": "604:29:5"
                          }
                        ],
                        "id": 619,
                        "name": "Return",
                        "src": "597:36:5"
                      }
                    ],
                    "id": 620,
                    "name": "Block",
                    "src": "587:53:5"
                  }
                ],
                "id": 621,
                "name": "FunctionDefinition",
                "src": "502:138:5"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "increaseAllowance",
                  "scope": 658,
                  "stateMutability": "nonpayable",
                  "superFunction": 156,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 639,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 622,
                            "name": "ElementaryTypeName",
                            "src": "673:7:5"
                          }
                        ],
                        "id": 623,
                        "name": "VariableDeclaration",
                        "src": "673:15:5"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "addedValue",
                          "scope": 639,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 624,
                            "name": "ElementaryTypeName",
                            "src": "690:4:5"
                          }
                        ],
                        "id": 625,
                        "name": "VariableDeclaration",
                        "src": "690:15:5"
                      }
                    ],
                    "id": 626,
                    "name": "ParameterList",
                    "src": "672:34:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "success",
                          "scope": 639,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 629,
                            "name": "ElementaryTypeName",
                            "src": "737:4:5"
                          }
                        ],
                        "id": 630,
                        "name": "VariableDeclaration",
                        "src": "737:12:5"
                      }
                    ],
                    "id": 631,
                    "name": "ParameterList",
                    "src": "736:14:5"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 627,
                        "name": "Identifier",
                        "src": "714:13:5"
                      }
                    ],
                    "id": 628,
                    "name": "ModifierInvocation",
                    "src": "714:13:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 631
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "increaseAllowance",
                                  "referencedDeclaration": 156,
                                  "type": "function (address,uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1554,
                                      "type": "contract super ERC20Pausable",
                                      "value": "super"
                                    },
                                    "id": 632,
                                    "name": "Identifier",
                                    "src": "768:5:5"
                                  }
                                ],
                                "id": 633,
                                "name": "MemberAccess",
                                "src": "768:23:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 623,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 634,
                                "name": "Identifier",
                                "src": "792:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 625,
                                  "type": "uint256",
                                  "value": "addedValue"
                                },
                                "id": 635,
                                "name": "Identifier",
                                "src": "801:10:5"
                              }
                            ],
                            "id": 636,
                            "name": "FunctionCall",
                            "src": "768:44:5"
                          }
                        ],
                        "id": 637,
                        "name": "Return",
                        "src": "761:51:5"
                      }
                    ],
                    "id": 638,
                    "name": "Block",
                    "src": "751:68:5"
                  }
                ],
                "id": 639,
                "name": "FunctionDefinition",
                "src": "646:173:5"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "decreaseAllowance",
                  "scope": 658,
                  "stateMutability": "nonpayable",
                  "superFunction": 183,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 657,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 640,
                            "name": "ElementaryTypeName",
                            "src": "852:7:5"
                          }
                        ],
                        "id": 641,
                        "name": "VariableDeclaration",
                        "src": "852:15:5"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "subtractedValue",
                          "scope": 657,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 642,
                            "name": "ElementaryTypeName",
                            "src": "869:4:5"
                          }
                        ],
                        "id": 643,
                        "name": "VariableDeclaration",
                        "src": "869:20:5"
                      }
                    ],
                    "id": 644,
                    "name": "ParameterList",
                    "src": "851:39:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "success",
                          "scope": 657,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 647,
                            "name": "ElementaryTypeName",
                            "src": "921:4:5"
                          }
                        ],
                        "id": 648,
                        "name": "VariableDeclaration",
                        "src": "921:12:5"
                      }
                    ],
                    "id": 649,
                    "name": "ParameterList",
                    "src": "920:14:5"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 645,
                        "name": "Identifier",
                        "src": "898:13:5"
                      }
                    ],
                    "id": 646,
                    "name": "ModifierInvocation",
                    "src": "898:13:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 649
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "decreaseAllowance",
                                  "referencedDeclaration": 183,
                                  "type": "function (address,uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1554,
                                      "type": "contract super ERC20Pausable",
                                      "value": "super"
                                    },
                                    "id": 650,
                                    "name": "Identifier",
                                    "src": "952:5:5"
                                  }
                                ],
                                "id": 651,
                                "name": "MemberAccess",
                                "src": "952:23:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 641,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 652,
                                "name": "Identifier",
                                "src": "976:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 643,
                                  "type": "uint256",
                                  "value": "subtractedValue"
                                },
                                "id": 653,
                                "name": "Identifier",
                                "src": "985:15:5"
                              }
                            ],
                            "id": 654,
                            "name": "FunctionCall",
                            "src": "952:49:5"
                          }
                        ],
                        "id": 655,
                        "name": "Return",
                        "src": "945:56:5"
                      }
                    ],
                    "id": 656,
                    "name": "Block",
                    "src": "935:73:5"
                  }
                ],
                "id": 657,
                "name": "FunctionDefinition",
                "src": "825:183:5"
              }
            ],
            "id": 658,
            "name": "ContractDefinition",
            "src": "154:856:5"
          }
        ],
        "id": 659,
        "name": "SourceUnit",
        "src": "0:1011:5"
      }
    },
    "IERC20.sol": {
      "ast": {
        "absolutePath": "IERC20.sol",
        "exportedSymbols": {
          "IERC20": [
            727
          ]
        },
        "id": 728,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 660,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:6"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": "@title ERC20 interface\n@dev see https://eips.ethereum.org/EIPS/eip-20",
            "fullyImplemented": false,
            "id": 727,
            "linearizedBaseContracts": [
              727
            ],
            "name": "IERC20",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 669,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 665,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 662,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "150:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 661,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "150:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 664,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "162:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "162:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "149:27:6"
                },
                "returnParameters": {
                  "id": 668,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 667,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "195:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "195:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "194:6:6"
                },
                "scope": 727,
                "src": "132:69:6",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 678,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 674,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 671,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "224:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 670,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "224:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 673,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "241:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 672,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "223:32:6"
                },
                "returnParameters": {
                  "id": 677,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 676,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "274:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 675,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "274:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "273:6:6"
                },
                "scope": 727,
                "src": "207:73:6",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 689,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 685,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 680,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 689,
                      "src": "308:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "308:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 682,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 689,
                      "src": "322:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "322:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 684,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 689,
                      "src": "334:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "334:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "307:41:6"
                },
                "returnParameters": {
                  "id": 688,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 687,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 689,
                      "src": "367:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 686,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "367:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "366:6:6"
                },
                "scope": 727,
                "src": "286:87:6",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 694,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 690,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "399:2:6"
                },
                "returnParameters": {
                  "id": 693,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 692,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 694,
                      "src": "425:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "425:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "424:9:6"
                },
                "scope": 727,
                "src": "379:55:6",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 701,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 697,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 696,
                      "name": "who",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "459:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "458:13:6"
                },
                "returnParameters": {
                  "id": 700,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 699,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "495:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "495:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "494:9:6"
                },
                "scope": 727,
                "src": "440:64:6",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": null,
                "id": 710,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 706,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 703,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 710,
                      "src": "529:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 702,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "529:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 705,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 710,
                      "src": "544:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 704,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "544:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "528:32:6"
                },
                "returnParameters": {
                  "id": 709,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 708,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 710,
                      "src": "584:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 707,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "584:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "583:9:6"
                },
                "scope": 727,
                "src": "510:83:6",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 718,
                "name": "Transfer",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 717,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 712,
                      "indexed": true,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "614:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 711,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "614:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 714,
                      "indexed": true,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "636:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 713,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "636:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 716,
                      "indexed": false,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "656:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "656:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "613:57:6"
                },
                "src": "599:72:6"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 726,
                "name": "Approval",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 725,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 720,
                      "indexed": true,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "692:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 719,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "692:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 722,
                      "indexed": true,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "715:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "715:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 724,
                      "indexed": false,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "740:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "740:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "691:63:6"
                },
                "src": "677:78:6"
              }
            ],
            "scope": 728,
            "src": "109:648:6"
          }
        ],
        "src": "0:758:6"
      },
      "id": 6,
      "legacyAST": {
        "attributes": {
          "absolutePath": "IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              727
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 660,
            "name": "PragmaDirective",
            "src": "0:23:6"
          },
          {
            "attributes": {
              "baseContracts": [
                null
              ],
              "contractDependencies": [
                null
              ],
              "contractKind": "interface",
              "documentation": "@title ERC20 interface\n@dev see https://eips.ethereum.org/EIPS/eip-20",
              "fullyImplemented": false,
              "linearizedBaseContracts": [
                727
              ],
              "name": "IERC20",
              "scope": 728
            },
            "children": [
              {
                "attributes": {
                  "body": null,
                  "documentation": null,
                  "implemented": false,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "transfer",
                  "scope": 727,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 669,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 661,
                            "name": "ElementaryTypeName",
                            "src": "150:7:6"
                          }
                        ],
                        "id": 662,
                        "name": "VariableDeclaration",
                        "src": "150:10:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 669,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 663,
                            "name": "ElementaryTypeName",
                            "src": "162:7:6"
                          }
                        ],
                        "id": 664,
                        "name": "VariableDeclaration",
                        "src": "162:13:6"
                      }
                    ],
                    "id": 665,
                    "name": "ParameterList",
                    "src": "149:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 669,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 666,
                            "name": "ElementaryTypeName",
                            "src": "195:4:6"
                          }
                        ],
                        "id": 667,
                        "name": "VariableDeclaration",
                        "src": "195:4:6"
                      }
                    ],
                    "id": 668,
                    "name": "ParameterList",
                    "src": "194:6:6"
                  }
                ],
                "id": 669,
                "name": "FunctionDefinition",
                "src": "132:69:6"
              },
              {
                "attributes": {
                  "body": null,
                  "documentation": null,
                  "implemented": false,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "approve",
                  "scope": 727,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 678,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 670,
                            "name": "ElementaryTypeName",
                            "src": "224:7:6"
                          }
                        ],
                        "id": 671,
                        "name": "VariableDeclaration",
                        "src": "224:15:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 678,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 672,
                            "name": "ElementaryTypeName",
                            "src": "241:7:6"
                          }
                        ],
                        "id": 673,
                        "name": "VariableDeclaration",
                        "src": "241:13:6"
                      }
                    ],
                    "id": 674,
                    "name": "ParameterList",
                    "src": "223:32:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 678,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 675,
                            "name": "ElementaryTypeName",
                            "src": "274:4:6"
                          }
                        ],
                        "id": 676,
                        "name": "VariableDeclaration",
                        "src": "274:4:6"
                      }
                    ],
                    "id": 677,
                    "name": "ParameterList",
                    "src": "273:6:6"
                  }
                ],
                "id": 678,
                "name": "FunctionDefinition",
                "src": "207:73:6"
              },
              {
                "attributes": {
                  "body": null,
                  "documentation": null,
                  "implemented": false,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "transferFrom",
                  "scope": 727,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "from",
                          "scope": 689,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 679,
                            "name": "ElementaryTypeName",
                            "src": "308:7:6"
                          }
                        ],
                        "id": 680,
                        "name": "VariableDeclaration",
                        "src": "308:12:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 689,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 681,
                            "name": "ElementaryTypeName",
                            "src": "322:7:6"
                          }
                        ],
                        "id": 682,
                        "name": "VariableDeclaration",
                        "src": "322:10:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 689,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 683,
                            "name": "ElementaryTypeName",
                            "src": "334:7:6"
                          }
                        ],
                        "id": 684,
                        "name": "VariableDeclaration",
                        "src": "334:13:6"
                      }
                    ],
                    "id": 685,
                    "name": "ParameterList",
                    "src": "307:41:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 689,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 686,
                            "name": "ElementaryTypeName",
                            "src": "367:4:6"
                          }
                        ],
                        "id": 687,
                        "name": "VariableDeclaration",
                        "src": "367:4:6"
                      }
                    ],
                    "id": 688,
                    "name": "ParameterList",
                    "src": "366:6:6"
                  }
                ],
                "id": 689,
                "name": "FunctionDefinition",
                "src": "286:87:6"
              },
              {
                "attributes": {
                  "body": null,
                  "documentation": null,
                  "implemented": false,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "totalSupply",
                  "scope": 727,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 690,
                    "name": "ParameterList",
                    "src": "399:2:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 694,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 691,
                            "name": "ElementaryTypeName",
                            "src": "425:7:6"
                          }
                        ],
                        "id": 692,
                        "name": "VariableDeclaration",
                        "src": "425:7:6"
                      }
                    ],
                    "id": 693,
                    "name": "ParameterList",
                    "src": "424:9:6"
                  }
                ],
                "id": 694,
                "name": "FunctionDefinition",
                "src": "379:55:6"
              },
              {
                "attributes": {
                  "body": null,
                  "documentation": null,
                  "implemented": false,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "balanceOf",
                  "scope": 727,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "who",
                          "scope": 701,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 695,
                            "name": "ElementaryTypeName",
                            "src": "459:7:6"
                          }
                        ],
                        "id": 696,
                        "name": "VariableDeclaration",
                        "src": "459:11:6"
                      }
                    ],
                    "id": 697,
                    "name": "ParameterList",
                    "src": "458:13:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 701,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 698,
                            "name": "ElementaryTypeName",
                            "src": "495:7:6"
                          }
                        ],
                        "id": 699,
                        "name": "VariableDeclaration",
                        "src": "495:7:6"
                      }
                    ],
                    "id": 700,
                    "name": "ParameterList",
                    "src": "494:9:6"
                  }
                ],
                "id": 701,
                "name": "FunctionDefinition",
                "src": "440:64:6"
              },
              {
                "attributes": {
                  "body": null,
                  "documentation": null,
                  "implemented": false,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "allowance",
                  "scope": 727,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "owner",
                          "scope": 710,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 702,
                            "name": "ElementaryTypeName",
                            "src": "529:7:6"
                          }
                        ],
                        "id": 703,
                        "name": "VariableDeclaration",
                        "src": "529:13:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "spender",
                          "scope": 710,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 704,
                            "name": "ElementaryTypeName",
                            "src": "544:7:6"
                          }
                        ],
                        "id": 705,
                        "name": "VariableDeclaration",
                        "src": "544:15:6"
                      }
                    ],
                    "id": 706,
                    "name": "ParameterList",
                    "src": "528:32:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 710,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 707,
                            "name": "ElementaryTypeName",
                            "src": "584:7:6"
                          }
                        ],
                        "id": 708,
                        "name": "VariableDeclaration",
                        "src": "584:7:6"
                      }
                    ],
                    "id": 709,
                    "name": "ParameterList",
                    "src": "583:9:6"
                  }
                ],
                "id": 710,
                "name": "FunctionDefinition",
                "src": "510:83:6"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "Transfer"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "from",
                          "scope": 718,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 711,
                            "name": "ElementaryTypeName",
                            "src": "614:7:6"
                          }
                        ],
                        "id": 712,
                        "name": "VariableDeclaration",
                        "src": "614:20:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "to",
                          "scope": 718,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 713,
                            "name": "ElementaryTypeName",
                            "src": "636:7:6"
                          }
                        ],
                        "id": 714,
                        "name": "VariableDeclaration",
                        "src": "636:18:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": false,
                          "name": "value",
                          "scope": 718,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 715,
                            "name": "ElementaryTypeName",
                            "src": "656:7:6"
                          }
                        ],
                        "id": 716,
                        "name": "VariableDeclaration",
                        "src": "656:13:6"
                      }
                    ],
                    "id": 717,
                    "name": "ParameterList",
                    "src": "613:57:6"
                  }
                ],
                "id": 718,
                "name": "EventDefinition",
                "src": "599:72:6"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "Approval"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "owner",
                          "scope": 726,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 719,
                            "name": "ElementaryTypeName",
                            "src": "692:7:6"
                          }
                        ],
                        "id": 720,
                        "name": "VariableDeclaration",
                        "src": "692:21:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "spender",
                          "scope": 726,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 721,
                            "name": "ElementaryTypeName",
                            "src": "715:7:6"
                          }
                        ],
                        "id": 722,
                        "name": "VariableDeclaration",
                        "src": "715:23:6"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": false,
                          "name": "value",
                          "scope": 726,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 723,
                            "name": "ElementaryTypeName",
                            "src": "740:7:6"
                          }
                        ],
                        "id": 724,
                        "name": "VariableDeclaration",
                        "src": "740:13:6"
                      }
                    ],
                    "id": 725,
                    "name": "ParameterList",
                    "src": "691:63:6"
                  }
                ],
                "id": 726,
                "name": "EventDefinition",
                "src": "677:78:6"
              }
            ],
            "id": 727,
            "name": "ContractDefinition",
            "src": "109:648:6"
          }
        ],
        "id": 728,
        "name": "SourceUnit",
        "src": "0:758:6"
      }
    },
    "MinterRole.sol": {
      "ast": {
        "absolutePath": "MinterRole.sol",
        "exportedSymbols": {
          "MinterRole": [
            830
          ]
        },
        "id": 831,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 729,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:7"
          },
          {
            "absolutePath": "Roles.sol",
            "file": "./Roles.sol",
            "id": 730,
            "nodeType": "ImportDirective",
            "scope": 831,
            "sourceUnit": 1375,
            "src": "25:21:7",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 830,
            "linearizedBaseContracts": [
              830
            ],
            "name": "MinterRole",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 733,
                "libraryName": {
                  "contractScope": null,
                  "id": 731,
                  "name": "Roles",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1374,
                  "src": "80:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Roles_$1374",
                    "typeString": "library Roles"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "74:27:7",
                "typeName": {
                  "contractScope": null,
                  "id": 732,
                  "name": "Roles.Role",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1287,
                  "src": "90:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                    "typeString": "struct Roles.Role"
                  }
                }
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 737,
                "name": "MinterAdded",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 736,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 735,
                      "indexed": true,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 737,
                      "src": "125:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "125:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "124:25:7"
                },
                "src": "107:43:7"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 741,
                "name": "MinterRemoved",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 740,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 739,
                      "indexed": true,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 741,
                      "src": "175:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "175:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "174:25:7"
                },
                "src": "155:45:7"
              },
              {
                "constant": false,
                "id": 743,
                "name": "_minters",
                "nodeType": "VariableDeclaration",
                "scope": 830,
                "src": "206:27:7",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Role_$1287_storage",
                  "typeString": "struct Roles.Role"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 742,
                  "name": "Roles.Role",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1287,
                  "src": "206:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                    "typeString": "struct Roles.Role"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 751,
                  "nodeType": "Block",
                  "src": "264:39:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 747,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "285:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "285:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 746,
                          "name": "_addMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "274:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "274:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 750,
                      "nodeType": "ExpressionStatement",
                      "src": "274:22:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 752,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 744,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "252:2:7"
                },
                "returnParameters": {
                  "id": 745,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "264:0:7"
                },
                "scope": 830,
                "src": "240:63:7",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 762,
                  "nodeType": "Block",
                  "src": "331:57:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 756,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1517,
                                  "src": "358:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "358:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 755,
                              "name": "isMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "349:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "349:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 754,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "341:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "341:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 760,
                      "nodeType": "ExpressionStatement",
                      "src": "341:29:7"
                    },
                    {
                      "id": 761,
                      "nodeType": "PlaceholderStatement",
                      "src": "380:1:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 763,
                "name": "onlyMinter",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 753,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "328:2:7"
                },
                "src": "309:79:7",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 775,
                  "nodeType": "Block",
                  "src": "456:45:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 772,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "486:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "_minters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "473:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1373,
                          "src": "473:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$1287_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "473:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 769,
                      "id": 774,
                      "nodeType": "Return",
                      "src": "466:28:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 776,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isMinter",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 766,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 765,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "412:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "412:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "411:17:7"
                },
                "returnParameters": {
                  "id": 769,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 768,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "450:4:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 767,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "450:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "449:6:7"
                },
                "scope": 830,
                "src": "394:107:7",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 787,
                  "nodeType": "Block",
                  "src": "561:36:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 784,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "582:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 783,
                          "name": "_addMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "571:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "571:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 786,
                      "nodeType": "ExpressionStatement",
                      "src": "571:19:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 788,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 781,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "onlyMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "550:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "550:10:7"
                  }
                ],
                "name": "addMinter",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 779,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 778,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "526:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 777,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "526:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "525:17:7"
                },
                "returnParameters": {
                  "id": 782,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "561:0:7"
                },
                "scope": 830,
                "src": "507:90:7",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 796,
                  "nodeType": "Block",
                  "src": "636:42:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 792,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "660:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "660:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 791,
                          "name": "_removeMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "646:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "646:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 795,
                      "nodeType": "ExpressionStatement",
                      "src": "646:25:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 797,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "renounceMinter",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 789,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "626:2:7"
                },
                "returnParameters": {
                  "id": 790,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "636:0:7"
                },
                "scope": 830,
                "src": "603:75:7",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 812,
                  "nodeType": "Block",
                  "src": "730:73:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 805,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "753:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 802,
                            "name": "_minters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "740:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1319,
                          "src": "740:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1287_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address)"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "740:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 807,
                      "nodeType": "ExpressionStatement",
                      "src": "740:21:7"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 809,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "788:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 808,
                          "name": "MinterAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "776:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "776:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 811,
                      "nodeType": "EmitStatement",
                      "src": "771:25:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 813,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_addMinter",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 800,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 799,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "704:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 798,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "704:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "703:17:7"
                },
                "returnParameters": {
                  "id": 801,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "730:0:7"
                },
                "scope": 830,
                "src": "684:119:7",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 828,
                  "nodeType": "Block",
                  "src": "858:78:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 821,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "884:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 818,
                            "name": "_minters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "868:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "remove",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1350,
                          "src": "868:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1287_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address)"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 823,
                      "nodeType": "ExpressionStatement",
                      "src": "868:24:7"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 825,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "921:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 824,
                          "name": "MinterRemoved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 741,
                          "src": "907:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "907:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 827,
                      "nodeType": "EmitStatement",
                      "src": "902:27:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 829,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_removeMinter",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 816,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 815,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "832:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 814,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "832:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "831:17:7"
                },
                "returnParameters": {
                  "id": 817,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "858:0:7"
                },
                "scope": 830,
                "src": "809:127:7",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 831,
            "src": "48:890:7"
          }
        ],
        "src": "0:939:7"
      },
      "id": 7,
      "legacyAST": {
        "attributes": {
          "absolutePath": "MinterRole.sol",
          "exportedSymbols": {
            "MinterRole": [
              830
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 729,
            "name": "PragmaDirective",
            "src": "0:23:7"
          },
          {
            "attributes": {
              "SourceUnit": 1375,
              "absolutePath": "Roles.sol",
              "file": "./Roles.sol",
              "scope": 831,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 730,
            "name": "ImportDirective",
            "src": "25:21:7"
          },
          {
            "attributes": {
              "baseContracts": [
                null
              ],
              "contractDependencies": [
                null
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                830
              ],
              "name": "MinterRole",
              "scope": 831
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Roles",
                      "referencedDeclaration": 1374,
                      "type": "library Roles"
                    },
                    "id": 731,
                    "name": "UserDefinedTypeName",
                    "src": "80:5:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Roles.Role",
                      "referencedDeclaration": 1287,
                      "type": "struct Roles.Role"
                    },
                    "id": 732,
                    "name": "UserDefinedTypeName",
                    "src": "90:10:7"
                  }
                ],
                "id": 733,
                "name": "UsingForDirective",
                "src": "74:27:7"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "MinterAdded"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "account",
                          "scope": 737,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 734,
                            "name": "ElementaryTypeName",
                            "src": "125:7:7"
                          }
                        ],
                        "id": 735,
                        "name": "VariableDeclaration",
                        "src": "125:23:7"
                      }
                    ],
                    "id": 736,
                    "name": "ParameterList",
                    "src": "124:25:7"
                  }
                ],
                "id": 737,
                "name": "EventDefinition",
                "src": "107:43:7"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "MinterRemoved"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "account",
                          "scope": 741,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 738,
                            "name": "ElementaryTypeName",
                            "src": "175:7:7"
                          }
                        ],
                        "id": 739,
                        "name": "VariableDeclaration",
                        "src": "175:23:7"
                      }
                    ],
                    "id": 740,
                    "name": "ParameterList",
                    "src": "174:25:7"
                  }
                ],
                "id": 741,
                "name": "EventDefinition",
                "src": "155:45:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_minters",
                  "scope": 830,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "struct Roles.Role",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Roles.Role",
                      "referencedDeclaration": 1287,
                      "type": "struct Roles.Role"
                    },
                    "id": 742,
                    "name": "UserDefinedTypeName",
                    "src": "206:10:7"
                  }
                ],
                "id": 743,
                "name": "VariableDeclaration",
                "src": "206:27:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "modifiers": [
                    null
                  ],
                  "name": "",
                  "scope": 830,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 744,
                    "name": "ParameterList",
                    "src": "252:2:7"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 745,
                    "name": "ParameterList",
                    "src": "264:0:7"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 813,
                                  "type": "function (address)",
                                  "value": "_addMinter"
                                },
                                "id": 746,
                                "name": "Identifier",
                                "src": "274:10:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 747,
                                    "name": "Identifier",
                                    "src": "285:3:7"
                                  }
                                ],
                                "id": 748,
                                "name": "MemberAccess",
                                "src": "285:10:7"
                              }
                            ],
                            "id": 749,
                            "name": "FunctionCall",
                            "src": "274:22:7"
                          }
                        ],
                        "id": 750,
                        "name": "ExpressionStatement",
                        "src": "274:22:7"
                      }
                    ],
                    "id": 751,
                    "name": "Block",
                    "src": "264:39:7"
                  }
                ],
                "id": 752,
                "name": "FunctionDefinition",
                "src": "240:63:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "name": "onlyMinter",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 753,
                    "name": "ParameterList",
                    "src": "328:2:7"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 754,
                                "name": "Identifier",
                                "src": "341:7:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 776,
                                      "type": "function (address) view returns (bool)",
                                      "value": "isMinter"
                                    },
                                    "id": 755,
                                    "name": "Identifier",
                                    "src": "349:8:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1517,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 756,
                                        "name": "Identifier",
                                        "src": "358:3:7"
                                      }
                                    ],
                                    "id": 757,
                                    "name": "MemberAccess",
                                    "src": "358:10:7"
                                  }
                                ],
                                "id": 758,
                                "name": "FunctionCall",
                                "src": "349:20:7"
                              }
                            ],
                            "id": 759,
                            "name": "FunctionCall",
                            "src": "341:29:7"
                          }
                        ],
                        "id": 760,
                        "name": "ExpressionStatement",
                        "src": "341:29:7"
                      },
                      {
                        "id": 761,
                        "name": "PlaceholderStatement",
                        "src": "380:1:7"
                      }
                    ],
                    "id": 762,
                    "name": "Block",
                    "src": "331:57:7"
                  }
                ],
                "id": 763,
                "name": "ModifierDefinition",
                "src": "309:79:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "isMinter",
                  "scope": 830,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 776,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 764,
                            "name": "ElementaryTypeName",
                            "src": "412:7:7"
                          }
                        ],
                        "id": 765,
                        "name": "VariableDeclaration",
                        "src": "412:15:7"
                      }
                    ],
                    "id": 766,
                    "name": "ParameterList",
                    "src": "411:17:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 776,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 767,
                            "name": "ElementaryTypeName",
                            "src": "450:4:7"
                          }
                        ],
                        "id": 768,
                        "name": "VariableDeclaration",
                        "src": "450:4:7"
                      }
                    ],
                    "id": 769,
                    "name": "ParameterList",
                    "src": "449:6:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 769
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "has",
                                  "referencedDeclaration": 1373,
                                  "type": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 743,
                                      "type": "struct Roles.Role storage ref",
                                      "value": "_minters"
                                    },
                                    "id": 770,
                                    "name": "Identifier",
                                    "src": "473:8:7"
                                  }
                                ],
                                "id": 771,
                                "name": "MemberAccess",
                                "src": "473:12:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 765,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 772,
                                "name": "Identifier",
                                "src": "486:7:7"
                              }
                            ],
                            "id": 773,
                            "name": "FunctionCall",
                            "src": "473:21:7"
                          }
                        ],
                        "id": 774,
                        "name": "Return",
                        "src": "466:28:7"
                      }
                    ],
                    "id": 775,
                    "name": "Block",
                    "src": "456:45:7"
                  }
                ],
                "id": 776,
                "name": "FunctionDefinition",
                "src": "394:107:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "addMinter",
                  "scope": 830,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 788,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 777,
                            "name": "ElementaryTypeName",
                            "src": "526:7:7"
                          }
                        ],
                        "id": 778,
                        "name": "VariableDeclaration",
                        "src": "526:15:7"
                      }
                    ],
                    "id": 779,
                    "name": "ParameterList",
                    "src": "525:17:7"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 782,
                    "name": "ParameterList",
                    "src": "561:0:7"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 763,
                          "type": "modifier ()",
                          "value": "onlyMinter"
                        },
                        "id": 780,
                        "name": "Identifier",
                        "src": "550:10:7"
                      }
                    ],
                    "id": 781,
                    "name": "ModifierInvocation",
                    "src": "550:10:7"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 813,
                                  "type": "function (address)",
                                  "value": "_addMinter"
                                },
                                "id": 783,
                                "name": "Identifier",
                                "src": "571:10:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 778,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 784,
                                "name": "Identifier",
                                "src": "582:7:7"
                              }
                            ],
                            "id": 785,
                            "name": "FunctionCall",
                            "src": "571:19:7"
                          }
                        ],
                        "id": 786,
                        "name": "ExpressionStatement",
                        "src": "571:19:7"
                      }
                    ],
                    "id": 787,
                    "name": "Block",
                    "src": "561:36:7"
                  }
                ],
                "id": 788,
                "name": "FunctionDefinition",
                "src": "507:90:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "renounceMinter",
                  "scope": 830,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 789,
                    "name": "ParameterList",
                    "src": "626:2:7"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 790,
                    "name": "ParameterList",
                    "src": "636:0:7"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 829,
                                  "type": "function (address)",
                                  "value": "_removeMinter"
                                },
                                "id": 791,
                                "name": "Identifier",
                                "src": "646:13:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 792,
                                    "name": "Identifier",
                                    "src": "660:3:7"
                                  }
                                ],
                                "id": 793,
                                "name": "MemberAccess",
                                "src": "660:10:7"
                              }
                            ],
                            "id": 794,
                            "name": "FunctionCall",
                            "src": "646:25:7"
                          }
                        ],
                        "id": 795,
                        "name": "ExpressionStatement",
                        "src": "646:25:7"
                      }
                    ],
                    "id": 796,
                    "name": "Block",
                    "src": "636:42:7"
                  }
                ],
                "id": 797,
                "name": "FunctionDefinition",
                "src": "603:75:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_addMinter",
                  "scope": 830,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 813,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 798,
                            "name": "ElementaryTypeName",
                            "src": "704:7:7"
                          }
                        ],
                        "id": 799,
                        "name": "VariableDeclaration",
                        "src": "704:15:7"
                      }
                    ],
                    "id": 800,
                    "name": "ParameterList",
                    "src": "703:17:7"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 801,
                    "name": "ParameterList",
                    "src": "730:0:7"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 1319,
                                  "type": "function (struct Roles.Role storage pointer,address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 743,
                                      "type": "struct Roles.Role storage ref",
                                      "value": "_minters"
                                    },
                                    "id": 802,
                                    "name": "Identifier",
                                    "src": "740:8:7"
                                  }
                                ],
                                "id": 804,
                                "name": "MemberAccess",
                                "src": "740:12:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 799,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 805,
                                "name": "Identifier",
                                "src": "753:7:7"
                              }
                            ],
                            "id": 806,
                            "name": "FunctionCall",
                            "src": "740:21:7"
                          }
                        ],
                        "id": 807,
                        "name": "ExpressionStatement",
                        "src": "740:21:7"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 737,
                                  "type": "function (address)",
                                  "value": "MinterAdded"
                                },
                                "id": 808,
                                "name": "Identifier",
                                "src": "776:11:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 799,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 809,
                                "name": "Identifier",
                                "src": "788:7:7"
                              }
                            ],
                            "id": 810,
                            "name": "FunctionCall",
                            "src": "776:20:7"
                          }
                        ],
                        "id": 811,
                        "name": "EmitStatement",
                        "src": "771:25:7"
                      }
                    ],
                    "id": 812,
                    "name": "Block",
                    "src": "730:73:7"
                  }
                ],
                "id": 813,
                "name": "FunctionDefinition",
                "src": "684:119:7"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_removeMinter",
                  "scope": 830,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 829,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 814,
                            "name": "ElementaryTypeName",
                            "src": "832:7:7"
                          }
                        ],
                        "id": 815,
                        "name": "VariableDeclaration",
                        "src": "832:15:7"
                      }
                    ],
                    "id": 816,
                    "name": "ParameterList",
                    "src": "831:17:7"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 817,
                    "name": "ParameterList",
                    "src": "858:0:7"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "remove",
                                  "referencedDeclaration": 1350,
                                  "type": "function (struct Roles.Role storage pointer,address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 743,
                                      "type": "struct Roles.Role storage ref",
                                      "value": "_minters"
                                    },
                                    "id": 818,
                                    "name": "Identifier",
                                    "src": "868:8:7"
                                  }
                                ],
                                "id": 820,
                                "name": "MemberAccess",
                                "src": "868:15:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 815,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 821,
                                "name": "Identifier",
                                "src": "884:7:7"
                              }
                            ],
                            "id": 822,
                            "name": "FunctionCall",
                            "src": "868:24:7"
                          }
                        ],
                        "id": 823,
                        "name": "ExpressionStatement",
                        "src": "868:24:7"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 741,
                                  "type": "function (address)",
                                  "value": "MinterRemoved"
                                },
                                "id": 824,
                                "name": "Identifier",
                                "src": "907:13:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 815,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 825,
                                "name": "Identifier",
                                "src": "921:7:7"
                              }
                            ],
                            "id": 826,
                            "name": "FunctionCall",
                            "src": "907:22:7"
                          }
                        ],
                        "id": 827,
                        "name": "EmitStatement",
                        "src": "902:27:7"
                      }
                    ],
                    "id": 828,
                    "name": "Block",
                    "src": "858:78:7"
                  }
                ],
                "id": 829,
                "name": "FunctionDefinition",
                "src": "809:127:7"
              }
            ],
            "id": 830,
            "name": "ContractDefinition",
            "src": "48:890:7"
          }
        ],
        "id": 831,
        "name": "SourceUnit",
        "src": "0:939:7"
      }
    },
    "Pausable.sol": {
      "ast": {
        "absolutePath": "Pausable.sol",
        "exportedSymbols": {
          "Pausable": [
            913
          ]
        },
        "id": 914,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 832,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:8"
          },
          {
            "absolutePath": "PauserRole.sol",
            "file": "./PauserRole.sol",
            "id": 833,
            "nodeType": "ImportDirective",
            "scope": 914,
            "sourceUnit": 1017,
            "src": "25:26:8",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 834,
                  "name": "PauserRole",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1016,
                  "src": "187:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PauserRole_$1016",
                    "typeString": "contract PauserRole"
                  }
                },
                "id": 835,
                "nodeType": "InheritanceSpecifier",
                "src": "187:10:8"
              }
            ],
            "contractDependencies": [
              1016
            ],
            "contractKind": "contract",
            "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
            "fullyImplemented": true,
            "id": 913,
            "linearizedBaseContracts": [
              913,
              1016
            ],
            "name": "Pausable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": null,
                "id": 839,
                "name": "Paused",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 838,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 837,
                      "indexed": false,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "217:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "217:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "216:17:8"
                },
                "src": "204:30:8"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 843,
                "name": "Unpaused",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 842,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 841,
                      "indexed": false,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 843,
                      "src": "254:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 840,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "253:17:8"
                },
                "src": "239:32:8"
              },
              {
                "constant": false,
                "id": 845,
                "name": "_paused",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "277:20:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 844,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 852,
                  "nodeType": "Block",
                  "src": "328:32:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 848,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "338:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "348:5:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "338:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 851,
                      "nodeType": "ExpressionStatement",
                      "src": "338:15:8"
                    }
                  ]
                },
                "documentation": null,
                "id": 853,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 846,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "316:2:8"
                },
                "returnParameters": {
                  "id": 847,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "328:0:8"
                },
                "scope": 913,
                "src": "304:56:8",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 860,
                  "nodeType": "Block",
                  "src": "491:31:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 858,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "508:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 857,
                      "id": 859,
                      "nodeType": "Return",
                      "src": "501:14:8"
                    }
                  ]
                },
                "documentation": "@return true if the contract is paused, false otherwise.",
                "id": 861,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "paused",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 854,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "461:2:8"
                },
                "returnParameters": {
                  "id": 857,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 856,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 861,
                      "src": "485:4:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 855,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "485:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "484:6:8"
                },
                "scope": 913,
                "src": "446:76:8",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 869,
                  "nodeType": "Block",
                  "src": "656:45:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "674:8:8",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 864,
                              "name": "_paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "675:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 863,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "666:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "666:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 867,
                      "nodeType": "ExpressionStatement",
                      "src": "666:17:8"
                    },
                    {
                      "id": 868,
                      "nodeType": "PlaceholderStatement",
                      "src": "693:1:8"
                    }
                  ]
                },
                "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
                "id": 870,
                "name": "whenNotPaused",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 862,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "653:2:8"
                },
                "src": "631:70:8",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 877,
                  "nodeType": "Block",
                  "src": "828:44:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 873,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "846:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 872,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "838:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "838:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 875,
                      "nodeType": "ExpressionStatement",
                      "src": "838:16:8"
                    },
                    {
                      "id": 876,
                      "nodeType": "PlaceholderStatement",
                      "src": "864:1:8"
                    }
                  ]
                },
                "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
                "id": 878,
                "name": "whenPaused",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 871,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "825:2:8"
                },
                "src": "806:66:8",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 894,
                  "nodeType": "Block",
                  "src": "1008:64:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "1018:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1028:4:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1018:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 888,
                      "nodeType": "ExpressionStatement",
                      "src": "1018:14:8"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 890,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "1054:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1054:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 889,
                          "name": "Paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "1047:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1047:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 893,
                      "nodeType": "EmitStatement",
                      "src": "1042:23:8"
                    }
                  ]
                },
                "documentation": "@dev called by the owner to pause, triggers stopped state",
                "id": 895,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 881,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 880,
                      "name": "onlyPauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "983:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "983:10:8"
                  },
                  {
                    "arguments": null,
                    "id": 883,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 882,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "994:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "994:13:8"
                  }
                ],
                "name": "pause",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 879,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "973:2:8"
                },
                "returnParameters": {
                  "id": 884,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1008:0:8"
                },
                "scope": 913,
                "src": "959:113:8",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 911,
                  "nodeType": "Block",
                  "src": "1210:67:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "1220:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1230:5:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1220:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 905,
                      "nodeType": "ExpressionStatement",
                      "src": "1220:15:8"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 907,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "1259:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1259:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 906,
                          "name": "Unpaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "1250:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1250:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 910,
                      "nodeType": "EmitStatement",
                      "src": "1245:25:8"
                    }
                  ]
                },
                "documentation": "@dev called by the owner to unpause, returns to normal state",
                "id": 912,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 898,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 897,
                      "name": "onlyPauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "1188:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1188:10:8"
                  },
                  {
                    "arguments": null,
                    "id": 900,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 899,
                      "name": "whenPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "1199:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1199:10:8"
                  }
                ],
                "name": "unpause",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 896,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1178:2:8"
                },
                "returnParameters": {
                  "id": 901,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1210:0:8"
                },
                "scope": 913,
                "src": "1162:115:8",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 914,
            "src": "166:1113:8"
          }
        ],
        "src": "0:1280:8"
      },
      "id": 8,
      "legacyAST": {
        "attributes": {
          "absolutePath": "Pausable.sol",
          "exportedSymbols": {
            "Pausable": [
              913
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 832,
            "name": "PragmaDirective",
            "src": "0:23:8"
          },
          {
            "attributes": {
              "SourceUnit": 1017,
              "absolutePath": "PauserRole.sol",
              "file": "./PauserRole.sol",
              "scope": 914,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 833,
            "name": "ImportDirective",
            "src": "25:26:8"
          },
          {
            "attributes": {
              "contractDependencies": [
                1016
              ],
              "contractKind": "contract",
              "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                913,
                1016
              ],
              "name": "Pausable",
              "scope": 914
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "PauserRole",
                      "referencedDeclaration": 1016,
                      "type": "contract PauserRole"
                    },
                    "id": 834,
                    "name": "UserDefinedTypeName",
                    "src": "187:10:8"
                  }
                ],
                "id": 835,
                "name": "InheritanceSpecifier",
                "src": "187:10:8"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "Paused"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": false,
                          "name": "account",
                          "scope": 839,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 836,
                            "name": "ElementaryTypeName",
                            "src": "217:7:8"
                          }
                        ],
                        "id": 837,
                        "name": "VariableDeclaration",
                        "src": "217:15:8"
                      }
                    ],
                    "id": 838,
                    "name": "ParameterList",
                    "src": "216:17:8"
                  }
                ],
                "id": 839,
                "name": "EventDefinition",
                "src": "204:30:8"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "Unpaused"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": false,
                          "name": "account",
                          "scope": 843,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 840,
                            "name": "ElementaryTypeName",
                            "src": "254:7:8"
                          }
                        ],
                        "id": 841,
                        "name": "VariableDeclaration",
                        "src": "254:15:8"
                      }
                    ],
                    "id": 842,
                    "name": "ParameterList",
                    "src": "253:17:8"
                  }
                ],
                "id": 843,
                "name": "EventDefinition",
                "src": "239:32:8"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_paused",
                  "scope": 913,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 844,
                    "name": "ElementaryTypeName",
                    "src": "277:4:8"
                  }
                ],
                "id": 845,
                "name": "VariableDeclaration",
                "src": "277:20:8"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "modifiers": [
                    null
                  ],
                  "name": "",
                  "scope": 913,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 846,
                    "name": "ParameterList",
                    "src": "316:2:8"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 847,
                    "name": "ParameterList",
                    "src": "328:0:8"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 845,
                                  "type": "bool",
                                  "value": "_paused"
                                },
                                "id": 848,
                                "name": "Identifier",
                                "src": "338:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 849,
                                "name": "Literal",
                                "src": "348:5:8"
                              }
                            ],
                            "id": 850,
                            "name": "Assignment",
                            "src": "338:15:8"
                          }
                        ],
                        "id": 851,
                        "name": "ExpressionStatement",
                        "src": "338:15:8"
                      }
                    ],
                    "id": 852,
                    "name": "Block",
                    "src": "328:32:8"
                  }
                ],
                "id": 853,
                "name": "FunctionDefinition",
                "src": "304:56:8"
              },
              {
                "attributes": {
                  "documentation": "@return true if the contract is paused, false otherwise.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "paused",
                  "scope": 913,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 854,
                    "name": "ParameterList",
                    "src": "461:2:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 861,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 855,
                            "name": "ElementaryTypeName",
                            "src": "485:4:8"
                          }
                        ],
                        "id": 856,
                        "name": "VariableDeclaration",
                        "src": "485:4:8"
                      }
                    ],
                    "id": 857,
                    "name": "ParameterList",
                    "src": "484:6:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 857
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 845,
                              "type": "bool",
                              "value": "_paused"
                            },
                            "id": 858,
                            "name": "Identifier",
                            "src": "508:7:8"
                          }
                        ],
                        "id": 859,
                        "name": "Return",
                        "src": "501:14:8"
                      }
                    ],
                    "id": 860,
                    "name": "Block",
                    "src": "491:31:8"
                  }
                ],
                "id": 861,
                "name": "FunctionDefinition",
                "src": "446:76:8"
              },
              {
                "attributes": {
                  "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
                  "name": "whenNotPaused",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 862,
                    "name": "ParameterList",
                    "src": "653:2:8"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 863,
                                "name": "Identifier",
                                "src": "666:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 845,
                                      "type": "bool",
                                      "value": "_paused"
                                    },
                                    "id": 864,
                                    "name": "Identifier",
                                    "src": "675:7:8"
                                  }
                                ],
                                "id": 865,
                                "name": "UnaryOperation",
                                "src": "674:8:8"
                              }
                            ],
                            "id": 866,
                            "name": "FunctionCall",
                            "src": "666:17:8"
                          }
                        ],
                        "id": 867,
                        "name": "ExpressionStatement",
                        "src": "666:17:8"
                      },
                      {
                        "id": 868,
                        "name": "PlaceholderStatement",
                        "src": "693:1:8"
                      }
                    ],
                    "id": 869,
                    "name": "Block",
                    "src": "656:45:8"
                  }
                ],
                "id": 870,
                "name": "ModifierDefinition",
                "src": "631:70:8"
              },
              {
                "attributes": {
                  "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
                  "name": "whenPaused",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 871,
                    "name": "ParameterList",
                    "src": "825:2:8"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 872,
                                "name": "Identifier",
                                "src": "838:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 845,
                                  "type": "bool",
                                  "value": "_paused"
                                },
                                "id": 873,
                                "name": "Identifier",
                                "src": "846:7:8"
                              }
                            ],
                            "id": 874,
                            "name": "FunctionCall",
                            "src": "838:16:8"
                          }
                        ],
                        "id": 875,
                        "name": "ExpressionStatement",
                        "src": "838:16:8"
                      },
                      {
                        "id": 876,
                        "name": "PlaceholderStatement",
                        "src": "864:1:8"
                      }
                    ],
                    "id": 877,
                    "name": "Block",
                    "src": "828:44:8"
                  }
                ],
                "id": 878,
                "name": "ModifierDefinition",
                "src": "806:66:8"
              },
              {
                "attributes": {
                  "documentation": "@dev called by the owner to pause, triggers stopped state",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "pause",
                  "scope": 913,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 879,
                    "name": "ParameterList",
                    "src": "973:2:8"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 884,
                    "name": "ParameterList",
                    "src": "1008:0:8"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 949,
                          "type": "modifier ()",
                          "value": "onlyPauser"
                        },
                        "id": 880,
                        "name": "Identifier",
                        "src": "983:10:8"
                      }
                    ],
                    "id": 881,
                    "name": "ModifierInvocation",
                    "src": "983:10:8"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 882,
                        "name": "Identifier",
                        "src": "994:13:8"
                      }
                    ],
                    "id": 883,
                    "name": "ModifierInvocation",
                    "src": "994:13:8"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 845,
                                  "type": "bool",
                                  "value": "_paused"
                                },
                                "id": 885,
                                "name": "Identifier",
                                "src": "1018:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 886,
                                "name": "Literal",
                                "src": "1028:4:8"
                              }
                            ],
                            "id": 887,
                            "name": "Assignment",
                            "src": "1018:14:8"
                          }
                        ],
                        "id": 888,
                        "name": "ExpressionStatement",
                        "src": "1018:14:8"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 839,
                                  "type": "function (address)",
                                  "value": "Paused"
                                },
                                "id": 889,
                                "name": "Identifier",
                                "src": "1047:6:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 890,
                                    "name": "Identifier",
                                    "src": "1054:3:8"
                                  }
                                ],
                                "id": 891,
                                "name": "MemberAccess",
                                "src": "1054:10:8"
                              }
                            ],
                            "id": 892,
                            "name": "FunctionCall",
                            "src": "1047:18:8"
                          }
                        ],
                        "id": 893,
                        "name": "EmitStatement",
                        "src": "1042:23:8"
                      }
                    ],
                    "id": 894,
                    "name": "Block",
                    "src": "1008:64:8"
                  }
                ],
                "id": 895,
                "name": "FunctionDefinition",
                "src": "959:113:8"
              },
              {
                "attributes": {
                  "documentation": "@dev called by the owner to unpause, returns to normal state",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "unpause",
                  "scope": 913,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 896,
                    "name": "ParameterList",
                    "src": "1178:2:8"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 901,
                    "name": "ParameterList",
                    "src": "1210:0:8"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 949,
                          "type": "modifier ()",
                          "value": "onlyPauser"
                        },
                        "id": 897,
                        "name": "Identifier",
                        "src": "1188:10:8"
                      }
                    ],
                    "id": 898,
                    "name": "ModifierInvocation",
                    "src": "1188:10:8"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 878,
                          "type": "modifier ()",
                          "value": "whenPaused"
                        },
                        "id": 899,
                        "name": "Identifier",
                        "src": "1199:10:8"
                      }
                    ],
                    "id": 900,
                    "name": "ModifierInvocation",
                    "src": "1199:10:8"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 845,
                                  "type": "bool",
                                  "value": "_paused"
                                },
                                "id": 902,
                                "name": "Identifier",
                                "src": "1220:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 903,
                                "name": "Literal",
                                "src": "1230:5:8"
                              }
                            ],
                            "id": 904,
                            "name": "Assignment",
                            "src": "1220:15:8"
                          }
                        ],
                        "id": 905,
                        "name": "ExpressionStatement",
                        "src": "1220:15:8"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 843,
                                  "type": "function (address)",
                                  "value": "Unpaused"
                                },
                                "id": 906,
                                "name": "Identifier",
                                "src": "1250:8:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 907,
                                    "name": "Identifier",
                                    "src": "1259:3:8"
                                  }
                                ],
                                "id": 908,
                                "name": "MemberAccess",
                                "src": "1259:10:8"
                              }
                            ],
                            "id": 909,
                            "name": "FunctionCall",
                            "src": "1250:20:8"
                          }
                        ],
                        "id": 910,
                        "name": "EmitStatement",
                        "src": "1245:25:8"
                      }
                    ],
                    "id": 911,
                    "name": "Block",
                    "src": "1210:67:8"
                  }
                ],
                "id": 912,
                "name": "FunctionDefinition",
                "src": "1162:115:8"
              }
            ],
            "id": 913,
            "name": "ContractDefinition",
            "src": "166:1113:8"
          }
        ],
        "id": 914,
        "name": "SourceUnit",
        "src": "0:1280:8"
      }
    },
    "PauserRole.sol": {
      "ast": {
        "absolutePath": "PauserRole.sol",
        "exportedSymbols": {
          "PauserRole": [
            1016
          ]
        },
        "id": 1017,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 915,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:9"
          },
          {
            "absolutePath": "Roles.sol",
            "file": "./Roles.sol",
            "id": 916,
            "nodeType": "ImportDirective",
            "scope": 1017,
            "sourceUnit": 1375,
            "src": "25:21:9",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1016,
            "linearizedBaseContracts": [
              1016
            ],
            "name": "PauserRole",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 919,
                "libraryName": {
                  "contractScope": null,
                  "id": 917,
                  "name": "Roles",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1374,
                  "src": "80:5:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Roles_$1374",
                    "typeString": "library Roles"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "74:27:9",
                "typeName": {
                  "contractScope": null,
                  "id": 918,
                  "name": "Roles.Role",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1287,
                  "src": "90:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                    "typeString": "struct Roles.Role"
                  }
                }
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 923,
                "name": "PauserAdded",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 922,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 921,
                      "indexed": true,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 923,
                      "src": "125:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "125:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "124:25:9"
                },
                "src": "107:43:9"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 927,
                "name": "PauserRemoved",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 926,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 925,
                      "indexed": true,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "175:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 924,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "175:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "174:25:9"
                },
                "src": "155:45:9"
              },
              {
                "constant": false,
                "id": 929,
                "name": "_pausers",
                "nodeType": "VariableDeclaration",
                "scope": 1016,
                "src": "206:27:9",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Role_$1287_storage",
                  "typeString": "struct Roles.Role"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 928,
                  "name": "Roles.Role",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1287,
                  "src": "206:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                    "typeString": "struct Roles.Role"
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 937,
                  "nodeType": "Block",
                  "src": "264:39:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 933,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "285:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "285:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 932,
                          "name": "_addPauser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "274:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "274:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 936,
                      "nodeType": "ExpressionStatement",
                      "src": "274:22:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 938,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 930,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "252:2:9"
                },
                "returnParameters": {
                  "id": 931,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "264:0:9"
                },
                "scope": 1016,
                "src": "240:63:9",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 948,
                  "nodeType": "Block",
                  "src": "331:57:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 942,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1517,
                                  "src": "358:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "358:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 941,
                              "name": "isPauser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "349:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "349:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 940,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "341:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "341:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 946,
                      "nodeType": "ExpressionStatement",
                      "src": "341:29:9"
                    },
                    {
                      "id": 947,
                      "nodeType": "PlaceholderStatement",
                      "src": "380:1:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 949,
                "name": "onlyPauser",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 939,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "328:2:9"
                },
                "src": "309:79:9",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 961,
                  "nodeType": "Block",
                  "src": "456:45:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 958,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "486:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 956,
                            "name": "_pausers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "473:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1373,
                          "src": "473:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$1287_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "473:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 955,
                      "id": 960,
                      "nodeType": "Return",
                      "src": "466:28:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 962,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isPauser",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 952,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 951,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 962,
                      "src": "412:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "412:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "411:17:9"
                },
                "returnParameters": {
                  "id": 955,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 954,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 962,
                      "src": "450:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "450:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "449:6:9"
                },
                "scope": 1016,
                "src": "394:107:9",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 973,
                  "nodeType": "Block",
                  "src": "561:36:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 970,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "582:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 969,
                          "name": "_addPauser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "571:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "571:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 972,
                      "nodeType": "ExpressionStatement",
                      "src": "571:19:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 974,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 967,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 966,
                      "name": "onlyPauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "550:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "550:10:9"
                  }
                ],
                "name": "addPauser",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 965,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 964,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "526:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "526:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "525:17:9"
                },
                "returnParameters": {
                  "id": 968,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "561:0:9"
                },
                "scope": 1016,
                "src": "507:90:9",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 982,
                  "nodeType": "Block",
                  "src": "636:42:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 978,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "660:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "660:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 977,
                          "name": "_removePauser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1015,
                          "src": "646:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "646:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 981,
                      "nodeType": "ExpressionStatement",
                      "src": "646:25:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 983,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "renouncePauser",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 975,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "626:2:9"
                },
                "returnParameters": {
                  "id": 976,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "636:0:9"
                },
                "scope": 1016,
                "src": "603:75:9",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 998,
                  "nodeType": "Block",
                  "src": "730:73:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 991,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "753:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 988,
                            "name": "_pausers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "740:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1319,
                          "src": "740:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1287_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address)"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "740:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 993,
                      "nodeType": "ExpressionStatement",
                      "src": "740:21:9"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 995,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "788:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 994,
                          "name": "PauserAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 923,
                          "src": "776:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "776:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 997,
                      "nodeType": "EmitStatement",
                      "src": "771:25:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 999,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_addPauser",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 986,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 985,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 999,
                      "src": "704:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 984,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "704:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "703:17:9"
                },
                "returnParameters": {
                  "id": 987,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "730:0:9"
                },
                "scope": 1016,
                "src": "684:119:9",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1014,
                  "nodeType": "Block",
                  "src": "858:78:9",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1007,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "884:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1004,
                            "name": "_pausers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "868:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "remove",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1350,
                          "src": "868:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1287_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address)"
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1009,
                      "nodeType": "ExpressionStatement",
                      "src": "868:24:9"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1011,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "921:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1010,
                          "name": "PauserRemoved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 927,
                          "src": "907:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "907:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1013,
                      "nodeType": "EmitStatement",
                      "src": "902:27:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 1015,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_removePauser",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1002,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1001,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 1015,
                      "src": "832:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1000,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "832:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "831:17:9"
                },
                "returnParameters": {
                  "id": 1003,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "858:0:9"
                },
                "scope": 1016,
                "src": "809:127:9",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 1017,
            "src": "48:890:9"
          }
        ],
        "src": "0:939:9"
      },
      "id": 9,
      "legacyAST": {
        "attributes": {
          "absolutePath": "PauserRole.sol",
          "exportedSymbols": {
            "PauserRole": [
              1016
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 915,
            "name": "PragmaDirective",
            "src": "0:23:9"
          },
          {
            "attributes": {
              "SourceUnit": 1375,
              "absolutePath": "Roles.sol",
              "file": "./Roles.sol",
              "scope": 1017,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 916,
            "name": "ImportDirective",
            "src": "25:21:9"
          },
          {
            "attributes": {
              "baseContracts": [
                null
              ],
              "contractDependencies": [
                null
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                1016
              ],
              "name": "PauserRole",
              "scope": 1017
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Roles",
                      "referencedDeclaration": 1374,
                      "type": "library Roles"
                    },
                    "id": 917,
                    "name": "UserDefinedTypeName",
                    "src": "80:5:9"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Roles.Role",
                      "referencedDeclaration": 1287,
                      "type": "struct Roles.Role"
                    },
                    "id": 918,
                    "name": "UserDefinedTypeName",
                    "src": "90:10:9"
                  }
                ],
                "id": 919,
                "name": "UsingForDirective",
                "src": "74:27:9"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "PauserAdded"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "account",
                          "scope": 923,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 920,
                            "name": "ElementaryTypeName",
                            "src": "125:7:9"
                          }
                        ],
                        "id": 921,
                        "name": "VariableDeclaration",
                        "src": "125:23:9"
                      }
                    ],
                    "id": 922,
                    "name": "ParameterList",
                    "src": "124:25:9"
                  }
                ],
                "id": 923,
                "name": "EventDefinition",
                "src": "107:43:9"
              },
              {
                "attributes": {
                  "anonymous": false,
                  "documentation": null,
                  "name": "PauserRemoved"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "indexed": true,
                          "name": "account",
                          "scope": 927,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 924,
                            "name": "ElementaryTypeName",
                            "src": "175:7:9"
                          }
                        ],
                        "id": 925,
                        "name": "VariableDeclaration",
                        "src": "175:23:9"
                      }
                    ],
                    "id": 926,
                    "name": "ParameterList",
                    "src": "174:25:9"
                  }
                ],
                "id": 927,
                "name": "EventDefinition",
                "src": "155:45:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_pausers",
                  "scope": 1016,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "struct Roles.Role",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Roles.Role",
                      "referencedDeclaration": 1287,
                      "type": "struct Roles.Role"
                    },
                    "id": 928,
                    "name": "UserDefinedTypeName",
                    "src": "206:10:9"
                  }
                ],
                "id": 929,
                "name": "VariableDeclaration",
                "src": "206:27:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "modifiers": [
                    null
                  ],
                  "name": "",
                  "scope": 1016,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 930,
                    "name": "ParameterList",
                    "src": "252:2:9"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 931,
                    "name": "ParameterList",
                    "src": "264:0:9"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 999,
                                  "type": "function (address)",
                                  "value": "_addPauser"
                                },
                                "id": 932,
                                "name": "Identifier",
                                "src": "274:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 933,
                                    "name": "Identifier",
                                    "src": "285:3:9"
                                  }
                                ],
                                "id": 934,
                                "name": "MemberAccess",
                                "src": "285:10:9"
                              }
                            ],
                            "id": 935,
                            "name": "FunctionCall",
                            "src": "274:22:9"
                          }
                        ],
                        "id": 936,
                        "name": "ExpressionStatement",
                        "src": "274:22:9"
                      }
                    ],
                    "id": 937,
                    "name": "Block",
                    "src": "264:39:9"
                  }
                ],
                "id": 938,
                "name": "FunctionDefinition",
                "src": "240:63:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "name": "onlyPauser",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 939,
                    "name": "ParameterList",
                    "src": "328:2:9"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 940,
                                "name": "Identifier",
                                "src": "341:7:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 962,
                                      "type": "function (address) view returns (bool)",
                                      "value": "isPauser"
                                    },
                                    "id": 941,
                                    "name": "Identifier",
                                    "src": "349:8:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1517,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 942,
                                        "name": "Identifier",
                                        "src": "358:3:9"
                                      }
                                    ],
                                    "id": 943,
                                    "name": "MemberAccess",
                                    "src": "358:10:9"
                                  }
                                ],
                                "id": 944,
                                "name": "FunctionCall",
                                "src": "349:20:9"
                              }
                            ],
                            "id": 945,
                            "name": "FunctionCall",
                            "src": "341:29:9"
                          }
                        ],
                        "id": 946,
                        "name": "ExpressionStatement",
                        "src": "341:29:9"
                      },
                      {
                        "id": 947,
                        "name": "PlaceholderStatement",
                        "src": "380:1:9"
                      }
                    ],
                    "id": 948,
                    "name": "Block",
                    "src": "331:57:9"
                  }
                ],
                "id": 949,
                "name": "ModifierDefinition",
                "src": "309:79:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "isPauser",
                  "scope": 1016,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 962,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 950,
                            "name": "ElementaryTypeName",
                            "src": "412:7:9"
                          }
                        ],
                        "id": 951,
                        "name": "VariableDeclaration",
                        "src": "412:15:9"
                      }
                    ],
                    "id": 952,
                    "name": "ParameterList",
                    "src": "411:17:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 962,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 953,
                            "name": "ElementaryTypeName",
                            "src": "450:4:9"
                          }
                        ],
                        "id": 954,
                        "name": "VariableDeclaration",
                        "src": "450:4:9"
                      }
                    ],
                    "id": 955,
                    "name": "ParameterList",
                    "src": "449:6:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 955
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "has",
                                  "referencedDeclaration": 1373,
                                  "type": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 929,
                                      "type": "struct Roles.Role storage ref",
                                      "value": "_pausers"
                                    },
                                    "id": 956,
                                    "name": "Identifier",
                                    "src": "473:8:9"
                                  }
                                ],
                                "id": 957,
                                "name": "MemberAccess",
                                "src": "473:12:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 951,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 958,
                                "name": "Identifier",
                                "src": "486:7:9"
                              }
                            ],
                            "id": 959,
                            "name": "FunctionCall",
                            "src": "473:21:9"
                          }
                        ],
                        "id": 960,
                        "name": "Return",
                        "src": "466:28:9"
                      }
                    ],
                    "id": 961,
                    "name": "Block",
                    "src": "456:45:9"
                  }
                ],
                "id": 962,
                "name": "FunctionDefinition",
                "src": "394:107:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "addPauser",
                  "scope": 1016,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 974,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 963,
                            "name": "ElementaryTypeName",
                            "src": "526:7:9"
                          }
                        ],
                        "id": 964,
                        "name": "VariableDeclaration",
                        "src": "526:15:9"
                      }
                    ],
                    "id": 965,
                    "name": "ParameterList",
                    "src": "525:17:9"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 968,
                    "name": "ParameterList",
                    "src": "561:0:9"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 949,
                          "type": "modifier ()",
                          "value": "onlyPauser"
                        },
                        "id": 966,
                        "name": "Identifier",
                        "src": "550:10:9"
                      }
                    ],
                    "id": 967,
                    "name": "ModifierInvocation",
                    "src": "550:10:9"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 999,
                                  "type": "function (address)",
                                  "value": "_addPauser"
                                },
                                "id": 969,
                                "name": "Identifier",
                                "src": "571:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 964,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 970,
                                "name": "Identifier",
                                "src": "582:7:9"
                              }
                            ],
                            "id": 971,
                            "name": "FunctionCall",
                            "src": "571:19:9"
                          }
                        ],
                        "id": 972,
                        "name": "ExpressionStatement",
                        "src": "571:19:9"
                      }
                    ],
                    "id": 973,
                    "name": "Block",
                    "src": "561:36:9"
                  }
                ],
                "id": 974,
                "name": "FunctionDefinition",
                "src": "507:90:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "renouncePauser",
                  "scope": 1016,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 975,
                    "name": "ParameterList",
                    "src": "626:2:9"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 976,
                    "name": "ParameterList",
                    "src": "636:0:9"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1015,
                                  "type": "function (address)",
                                  "value": "_removePauser"
                                },
                                "id": 977,
                                "name": "Identifier",
                                "src": "646:13:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 978,
                                    "name": "Identifier",
                                    "src": "660:3:9"
                                  }
                                ],
                                "id": 979,
                                "name": "MemberAccess",
                                "src": "660:10:9"
                              }
                            ],
                            "id": 980,
                            "name": "FunctionCall",
                            "src": "646:25:9"
                          }
                        ],
                        "id": 981,
                        "name": "ExpressionStatement",
                        "src": "646:25:9"
                      }
                    ],
                    "id": 982,
                    "name": "Block",
                    "src": "636:42:9"
                  }
                ],
                "id": 983,
                "name": "FunctionDefinition",
                "src": "603:75:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_addPauser",
                  "scope": 1016,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 999,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 984,
                            "name": "ElementaryTypeName",
                            "src": "704:7:9"
                          }
                        ],
                        "id": 985,
                        "name": "VariableDeclaration",
                        "src": "704:15:9"
                      }
                    ],
                    "id": 986,
                    "name": "ParameterList",
                    "src": "703:17:9"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 987,
                    "name": "ParameterList",
                    "src": "730:0:9"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 1319,
                                  "type": "function (struct Roles.Role storage pointer,address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 929,
                                      "type": "struct Roles.Role storage ref",
                                      "value": "_pausers"
                                    },
                                    "id": 988,
                                    "name": "Identifier",
                                    "src": "740:8:9"
                                  }
                                ],
                                "id": 990,
                                "name": "MemberAccess",
                                "src": "740:12:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 985,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 991,
                                "name": "Identifier",
                                "src": "753:7:9"
                              }
                            ],
                            "id": 992,
                            "name": "FunctionCall",
                            "src": "740:21:9"
                          }
                        ],
                        "id": 993,
                        "name": "ExpressionStatement",
                        "src": "740:21:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 923,
                                  "type": "function (address)",
                                  "value": "PauserAdded"
                                },
                                "id": 994,
                                "name": "Identifier",
                                "src": "776:11:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 985,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 995,
                                "name": "Identifier",
                                "src": "788:7:9"
                              }
                            ],
                            "id": 996,
                            "name": "FunctionCall",
                            "src": "776:20:9"
                          }
                        ],
                        "id": 997,
                        "name": "EmitStatement",
                        "src": "771:25:9"
                      }
                    ],
                    "id": 998,
                    "name": "Block",
                    "src": "730:73:9"
                  }
                ],
                "id": 999,
                "name": "FunctionDefinition",
                "src": "684:119:9"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_removePauser",
                  "scope": 1016,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 1015,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1000,
                            "name": "ElementaryTypeName",
                            "src": "832:7:9"
                          }
                        ],
                        "id": 1001,
                        "name": "VariableDeclaration",
                        "src": "832:15:9"
                      }
                    ],
                    "id": 1002,
                    "name": "ParameterList",
                    "src": "831:17:9"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1003,
                    "name": "ParameterList",
                    "src": "858:0:9"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "remove",
                                  "referencedDeclaration": 1350,
                                  "type": "function (struct Roles.Role storage pointer,address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 929,
                                      "type": "struct Roles.Role storage ref",
                                      "value": "_pausers"
                                    },
                                    "id": 1004,
                                    "name": "Identifier",
                                    "src": "868:8:9"
                                  }
                                ],
                                "id": 1006,
                                "name": "MemberAccess",
                                "src": "868:15:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1001,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 1007,
                                "name": "Identifier",
                                "src": "884:7:9"
                              }
                            ],
                            "id": 1008,
                            "name": "FunctionCall",
                            "src": "868:24:9"
                          }
                        ],
                        "id": 1009,
                        "name": "ExpressionStatement",
                        "src": "868:24:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 927,
                                  "type": "function (address)",
                                  "value": "PauserRemoved"
                                },
                                "id": 1010,
                                "name": "Identifier",
                                "src": "907:13:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1001,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 1011,
                                "name": "Identifier",
                                "src": "921:7:9"
                              }
                            ],
                            "id": 1012,
                            "name": "FunctionCall",
                            "src": "907:22:9"
                          }
                        ],
                        "id": 1013,
                        "name": "EmitStatement",
                        "src": "902:27:9"
                      }
                    ],
                    "id": 1014,
                    "name": "Block",
                    "src": "858:78:9"
                  }
                ],
                "id": 1015,
                "name": "FunctionDefinition",
                "src": "809:127:9"
              }
            ],
            "id": 1016,
            "name": "ContractDefinition",
            "src": "48:890:9"
          }
        ],
        "id": 1017,
        "name": "SourceUnit",
        "src": "0:939:9"
      }
    },
    "RaeToken.sol": {
      "ast": {
        "absolutePath": "RaeToken.sol",
        "exportedSymbols": {
          "RaeToken": [
            1280
          ]
        },
        "id": 1281,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1018,
            "literals": [
              "solidity",
              "0.5",
              ".7"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:22:10"
          },
          {
            "absolutePath": "ERC20Detailed.sol",
            "file": "./ERC20Detailed.sol",
            "id": 1019,
            "nodeType": "ImportDirective",
            "scope": 1281,
            "sourceUnit": 529,
            "src": "24:29:10",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "ERC20Burnable.sol",
            "file": "./ERC20Burnable.sol",
            "id": 1020,
            "nodeType": "ImportDirective",
            "scope": 1281,
            "sourceUnit": 414,
            "src": "54:29:10",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "ERC20Capped.sol",
            "file": "./ERC20Capped.sol",
            "id": 1021,
            "nodeType": "ImportDirective",
            "scope": 1281,
            "sourceUnit": 471,
            "src": "84:27:10",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "ERC20Pausable.sol",
            "file": "./ERC20Pausable.sol",
            "id": 1022,
            "nodeType": "ImportDirective",
            "scope": 1281,
            "sourceUnit": 659,
            "src": "112:29:10",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 1023,
                  "name": "ERC20Detailed",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 528,
                  "src": "657:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Detailed_$528",
                    "typeString": "contract ERC20Detailed"
                  }
                },
                "id": 1024,
                "nodeType": "InheritanceSpecifier",
                "src": "657:13:10"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 1025,
                  "name": "ERC20Capped",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 470,
                  "src": "672:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Capped_$470",
                    "typeString": "contract ERC20Capped"
                  }
                },
                "id": 1026,
                "nodeType": "InheritanceSpecifier",
                "src": "672:11:10"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 1027,
                  "name": "ERC20Burnable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 413,
                  "src": "685:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Burnable_$413",
                    "typeString": "contract ERC20Burnable"
                  }
                },
                "id": 1028,
                "nodeType": "InheritanceSpecifier",
                "src": "685:13:10"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 1029,
                  "name": "ERC20Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 658,
                  "src": "700:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Pausable_$658",
                    "typeString": "contract ERC20Pausable"
                  }
                },
                "id": 1030,
                "nodeType": "InheritanceSpecifier",
                "src": "700:13:10"
              }
            ],
            "contractDependencies": [
              382,
              413,
              470,
              528,
              556,
              658,
              727,
              830,
              913,
              1016
            ],
            "contractKind": "contract",
            "documentation": "@dev RaeToken Contract\nrequirements:\n- address that deployed RaeToken can pause contract and release pauseRole in future\n- address that deployed RaeToken has mintRole and can release mintRole in future\n- RaeMintContract has mintRole after deployment\n- totalSupply is capped at 34 million RAE = 34000000 RAE, or 34000000e18 ROK (1 RAE = 1e18 ROK)\n- every 1700 _mintPeriods _mintAmount is halved\n- _mintAmount starts at 10000 RAE = 10000e18 ROK\n- halveEvery can never be changed",
            "fullyImplemented": true,
            "id": 1280,
            "linearizedBaseContracts": [
              1280,
              658,
              913,
              1016,
              413,
              470,
              556,
              830,
              382,
              528,
              727
            ],
            "name": "RaeToken",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 1033,
                "name": "_mintAmount",
                "nodeType": "VariableDeclaration",
                "scope": 1280,
                "src": "720:39:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1031,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "323136303030653138",
                  "id": 1032,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "750:9:10",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_216000000000000000000000_by_1",
                    "typeString": "int_const 216000000000000000000000"
                  },
                  "value": "216000e18"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 1036,
                "name": "_mintPeriods",
                "nodeType": "VariableDeclaration",
                "scope": 1280,
                "src": "765:32:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1034,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 1035,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "796:1:10",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 1039,
                "name": "_totalInPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 1280,
                "src": "803:34:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1037,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "803:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 1038,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "836:1:10",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1042,
                "name": "_halveEvery",
                "nodeType": "VariableDeclaration",
                "scope": 1280,
                "src": "843:43:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1040,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "843:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "31373030",
                  "id": 1041,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "882:4:10",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1700_by_1",
                    "typeString": "int_const 1700"
                  },
                  "value": "1700"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 1046,
                "name": "_balances",
                "nodeType": "VariableDeclaration",
                "scope": 1280,
                "src": "937:46:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 1045,
                  "keyType": {
                    "id": 1043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "937:28:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1079,
                  "nodeType": "Block",
                  "src": "1248:44:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1074,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "1264:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1264:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "3834303030653138",
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1276:8:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_84000000000000000000000_by_1",
                              "typeString": "int_const 84000000000000000000000"
                            },
                            "value": "84000e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_84000000000000000000000_by_1",
                              "typeString": "int_const 84000000000000000000000"
                            }
                          ],
                          "id": 1073,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            469
                          ],
                          "referencedDeclaration": 469,
                          "src": "1258:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1258:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1078,
                      "nodeType": "ExpressionStatement",
                      "src": "1258:27:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1080,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [],
                    "id": 1057,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1056,
                      "name": "ERC20Burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "1081:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$413_$",
                        "typeString": "type(contract ERC20Burnable)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1081:15:10"
                  },
                  {
                    "arguments": [],
                    "id": 1059,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1058,
                      "name": "ERC20Mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "1105:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$556_$",
                        "typeString": "type(contract ERC20Mintable)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1105:15:10"
                  },
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1061,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "1141:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1062,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1060,
                      "name": "ERC20Capped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "1129:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$470_$",
                        "typeString": "type(contract ERC20Capped)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1129:16:10"
                  },
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "1168:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1065,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "1174:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1066,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "1182:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1067,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1063,
                      "name": "ERC20Detailed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "1154:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$528_$",
                        "typeString": "type(contract ERC20Detailed)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1154:37:10"
                  },
                  {
                    "arguments": [],
                    "id": 1069,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1068,
                      "name": "ERC20Pausable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "1200:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$658_$",
                        "typeString": "type(contract ERC20Pausable)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1200:15:10"
                  },
                  {
                    "arguments": [],
                    "id": 1071,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1070,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "1224:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$382_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1224:7:10"
                  }
                ],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1055,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1048,
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1002:18:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1047,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1002:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1050,
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1022:20:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1049,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1022:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1052,
                      "name": "decimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1044:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1044:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1054,
                      "name": "cap",
                      "nodeType": "VariableDeclaration",
                      "scope": 1080,
                      "src": "1060:11:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1060:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1001:71:10"
                },
                "returnParameters": {
                  "id": 1072,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1248:0:10"
                },
                "scope": 1280,
                "src": "990:302:10",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1156,
                  "nodeType": "Block",
                  "src": "2096:412:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1096,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1083,
                                "src": "2123:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2123:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2142:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2123:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1095,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "2115:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2115:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1101,
                      "nodeType": "ExpressionStatement",
                      "src": "2115:29:10"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1103,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1083,
                                "src": "2162:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2162:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1105,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "2182:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2182:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2162:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1102,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "2154:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2154:42:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1109,
                      "nodeType": "ExpressionStatement",
                      "src": "2154:42:10"
                    },
                    {
                      "body": {
                        "id": 1139,
                        "nodeType": "Block",
                        "src": "2253:115:10",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 1121,
                                "name": "_totalInPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1039,
                                "src": "2267:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1124,
                                      "name": "values",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1086,
                                      "src": "2303:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1126,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1125,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1111,
                                      "src": "2310:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2303:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1122,
                                    "name": "_totalInPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1039,
                                    "src": "2284:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1481,
                                  "src": "2284:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2284:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2267:46:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1129,
                            "nodeType": "ExpressionStatement",
                            "src": "2267:46:10"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1131,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1083,
                                    "src": "2333:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 1133,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1132,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1111,
                                    "src": "2343:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2333:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1134,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "2347:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1136,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1135,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1111,
                                    "src": "2354:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2347:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1130,
                                "name": "_mint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  469
                                ],
                                "referencedDeclaration": 469,
                                "src": "2327:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2327:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1138,
                            "nodeType": "ExpressionStatement",
                            "src": "2327:30:10"
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "2226:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1115,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "2230:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2230:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2226:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1140,
                      "initializationExpression": {
                        "assignments": [
                          1111
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1111,
                            "name": "i",
                            "nodeType": "VariableDeclaration",
                            "scope": 1140,
                            "src": "2211:9:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1110,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2211:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1113,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2223:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2211:13:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "2248:3:10",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 1118,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "2250:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1120,
                        "nodeType": "ExpressionStatement",
                        "src": "2248:3:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "2207:161:10"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1142,
                              "name": "_totalInPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "2385:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1143,
                              "name": "_mintAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1033,
                              "src": "2403:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2385:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1141,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "2377:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2377:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1146,
                      "nodeType": "ExpressionStatement",
                      "src": "2377:38:10"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "_totalInPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "2429:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1148,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "2447:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2429:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1153,
                      "nodeType": "IfStatement",
                      "src": "2425:54:10",
                      "trueBody": {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1150,
                            "name": "_updateMintParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "2460:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:19:10"
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2497:4:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 1094,
                      "id": 1155,
                      "nodeType": "Return",
                      "src": "2490:11:10"
                    }
                  ]
                },
                "documentation": "@dev perform a minting period\nrequirements:\n- addresses.length == values.length != 0\n- only addresses with minter role should be able to call this function\n- totalSent == _mintAmount\n- every time this function returns successfully (true) _mintPeriods is incremented by 1\n- every 1700 _mintPeriods _mintAmount is halved. e.g. when _mintPeriods = 1700 then _mintAmount = 5000e18\n- addresses[i] is minted values[i], accepatable to have duplicate addresses\n@param addresses array of addresses where amount minted to addresses[i] is values[i]\n@param values array of token amounts that add up to _mintAmount",
                "id": 1157,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1089,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1088,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "2056:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2056:13:10"
                  },
                  {
                    "arguments": null,
                    "id": 1091,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1090,
                      "name": "onlyMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "2070:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2070:10:10"
                  }
                ],
                "name": "mintBulk",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1087,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1083,
                      "name": "addresses",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "1990:28:10",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1081,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1990:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1082,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1990:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1086,
                      "name": "values",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "2020:25:10",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2020:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1085,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2020:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1989:57:10"
                },
                "returnParameters": {
                  "id": 1094,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1093,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "2090:4:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2090:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2089:6:10"
                },
                "scope": 1280,
                "src": "1972:536:10",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1164,
                  "nodeType": "Block",
                  "src": "2564:36:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "_mintPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "2581:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1161,
                      "id": 1163,
                      "nodeType": "Return",
                      "src": "2574:19:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1165,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "period",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1158,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2530:2:10"
                },
                "returnParameters": {
                  "id": 1161,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1160,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "2556:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2556:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2555:9:10"
                },
                "scope": 1280,
                "src": "2515:85:10",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1172,
                  "nodeType": "Block",
                  "src": "2659:35:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1170,
                        "name": "_mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "2676:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1169,
                      "id": 1171,
                      "nodeType": "Return",
                      "src": "2669:18:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1173,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "mintAmount",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1166,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2625:2:10"
                },
                "returnParameters": {
                  "id": 1169,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1168,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1173,
                      "src": "2651:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2651:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2650:9:10"
                },
                "scope": 1280,
                "src": "2606:88:10",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1212,
                  "nodeType": "Block",
                  "src": "2753:478:10",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1178,
                          "name": "_mintPeriods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "2854:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2870:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2854:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1185,
                      "nodeType": "IfStatement",
                      "src": "2851:44:10",
                      "trueBody": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1181,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "2873:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3130303030653138",
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2887:8:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000000"
                            },
                            "value": "10000e18"
                          },
                          "src": "2873:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "2873:22:10"
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1186,
                          "name": "_mintPeriods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "2934:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2966:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1187,
                              "name": "_mintPeriods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "2949:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1481,
                            "src": "2949:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2949:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2934:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1192,
                      "nodeType": "ExpressionStatement",
                      "src": "2934:34:10"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1193,
                            "name": "_mintPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "3067:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1194,
                            "name": "_halveEvery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "3082:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3067:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3097:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3067:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1205,
                      "nodeType": "IfStatement",
                      "src": "3064:68:10",
                      "trueBody": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1198,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "3100:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3130:1:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1199,
                                "name": "_mintAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1033,
                                "src": "3114:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1433,
                              "src": "3114:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3114:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3100:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1204,
                        "nodeType": "ExpressionStatement",
                        "src": "3100:32:10"
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1206,
                          "name": "_totalInPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "3184:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3201:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3184:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1209,
                      "nodeType": "ExpressionStatement",
                      "src": "3184:18:10"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3220:4:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 1177,
                      "id": 1211,
                      "nodeType": "Return",
                      "src": "3213:11:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1213,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_updateMintParams",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1174,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2726:2:10"
                },
                "returnParameters": {
                  "id": 1177,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1176,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1213,
                      "src": "2747:4:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2747:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2746:6:10"
                },
                "scope": 1280,
                "src": "2700:531:10",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1222,
                  "nodeType": "Block",
                  "src": "3298:52:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1218,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "3315:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1219,
                          "name": "_totalInPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "3329:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3315:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1217,
                      "id": 1221,
                      "nodeType": "Return",
                      "src": "3308:35:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1223,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "remainingInPeriod",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1214,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3263:2:10"
                },
                "returnParameters": {
                  "id": 1217,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1216,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1223,
                      "src": "3289:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1215,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3289:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3288:9:10"
                },
                "scope": 1280,
                "src": "3237:113:10",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1230,
                  "nodeType": "Block",
                  "src": "3413:38:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1228,
                        "name": "_totalInPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "3430:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1227,
                      "id": 1229,
                      "nodeType": "Return",
                      "src": "3423:21:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1231,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "totalInPeriod",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1224,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3378:2:10"
                },
                "returnParameters": {
                  "id": 1227,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1226,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "3404:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3404:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3403:9:10"
                },
                "scope": 1280,
                "src": "3356:95:10",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1247,
                  "nodeType": "Block",
                  "src": "3601:58:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1244,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1522,
                            1523
                          ],
                          "referencedDeclaration": 1522,
                          "src": "3644:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3644:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1246,
                      "nodeType": "ExpressionStatement",
                      "src": "3644:8:10"
                    }
                  ]
                },
                "documentation": "@dev do not allow mint during pause",
                "id": 1248,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1238,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3561:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3561:13:10"
                  },
                  {
                    "arguments": null,
                    "id": 1240,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1239,
                      "name": "onlyMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "3575:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3575:10:10"
                  }
                ],
                "name": "mint",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1236,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1233,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 1248,
                      "src": "3527:10:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1232,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3527:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1235,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 1248,
                      "src": "3539:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3539:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3526:27:10"
                },
                "returnParameters": {
                  "id": 1243,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1242,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1248,
                      "src": "3595:4:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1241,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3595:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3594:6:10"
                },
                "scope": 1280,
                "src": "3513:146:10",
                "stateMutability": "nonpayable",
                "superFunction": 555,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1261,
                  "nodeType": "Block",
                  "src": "3771:34:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1258,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "3792:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1255,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1556,
                            "src": "3781:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_RaeToken_$1280",
                              "typeString": "contract super RaeToken"
                            }
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 399,
                          "src": "3781:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3781:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1260,
                      "nodeType": "ExpressionStatement",
                      "src": "3781:17:10"
                    }
                  ]
                },
                "documentation": "@dev do not allow burn during pause",
                "id": 1262,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1253,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1252,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3757:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3757:13:10"
                  }
                ],
                "name": "burn",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1251,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1250,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 1262,
                      "src": "3735:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3735:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3734:15:10"
                },
                "returnParameters": {
                  "id": 1254,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3771:0:10"
                },
                "scope": 1280,
                "src": "3721:84:10",
                "stateMutability": "nonpayable",
                "superFunction": 399,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1278,
                  "nodeType": "Block",
                  "src": "3879:44:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1274,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "3904:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1275,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "3910:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1271,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1556,
                            "src": "3889:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_super$_RaeToken_$1280",
                              "typeString": "contract super RaeToken"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 412,
                          "src": "3889:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3889:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1277,
                      "nodeType": "ExpressionStatement",
                      "src": "3889:27:10"
                    }
                  ]
                },
                "documentation": null,
                "id": 1279,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1269,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1268,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3865:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3865:13:10"
                  }
                ],
                "name": "burnFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1267,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1264,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 1279,
                      "src": "3829:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3829:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1266,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 1279,
                      "src": "3843:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3843:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3828:29:10"
                },
                "returnParameters": {
                  "id": 1270,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3879:0:10"
                },
                "scope": 1280,
                "src": "3811:112:10",
                "stateMutability": "nonpayable",
                "superFunction": 412,
                "visibility": "public"
              }
            ],
            "scope": 1281,
            "src": "636:3290:10"
          }
        ],
        "src": "0:3926:10"
      },
      "id": 10,
      "legacyAST": {
        "attributes": {
          "absolutePath": "RaeToken.sol",
          "exportedSymbols": {
            "RaeToken": [
              1280
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "0.5",
                ".7"
              ]
            },
            "id": 1018,
            "name": "PragmaDirective",
            "src": "0:22:10"
          },
          {
            "attributes": {
              "SourceUnit": 529,
              "absolutePath": "ERC20Detailed.sol",
              "file": "./ERC20Detailed.sol",
              "scope": 1281,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 1019,
            "name": "ImportDirective",
            "src": "24:29:10"
          },
          {
            "attributes": {
              "SourceUnit": 414,
              "absolutePath": "ERC20Burnable.sol",
              "file": "./ERC20Burnable.sol",
              "scope": 1281,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 1020,
            "name": "ImportDirective",
            "src": "54:29:10"
          },
          {
            "attributes": {
              "SourceUnit": 471,
              "absolutePath": "ERC20Capped.sol",
              "file": "./ERC20Capped.sol",
              "scope": 1281,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 1021,
            "name": "ImportDirective",
            "src": "84:27:10"
          },
          {
            "attributes": {
              "SourceUnit": 659,
              "absolutePath": "ERC20Pausable.sol",
              "file": "./ERC20Pausable.sol",
              "scope": 1281,
              "symbolAliases": [
                null
              ],
              "unitAlias": ""
            },
            "id": 1022,
            "name": "ImportDirective",
            "src": "112:29:10"
          },
          {
            "attributes": {
              "contractDependencies": [
                382,
                413,
                470,
                528,
                556,
                658,
                727,
                830,
                913,
                1016
              ],
              "contractKind": "contract",
              "documentation": "@dev RaeToken Contract\nrequirements:\n- address that deployed RaeToken can pause contract and release pauseRole in future\n- address that deployed RaeToken has mintRole and can release mintRole in future\n- RaeMintContract has mintRole after deployment\n- totalSupply is capped at 34 million RAE = 34000000 RAE, or 34000000e18 ROK (1 RAE = 1e18 ROK)\n- every 1700 _mintPeriods _mintAmount is halved\n- _mintAmount starts at 10000 RAE = 10000e18 ROK\n- halveEvery can never be changed",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                1280,
                658,
                913,
                1016,
                413,
                470,
                556,
                830,
                382,
                528,
                727
              ],
              "name": "RaeToken",
              "scope": 1281
            },
            "children": [
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20Detailed",
                      "referencedDeclaration": 528,
                      "type": "contract ERC20Detailed"
                    },
                    "id": 1023,
                    "name": "UserDefinedTypeName",
                    "src": "657:13:10"
                  }
                ],
                "id": 1024,
                "name": "InheritanceSpecifier",
                "src": "657:13:10"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20Capped",
                      "referencedDeclaration": 470,
                      "type": "contract ERC20Capped"
                    },
                    "id": 1025,
                    "name": "UserDefinedTypeName",
                    "src": "672:11:10"
                  }
                ],
                "id": 1026,
                "name": "InheritanceSpecifier",
                "src": "672:11:10"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20Burnable",
                      "referencedDeclaration": 413,
                      "type": "contract ERC20Burnable"
                    },
                    "id": 1027,
                    "name": "UserDefinedTypeName",
                    "src": "685:13:10"
                  }
                ],
                "id": 1028,
                "name": "InheritanceSpecifier",
                "src": "685:13:10"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20Pausable",
                      "referencedDeclaration": 658,
                      "type": "contract ERC20Pausable"
                    },
                    "id": 1029,
                    "name": "UserDefinedTypeName",
                    "src": "700:13:10"
                  }
                ],
                "id": 1030,
                "name": "InheritanceSpecifier",
                "src": "700:13:10"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_mintAmount",
                  "scope": 1280,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1031,
                    "name": "ElementaryTypeName",
                    "src": "720:7:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "323136303030653138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 216000000000000000000000",
                      "value": "216000e18"
                    },
                    "id": 1032,
                    "name": "Literal",
                    "src": "750:9:10"
                  }
                ],
                "id": 1033,
                "name": "VariableDeclaration",
                "src": "720:39:10"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_mintPeriods",
                  "scope": 1280,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1034,
                    "name": "ElementaryTypeName",
                    "src": "765:7:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "30",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 0",
                      "value": "0"
                    },
                    "id": 1035,
                    "name": "Literal",
                    "src": "796:1:10"
                  }
                ],
                "id": 1036,
                "name": "VariableDeclaration",
                "src": "765:32:10"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_totalInPeriod",
                  "scope": 1280,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1037,
                    "name": "ElementaryTypeName",
                    "src": "803:7:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "30",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 0",
                      "value": "0"
                    },
                    "id": 1038,
                    "name": "Literal",
                    "src": "836:1:10"
                  }
                ],
                "id": 1039,
                "name": "VariableDeclaration",
                "src": "803:34:10"
              },
              {
                "attributes": {
                  "constant": true,
                  "name": "_halveEvery",
                  "scope": 1280,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1040,
                    "name": "ElementaryTypeName",
                    "src": "843:7:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "31373030",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 1700",
                      "value": "1700"
                    },
                    "id": 1041,
                    "name": "Literal",
                    "src": "882:4:10"
                  }
                ],
                "id": 1042,
                "name": "VariableDeclaration",
                "src": "843:43:10"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_balances",
                  "scope": 1280,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "mapping(address => uint256)",
                  "value": null,
                  "visibility": "private"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(address => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1043,
                        "name": "ElementaryTypeName",
                        "src": "946:7:10"
                      },
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1044,
                        "name": "ElementaryTypeName",
                        "src": "957:7:10"
                      }
                    ],
                    "id": 1045,
                    "name": "Mapping",
                    "src": "937:28:10"
                  }
                ],
                "id": 1046,
                "name": "VariableDeclaration",
                "src": "937:46:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "name": "",
                  "scope": 1280,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "name",
                          "scope": 1080,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 1047,
                            "name": "ElementaryTypeName",
                            "src": "1002:6:10"
                          }
                        ],
                        "id": 1048,
                        "name": "VariableDeclaration",
                        "src": "1002:18:10"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "symbol",
                          "scope": 1080,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 1049,
                            "name": "ElementaryTypeName",
                            "src": "1022:6:10"
                          }
                        ],
                        "id": 1050,
                        "name": "VariableDeclaration",
                        "src": "1022:20:10"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "decimals",
                          "scope": 1080,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint8",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint8",
                              "type": "uint8"
                            },
                            "id": 1051,
                            "name": "ElementaryTypeName",
                            "src": "1044:5:10"
                          }
                        ],
                        "id": 1052,
                        "name": "VariableDeclaration",
                        "src": "1044:14:10"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "cap",
                          "scope": 1080,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1053,
                            "name": "ElementaryTypeName",
                            "src": "1060:7:10"
                          }
                        ],
                        "id": 1054,
                        "name": "VariableDeclaration",
                        "src": "1060:11:10"
                      }
                    ],
                    "id": 1055,
                    "name": "ParameterList",
                    "src": "1001:71:10"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1072,
                    "name": "ParameterList",
                    "src": "1248:0:10"
                  },
                  {
                    "attributes": {
                      "arguments": [
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 413,
                          "type": "type(contract ERC20Burnable)",
                          "value": "ERC20Burnable"
                        },
                        "id": 1056,
                        "name": "Identifier",
                        "src": "1081:13:10"
                      }
                    ],
                    "id": 1057,
                    "name": "ModifierInvocation",
                    "src": "1081:15:10"
                  },
                  {
                    "attributes": {
                      "arguments": [
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 556,
                          "type": "type(contract ERC20Mintable)",
                          "value": "ERC20Mintable"
                        },
                        "id": 1058,
                        "name": "Identifier",
                        "src": "1105:13:10"
                      }
                    ],
                    "id": 1059,
                    "name": "ModifierInvocation",
                    "src": "1105:15:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 470,
                          "type": "type(contract ERC20Capped)",
                          "value": "ERC20Capped"
                        },
                        "id": 1060,
                        "name": "Identifier",
                        "src": "1129:11:10"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1054,
                          "type": "uint256",
                          "value": "cap"
                        },
                        "id": 1061,
                        "name": "Identifier",
                        "src": "1141:3:10"
                      }
                    ],
                    "id": 1062,
                    "name": "ModifierInvocation",
                    "src": "1129:16:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 528,
                          "type": "type(contract ERC20Detailed)",
                          "value": "ERC20Detailed"
                        },
                        "id": 1063,
                        "name": "Identifier",
                        "src": "1154:13:10"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1048,
                          "type": "string memory",
                          "value": "name"
                        },
                        "id": 1064,
                        "name": "Identifier",
                        "src": "1168:4:10"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1050,
                          "type": "string memory",
                          "value": "symbol"
                        },
                        "id": 1065,
                        "name": "Identifier",
                        "src": "1174:6:10"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1052,
                          "type": "uint8",
                          "value": "decimals"
                        },
                        "id": 1066,
                        "name": "Identifier",
                        "src": "1182:8:10"
                      }
                    ],
                    "id": 1067,
                    "name": "ModifierInvocation",
                    "src": "1154:37:10"
                  },
                  {
                    "attributes": {
                      "arguments": [
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 658,
                          "type": "type(contract ERC20Pausable)",
                          "value": "ERC20Pausable"
                        },
                        "id": 1068,
                        "name": "Identifier",
                        "src": "1200:13:10"
                      }
                    ],
                    "id": 1069,
                    "name": "ModifierInvocation",
                    "src": "1200:15:10"
                  },
                  {
                    "attributes": {
                      "arguments": [
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 382,
                          "type": "type(contract ERC20)",
                          "value": "ERC20"
                        },
                        "id": 1070,
                        "name": "Identifier",
                        "src": "1224:5:10"
                      }
                    ],
                    "id": 1071,
                    "name": "ModifierInvocation",
                    "src": "1224:7:10"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_84000000000000000000000_by_1",
                                      "typeString": "int_const 84000000000000000000000"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    469
                                  ],
                                  "referencedDeclaration": 469,
                                  "type": "function (address,uint256)",
                                  "value": "_mint"
                                },
                                "id": 1073,
                                "name": "Identifier",
                                "src": "1258:5:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1517,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1074,
                                    "name": "Identifier",
                                    "src": "1264:3:10"
                                  }
                                ],
                                "id": 1075,
                                "name": "MemberAccess",
                                "src": "1264:10:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3834303030653138",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 84000000000000000000000",
                                  "value": "84000e18"
                                },
                                "id": 1076,
                                "name": "Literal",
                                "src": "1276:8:10"
                              }
                            ],
                            "id": 1077,
                            "name": "FunctionCall",
                            "src": "1258:27:10"
                          }
                        ],
                        "id": 1078,
                        "name": "ExpressionStatement",
                        "src": "1258:27:10"
                      }
                    ],
                    "id": 1079,
                    "name": "Block",
                    "src": "1248:44:10"
                  }
                ],
                "id": 1080,
                "name": "FunctionDefinition",
                "src": "990:302:10"
              },
              {
                "attributes": {
                  "documentation": "@dev perform a minting period\nrequirements:\n- addresses.length == values.length != 0\n- only addresses with minter role should be able to call this function\n- totalSent == _mintAmount\n- every time this function returns successfully (true) _mintPeriods is incremented by 1\n- every 1700 _mintPeriods _mintAmount is halved. e.g. when _mintPeriods = 1700 then _mintAmount = 5000e18\n- addresses[i] is minted values[i], accepatable to have duplicate addresses\n@param addresses array of addresses where amount minted to addresses[i] is values[i]\n@param values array of token amounts that add up to _mintAmount",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "mintBulk",
                  "scope": 1280,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "addresses",
                          "scope": 1157,
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "type": "address[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "stateMutability": "nonpayable",
                                  "type": "address"
                                },
                                "id": 1081,
                                "name": "ElementaryTypeName",
                                "src": "1990:7:10"
                              }
                            ],
                            "id": 1082,
                            "name": "ArrayTypeName",
                            "src": "1990:9:10"
                          }
                        ],
                        "id": 1083,
                        "name": "VariableDeclaration",
                        "src": "1990:28:10"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "values",
                          "scope": 1157,
                          "stateVariable": false,
                          "storageLocation": "calldata",
                          "type": "uint256[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1084,
                                "name": "ElementaryTypeName",
                                "src": "2020:7:10"
                              }
                            ],
                            "id": 1085,
                            "name": "ArrayTypeName",
                            "src": "2020:9:10"
                          }
                        ],
                        "id": 1086,
                        "name": "VariableDeclaration",
                        "src": "2020:25:10"
                      }
                    ],
                    "id": 1087,
                    "name": "ParameterList",
                    "src": "1989:57:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1157,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1092,
                            "name": "ElementaryTypeName",
                            "src": "2090:4:10"
                          }
                        ],
                        "id": 1093,
                        "name": "VariableDeclaration",
                        "src": "2090:4:10"
                      }
                    ],
                    "id": 1094,
                    "name": "ParameterList",
                    "src": "2089:6:10"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 1088,
                        "name": "Identifier",
                        "src": "2056:13:10"
                      }
                    ],
                    "id": 1089,
                    "name": "ModifierInvocation",
                    "src": "2056:13:10"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 763,
                          "type": "modifier ()",
                          "value": "onlyMinter"
                        },
                        "id": 1090,
                        "name": "Identifier",
                        "src": "2070:10:10"
                      }
                    ],
                    "id": 1091,
                    "name": "ModifierInvocation",
                    "src": "2070:10:10"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1095,
                                "name": "Identifier",
                                "src": "2115:7:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1083,
                                          "type": "address[] calldata",
                                          "value": "addresses"
                                        },
                                        "id": 1096,
                                        "name": "Identifier",
                                        "src": "2123:9:10"
                                      }
                                    ],
                                    "id": 1097,
                                    "name": "MemberAccess",
                                    "src": "2123:16:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1098,
                                    "name": "Literal",
                                    "src": "2142:1:10"
                                  }
                                ],
                                "id": 1099,
                                "name": "BinaryOperation",
                                "src": "2123:20:10"
                              }
                            ],
                            "id": 1100,
                            "name": "FunctionCall",
                            "src": "2115:29:10"
                          }
                        ],
                        "id": 1101,
                        "name": "ExpressionStatement",
                        "src": "2115:29:10"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1102,
                                "name": "Identifier",
                                "src": "2154:7:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1083,
                                          "type": "address[] calldata",
                                          "value": "addresses"
                                        },
                                        "id": 1103,
                                        "name": "Identifier",
                                        "src": "2162:9:10"
                                      }
                                    ],
                                    "id": 1104,
                                    "name": "MemberAccess",
                                    "src": "2162:16:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1086,
                                          "type": "uint256[] calldata",
                                          "value": "values"
                                        },
                                        "id": 1105,
                                        "name": "Identifier",
                                        "src": "2182:6:10"
                                      }
                                    ],
                                    "id": 1106,
                                    "name": "MemberAccess",
                                    "src": "2182:13:10"
                                  }
                                ],
                                "id": 1107,
                                "name": "BinaryOperation",
                                "src": "2162:33:10"
                              }
                            ],
                            "id": 1108,
                            "name": "FunctionCall",
                            "src": "2154:42:10"
                          }
                        ],
                        "id": 1109,
                        "name": "ExpressionStatement",
                        "src": "2154:42:10"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                1111
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "i",
                                  "scope": 1140,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 1110,
                                    "name": "ElementaryTypeName",
                                    "src": "2211:7:10"
                                  }
                                ],
                                "id": 1111,
                                "name": "VariableDeclaration",
                                "src": "2211:9:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1112,
                                "name": "Literal",
                                "src": "2223:1:10"
                              }
                            ],
                            "id": 1113,
                            "name": "VariableDeclarationStatement",
                            "src": "2211:13:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1111,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 1114,
                                "name": "Identifier",
                                "src": "2226:1:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1083,
                                      "type": "address[] calldata",
                                      "value": "addresses"
                                    },
                                    "id": 1115,
                                    "name": "Identifier",
                                    "src": "2230:9:10"
                                  }
                                ],
                                "id": 1116,
                                "name": "MemberAccess",
                                "src": "2230:16:10"
                              }
                            ],
                            "id": 1117,
                            "name": "BinaryOperation",
                            "src": "2226:20:10"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1111,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 1118,
                                    "name": "Identifier",
                                    "src": "2250:1:10"
                                  }
                                ],
                                "id": 1119,
                                "name": "UnaryOperation",
                                "src": "2248:3:10"
                              }
                            ],
                            "id": 1120,
                            "name": "ExpressionStatement",
                            "src": "2248:3:10"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1039,
                                          "type": "uint256",
                                          "value": "_totalInPeriod"
                                        },
                                        "id": 1121,
                                        "name": "Identifier",
                                        "src": "2267:14:10"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "add",
                                              "referencedDeclaration": 1481,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1039,
                                                  "type": "uint256",
                                                  "value": "_totalInPeriod"
                                                },
                                                "id": 1122,
                                                "name": "Identifier",
                                                "src": "2284:14:10"
                                              }
                                            ],
                                            "id": 1123,
                                            "name": "MemberAccess",
                                            "src": "2284:18:10"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1086,
                                                  "type": "uint256[] calldata",
                                                  "value": "values"
                                                },
                                                "id": 1124,
                                                "name": "Identifier",
                                                "src": "2303:6:10"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1111,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 1125,
                                                "name": "Identifier",
                                                "src": "2310:1:10"
                                              }
                                            ],
                                            "id": 1126,
                                            "name": "IndexAccess",
                                            "src": "2303:9:10"
                                          }
                                        ],
                                        "id": 1127,
                                        "name": "FunctionCall",
                                        "src": "2284:29:10"
                                      }
                                    ],
                                    "id": 1128,
                                    "name": "Assignment",
                                    "src": "2267:46:10"
                                  }
                                ],
                                "id": 1129,
                                "name": "ExpressionStatement",
                                "src": "2267:46:10"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            469
                                          ],
                                          "referencedDeclaration": 469,
                                          "type": "function (address,uint256)",
                                          "value": "_mint"
                                        },
                                        "id": 1130,
                                        "name": "Identifier",
                                        "src": "2327:5:10"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1083,
                                              "type": "address[] calldata",
                                              "value": "addresses"
                                            },
                                            "id": 1131,
                                            "name": "Identifier",
                                            "src": "2333:9:10"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1111,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 1132,
                                            "name": "Identifier",
                                            "src": "2343:1:10"
                                          }
                                        ],
                                        "id": 1133,
                                        "name": "IndexAccess",
                                        "src": "2333:12:10"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1086,
                                              "type": "uint256[] calldata",
                                              "value": "values"
                                            },
                                            "id": 1134,
                                            "name": "Identifier",
                                            "src": "2347:6:10"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1111,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 1135,
                                            "name": "Identifier",
                                            "src": "2354:1:10"
                                          }
                                        ],
                                        "id": 1136,
                                        "name": "IndexAccess",
                                        "src": "2347:9:10"
                                      }
                                    ],
                                    "id": 1137,
                                    "name": "FunctionCall",
                                    "src": "2327:30:10"
                                  }
                                ],
                                "id": 1138,
                                "name": "ExpressionStatement",
                                "src": "2327:30:10"
                              }
                            ],
                            "id": 1139,
                            "name": "Block",
                            "src": "2253:115:10"
                          }
                        ],
                        "id": 1140,
                        "name": "ForStatement",
                        "src": "2207:161:10"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1141,
                                "name": "Identifier",
                                "src": "2377:7:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1039,
                                      "type": "uint256",
                                      "value": "_totalInPeriod"
                                    },
                                    "id": 1142,
                                    "name": "Identifier",
                                    "src": "2385:14:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1033,
                                      "type": "uint256",
                                      "value": "_mintAmount"
                                    },
                                    "id": 1143,
                                    "name": "Identifier",
                                    "src": "2403:11:10"
                                  }
                                ],
                                "id": 1144,
                                "name": "BinaryOperation",
                                "src": "2385:29:10"
                              }
                            ],
                            "id": 1145,
                            "name": "FunctionCall",
                            "src": "2377:38:10"
                          }
                        ],
                        "id": 1146,
                        "name": "ExpressionStatement",
                        "src": "2377:38:10"
                      },
                      {
                        "attributes": {
                          "falseBody": null
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1039,
                                  "type": "uint256",
                                  "value": "_totalInPeriod"
                                },
                                "id": 1147,
                                "name": "Identifier",
                                "src": "2429:14:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1033,
                                  "type": "uint256",
                                  "value": "_mintAmount"
                                },
                                "id": 1148,
                                "name": "Identifier",
                                "src": "2447:11:10"
                              }
                            ],
                            "id": 1149,
                            "name": "BinaryOperation",
                            "src": "2429:29:10"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1213,
                                      "type": "function () returns (bool)",
                                      "value": "_updateMintParams"
                                    },
                                    "id": 1150,
                                    "name": "Identifier",
                                    "src": "2460:17:10"
                                  }
                                ],
                                "id": 1151,
                                "name": "FunctionCall",
                                "src": "2460:19:10"
                              }
                            ],
                            "id": 1152,
                            "name": "ExpressionStatement",
                            "src": "2460:19:10"
                          }
                        ],
                        "id": 1153,
                        "name": "IfStatement",
                        "src": "2425:54:10"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1094
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1154,
                            "name": "Literal",
                            "src": "2497:4:10"
                          }
                        ],
                        "id": 1155,
                        "name": "Return",
                        "src": "2490:11:10"
                      }
                    ],
                    "id": 1156,
                    "name": "Block",
                    "src": "2096:412:10"
                  }
                ],
                "id": 1157,
                "name": "FunctionDefinition",
                "src": "1972:536:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "period",
                  "scope": 1280,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1158,
                    "name": "ParameterList",
                    "src": "2530:2:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1165,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1159,
                            "name": "ElementaryTypeName",
                            "src": "2556:7:10"
                          }
                        ],
                        "id": 1160,
                        "name": "VariableDeclaration",
                        "src": "2556:7:10"
                      }
                    ],
                    "id": 1161,
                    "name": "ParameterList",
                    "src": "2555:9:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 1161
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1036,
                              "type": "uint256",
                              "value": "_mintPeriods"
                            },
                            "id": 1162,
                            "name": "Identifier",
                            "src": "2581:12:10"
                          }
                        ],
                        "id": 1163,
                        "name": "Return",
                        "src": "2574:19:10"
                      }
                    ],
                    "id": 1164,
                    "name": "Block",
                    "src": "2564:36:10"
                  }
                ],
                "id": 1165,
                "name": "FunctionDefinition",
                "src": "2515:85:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "mintAmount",
                  "scope": 1280,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1166,
                    "name": "ParameterList",
                    "src": "2625:2:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1173,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1167,
                            "name": "ElementaryTypeName",
                            "src": "2651:7:10"
                          }
                        ],
                        "id": 1168,
                        "name": "VariableDeclaration",
                        "src": "2651:7:10"
                      }
                    ],
                    "id": 1169,
                    "name": "ParameterList",
                    "src": "2650:9:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 1169
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1033,
                              "type": "uint256",
                              "value": "_mintAmount"
                            },
                            "id": 1170,
                            "name": "Identifier",
                            "src": "2676:11:10"
                          }
                        ],
                        "id": 1171,
                        "name": "Return",
                        "src": "2669:18:10"
                      }
                    ],
                    "id": 1172,
                    "name": "Block",
                    "src": "2659:35:10"
                  }
                ],
                "id": 1173,
                "name": "FunctionDefinition",
                "src": "2606:88:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "_updateMintParams",
                  "scope": 1280,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1174,
                    "name": "ParameterList",
                    "src": "2726:2:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1213,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1175,
                            "name": "ElementaryTypeName",
                            "src": "2747:4:10"
                          }
                        ],
                        "id": 1176,
                        "name": "VariableDeclaration",
                        "src": "2747:4:10"
                      }
                    ],
                    "id": 1177,
                    "name": "ParameterList",
                    "src": "2746:6:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "falseBody": null
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1036,
                                  "type": "uint256",
                                  "value": "_mintPeriods"
                                },
                                "id": 1178,
                                "name": "Identifier",
                                "src": "2854:12:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1179,
                                "name": "Literal",
                                "src": "2870:1:10"
                              }
                            ],
                            "id": 1180,
                            "name": "BinaryOperation",
                            "src": "2854:17:10"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1033,
                                      "type": "uint256",
                                      "value": "_mintAmount"
                                    },
                                    "id": 1181,
                                    "name": "Identifier",
                                    "src": "2873:11:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "3130303030653138",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 10000000000000000000000",
                                      "value": "10000e18"
                                    },
                                    "id": 1182,
                                    "name": "Literal",
                                    "src": "2887:8:10"
                                  }
                                ],
                                "id": 1183,
                                "name": "Assignment",
                                "src": "2873:22:10"
                              }
                            ],
                            "id": 1184,
                            "name": "ExpressionStatement",
                            "src": "2873:22:10"
                          }
                        ],
                        "id": 1185,
                        "name": "IfStatement",
                        "src": "2851:44:10"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1036,
                                  "type": "uint256",
                                  "value": "_mintPeriods"
                                },
                                "id": 1186,
                                "name": "Identifier",
                                "src": "2934:12:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 1481,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1036,
                                          "type": "uint256",
                                          "value": "_mintPeriods"
                                        },
                                        "id": 1187,
                                        "name": "Identifier",
                                        "src": "2949:12:10"
                                      }
                                    ],
                                    "id": 1188,
                                    "name": "MemberAccess",
                                    "src": "2949:16:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 1189,
                                    "name": "Literal",
                                    "src": "2966:1:10"
                                  }
                                ],
                                "id": 1190,
                                "name": "FunctionCall",
                                "src": "2949:19:10"
                              }
                            ],
                            "id": 1191,
                            "name": "Assignment",
                            "src": "2934:34:10"
                          }
                        ],
                        "id": 1192,
                        "name": "ExpressionStatement",
                        "src": "2934:34:10"
                      },
                      {
                        "attributes": {
                          "falseBody": null
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "%",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1036,
                                      "type": "uint256",
                                      "value": "_mintPeriods"
                                    },
                                    "id": 1193,
                                    "name": "Identifier",
                                    "src": "3067:12:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1042,
                                      "type": "uint256",
                                      "value": "_halveEvery"
                                    },
                                    "id": 1194,
                                    "name": "Identifier",
                                    "src": "3082:11:10"
                                  }
                                ],
                                "id": 1195,
                                "name": "BinaryOperation",
                                "src": "3067:26:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1196,
                                "name": "Literal",
                                "src": "3097:1:10"
                              }
                            ],
                            "id": 1197,
                            "name": "BinaryOperation",
                            "src": "3067:31:10"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1033,
                                      "type": "uint256",
                                      "value": "_mintAmount"
                                    },
                                    "id": 1198,
                                    "name": "Identifier",
                                    "src": "3100:11:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "div",
                                          "referencedDeclaration": 1433,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1033,
                                              "type": "uint256",
                                              "value": "_mintAmount"
                                            },
                                            "id": 1199,
                                            "name": "Identifier",
                                            "src": "3114:11:10"
                                          }
                                        ],
                                        "id": 1200,
                                        "name": "MemberAccess",
                                        "src": "3114:15:10"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "32",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 2",
                                          "value": "2"
                                        },
                                        "id": 1201,
                                        "name": "Literal",
                                        "src": "3130:1:10"
                                      }
                                    ],
                                    "id": 1202,
                                    "name": "FunctionCall",
                                    "src": "3114:18:10"
                                  }
                                ],
                                "id": 1203,
                                "name": "Assignment",
                                "src": "3100:32:10"
                              }
                            ],
                            "id": 1204,
                            "name": "ExpressionStatement",
                            "src": "3100:32:10"
                          }
                        ],
                        "id": 1205,
                        "name": "IfStatement",
                        "src": "3064:68:10"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1039,
                                  "type": "uint256",
                                  "value": "_totalInPeriod"
                                },
                                "id": 1206,
                                "name": "Identifier",
                                "src": "3184:14:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1207,
                                "name": "Literal",
                                "src": "3201:1:10"
                              }
                            ],
                            "id": 1208,
                            "name": "Assignment",
                            "src": "3184:18:10"
                          }
                        ],
                        "id": 1209,
                        "name": "ExpressionStatement",
                        "src": "3184:18:10"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1177
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1210,
                            "name": "Literal",
                            "src": "3220:4:10"
                          }
                        ],
                        "id": 1211,
                        "name": "Return",
                        "src": "3213:11:10"
                      }
                    ],
                    "id": 1212,
                    "name": "Block",
                    "src": "2753:478:10"
                  }
                ],
                "id": 1213,
                "name": "FunctionDefinition",
                "src": "2700:531:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "remainingInPeriod",
                  "scope": 1280,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1214,
                    "name": "ParameterList",
                    "src": "3263:2:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1223,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1215,
                            "name": "ElementaryTypeName",
                            "src": "3289:7:10"
                          }
                        ],
                        "id": 1216,
                        "name": "VariableDeclaration",
                        "src": "3289:7:10"
                      }
                    ],
                    "id": 1217,
                    "name": "ParameterList",
                    "src": "3288:9:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 1217
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "-",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1033,
                                  "type": "uint256",
                                  "value": "_mintAmount"
                                },
                                "id": 1218,
                                "name": "Identifier",
                                "src": "3315:11:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1039,
                                  "type": "uint256",
                                  "value": "_totalInPeriod"
                                },
                                "id": 1219,
                                "name": "Identifier",
                                "src": "3329:14:10"
                              }
                            ],
                            "id": 1220,
                            "name": "BinaryOperation",
                            "src": "3315:28:10"
                          }
                        ],
                        "id": 1221,
                        "name": "Return",
                        "src": "3308:35:10"
                      }
                    ],
                    "id": 1222,
                    "name": "Block",
                    "src": "3298:52:10"
                  }
                ],
                "id": 1223,
                "name": "FunctionDefinition",
                "src": "3237:113:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "totalInPeriod",
                  "scope": 1280,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                "children": [
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1224,
                    "name": "ParameterList",
                    "src": "3378:2:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1231,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1225,
                            "name": "ElementaryTypeName",
                            "src": "3404:7:10"
                          }
                        ],
                        "id": 1226,
                        "name": "VariableDeclaration",
                        "src": "3404:7:10"
                      }
                    ],
                    "id": 1227,
                    "name": "ParameterList",
                    "src": "3403:9:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "functionReturnParameters": 1227
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1039,
                              "type": "uint256",
                              "value": "_totalInPeriod"
                            },
                            "id": 1228,
                            "name": "Identifier",
                            "src": "3430:14:10"
                          }
                        ],
                        "id": 1229,
                        "name": "Return",
                        "src": "3423:21:10"
                      }
                    ],
                    "id": 1230,
                    "name": "Block",
                    "src": "3413:38:10"
                  }
                ],
                "id": 1231,
                "name": "FunctionDefinition",
                "src": "3356:95:10"
              },
              {
                "attributes": {
                  "documentation": "@dev do not allow mint during pause",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "mint",
                  "scope": 1280,
                  "stateMutability": "nonpayable",
                  "superFunction": 555,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 1248,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1232,
                            "name": "ElementaryTypeName",
                            "src": "3527:7:10"
                          }
                        ],
                        "id": 1233,
                        "name": "VariableDeclaration",
                        "src": "3527:10:10"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 1248,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1234,
                            "name": "ElementaryTypeName",
                            "src": "3539:7:10"
                          }
                        ],
                        "id": 1235,
                        "name": "VariableDeclaration",
                        "src": "3539:13:10"
                      }
                    ],
                    "id": 1236,
                    "name": "ParameterList",
                    "src": "3526:27:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1248,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1241,
                            "name": "ElementaryTypeName",
                            "src": "3595:4:10"
                          }
                        ],
                        "id": 1242,
                        "name": "VariableDeclaration",
                        "src": "3595:4:10"
                      }
                    ],
                    "id": 1243,
                    "name": "ParameterList",
                    "src": "3594:6:10"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 1237,
                        "name": "Identifier",
                        "src": "3561:13:10"
                      }
                    ],
                    "id": 1238,
                    "name": "ModifierInvocation",
                    "src": "3561:13:10"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 763,
                          "type": "modifier ()",
                          "value": "onlyMinter"
                        },
                        "id": 1239,
                        "name": "Identifier",
                        "src": "3575:10:10"
                      }
                    ],
                    "id": 1240,
                    "name": "ModifierInvocation",
                    "src": "3575:10:10"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    1522,
                                    1523
                                  ],
                                  "referencedDeclaration": 1522,
                                  "type": "function () pure",
                                  "value": "revert"
                                },
                                "id": 1244,
                                "name": "Identifier",
                                "src": "3644:6:10"
                              }
                            ],
                            "id": 1245,
                            "name": "FunctionCall",
                            "src": "3644:8:10"
                          }
                        ],
                        "id": 1246,
                        "name": "ExpressionStatement",
                        "src": "3644:8:10"
                      }
                    ],
                    "id": 1247,
                    "name": "Block",
                    "src": "3601:58:10"
                  }
                ],
                "id": 1248,
                "name": "FunctionDefinition",
                "src": "3513:146:10"
              },
              {
                "attributes": {
                  "documentation": "@dev do not allow burn during pause",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "burn",
                  "scope": 1280,
                  "stateMutability": "nonpayable",
                  "superFunction": 399,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 1262,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1249,
                            "name": "ElementaryTypeName",
                            "src": "3735:7:10"
                          }
                        ],
                        "id": 1250,
                        "name": "VariableDeclaration",
                        "src": "3735:13:10"
                      }
                    ],
                    "id": 1251,
                    "name": "ParameterList",
                    "src": "3734:15:10"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1254,
                    "name": "ParameterList",
                    "src": "3771:0:10"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 1252,
                        "name": "Identifier",
                        "src": "3757:13:10"
                      }
                    ],
                    "id": 1253,
                    "name": "ModifierInvocation",
                    "src": "3757:13:10"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "burn",
                                  "referencedDeclaration": 399,
                                  "type": "function (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1556,
                                      "type": "contract super RaeToken",
                                      "value": "super"
                                    },
                                    "id": 1255,
                                    "name": "Identifier",
                                    "src": "3781:5:10"
                                  }
                                ],
                                "id": 1257,
                                "name": "MemberAccess",
                                "src": "3781:10:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1250,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 1258,
                                "name": "Identifier",
                                "src": "3792:5:10"
                              }
                            ],
                            "id": 1259,
                            "name": "FunctionCall",
                            "src": "3781:17:10"
                          }
                        ],
                        "id": 1260,
                        "name": "ExpressionStatement",
                        "src": "3781:17:10"
                      }
                    ],
                    "id": 1261,
                    "name": "Block",
                    "src": "3771:34:10"
                  }
                ],
                "id": 1262,
                "name": "FunctionDefinition",
                "src": "3721:84:10"
              },
              {
                "attributes": {
                  "documentation": null,
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "name": "burnFrom",
                  "scope": 1280,
                  "stateMutability": "nonpayable",
                  "superFunction": 412,
                  "visibility": "public"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "from",
                          "scope": 1279,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1263,
                            "name": "ElementaryTypeName",
                            "src": "3829:7:10"
                          }
                        ],
                        "id": 1264,
                        "name": "VariableDeclaration",
                        "src": "3829:12:10"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
                          "scope": 1279,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1265,
                            "name": "ElementaryTypeName",
                            "src": "3843:7:10"
                          }
                        ],
                        "id": 1266,
                        "name": "VariableDeclaration",
                        "src": "3843:13:10"
                      }
                    ],
                    "id": 1267,
                    "name": "ParameterList",
                    "src": "3828:29:10"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1270,
                    "name": "ParameterList",
                    "src": "3879:0:10"
                  },
                  {
                    "attributes": {
                      "arguments": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 870,
                          "type": "modifier ()",
                          "value": "whenNotPaused"
                        },
                        "id": 1268,
                        "name": "Identifier",
                        "src": "3865:13:10"
                      }
                    ],
                    "id": 1269,
                    "name": "ModifierInvocation",
                    "src": "3865:13:10"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "burnFrom",
                                  "referencedDeclaration": 412,
                                  "type": "function (address,uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1556,
                                      "type": "contract super RaeToken",
                                      "value": "super"
                                    },
                                    "id": 1271,
                                    "name": "Identifier",
                                    "src": "3889:5:10"
                                  }
                                ],
                                "id": 1273,
                                "name": "MemberAccess",
                                "src": "3889:14:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1264,
                                  "type": "address",
                                  "value": "from"
                                },
                                "id": 1274,
                                "name": "Identifier",
                                "src": "3904:4:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1266,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 1275,
                                "name": "Identifier",
                                "src": "3910:5:10"
                              }
                            ],
                            "id": 1276,
                            "name": "FunctionCall",
                            "src": "3889:27:10"
                          }
                        ],
                        "id": 1277,
                        "name": "ExpressionStatement",
                        "src": "3889:27:10"
                      }
                    ],
                    "id": 1278,
                    "name": "Block",
                    "src": "3879:44:10"
                  }
                ],
                "id": 1279,
                "name": "FunctionDefinition",
                "src": "3811:112:10"
              }
            ],
            "id": 1280,
            "name": "ContractDefinition",
            "src": "636:3290:10"
          }
        ],
        "id": 1281,
        "name": "SourceUnit",
        "src": "0:3926:10"
      }
    },
    "Roles.sol": {
      "ast": {
        "absolutePath": "Roles.sol",
        "exportedSymbols": {
          "Roles": [
            1374
          ]
        },
        "id": 1375,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1282,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:11"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": "@title Roles\n@dev Library for managing addresses assigned to a Role.",
            "fullyImplemented": true,
            "id": 1374,
            "linearizedBaseContracts": [
              1374
            ],
            "name": "Roles",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "Roles.Role",
                "id": 1287,
                "members": [
                  {
                    "constant": false,
                    "id": 1286,
                    "name": "bearer",
                    "nodeType": "VariableDeclaration",
                    "scope": 1287,
                    "src": "150:32:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "typeName": {
                      "id": 1285,
                      "keyType": {
                        "id": 1283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "159:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "150:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "valueType": {
                        "id": 1284,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "170:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Role",
                "nodeType": "StructDefinition",
                "scope": 1374,
                "src": "128:61:11",
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1318,
                  "nodeType": "Block",
                  "src": "317:123:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1295,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1291,
                              "src": "335:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "354:1:11",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "346:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "346:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "335:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1294,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "327:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "327:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1301,
                      "nodeType": "ExpressionStatement",
                      "src": "327:30:11"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "375:19:11",
                            "subExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1304,
                                  "name": "role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1289,
                                  "src": "380:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                    "typeString": "struct Roles.Role storage pointer"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1305,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1291,
                                  "src": "386:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                    "typeString": "struct Roles.Role storage pointer"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1303,
                                "name": "has",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1373,
                                "src": "376:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "376:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1302,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "367:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "367:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1309,
                      "nodeType": "ExpressionStatement",
                      "src": "367:28:11"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1310,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "406:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                "typeString": "struct Roles.Role storage pointer"
                              }
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bearer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1286,
                            "src": "406:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1314,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1312,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1291,
                            "src": "418:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "406:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "429:4:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "406:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1317,
                      "nodeType": "ExpressionStatement",
                      "src": "406:27:11"
                    }
                  ]
                },
                "documentation": "@dev give an account access to this role",
                "id": 1319,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "add",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1292,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1289,
                      "name": "role",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "272:17:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                        "typeString": "struct Roles.Role"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1288,
                        "name": "Role",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1287,
                        "src": "272:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                          "typeString": "struct Roles.Role"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1291,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "291:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1290,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "291:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "271:36:11"
                },
                "returnParameters": {
                  "id": 1293,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "317:0:11"
                },
                "scope": 1374,
                "src": "259:181:11",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1349,
                  "nodeType": "Block",
                  "src": "575:123:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1327,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "593:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "612:1:11",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "604:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "604:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "593:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1326,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "585:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "585:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1333,
                      "nodeType": "ExpressionStatement",
                      "src": "585:30:11"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1336,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1321,
                                "src": "637:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                  "typeString": "struct Roles.Role storage pointer"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1337,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "643:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                  "typeString": "struct Roles.Role storage pointer"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1335,
                              "name": "has",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "633:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1287_storage_ptr_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                              }
                            },
                            "id": 1338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "633:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1334,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "625:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "625:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1340,
                      "nodeType": "ExpressionStatement",
                      "src": "625:27:11"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1341,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1321,
                              "src": "663:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                "typeString": "struct Roles.Role storage pointer"
                              }
                            },
                            "id": 1344,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bearer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1286,
                            "src": "663:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "675:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "663:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "686:5:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "663:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1348,
                      "nodeType": "ExpressionStatement",
                      "src": "663:28:11"
                    }
                  ]
                },
                "documentation": "@dev remove an account's access to this role",
                "id": 1350,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "remove",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1324,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1321,
                      "name": "role",
                      "nodeType": "VariableDeclaration",
                      "scope": 1350,
                      "src": "530:17:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                        "typeString": "struct Roles.Role"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1320,
                        "name": "Role",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1287,
                        "src": "530:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                          "typeString": "struct Roles.Role"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1323,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 1350,
                      "src": "549:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "549:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "529:36:11"
                },
                "returnParameters": {
                  "id": 1325,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "575:0:11"
                },
                "scope": 1374,
                "src": "514:184:11",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1372,
                  "nodeType": "Block",
                  "src": "864:84:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1360,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "882:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "901:1:11",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "893:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "893:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "882:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1359,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "874:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "874:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1366,
                      "nodeType": "ExpressionStatement",
                      "src": "874:30:11"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1367,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1352,
                            "src": "921:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                              "typeString": "struct Roles.Role storage pointer"
                            }
                          },
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bearer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1286,
                          "src": "921:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1370,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1369,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "933:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "921:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1358,
                      "id": 1371,
                      "nodeType": "Return",
                      "src": "914:27:11"
                    }
                  ]
                },
                "documentation": "@dev check if an account has this role\n@return bool",
                "id": 1373,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "has",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1355,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1352,
                      "name": "role",
                      "nodeType": "VariableDeclaration",
                      "scope": 1373,
                      "src": "799:17:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                        "typeString": "struct Roles.Role"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1351,
                        "name": "Role",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1287,
                        "src": "799:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                          "typeString": "struct Roles.Role"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1354,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 1373,
                      "src": "818:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1353,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "818:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "798:36:11"
                },
                "returnParameters": {
                  "id": 1358,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1357,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1373,
                      "src": "858:4:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1356,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "858:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "857:6:11"
                },
                "scope": 1374,
                "src": "786:162:11",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 1375,
            "src": "108:842:11"
          }
        ],
        "src": "0:951:11"
      },
      "id": 11,
      "legacyAST": {
        "attributes": {
          "absolutePath": "Roles.sol",
          "exportedSymbols": {
            "Roles": [
              1374
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 1282,
            "name": "PragmaDirective",
            "src": "0:23:11"
          },
          {
            "attributes": {
              "baseContracts": [
                null
              ],
              "contractDependencies": [
                null
              ],
              "contractKind": "library",
              "documentation": "@title Roles\n@dev Library for managing addresses assigned to a Role.",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                1374
              ],
              "name": "Roles",
              "scope": 1375
            },
            "children": [
              {
                "attributes": {
                  "canonicalName": "Roles.Role",
                  "name": "Role",
                  "scope": 1374,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "bearer",
                      "scope": 1287,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "mapping(address => bool)",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "mapping(address => bool)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "type": "address"
                            },
                            "id": 1283,
                            "name": "ElementaryTypeName",
                            "src": "159:7:11"
                          },
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1284,
                            "name": "ElementaryTypeName",
                            "src": "170:4:11"
                          }
                        ],
                        "id": 1285,
                        "name": "Mapping",
                        "src": "150:25:11"
                      }
                    ],
                    "id": 1286,
                    "name": "VariableDeclaration",
                    "src": "150:32:11"
                  }
                ],
                "id": 1287,
                "name": "StructDefinition",
                "src": "128:61:11"
              },
              {
                "attributes": {
                  "documentation": "@dev give an account access to this role",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "add",
                  "scope": 1374,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "role",
                          "scope": 1319,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Roles.Role",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Role",
                              "referencedDeclaration": 1287,
                              "type": "struct Roles.Role"
                            },
                            "id": 1288,
                            "name": "UserDefinedTypeName",
                            "src": "272:4:11"
                          }
                        ],
                        "id": 1289,
                        "name": "VariableDeclaration",
                        "src": "272:17:11"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 1319,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1290,
                            "name": "ElementaryTypeName",
                            "src": "291:7:11"
                          }
                        ],
                        "id": 1291,
                        "name": "VariableDeclaration",
                        "src": "291:15:11"
                      }
                    ],
                    "id": 1292,
                    "name": "ParameterList",
                    "src": "271:36:11"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1293,
                    "name": "ParameterList",
                    "src": "317:0:11"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1294,
                                "name": "Identifier",
                                "src": "327:7:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1291,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 1295,
                                    "name": "Identifier",
                                    "src": "335:7:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 1296,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "346:7:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 1297,
                                        "name": "Literal",
                                        "src": "354:1:11"
                                      }
                                    ],
                                    "id": 1298,
                                    "name": "FunctionCall",
                                    "src": "346:10:11"
                                  }
                                ],
                                "id": 1299,
                                "name": "BinaryOperation",
                                "src": "335:21:11"
                              }
                            ],
                            "id": 1300,
                            "name": "FunctionCall",
                            "src": "327:30:11"
                          }
                        ],
                        "id": 1301,
                        "name": "ExpressionStatement",
                        "src": "327:30:11"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1302,
                                "name": "Identifier",
                                "src": "367:7:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                              "typeString": "struct Roles.Role storage pointer"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1373,
                                          "type": "function (struct Roles.Role storage pointer,address) view returns (bool)",
                                          "value": "has"
                                        },
                                        "id": 1303,
                                        "name": "Identifier",
                                        "src": "376:3:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1289,
                                          "type": "struct Roles.Role storage pointer",
                                          "value": "role"
                                        },
                                        "id": 1304,
                                        "name": "Identifier",
                                        "src": "380:4:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1291,
                                          "type": "address",
                                          "value": "account"
                                        },
                                        "id": 1305,
                                        "name": "Identifier",
                                        "src": "386:7:11"
                                      }
                                    ],
                                    "id": 1306,
                                    "name": "FunctionCall",
                                    "src": "376:18:11"
                                  }
                                ],
                                "id": 1307,
                                "name": "UnaryOperation",
                                "src": "375:19:11"
                              }
                            ],
                            "id": 1308,
                            "name": "FunctionCall",
                            "src": "367:28:11"
                          }
                        ],
                        "id": 1309,
                        "name": "ExpressionStatement",
                        "src": "367:28:11"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "bearer",
                                      "referencedDeclaration": 1286,
                                      "type": "mapping(address => bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1289,
                                          "type": "struct Roles.Role storage pointer",
                                          "value": "role"
                                        },
                                        "id": 1310,
                                        "name": "Identifier",
                                        "src": "406:4:11"
                                      }
                                    ],
                                    "id": 1313,
                                    "name": "MemberAccess",
                                    "src": "406:11:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1291,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 1312,
                                    "name": "Identifier",
                                    "src": "418:7:11"
                                  }
                                ],
                                "id": 1314,
                                "name": "IndexAccess",
                                "src": "406:20:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 1315,
                                "name": "Literal",
                                "src": "429:4:11"
                              }
                            ],
                            "id": 1316,
                            "name": "Assignment",
                            "src": "406:27:11"
                          }
                        ],
                        "id": 1317,
                        "name": "ExpressionStatement",
                        "src": "406:27:11"
                      }
                    ],
                    "id": 1318,
                    "name": "Block",
                    "src": "317:123:11"
                  }
                ],
                "id": 1319,
                "name": "FunctionDefinition",
                "src": "259:181:11"
              },
              {
                "attributes": {
                  "documentation": "@dev remove an account's access to this role",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "remove",
                  "scope": 1374,
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "role",
                          "scope": 1350,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Roles.Role",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Role",
                              "referencedDeclaration": 1287,
                              "type": "struct Roles.Role"
                            },
                            "id": 1320,
                            "name": "UserDefinedTypeName",
                            "src": "530:4:11"
                          }
                        ],
                        "id": 1321,
                        "name": "VariableDeclaration",
                        "src": "530:17:11"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 1350,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1322,
                            "name": "ElementaryTypeName",
                            "src": "549:7:11"
                          }
                        ],
                        "id": 1323,
                        "name": "VariableDeclaration",
                        "src": "549:15:11"
                      }
                    ],
                    "id": 1324,
                    "name": "ParameterList",
                    "src": "529:36:11"
                  },
                  {
                    "attributes": {
                      "parameters": [
                        null
                      ]
                    },
                    "children": [],
                    "id": 1325,
                    "name": "ParameterList",
                    "src": "575:0:11"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1326,
                                "name": "Identifier",
                                "src": "585:7:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1323,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 1327,
                                    "name": "Identifier",
                                    "src": "593:7:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 1328,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "604:7:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 1329,
                                        "name": "Literal",
                                        "src": "612:1:11"
                                      }
                                    ],
                                    "id": 1330,
                                    "name": "FunctionCall",
                                    "src": "604:10:11"
                                  }
                                ],
                                "id": 1331,
                                "name": "BinaryOperation",
                                "src": "593:21:11"
                              }
                            ],
                            "id": 1332,
                            "name": "FunctionCall",
                            "src": "585:30:11"
                          }
                        ],
                        "id": 1333,
                        "name": "ExpressionStatement",
                        "src": "585:30:11"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1334,
                                "name": "Identifier",
                                "src": "625:7:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Role_$1287_storage_ptr",
                                          "typeString": "struct Roles.Role storage pointer"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1373,
                                      "type": "function (struct Roles.Role storage pointer,address) view returns (bool)",
                                      "value": "has"
                                    },
                                    "id": 1335,
                                    "name": "Identifier",
                                    "src": "633:3:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1321,
                                      "type": "struct Roles.Role storage pointer",
                                      "value": "role"
                                    },
                                    "id": 1336,
                                    "name": "Identifier",
                                    "src": "637:4:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1323,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 1337,
                                    "name": "Identifier",
                                    "src": "643:7:11"
                                  }
                                ],
                                "id": 1338,
                                "name": "FunctionCall",
                                "src": "633:18:11"
                              }
                            ],
                            "id": 1339,
                            "name": "FunctionCall",
                            "src": "625:27:11"
                          }
                        ],
                        "id": 1340,
                        "name": "ExpressionStatement",
                        "src": "625:27:11"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "bearer",
                                      "referencedDeclaration": 1286,
                                      "type": "mapping(address => bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1321,
                                          "type": "struct Roles.Role storage pointer",
                                          "value": "role"
                                        },
                                        "id": 1341,
                                        "name": "Identifier",
                                        "src": "663:4:11"
                                      }
                                    ],
                                    "id": 1344,
                                    "name": "MemberAccess",
                                    "src": "663:11:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1323,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 1343,
                                    "name": "Identifier",
                                    "src": "675:7:11"
                                  }
                                ],
                                "id": 1345,
                                "name": "IndexAccess",
                                "src": "663:20:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 1346,
                                "name": "Literal",
                                "src": "686:5:11"
                              }
                            ],
                            "id": 1347,
                            "name": "Assignment",
                            "src": "663:28:11"
                          }
                        ],
                        "id": 1348,
                        "name": "ExpressionStatement",
                        "src": "663:28:11"
                      }
                    ],
                    "id": 1349,
                    "name": "Block",
                    "src": "575:123:11"
                  }
                ],
                "id": 1350,
                "name": "FunctionDefinition",
                "src": "514:184:11"
              },
              {
                "attributes": {
                  "documentation": "@dev check if an account has this role\n@return bool",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "has",
                  "scope": 1374,
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "role",
                          "scope": 1373,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Roles.Role",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Role",
                              "referencedDeclaration": 1287,
                              "type": "struct Roles.Role"
                            },
                            "id": 1351,
                            "name": "UserDefinedTypeName",
                            "src": "799:4:11"
                          }
                        ],
                        "id": 1352,
                        "name": "VariableDeclaration",
                        "src": "799:17:11"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "account",
                          "scope": 1373,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1353,
                            "name": "ElementaryTypeName",
                            "src": "818:7:11"
                          }
                        ],
                        "id": 1354,
                        "name": "VariableDeclaration",
                        "src": "818:15:11"
                      }
                    ],
                    "id": 1355,
                    "name": "ParameterList",
                    "src": "798:36:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1373,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1356,
                            "name": "ElementaryTypeName",
                            "src": "858:4:11"
                          }
                        ],
                        "id": 1357,
                        "name": "VariableDeclaration",
                        "src": "858:4:11"
                      }
                    ],
                    "id": 1358,
                    "name": "ParameterList",
                    "src": "857:6:11"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1359,
                                "name": "Identifier",
                                "src": "874:7:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1354,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 1360,
                                    "name": "Identifier",
                                    "src": "882:7:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 1361,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "893:7:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 1362,
                                        "name": "Literal",
                                        "src": "901:1:11"
                                      }
                                    ],
                                    "id": 1363,
                                    "name": "FunctionCall",
                                    "src": "893:10:11"
                                  }
                                ],
                                "id": 1364,
                                "name": "BinaryOperation",
                                "src": "882:21:11"
                              }
                            ],
                            "id": 1365,
                            "name": "FunctionCall",
                            "src": "874:30:11"
                          }
                        ],
                        "id": 1366,
                        "name": "ExpressionStatement",
                        "src": "874:30:11"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1358
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "bearer",
                                  "referencedDeclaration": 1286,
                                  "type": "mapping(address => bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1352,
                                      "type": "struct Roles.Role storage pointer",
                                      "value": "role"
                                    },
                                    "id": 1367,
                                    "name": "Identifier",
                                    "src": "921:4:11"
                                  }
                                ],
                                "id": 1368,
                                "name": "MemberAccess",
                                "src": "921:11:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1354,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 1369,
                                "name": "Identifier",
                                "src": "933:7:11"
                              }
                            ],
                            "id": 1370,
                            "name": "IndexAccess",
                            "src": "921:20:11"
                          }
                        ],
                        "id": 1371,
                        "name": "Return",
                        "src": "914:27:11"
                      }
                    ],
                    "id": 1372,
                    "name": "Block",
                    "src": "864:84:11"
                  }
                ],
                "id": 1373,
                "name": "FunctionDefinition",
                "src": "786:162:11"
              }
            ],
            "id": 1374,
            "name": "ContractDefinition",
            "src": "108:842:11"
          }
        ],
        "id": 1375,
        "name": "SourceUnit",
        "src": "0:951:11"
      }
    },
    "SafeMath.sol": {
      "ast": {
        "absolutePath": "SafeMath.sol",
        "exportedSymbols": {
          "SafeMath": [
            1502
          ]
        },
        "id": 1503,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1376,
            "literals": [
              "solidity",
              "^",
              "0.5",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "0:23:12"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": "@title SafeMath\n@dev Unsigned math operations with safety checks that revert on error",
            "fullyImplemented": true,
            "id": 1502,
            "linearizedBaseContracts": [
              1502
            ],
            "name": "SafeMath",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1408,
                  "nodeType": "Block",
                  "src": "298:354:12",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1385,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1378,
                          "src": "529:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "529:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1391,
                      "nodeType": "IfStatement",
                      "src": "525:45:12",
                      "trueBody": {
                        "id": 1390,
                        "nodeType": "Block",
                        "src": "537:33:12",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "558:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 1384,
                            "id": 1389,
                            "nodeType": "Return",
                            "src": "551:8:12"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        1393
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1393,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 1408,
                          "src": "580:9:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1392,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "580:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1397,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1394,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1378,
                          "src": "592:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1395,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1380,
                          "src": "596:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "592:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "580:17:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1399,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1393,
                                "src": "615:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1400,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1378,
                                "src": "619:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "615:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1402,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1380,
                              "src": "624:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "615:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1398,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "607:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "607:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1405,
                      "nodeType": "ExpressionStatement",
                      "src": "607:19:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1406,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1393,
                        "src": "644:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1384,
                      "id": 1407,
                      "nodeType": "Return",
                      "src": "637:8:12"
                    }
                  ]
                },
                "documentation": "@dev Multiplies two unsigned integers, reverts on overflow.",
                "id": 1409,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "mul",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1381,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1378,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "244:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1377,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "244:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1380,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "255:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "255:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "243:22:12"
                },
                "returnParameters": {
                  "id": 1384,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1383,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "289:7:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "289:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "288:9:12"
                },
                "scope": 1502,
                "src": "231:421:12",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1432,
                  "nodeType": "Block",
                  "src": "849:229:12",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1419,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1413,
                              "src": "933:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "937:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "933:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1418,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "925:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "925:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1423,
                      "nodeType": "ExpressionStatement",
                      "src": "925:14:12"
                    },
                    {
                      "assignments": [
                        1425
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1425,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 1432,
                          "src": "949:9:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1424,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "949:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1429,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1426,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "961:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1427,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "965:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "961:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "949:17:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "1070:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1417,
                      "id": 1431,
                      "nodeType": "Return",
                      "src": "1063:8:12"
                    }
                  ]
                },
                "documentation": "@dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.",
                "id": 1433,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "div",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1414,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1411,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 1433,
                      "src": "795:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1410,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1413,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 1433,
                      "src": "806:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "806:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "794:22:12"
                },
                "returnParameters": {
                  "id": 1417,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1416,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1433,
                      "src": "840:7:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "840:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "839:9:12"
                },
                "scope": 1502,
                "src": "782:296:12",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1456,
                  "nodeType": "Block",
                  "src": "1278:78:12",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1443,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "1296:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1444,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1435,
                              "src": "1301:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1296:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1442,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "1288:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1288:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1447,
                      "nodeType": "ExpressionStatement",
                      "src": "1288:15:12"
                    },
                    {
                      "assignments": [
                        1449
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1449,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 1456,
                          "src": "1313:9:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1448,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1313:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1453,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1450,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "1325:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1451,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "1329:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1325:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1313:17:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1454,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "1348:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1441,
                      "id": 1455,
                      "nodeType": "Return",
                      "src": "1341:8:12"
                    }
                  ]
                },
                "documentation": "@dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).",
                "id": 1457,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sub",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1438,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1435,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 1457,
                      "src": "1224:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1224:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1437,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 1457,
                      "src": "1235:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1235:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1223:22:12"
                },
                "returnParameters": {
                  "id": 1441,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1440,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1457,
                      "src": "1269:7:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1269:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1268:9:12"
                },
                "scope": 1502,
                "src": "1211:145:12",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1480,
                  "nodeType": "Block",
                  "src": "1506:78:12",
                  "statements": [
                    {
                      "assignments": [
                        1467
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1467,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 1480,
                          "src": "1516:9:12",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1466,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1516:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1471,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1468,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1459,
                          "src": "1528:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1469,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1461,
                          "src": "1532:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1528:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1516:17:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1473,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "1551:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1474,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1459,
                              "src": "1556:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1551:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1472,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "1543:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1543:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1477,
                      "nodeType": "ExpressionStatement",
                      "src": "1543:15:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1478,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "1576:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1465,
                      "id": 1479,
                      "nodeType": "Return",
                      "src": "1569:8:12"
                    }
                  ]
                },
                "documentation": "@dev Adds two unsigned integers, reverts on overflow.",
                "id": 1481,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "add",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1462,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1459,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 1481,
                      "src": "1452:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1452:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1461,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 1481,
                      "src": "1463:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1463:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1451:22:12"
                },
                "returnParameters": {
                  "id": 1465,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1464,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1481,
                      "src": "1497:7:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1497:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1496:9:12"
                },
                "scope": 1502,
                "src": "1439:145:12",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1500,
                  "nodeType": "Block",
                  "src": "1806:54:12",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1491,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1485,
                              "src": "1824:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1829:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1824:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1490,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1520,
                            1521
                          ],
                          "referencedDeclaration": 1520,
                          "src": "1816:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1816:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1495,
                      "nodeType": "ExpressionStatement",
                      "src": "1816:15:12"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1496,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1483,
                          "src": "1848:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1497,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1485,
                          "src": "1852:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1848:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1489,
                      "id": 1499,
                      "nodeType": "Return",
                      "src": "1841:12:12"
                    }
                  ]
                },
                "documentation": "@dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\nreverts when dividing by zero.",
                "id": 1501,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "mod",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1486,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1483,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 1501,
                      "src": "1752:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1482,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1752:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1485,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 1501,
                      "src": "1763:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1763:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1751:22:12"
                },
                "returnParameters": {
                  "id": 1489,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1488,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1501,
                      "src": "1797:7:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1797:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1796:9:12"
                },
                "scope": 1502,
                "src": "1739:121:12",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 1503,
            "src": "125:1737:12"
          }
        ],
        "src": "0:1863:12"
      },
      "id": 12,
      "legacyAST": {
        "attributes": {
          "absolutePath": "SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              1502
            ]
          }
        },
        "children": [
          {
            "attributes": {
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ]
            },
            "id": 1376,
            "name": "PragmaDirective",
            "src": "0:23:12"
          },
          {
            "attributes": {
              "baseContracts": [
                null
              ],
              "contractDependencies": [
                null
              ],
              "contractKind": "library",
              "documentation": "@title SafeMath\n@dev Unsigned math operations with safety checks that revert on error",
              "fullyImplemented": true,
              "linearizedBaseContracts": [
                1502
              ],
              "name": "SafeMath",
              "scope": 1503
            },
            "children": [
              {
                "attributes": {
                  "documentation": "@dev Multiplies two unsigned integers, reverts on overflow.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "mul",
                  "scope": 1502,
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "a",
                          "scope": 1409,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1377,
                            "name": "ElementaryTypeName",
                            "src": "244:7:12"
                          }
                        ],
                        "id": 1378,
                        "name": "VariableDeclaration",
                        "src": "244:9:12"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "b",
                          "scope": 1409,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1379,
                            "name": "ElementaryTypeName",
                            "src": "255:7:12"
                          }
                        ],
                        "id": 1380,
                        "name": "VariableDeclaration",
                        "src": "255:9:12"
                      }
                    ],
                    "id": 1381,
                    "name": "ParameterList",
                    "src": "243:22:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1409,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1382,
                            "name": "ElementaryTypeName",
                            "src": "289:7:12"
                          }
                        ],
                        "id": 1383,
                        "name": "VariableDeclaration",
                        "src": "289:7:12"
                      }
                    ],
                    "id": 1384,
                    "name": "ParameterList",
                    "src": "288:9:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "falseBody": null
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1378,
                                  "type": "uint256",
                                  "value": "a"
                                },
                                "id": 1385,
                                "name": "Identifier",
                                "src": "529:1:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1386,
                                "name": "Literal",
                                "src": "534:1:12"
                              }
                            ],
                            "id": 1387,
                            "name": "BinaryOperation",
                            "src": "529:6:12"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "functionReturnParameters": 1384
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1388,
                                    "name": "Literal",
                                    "src": "558:1:12"
                                  }
                                ],
                                "id": 1389,
                                "name": "Return",
                                "src": "551:8:12"
                              }
                            ],
                            "id": 1390,
                            "name": "Block",
                            "src": "537:33:12"
                          }
                        ],
                        "id": 1391,
                        "name": "IfStatement",
                        "src": "525:45:12"
                      },
                      {
                        "attributes": {
                          "assignments": [
                            1393
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "c",
                              "scope": 1408,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1392,
                                "name": "ElementaryTypeName",
                                "src": "580:7:12"
                              }
                            ],
                            "id": 1393,
                            "name": "VariableDeclaration",
                            "src": "580:9:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1378,
                                  "type": "uint256",
                                  "value": "a"
                                },
                                "id": 1394,
                                "name": "Identifier",
                                "src": "592:1:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1380,
                                  "type": "uint256",
                                  "value": "b"
                                },
                                "id": 1395,
                                "name": "Identifier",
                                "src": "596:1:12"
                              }
                            ],
                            "id": 1396,
                            "name": "BinaryOperation",
                            "src": "592:5:12"
                          }
                        ],
                        "id": 1397,
                        "name": "VariableDeclarationStatement",
                        "src": "580:17:12"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1398,
                                "name": "Identifier",
                                "src": "607:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "/",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1393,
                                          "type": "uint256",
                                          "value": "c"
                                        },
                                        "id": 1399,
                                        "name": "Identifier",
                                        "src": "615:1:12"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1378,
                                          "type": "uint256",
                                          "value": "a"
                                        },
                                        "id": 1400,
                                        "name": "Identifier",
                                        "src": "619:1:12"
                                      }
                                    ],
                                    "id": 1401,
                                    "name": "BinaryOperation",
                                    "src": "615:5:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1380,
                                      "type": "uint256",
                                      "value": "b"
                                    },
                                    "id": 1402,
                                    "name": "Identifier",
                                    "src": "624:1:12"
                                  }
                                ],
                                "id": 1403,
                                "name": "BinaryOperation",
                                "src": "615:10:12"
                              }
                            ],
                            "id": 1404,
                            "name": "FunctionCall",
                            "src": "607:19:12"
                          }
                        ],
                        "id": 1405,
                        "name": "ExpressionStatement",
                        "src": "607:19:12"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1384
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1393,
                              "type": "uint256",
                              "value": "c"
                            },
                            "id": 1406,
                            "name": "Identifier",
                            "src": "644:1:12"
                          }
                        ],
                        "id": 1407,
                        "name": "Return",
                        "src": "637:8:12"
                      }
                    ],
                    "id": 1408,
                    "name": "Block",
                    "src": "298:354:12"
                  }
                ],
                "id": 1409,
                "name": "FunctionDefinition",
                "src": "231:421:12"
              },
              {
                "attributes": {
                  "documentation": "@dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "div",
                  "scope": 1502,
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "a",
                          "scope": 1433,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1410,
                            "name": "ElementaryTypeName",
                            "src": "795:7:12"
                          }
                        ],
                        "id": 1411,
                        "name": "VariableDeclaration",
                        "src": "795:9:12"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "b",
                          "scope": 1433,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1412,
                            "name": "ElementaryTypeName",
                            "src": "806:7:12"
                          }
                        ],
                        "id": 1413,
                        "name": "VariableDeclaration",
                        "src": "806:9:12"
                      }
                    ],
                    "id": 1414,
                    "name": "ParameterList",
                    "src": "794:22:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1433,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1415,
                            "name": "ElementaryTypeName",
                            "src": "840:7:12"
                          }
                        ],
                        "id": 1416,
                        "name": "VariableDeclaration",
                        "src": "840:7:12"
                      }
                    ],
                    "id": 1417,
                    "name": "ParameterList",
                    "src": "839:9:12"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1418,
                                "name": "Identifier",
                                "src": "925:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1413,
                                      "type": "uint256",
                                      "value": "b"
                                    },
                                    "id": 1419,
                                    "name": "Identifier",
                                    "src": "933:1:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1420,
                                    "name": "Literal",
                                    "src": "937:1:12"
                                  }
                                ],
                                "id": 1421,
                                "name": "BinaryOperation",
                                "src": "933:5:12"
                              }
                            ],
                            "id": 1422,
                            "name": "FunctionCall",
                            "src": "925:14:12"
                          }
                        ],
                        "id": 1423,
                        "name": "ExpressionStatement",
                        "src": "925:14:12"
                      },
                      {
                        "attributes": {
                          "assignments": [
                            1425
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "c",
                              "scope": 1432,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1424,
                                "name": "ElementaryTypeName",
                                "src": "949:7:12"
                              }
                            ],
                            "id": 1425,
                            "name": "VariableDeclaration",
                            "src": "949:9:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "/",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1411,
                                  "type": "uint256",
                                  "value": "a"
                                },
                                "id": 1426,
                                "name": "Identifier",
                                "src": "961:1:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1413,
                                  "type": "uint256",
                                  "value": "b"
                                },
                                "id": 1427,
                                "name": "Identifier",
                                "src": "965:1:12"
                              }
                            ],
                            "id": 1428,
                            "name": "BinaryOperation",
                            "src": "961:5:12"
                          }
                        ],
                        "id": 1429,
                        "name": "VariableDeclarationStatement",
                        "src": "949:17:12"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1417
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1425,
                              "type": "uint256",
                              "value": "c"
                            },
                            "id": 1430,
                            "name": "Identifier",
                            "src": "1070:1:12"
                          }
                        ],
                        "id": 1431,
                        "name": "Return",
                        "src": "1063:8:12"
                      }
                    ],
                    "id": 1432,
                    "name": "Block",
                    "src": "849:229:12"
                  }
                ],
                "id": 1433,
                "name": "FunctionDefinition",
                "src": "782:296:12"
              },
              {
                "attributes": {
                  "documentation": "@dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "sub",
                  "scope": 1502,
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "a",
                          "scope": 1457,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1434,
                            "name": "ElementaryTypeName",
                            "src": "1224:7:12"
                          }
                        ],
                        "id": 1435,
                        "name": "VariableDeclaration",
                        "src": "1224:9:12"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "b",
                          "scope": 1457,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1436,
                            "name": "ElementaryTypeName",
                            "src": "1235:7:12"
                          }
                        ],
                        "id": 1437,
                        "name": "VariableDeclaration",
                        "src": "1235:9:12"
                      }
                    ],
                    "id": 1438,
                    "name": "ParameterList",
                    "src": "1223:22:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1457,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1439,
                            "name": "ElementaryTypeName",
                            "src": "1269:7:12"
                          }
                        ],
                        "id": 1440,
                        "name": "VariableDeclaration",
                        "src": "1269:7:12"
                      }
                    ],
                    "id": 1441,
                    "name": "ParameterList",
                    "src": "1268:9:12"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1442,
                                "name": "Identifier",
                                "src": "1288:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1437,
                                      "type": "uint256",
                                      "value": "b"
                                    },
                                    "id": 1443,
                                    "name": "Identifier",
                                    "src": "1296:1:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1435,
                                      "type": "uint256",
                                      "value": "a"
                                    },
                                    "id": 1444,
                                    "name": "Identifier",
                                    "src": "1301:1:12"
                                  }
                                ],
                                "id": 1445,
                                "name": "BinaryOperation",
                                "src": "1296:6:12"
                              }
                            ],
                            "id": 1446,
                            "name": "FunctionCall",
                            "src": "1288:15:12"
                          }
                        ],
                        "id": 1447,
                        "name": "ExpressionStatement",
                        "src": "1288:15:12"
                      },
                      {
                        "attributes": {
                          "assignments": [
                            1449
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "c",
                              "scope": 1456,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1448,
                                "name": "ElementaryTypeName",
                                "src": "1313:7:12"
                              }
                            ],
                            "id": 1449,
                            "name": "VariableDeclaration",
                            "src": "1313:9:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "-",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1435,
                                  "type": "uint256",
                                  "value": "a"
                                },
                                "id": 1450,
                                "name": "Identifier",
                                "src": "1325:1:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1437,
                                  "type": "uint256",
                                  "value": "b"
                                },
                                "id": 1451,
                                "name": "Identifier",
                                "src": "1329:1:12"
                              }
                            ],
                            "id": 1452,
                            "name": "BinaryOperation",
                            "src": "1325:5:12"
                          }
                        ],
                        "id": 1453,
                        "name": "VariableDeclarationStatement",
                        "src": "1313:17:12"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1441
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1449,
                              "type": "uint256",
                              "value": "c"
                            },
                            "id": 1454,
                            "name": "Identifier",
                            "src": "1348:1:12"
                          }
                        ],
                        "id": 1455,
                        "name": "Return",
                        "src": "1341:8:12"
                      }
                    ],
                    "id": 1456,
                    "name": "Block",
                    "src": "1278:78:12"
                  }
                ],
                "id": 1457,
                "name": "FunctionDefinition",
                "src": "1211:145:12"
              },
              {
                "attributes": {
                  "documentation": "@dev Adds two unsigned integers, reverts on overflow.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "add",
                  "scope": 1502,
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "a",
                          "scope": 1481,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1458,
                            "name": "ElementaryTypeName",
                            "src": "1452:7:12"
                          }
                        ],
                        "id": 1459,
                        "name": "VariableDeclaration",
                        "src": "1452:9:12"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "b",
                          "scope": 1481,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1460,
                            "name": "ElementaryTypeName",
                            "src": "1463:7:12"
                          }
                        ],
                        "id": 1461,
                        "name": "VariableDeclaration",
                        "src": "1463:9:12"
                      }
                    ],
                    "id": 1462,
                    "name": "ParameterList",
                    "src": "1451:22:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1481,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1463,
                            "name": "ElementaryTypeName",
                            "src": "1497:7:12"
                          }
                        ],
                        "id": 1464,
                        "name": "VariableDeclaration",
                        "src": "1497:7:12"
                      }
                    ],
                    "id": 1465,
                    "name": "ParameterList",
                    "src": "1496:9:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            1467
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "c",
                              "scope": 1480,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1466,
                                "name": "ElementaryTypeName",
                                "src": "1516:7:12"
                              }
                            ],
                            "id": 1467,
                            "name": "VariableDeclaration",
                            "src": "1516:9:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1459,
                                  "type": "uint256",
                                  "value": "a"
                                },
                                "id": 1468,
                                "name": "Identifier",
                                "src": "1528:1:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1461,
                                  "type": "uint256",
                                  "value": "b"
                                },
                                "id": 1469,
                                "name": "Identifier",
                                "src": "1532:1:12"
                              }
                            ],
                            "id": 1470,
                            "name": "BinaryOperation",
                            "src": "1528:5:12"
                          }
                        ],
                        "id": 1471,
                        "name": "VariableDeclarationStatement",
                        "src": "1516:17:12"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1472,
                                "name": "Identifier",
                                "src": "1543:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1467,
                                      "type": "uint256",
                                      "value": "c"
                                    },
                                    "id": 1473,
                                    "name": "Identifier",
                                    "src": "1551:1:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1459,
                                      "type": "uint256",
                                      "value": "a"
                                    },
                                    "id": 1474,
                                    "name": "Identifier",
                                    "src": "1556:1:12"
                                  }
                                ],
                                "id": 1475,
                                "name": "BinaryOperation",
                                "src": "1551:6:12"
                              }
                            ],
                            "id": 1476,
                            "name": "FunctionCall",
                            "src": "1543:15:12"
                          }
                        ],
                        "id": 1477,
                        "name": "ExpressionStatement",
                        "src": "1543:15:12"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1465
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1467,
                              "type": "uint256",
                              "value": "c"
                            },
                            "id": 1478,
                            "name": "Identifier",
                            "src": "1576:1:12"
                          }
                        ],
                        "id": 1479,
                        "name": "Return",
                        "src": "1569:8:12"
                      }
                    ],
                    "id": 1480,
                    "name": "Block",
                    "src": "1506:78:12"
                  }
                ],
                "id": 1481,
                "name": "FunctionDefinition",
                "src": "1439:145:12"
              },
              {
                "attributes": {
                  "documentation": "@dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\nreverts when dividing by zero.",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [
                    null
                  ],
                  "name": "mod",
                  "scope": 1502,
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "a",
                          "scope": 1501,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1482,
                            "name": "ElementaryTypeName",
                            "src": "1752:7:12"
                          }
                        ],
                        "id": 1483,
                        "name": "VariableDeclaration",
                        "src": "1752:9:12"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "b",
                          "scope": 1501,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1484,
                            "name": "ElementaryTypeName",
                            "src": "1763:7:12"
                          }
                        ],
                        "id": 1485,
                        "name": "VariableDeclaration",
                        "src": "1763:9:12"
                      }
                    ],
                    "id": 1486,
                    "name": "ParameterList",
                    "src": "1751:22:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "",
                          "scope": 1501,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1487,
                            "name": "ElementaryTypeName",
                            "src": "1797:7:12"
                          }
                        ],
                        "id": 1488,
                        "name": "VariableDeclaration",
                        "src": "1797:7:12"
                      }
                    ],
                    "id": 1489,
                    "name": "ParameterList",
                    "src": "1796:9:12"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    1520,
                                    1521
                                  ],
                                  "referencedDeclaration": 1520,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 1490,
                                "name": "Identifier",
                                "src": "1816:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1485,
                                      "type": "uint256",
                                      "value": "b"
                                    },
                                    "id": 1491,
                                    "name": "Identifier",
                                    "src": "1824:1:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1492,
                                    "name": "Literal",
                                    "src": "1829:1:12"
                                  }
                                ],
                                "id": 1493,
                                "name": "BinaryOperation",
                                "src": "1824:6:12"
                              }
                            ],
                            "id": 1494,
                            "name": "FunctionCall",
                            "src": "1816:15:12"
                          }
                        ],
                        "id": 1495,
                        "name": "ExpressionStatement",
                        "src": "1816:15:12"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 1489
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "%",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1483,
                                  "type": "uint256",
                                  "value": "a"
                                },
                                "id": 1496,
                                "name": "Identifier",
                                "src": "1848:1:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1485,
                                  "type": "uint256",
                                  "value": "b"
                                },
                                "id": 1497,
                                "name": "Identifier",
                                "src": "1852:1:12"
                              }
                            ],
                            "id": 1498,
                            "name": "BinaryOperation",
                            "src": "1848:5:12"
                          }
                        ],
                        "id": 1499,
                        "name": "Return",
                        "src": "1841:12:12"
                      }
                    ],
                    "id": 1500,
                    "name": "Block",
                    "src": "1806:54:12"
                  }
                ],
                "id": 1501,
                "name": "FunctionDefinition",
                "src": "1739:121:12"
              }
            ],
            "id": 1502,
            "name": "ContractDefinition",
            "src": "125:1737:12"
          }
        ],
        "id": 1503,
        "name": "SourceUnit",
        "src": "0:1863:12"
      }
    }
  }
}