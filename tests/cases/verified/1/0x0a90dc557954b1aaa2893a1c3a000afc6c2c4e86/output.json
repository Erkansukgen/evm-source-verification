{
  "contracts": {
    "RhinuERC.sol": {
      "Context": {
        "abi": [],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "generatedSources": [],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {}
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [],
          "types": null
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "IERC20": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "generatedSources": [],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [],
          "types": null
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "IUniswapV2Factory": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "tokenA",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "tokenB",
                "type": "address"
              }
            ],
            "name": "createPair",
            "outputs": [
              {
                "internalType": "address",
                "name": "pair",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "generatedSources": [],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "createPair(address,address)": "c9c65396"
          }
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [],
          "types": null
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "IUniswapV2Router02": {
        "abi": [
          {
            "inputs": [],
            "name": "WETH",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amountTokenDesired",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amountTokenMin",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amountETHMin",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "addLiquidityETH",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "amountToken",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amountETH",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "liquidity",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "factory",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "amountIn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amountOutMin",
                "type": "uint256"
              },
              {
                "internalType": "address[]",
                "name": "path",
                "type": "address[]"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "generatedSources": [],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "WETH()": "ad5c4648",
            "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
            "factory()": "c45a0155",
            "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947"
          }
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [],
          "types": null
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "Ownable": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "    /* \"RhinuERC.sol\":3147:3869  contract Ownable is Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"RhinuERC.sol\":3340:3494  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RhinuERC.sol\":3366:3383  address msgSender */\n  0x00\n    /* \"RhinuERC.sol\":3409:3427  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"RhinuERC.sol\":1300:1310  msg.sender */\n  caller\n    /* \"RhinuERC.sol\":3409:3427  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"RhinuERC.sol\":3443:3486  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"RhinuERC.sol\":1300:1310  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"RhinuERC.sol\":3443:3486  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"RhinuERC.sol\":3366:3383  address msgSender */\n  dup3\n  swap1\n    /* \"RhinuERC.sol\":3443:3486  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"RhinuERC.sol\":3340:3494  constructor () {\r... */\n  pop\n    /* \"RhinuERC.sol\":3147:3869  contract Ownable is Context {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RhinuERC.sol\":3147:3869  contract Ownable is Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RhinuERC.sol\":3716:3864  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n    tag_4:\n        /* \"RhinuERC.sol\":3540:3547  address */\n      0x00\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      sload\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n      add\n      swap1\n      return\n        /* \"RhinuERC.sol\":3716:3864  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_6:\n        /* \"RhinuERC.sol\":3629:3635  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":3629:3651  _owner == _msgSender() */\n      eq\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":424:426   */\n      0x20\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":406:427   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":443:461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":436:466   */\n      mstore\n        /* \"#utility.yul\":502:536   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":482:500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":475:537   */\n      mstore\n        /* \"#utility.yul\":554:572   */\n      0x64\n      add\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"RhinuERC.sol\":3823:3824  0 */\n      0x00\n        /* \"RhinuERC.sol\":3807:3813  _owner */\n      dup1\n      sload\n        /* \"RhinuERC.sol\":3786:3826  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":3807:3813  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"RhinuERC.sol\":3786:3826  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"RhinuERC.sol\":3823:3824  0 */\n      dup4\n      swap1\n        /* \"RhinuERC.sol\":3786:3826  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"RhinuERC.sol\":3854:3855  0 */\n      0x00\n        /* \"RhinuERC.sol\":3837:3856  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":3716:3864  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122084094abfaab00b565c12d63148887b915e7edf62ed3b0c10c7a27cd9d6fd73eb64736f6c63430008040033\n}\n",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610142806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063715018a61461003b5780638da5cb5b14610045575b600080fd5b610043610064565b005b600054604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b031633146100c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b031916905556fea264697066735822122084094abfaab00b565c12d63148887b915e7edf62ed3b0c10c7a27cd9d6fd73eb64736f6c63430008040033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x142 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 MULMOD 0x4A 0xBF 0xAA 0xB0 SIGNEXTEND JUMP 0x5C SLT 0xD6 BALANCE 0x48 DUP9 PUSH28 0x915E7EDF62ED3B0C10C7A27CD9D6FD73EB64736F6C63430008040033 ",
            "sourceMap": "3147:722:0:-:0;;;3340:154;;;;;;;;;-1:-1:-1;3366:17:0;3409:18;;-1:-1:-1;;;;;;3409:18:0;1300:10;3409:18;;;;;3443:43;;1300:10;;;;3443:43;;3366:17;;3443:43;3340:154;3147:722;;;;;;"
          },
          "deployedBytecode": {
            "generatedSources": [
              {
                "ast": {
                  "nodeType": "YulBlock",
                  "src": "0:580:1",
                  "statements": [
                    {
                      "nodeType": "YulBlock",
                      "src": "6:3:1",
                      "statements": []
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "115:102:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "125:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "137:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "148:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "133:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "133:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "125:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "182:6:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "198:3:1",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "203:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "194:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "194:11:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "207:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "190:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "190:19:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "178:32:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "160:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "160:51:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "160:51:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "84:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "95:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "106:4:1",
                          "type": ""
                        }
                      ],
                      "src": "14:203:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "396:182:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "424:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "406:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "406:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "447:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "458:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "443:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "443:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "463:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "436:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "436:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "486:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "497:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "482:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "482:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "502:34:1",
                                  "type": "",
                                  "value": "Ownable: caller is not the owner"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "475:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "475:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "475:62:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "546:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "558:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "569:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "554:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "554:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "546:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "373:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "387:4:1",
                          "type": ""
                        }
                      ],
                      "src": "222:356:1"
                    }
                  ]
                },
                "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
                "id": 1,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063715018a61461003b5780638da5cb5b14610045575b600080fd5b610043610064565b005b600054604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b031633146100c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b031916905556fea264697066735822122084094abfaab00b565c12d63148887b915e7edf62ed3b0c10c7a27cd9d6fd73eb64736f6c63430008040033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 MULMOD 0x4A 0xBF 0xAA 0xB0 SIGNEXTEND JUMP 0x5C SLT 0xD6 BALANCE 0x48 DUP9 PUSH28 0x915E7EDF62ED3B0C10C7A27CD9D6FD73EB64736F6C63430008040033 ",
            "sourceMap": "3147:722:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3716:148;;;:::i;:::-;;3502:79;3540:7;3567:6;3502:79;;;-1:-1:-1;;;;;3567:6:0;;;160:51:1;;3502:79:0;;;;;148:2:1;3502:79:0;;;3716:148;3629:6;;-1:-1:-1;;;;;3629:6:0;1300:10;3629:22;3621:67;;;;-1:-1:-1;;;3621:67:0;;424:2:1;3621:67:0;;;406:21:1;;;443:18;;;436:30;502:34;482:18;;;475:62;554:18;;3621:67:0;;;;;;;;3823:1:::1;3807:6:::0;;3786:40:::1;::::0;-1:-1:-1;;;;;3807:6:0;;::::1;::::0;3786:40:::1;::::0;3823:1;;3786:40:::1;3854:1;3837:19:::0;;-1:-1:-1;;;;;;3837:19:0::1;::::0;;3716:148::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "64400",
              "executionCost": "22490",
              "totalCost": "86890"
            },
            "external": {
              "owner()": "992",
              "renounceOwnership()": "24143"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 3147,
                "end": 3869,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "CALLVALUE",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "ISZERO",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "JUMPI",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "REVERT",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "tag",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP",
                "source": -1
              },
              {
                "begin": 3366,
                "end": 3383,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "CALLER",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "MLOAD",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "PUSH",
                "source": 0,
                "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3366,
                "end": 3383,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 3366,
                "end": 3383,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "LOG3",
                "source": 0
              },
              {
                "begin": 3340,
                "end": 3494,
                "name": "POP",
                "source": 0
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "PUSH #[$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "PUSH [$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "CODECOPY",
                "source": 0
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 3147,
                "end": 3869,
                "name": "RETURN",
                "source": 0
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a264697066735822122084094abfaab00b565c12d63148887b915e7edf62ed3b0c10c7a27cd9d6fd73eb64736f6c63430008040033",
                ".code": [
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "80"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "tag",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "CALLDATALOAD",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "SHR",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "715018A6"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "3"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8DA5CB5B"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "tag",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3147,
                    "end": 3869,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "tag",
                    "source": 0,
                    "value": "3"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "tag",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "STOP",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "tag",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3540,
                    "end": 3547,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 160,
                    "end": 211,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 160,
                    "end": 211,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 148,
                    "end": 150,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "RETURN",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "tag",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3651,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "14"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 424,
                    "end": 426,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 406,
                    "end": 427,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 406,
                    "end": 427,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 406,
                    "end": 427,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 443,
                    "end": 461,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 443,
                    "end": 461,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 443,
                    "end": 461,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 436,
                    "end": 466,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 502,
                    "end": 536,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
                  },
                  {
                    "begin": 482,
                    "end": 500,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 482,
                    "end": 500,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 482,
                    "end": 500,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 475,
                    "end": 537,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 554,
                    "end": 572,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 554,
                    "end": 572,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "14"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3823,
                    "end": 3824,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3823,
                    "end": 3824,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 3823,
                    "end": 3824,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "LOG3",
                    "source": 0
                  },
                  {
                    "begin": 3854,
                    "end": 3855,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6"
          }
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [
            {
              "astId": 228,
              "contract": "RhinuERC.sol:Ownable",
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address"
            },
            {
              "astId": 230,
              "contract": "RhinuERC.sol:Ownable",
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address"
            }
          ],
          "types": {
            "t_address": {
              "encoding": "inplace",
              "label": "address",
              "numberOfBytes": "20"
            }
          }
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "RhinuERC": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "_maxTxAmount",
                "type": "uint256"
              }
            ],
            "name": "MaxTxAmountUpdated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "notbot",
                "type": "address"
              }
            ],
            "name": "delBot",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "manualsend",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "manualswap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "openTrading",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address[]",
                "name": "bots_",
                "type": "address[]"
              }
            ],
            "name": "setBots",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bool",
                "name": "onoff",
                "type": "bool"
              }
            ],
            "name": "setCooldownEnabled",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "    /* \"RhinuERC.sol\":4637:15007  contract RhinuERC is Context, IERC20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"RhinuERC.sol\":5206:5219  MAX % _tTotal */\n  tag_1\n    /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n  0x033b2e3c9fd0803ce8000000\n  not(0x00)\n    /* \"RhinuERC.sol\":5206:5219  MAX % _tTotal */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"RhinuERC.sol\":5199:5220  MAX - (MAX % _tTotal) */\n  tag_3\n  swap1\n  not(0x00)\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"RhinuERC.sol\":5172:5221  uint256 private _rTotal = (MAX - (MAX % _tTotal)) */\n  0x08\n  sstore\n    /* \"RhinuERC.sol\":5688:5715  bool private inSwap = false */\n  0x0f\n  dup1\n  sload\n  not(shl(0xa8, 0xffffff))\n    /* \"RhinuERC.sol\":5761:5797  bool private cooldownEnabled = false */\n  and\n  swap1\n  sstore\n    /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"RhinuERC.sol\":5804:5842  uint256 private _maxTxAmount = _tTotal */\n  0x10\n  sstore\n    /* \"RhinuERC.sol\":5995:6522  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n    /* \"RhinuERC.sol\":3366:3383  address msgSender */\n  0x00\n    /* \"RhinuERC.sol\":3409:3427  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"RhinuERC.sol\":1300:1310  msg.sender */\n  caller\n    /* \"RhinuERC.sol\":3409:3427  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"RhinuERC.sol\":3443:3486  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"RhinuERC.sol\":1300:1310  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"RhinuERC.sol\":3443:3486  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"RhinuERC.sol\":3366:3383  address msgSender */\n  dup3\n  swap1\n    /* \"RhinuERC.sol\":3443:3486  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"RhinuERC.sol\":6021:6036  _feeAddrWallet1 */\n  0x0c\n    /* \"RhinuERC.sol\":6021:6090  _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"RhinuERC.sol\":6047:6089  0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2 */\n  0x0efffe4828ddd40166bbb13e3fbe089f622ed0b2\n    /* \"RhinuERC.sol\":6021:6090  _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2) */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"RhinuERC.sol\":6101:6116  _feeAddrWallet2 */\n  0x0d\n    /* \"RhinuERC.sol\":6101:6170  _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"RhinuERC.sol\":6127:6169  0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0 */\n  0xd6f8aaf7f8d4eede2c7b2cb38709c13755ae27d0\n    /* \"RhinuERC.sol\":6101:6170  _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0) */\n  or\n  swap1\n  sstore\n    /* \"RhinuERC.sol\":6205:6212  _rTotal */\n  sload(0x08)\n    /* \"RhinuERC.sol\":6181:6188  _rOwned */\n  0x02\n    /* \"RhinuERC.sol\":6021:6036  _feeAddrWallet1 */\n  0x00\n    /* \"RhinuERC.sol\":6189:6201  _msgSender() */\n  tag_12\n    /* \"RhinuERC.sol\":1300:1310  msg.sender */\n  caller\n  swap1\n    /* \"RhinuERC.sol\":1220:1318  function _msgSender() internal view virtual returns (address) {\r... */\n  jump\n    /* \"RhinuERC.sol\":6189:6201  _msgSender() */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RhinuERC.sol\":6181:6202  _rOwned[_msgSender()] */\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"RhinuERC.sol\":6181:6212  _rOwned[_msgSender()] = _rTotal */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"RhinuERC.sol\":6253:6257  true */\n  0x01\n    /* \"RhinuERC.sol\":6223:6241  _isExcludedFromFee */\n  0x05\n    /* \"RhinuERC.sol\":6223:6250  _isExcludedFromFee[owner()] */\n  0x00\n    /* \"RhinuERC.sol\":6242:6249  owner() */\n  tag_13\n    /* \"RhinuERC.sol\":6242:6247  owner */\n  shl(0x20, tag_14)\n    /* \"RhinuERC.sol\":6242:6249  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RhinuERC.sol\":6223:6250  _isExcludedFromFee[owner()] */\n  swap1\n  dup2\n  and\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x40\n  swap2\n  dup3\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"RhinuERC.sol\":6223:6257  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  swap6\n  iszero\n  iszero\n  not(0xff)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"RhinuERC.sol\":6295:6299  this */\n  address\n    /* \"RhinuERC.sol\":6268:6301  _isExcludedFromFee[address(this)] */\n  dup2\n  mstore\n    /* \"RhinuERC.sol\":6268:6286  _isExcludedFromFee */\n  0x05\n    /* \"RhinuERC.sol\":6268:6301  _isExcludedFromFee[address(this)] */\n  swap1\n  swap4\n  mstore\n  dup2\n  dup4\n  keccak256\n    /* \"RhinuERC.sol\":6268:6308  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  dup6\n  and\n    /* \"RhinuERC.sol\":6223:6257  _isExcludedFromFee[owner()] = true */\n  0x01\n    /* \"RhinuERC.sol\":6268:6308  _isExcludedFromFee[address(this)] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"RhinuERC.sol\":6338:6353  _feeAddrWallet1 */\n  sload(0x0c)\n  dup3\n  and\n    /* \"RhinuERC.sol\":6319:6354  _isExcludedFromFee[_feeAddrWallet1] */\n  dup5\n  mstore\n  dup3\n  dup5\n  keccak256\n    /* \"RhinuERC.sol\":6319:6361  _isExcludedFromFee[_feeAddrWallet1] = true */\n  dup1\n  sload\n  dup7\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"RhinuERC.sol\":6391:6406  _feeAddrWallet2 */\n  sload(0x0d)\n  swap1\n  swap2\n  and\n    /* \"RhinuERC.sol\":6372:6407  _isExcludedFromFee[_feeAddrWallet2] */\n  dup4\n  mstore\n  swap2\n  keccak256\n    /* \"RhinuERC.sol\":6372:6414  _isExcludedFromFee[_feeAddrWallet2] = true */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"RhinuERC.sol\":6492:6504  _msgSender() */\n  tag_15\n    /* \"RhinuERC.sol\":1300:1310  msg.sender */\n  caller\n  swap1\n    /* \"RhinuERC.sol\":1220:1318  function _msgSender() internal view virtual returns (address) {\r... */\n  jump\n    /* \"RhinuERC.sol\":6492:6504  _msgSender() */\ntag_15:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RhinuERC.sol\":6430:6514  Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal) */\n  and\n    /* \"RhinuERC.sol\":6447:6489  0x1F135511975B0D63ce9e5AD1F123903A6fC5319d */\n  0x1f135511975b0d63ce9e5ad1f123903a6fc5319d\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RhinuERC.sol\":6430:6514  Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"RhinuERC.sol\":6430:6514  Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal) */\n  mload(0x40)\n  tag_16\n  swap2\n    /* \"#utility.yul\":160:185   */\n  dup2\n  mstore\n    /* \"#utility.yul\":148:150   */\n  0x20\n    /* \"#utility.yul\":133:151   */\n  add\n  swap1\n    /* \"#utility.yul\":115:191   */\n  jump\n    /* \"RhinuERC.sol\":6430:6514  Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal) */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"RhinuERC.sol\":4637:15007  contract RhinuERC is Context, IERC20, Ownable {\r... */\n  jump(tag_21)\n    /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\ntag_14:\n    /* \"RhinuERC.sol\":3540:3547  address */\n  0x00\n    /* \"RhinuERC.sol\":3567:3573  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n  jump\t// out\n    /* \"#utility.yul\":196:424   */\ntag_4:\n    /* \"#utility.yul\":236:240   */\n  0x00\n    /* \"#utility.yul\":264:265   */\n  dup3\n    /* \"#utility.yul\":261:262   */\n  dup3\n    /* \"#utility.yul\":258:266   */\n  lt\n    /* \"#utility.yul\":255:257   */\n  iszero\n  tag_24\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":289:323   */\n  dup2\n  mstore\n    /* \"#utility.yul\":346:350   */\n  0x11\n    /* \"#utility.yul\":343:344   */\n  0x04\n    /* \"#utility.yul\":336:351   */\n  mstore\n    /* \"#utility.yul\":377:381   */\n  0x24\n    /* \"#utility.yul\":296:300   */\n  dup2\n    /* \"#utility.yul\":364:382   */\n  revert\n    /* \"#utility.yul\":255:257   */\ntag_24:\n  pop\n    /* \"#utility.yul\":409:418   */\n  sub\n  swap1\n    /* \"#utility.yul\":245:424   */\n  jump\t// out\n    /* \"#utility.yul\":429:638   */\ntag_2:\n    /* \"#utility.yul\":461:462   */\n  0x00\n    /* \"#utility.yul\":487:488   */\n  dup3\n    /* \"#utility.yul\":477:479   */\n  tag_26\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":512:543   */\n  dup2\n  mstore\n    /* \"#utility.yul\":566:570   */\n  0x12\n    /* \"#utility.yul\":563:564   */\n  0x04\n    /* \"#utility.yul\":556:571   */\n  mstore\n    /* \"#utility.yul\":594:598   */\n  0x24\n    /* \"#utility.yul\":519:520   */\n  dup2\n    /* \"#utility.yul\":584:599   */\n  revert\n    /* \"#utility.yul\":477:479   */\ntag_26:\n  pop\n    /* \"#utility.yul\":623:632   */\n  mod\n  swap1\n    /* \"#utility.yul\":467:638   */\n  jump\t// out\ntag_21:\n    /* \"RhinuERC.sol\":4637:15007  contract RhinuERC is Context, IERC20, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RhinuERC.sol\":4637:15007  contract RhinuERC is Context, IERC20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb515566a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc3c8cd80\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc9567bf9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x273123b7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x273123b7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5932ead1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6fc3eaec\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RhinuERC.sol\":6530:6613  function name() public pure returns (string memory) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n        /* \"RhinuERC.sol\":6600:6605  _name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x05\n      dup2\n      mstore\n      shl(0xd8, 0x5248494e55)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"RhinuERC.sol\":6530:6613  function name() public pure returns (string memory) {\r... */\n      swap1\n      mload\n      tag_28\n      swap2\n        /* \"RhinuERC.sol\":6600:6605  _name */\n      swap1\n        /* \"RhinuERC.sol\":6530:6613  function name() public pure returns (string memory) {\r... */\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RhinuERC.sol\":7382:7543  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":5477:5491   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5470:5492   */\n      iszero\n        /* \"#utility.yul\":5452:5493   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5440:5442   */\n      0x20\n        /* \"#utility.yul\":5425:5443   */\n      add\n        /* \"RhinuERC.sol\":7382:7543  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n      tag_28\n        /* \"#utility.yul\":5407:5499   */\n      jump\n        /* \"RhinuERC.sol\":6807:6902  function totalSupply() public pure override returns (uint256) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n        /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"RhinuERC.sol\":6807:6902  function totalSupply() public pure override returns (uint256) {\r... */\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":10168:10193   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10156:10158   */\n      0x20\n        /* \"#utility.yul\":10141:10159   */\n      add\n        /* \"RhinuERC.sol\":6807:6902  function totalSupply() public pure override returns (uint256) {\r... */\n      tag_28\n        /* \"#utility.yul\":10123:10199   */\n      jump\n        /* \"RhinuERC.sol\":7551:7864  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_31\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"RhinuERC.sol\":11734:11822  function delBot(address notbot) public onlyOwner {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"RhinuERC.sol\":6716:6799  function decimals() public pure returns (uint8) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      mload(0x40)\n        /* \"RhinuERC.sol\":5558:5559  9 */\n      0x09\n        /* \"#utility.yul\":11334:11370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11322:11324   */\n      0x20\n        /* \"#utility.yul\":11307:11325   */\n      add\n        /* \"RhinuERC.sol\":6716:6799  function decimals() public pure returns (uint8) {\r... */\n      tag_28\n        /* \"#utility.yul\":11289:11376   */\n      jump\n        /* \"RhinuERC.sol\":7872:7975  function setCooldownEnabled(bool onoff) external onlyOwner() {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_49\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"RhinuERC.sol\":13111:13305  function manualsend() external {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_49\n      tag_65\n      jump\t// in\n        /* \"RhinuERC.sol\":6910:7048  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_38\n      tag_68\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"RhinuERC.sol\":3716:3864  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_49\n      tag_73\n      jump\t// in\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n        /* \"RhinuERC.sol\":3540:3547  address */\n      0x00\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      sload\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4050:4101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4038:4040   */\n      0x20\n        /* \"#utility.yul\":4023:4041   */\n      add\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n      tag_28\n        /* \"#utility.yul\":4005:4107   */\n      jump\n        /* \"RhinuERC.sol\":7056:7223  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_31\n      tag_85\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"RhinuERC.sol\":11558:11722  function setBots(address[] memory bots_) public onlyOwner {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_49\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"RhinuERC.sol\":12904:13099  function manualswap() external {\r... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_49\n      tag_95\n      jump\t// in\n        /* \"RhinuERC.sol\":10724:11546  function openTrading() external onlyOwner() {\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_49\n      tag_98\n      jump\t// in\n        /* \"RhinuERC.sol\":7231:7374  function allowance(address owner, address spender) public view override returns (uint256) {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_38\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":7339:7357  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"RhinuERC.sol\":7312:7319  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":7339:7357  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":7339:7350  _allowances */\n      0x04\n        /* \"RhinuERC.sol\":7339:7357  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RhinuERC.sol\":7339:7366  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"RhinuERC.sol\":7231:7374  function allowance(address owner, address spender) public view override returns (uint256) {\r... */\n      jump\n        /* \"RhinuERC.sol\":7382:7543  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n    tag_34:\n        /* \"RhinuERC.sol\":7457:7461  bool */\n      0x00\n        /* \"RhinuERC.sol\":7474:7513  _approve(_msgSender(), spender, amount) */\n      tag_107\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":7497:7504  spender */\n      dup5\n        /* \"RhinuERC.sol\":7506:7512  amount */\n      dup5\n        /* \"RhinuERC.sol\":7474:7482  _approve */\n      tag_110\n        /* \"RhinuERC.sol\":7474:7513  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_107:\n      pop\n        /* \"RhinuERC.sol\":7531:7535  true */\n      0x01\n        /* \"RhinuERC.sol\":7382:7543  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n    tag_106:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":7551:7864  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_46:\n        /* \"RhinuERC.sol\":7649:7653  bool */\n      0x00\n        /* \"RhinuERC.sol\":7666:7702  _transfer(sender, recipient, amount) */\n      tag_113\n        /* \"RhinuERC.sol\":7676:7682  sender */\n      dup5\n        /* \"RhinuERC.sol\":7684:7693  recipient */\n      dup5\n        /* \"RhinuERC.sol\":7695:7701  amount */\n      dup5\n        /* \"RhinuERC.sol\":7666:7675  _transfer */\n      tag_114\n        /* \"RhinuERC.sol\":7666:7702  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_113:\n        /* \"RhinuERC.sol\":7713:7834  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_115\n        /* \"RhinuERC.sol\":7722:7728  sender */\n      dup5\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":7744:7833  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_117\n        /* \"RhinuERC.sol\":7782:7788  amount */\n      dup6\n        /* \"RhinuERC.sol\":7744:7833  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":7744:7763  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":7744:7755  _allowances */\n      0x04\n        /* \"RhinuERC.sol\":7744:7763  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":7744:7777  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"RhinuERC.sol\":7744:7781  _allowances[sender][_msgSender()].sub */\n      tag_119\n        /* \"RhinuERC.sol\":7744:7833  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_117:\n        /* \"RhinuERC.sol\":7713:7721  _approve */\n      tag_110\n        /* \"RhinuERC.sol\":7713:7834  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"RhinuERC.sol\":7852:7856  true */\n      0x01\n        /* \"RhinuERC.sol\":7551:7864  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":11734:11822  function delBot(address notbot) public onlyOwner {\r... */\n    tag_52:\n        /* \"RhinuERC.sol\":3629:3635  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":3629:3651  _owner == _msgSender() */\n      eq\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":11794:11806  bots[notbot] */\n      and\n        /* \"RhinuERC.sol\":11809:11814  false */\n      0x00\n        /* \"RhinuERC.sol\":11794:11806  bots[notbot] */\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":11794:11798  bots */\n      0x06\n        /* \"RhinuERC.sol\":11794:11806  bots[notbot] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"RhinuERC.sol\":11794:11814  bots[notbot] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":11734:11822  function delBot(address notbot) public onlyOwner {\r... */\n      jump\t// out\n        /* \"RhinuERC.sol\":7872:7975  function setCooldownEnabled(bool onoff) external onlyOwner() {\r... */\n    tag_62:\n        /* \"RhinuERC.sol\":3629:3635  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":3629:3651  _owner == _msgSender() */\n      eq\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_129:\n        /* \"RhinuERC.sol\":7944:7959  cooldownEnabled */\n      0x0f\n        /* \"RhinuERC.sol\":7944:7967  cooldownEnabled = onoff */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xb8, 0x01)\n      mul\n      not(shl(0xb8, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":7872:7975  function setCooldownEnabled(bool onoff) external onlyOwner() {\r... */\n      jump\t// out\n        /* \"RhinuERC.sol\":13111:13305  function manualsend() external {\r... */\n    tag_65:\n        /* \"RhinuERC.sol\":13177:13192  _feeAddrWallet1 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":13161:13192  _msgSender() == _feeAddrWallet1 */\n      and\n      eq\n        /* \"RhinuERC.sol\":13153:13193  require(_msgSender() == _feeAddrWallet1) */\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n        /* \"RhinuERC.sol\":13233:13254  address(this).balance */\n      selfbalance\n        /* \"RhinuERC.sol\":13265:13297  sendETHToFee(contractETHBalance) */\n      tag_135\n        /* \"RhinuERC.sol\":13233:13254  address(this).balance */\n      dup2\n        /* \"RhinuERC.sol\":13265:13277  sendETHToFee */\n      tag_136\n        /* \"RhinuERC.sol\":13265:13297  sendETHToFee(contractETHBalance) */\n      jump\t// in\n    tag_135:\n        /* \"RhinuERC.sol\":13111:13305  function manualsend() external {\r... */\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":6910:7048  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":7023:7039  _rOwned[account] */\n      dup2\n      and\n        /* \"RhinuERC.sol\":6976:6983  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":7023:7039  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":7023:7030  _rOwned */\n      0x02\n        /* \"RhinuERC.sol\":7023:7039  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"RhinuERC.sol\":7003:7040  tokenFromReflection(_rOwned[account]) */\n      tag_106\n      swap1\n        /* \"RhinuERC.sol\":7003:7022  tokenFromReflection */\n      tag_139\n        /* \"RhinuERC.sol\":7003:7040  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n        /* \"RhinuERC.sol\":3716:3864  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_73:\n        /* \"RhinuERC.sol\":3629:3635  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":3629:3651  _owner == _msgSender() */\n      eq\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_142:\n        /* \"RhinuERC.sol\":3823:3824  0 */\n      0x00\n        /* \"RhinuERC.sol\":3807:3813  _owner */\n      dup1\n      sload\n        /* \"RhinuERC.sol\":3786:3826  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":3807:3813  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"RhinuERC.sol\":3786:3826  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"RhinuERC.sol\":3823:3824  0 */\n      dup4\n      swap1\n        /* \"RhinuERC.sol\":3786:3826  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"RhinuERC.sol\":3854:3855  0 */\n      0x00\n        /* \"RhinuERC.sol\":3837:3856  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":3716:3864  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"RhinuERC.sol\":7056:7223  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_86:\n        /* \"RhinuERC.sol\":7134:7138  bool */\n      0x00\n        /* \"RhinuERC.sol\":7151:7193  _transfer(_msgSender(), recipient, amount) */\n      tag_107\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":7175:7184  recipient */\n      dup5\n        /* \"RhinuERC.sol\":7186:7192  amount */\n      dup5\n        /* \"RhinuERC.sol\":7151:7160  _transfer */\n      tag_114\n        /* \"RhinuERC.sol\":7151:7193  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"RhinuERC.sol\":11558:11722  function setBots(address[] memory bots_) public onlyOwner {\r... */\n    tag_92:\n        /* \"RhinuERC.sol\":3629:3635  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":3629:3651  _owner == _msgSender() */\n      eq\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_152:\n        /* \"RhinuERC.sol\":11632:11638  uint i */\n      0x00\n        /* \"RhinuERC.sol\":11627:11715  for (uint i = 0; i < bots_.length; i++) {\r... */\n    tag_155:\n        /* \"RhinuERC.sol\":11648:11653  bots_ */\n      dup2\n        /* \"RhinuERC.sol\":11648:11660  bots_.length */\n      mload\n        /* \"RhinuERC.sol\":11644:11645  i */\n      dup2\n        /* \"RhinuERC.sol\":11644:11660  i < bots_.length */\n      lt\n        /* \"RhinuERC.sol\":11627:11715  for (uint i = 0; i < bots_.length; i++) {\r... */\n      iszero\n      tag_156\n      jumpi\n        /* \"RhinuERC.sol\":11699:11703  true */\n      0x01\n        /* \"RhinuERC.sol\":11682:11686  bots */\n      0x06\n        /* \"RhinuERC.sol\":11682:11696  bots[bots_[i]] */\n      0x00\n        /* \"RhinuERC.sol\":11687:11692  bots_ */\n      dup5\n        /* \"RhinuERC.sol\":11693:11694  i */\n      dup5\n        /* \"RhinuERC.sol\":11687:11695  bots_[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_158:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":11682:11696  bots[bots_[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"RhinuERC.sol\":11682:11703  bots[bots_[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":11662:11665  i++ */\n      dup1\n      tag_159\n      dup2\n      tag_160\n      jump\t// in\n    tag_159:\n      swap2\n      pop\n      pop\n        /* \"RhinuERC.sol\":11627:11715  for (uint i = 0; i < bots_.length; i++) {\r... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"RhinuERC.sol\":11558:11722  function setBots(address[] memory bots_) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":12904:13099  function manualswap() external {\r... */\n    tag_95:\n        /* \"RhinuERC.sol\":12970:12985  _feeAddrWallet1 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":12954:12985  _msgSender() == _feeAddrWallet1 */\n      and\n      eq\n        /* \"RhinuERC.sol\":12946:12986  require(_msgSender() == _feeAddrWallet1) */\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n        /* \"RhinuERC.sol\":12997:13020  uint256 contractBalance */\n      0x00\n        /* \"RhinuERC.sol\":13023:13047  balanceOf(address(this)) */\n      tag_164\n        /* \"RhinuERC.sol\":13041:13045  this */\n      address\n        /* \"RhinuERC.sol\":13023:13032  balanceOf */\n      tag_69\n        /* \"RhinuERC.sol\":13023:13047  balanceOf(address(this)) */\n      jump\t// in\n    tag_164:\n        /* \"RhinuERC.sol\":12997:13047  uint256 contractBalance = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":13058:13091  swapTokensForEth(contractBalance) */\n      tag_135\n        /* \"RhinuERC.sol\":13075:13090  contractBalance */\n      dup2\n        /* \"RhinuERC.sol\":13058:13074  swapTokensForEth */\n      tag_166\n        /* \"RhinuERC.sol\":13058:13091  swapTokensForEth(contractBalance) */\n      jump\t// in\n        /* \"RhinuERC.sol\":10724:11546  function openTrading() external onlyOwner() {\r... */\n    tag_98:\n        /* \"RhinuERC.sol\":3629:3635  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"RhinuERC.sol\":1300:1310  msg.sender */\n      caller\n        /* \"RhinuERC.sol\":3629:3651  _owner == _msgSender() */\n      eq\n        /* \"RhinuERC.sol\":3621:3688  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_169:\n        /* \"RhinuERC.sol\":10788:10799  tradingOpen */\n      sload(0x0f)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"RhinuERC.sol\":10787:10799  !tradingOpen */\n      iszero\n        /* \"RhinuERC.sol\":10779:10826  require(!tradingOpen,\"trading is already open\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9872:9874   */\n      0x20\n        /* \"RhinuERC.sol\":10779:10826  require(!tradingOpen,\"trading is already open\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9854:9875   */\n      mstore\n        /* \"#utility.yul\":9911:9913   */\n      0x17\n        /* \"#utility.yul\":9891:9909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9884:9914   */\n      mstore\n        /* \"#utility.yul\":9950:9975   */\n      0x74726164696e6720697320616c7265616479206f70656e000000000000000000\n        /* \"#utility.yul\":9930:9948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9923:9976   */\n      mstore\n        /* \"#utility.yul\":9993:10011   */\n      0x64\n      add\n        /* \"RhinuERC.sol\":10779:10826  require(!tradingOpen,\"trading is already open\") */\n      tag_123\n        /* \"#utility.yul\":9844:10017   */\n      jump\n        /* \"RhinuERC.sol\":10779:10826  require(!tradingOpen,\"trading is already open\") */\n    tag_172:\n        /* \"RhinuERC.sol\":10948:10963  uniswapV2Router */\n      0x0e\n        /* \"RhinuERC.sol\":10948:10982  uniswapV2Router = _uniswapV2Router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"RhinuERC.sol\":10894:10936  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n      0x7a250d5630b4cf539739df2c5dacb4c659f2488d\n        /* \"RhinuERC.sol\":10948:10982  uniswapV2Router = _uniswapV2Router */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"RhinuERC.sol\":10993:11051  _approve(address(this), address(uniswapV2Router), _tTotal) */\n      tag_175\n        /* \"RhinuERC.sol\":11010:11014  this */\n      address\n        /* \"RhinuERC.sol\":10894:10936  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n      dup3\n        /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"RhinuERC.sol\":10993:11001  _approve */\n      tag_110\n        /* \"RhinuERC.sol\":10993:11051  _approve(address(this), address(uniswapV2Router), _tTotal) */\n      jump\t// in\n    tag_175:\n        /* \"RhinuERC.sol\":11096:11112  _uniswapV2Router */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":11096:11120  _uniswapV2Router.factory */\n      and\n      0xc45a0155\n        /* \"RhinuERC.sol\":11096:11122  _uniswapV2Router.factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":11078:11134  IUniswapV2Factory(_uniswapV2Router.factory()).createPair */\n      and\n      0xc9c65396\n        /* \"RhinuERC.sol\":11143:11147  this */\n      address\n        /* \"RhinuERC.sol\":11150:11166  _uniswapV2Router */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":11150:11171  _uniswapV2Router.WETH */\n      and\n      0xad5c4648\n        /* \"RhinuERC.sol\":11150:11173  _uniswapV2Router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_184:\n        /* \"RhinuERC.sol\":11078:11174  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4342:4357   */\n      swap3\n      dup4\n      and\n        /* \"RhinuERC.sol\":11078:11174  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4324:4358   */\n      mstore\n        /* \"#utility.yul\":4394:4409   */\n      swap2\n      and\n        /* \"#utility.yul\":4374:4392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4367:4410   */\n      mstore\n        /* \"#utility.yul\":4259:4277   */\n      0x44\n      add\n        /* \"RhinuERC.sol\":11078:11174  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_190:\n        /* \"RhinuERC.sol\":11062:11075  uniswapV2Pair */\n      0x0f\n        /* \"RhinuERC.sol\":11062:11174  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":11185:11200  uniswapV2Router */\n      sload(0x0e)\n      and\n        /* \"RhinuERC.sol\":11185:11216  uniswapV2Router.addLiquidityETH */\n      0xf305d719\n        /* \"RhinuERC.sol\":11224:11245  address(this).balance */\n      selfbalance\n        /* \"RhinuERC.sol\":11255:11259  this */\n      address\n        /* \"RhinuERC.sol\":11261:11285  balanceOf(address(this)) */\n      tag_191\n        /* \"RhinuERC.sol\":11255:11259  this */\n      dup2\n        /* \"RhinuERC.sol\":11261:11270  balanceOf */\n      tag_69\n        /* \"RhinuERC.sol\":11261:11285  balanceOf(address(this)) */\n      jump\t// in\n    tag_191:\n        /* \"RhinuERC.sol\":11286:11287  0 */\n      0x00\n        /* \"RhinuERC.sol\":11288:11289  0 */\n      dup1\n        /* \"RhinuERC.sol\":11290:11297  owner() */\n      tag_192\n        /* \"RhinuERC.sol\":3540:3547  address */\n      0x00\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"RhinuERC.sol\":3502:3581  function owner() public view returns (address) {\r... */\n      jump\n        /* \"RhinuERC.sol\":11290:11297  owner() */\n    tag_192:\n        /* \"RhinuERC.sol\":11185:11314  uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) */\n      mload(0x40)\n      0xe0\n      dup9\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5059:5074   */\n      swap6\n      dup7\n      and\n        /* \"RhinuERC.sol\":11185:11314  uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5041:5075   */\n      mstore\n        /* \"#utility.yul\":5091:5109   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5084:5118   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5134:5152   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":5127:5161   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5177:5195   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":5170:5204   */\n      mstore\n        /* \"#utility.yul\":5241:5256   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5220:5239   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5213:5257   */\n      mstore\n        /* \"RhinuERC.sol\":11298:11313  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5273:5292   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":5266:5301   */\n      mstore\n        /* \"#utility.yul\":4975:4994   */\n      0xc4\n      add\n        /* \"RhinuERC.sol\":11185:11314  uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      pop\n      pop\n        /* \"RhinuERC.sol\":11325:11336  swapEnabled */\n      0x0f\n        /* \"RhinuERC.sol\":11325:11343  swapEnabled = true */\n      dup1\n      sload\n        /* \"RhinuERC.sol\":11402:11427  23000000000000000 * 10**9 */\n      0x1306707f94695977000000\n        /* \"RhinuERC.sol\":11387:11399  _maxTxAmount */\n      0x10\n        /* \"RhinuERC.sol\":11387:11427  _maxTxAmount = 23000000000000000 * 10**9 */\n      sstore\n      not(shl(0xa0, 0xffff00ff))\n        /* \"RhinuERC.sol\":11438:11456  tradingOpen = true */\n      dup2\n      and\n      shl(0xa0, 0x01010001)\n      or\n      swap1\n      swap2\n      sstore\n        /* \"RhinuERC.sol\":11505:11520  uniswapV2Router */\n      sload(0x0e)\n        /* \"RhinuERC.sol\":11467:11538  IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":11505:11520  uniswapV2Router */\n      swap2\n      dup3\n      and\n        /* \"RhinuERC.sol\":11467:11538  IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4595:4646   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":4662:4680   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4655:4689   */\n      mstore\n        /* \"RhinuERC.sol\":11474:11487  uniswapV2Pair */\n      swap2\n      and\n      swap2\n      pop\n        /* \"RhinuERC.sol\":11467:11496  IERC20(uniswapV2Pair).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":4568:4586   */\n      0x44\n      add\n        /* \"RhinuERC.sol\":11467:11538  IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n        /* \"RhinuERC.sol\":8245:8580  function _approve(address owner, address spender, uint256 amount) private {\r... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8338:8357  owner != address(0) */\n      dup4\n      and\n        /* \"RhinuERC.sol\":8330:8398  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9467:9469   */\n      0x20\n        /* \"RhinuERC.sol\":8330:8398  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9449:9470   */\n      mstore\n        /* \"#utility.yul\":9506:9508   */\n      0x24\n        /* \"#utility.yul\":9486:9504   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9479:9509   */\n      mstore\n        /* \"#utility.yul\":9545:9579   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9525:9543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9518:9580   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9596:9614   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9589:9623   */\n      mstore\n        /* \"#utility.yul\":9640:9659   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":8330:8398  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_123\n        /* \"#utility.yul\":9439:9665   */\n      jump\n        /* \"RhinuERC.sol\":8330:8398  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8417:8438  spender != address(0) */\n      dup3\n      and\n        /* \"RhinuERC.sol\":8409:8477  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7129:7131   */\n      0x20\n        /* \"RhinuERC.sol\":8409:8477  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7111:7132   */\n      mstore\n        /* \"#utility.yul\":7168:7170   */\n      0x22\n        /* \"#utility.yul\":7148:7166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7141:7171   */\n      mstore\n        /* \"#utility.yul\":7207:7241   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7187:7205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7180:7242   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7258:7276   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7251:7283   */\n      mstore\n        /* \"#utility.yul\":7300:7319   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":8409:8477  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_123\n        /* \"#utility.yul\":7101:7325   */\n      jump\n        /* \"RhinuERC.sol\":8409:8477  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8488:8506  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":8488:8499  _allowances */\n      0x04\n        /* \"RhinuERC.sol\":8488:8506  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RhinuERC.sol\":8488:8515  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RhinuERC.sol\":8488:8524  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":8540:8572  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":10168:10193   */\n      dup5\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":8540:8572  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":10141:10159   */\n      add\n        /* \"RhinuERC.sol\":8540:8572  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RhinuERC.sol\":8245:8580  function _approve(address owner, address spender, uint256 amount) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":8588:10051  function _transfer(address from, address to, uint256 amount) private {\r... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8676:8694  from != address(0) */\n      dup4\n      and\n        /* \"RhinuERC.sol\":8668:8736  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9061:9063   */\n      0x20\n        /* \"RhinuERC.sol\":8668:8736  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9043:9064   */\n      mstore\n        /* \"#utility.yul\":9100:9102   */\n      0x25\n        /* \"#utility.yul\":9080:9098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9073:9103   */\n      mstore\n        /* \"#utility.yul\":9139:9173   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9119:9137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9112:9174   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9190:9208   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9183:9218   */\n      mstore\n        /* \"#utility.yul\":9235:9254   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":8668:8736  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n        /* \"#utility.yul\":9033:9260   */\n      jump\n        /* \"RhinuERC.sol\":8668:8736  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8755:8771  to != address(0) */\n      dup3\n      and\n        /* \"RhinuERC.sol\":8747:8811  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"RhinuERC.sol\":8747:8811  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6296:6317   */\n      mstore\n        /* \"#utility.yul\":6353:6355   */\n      0x23\n        /* \"#utility.yul\":6333:6351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6326:6356   */\n      mstore\n        /* \"#utility.yul\":6392:6426   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6372:6390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6365:6427   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6443:6461   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6436:6469   */\n      mstore\n        /* \"#utility.yul\":6486:6505   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":8747:8811  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n        /* \"#utility.yul\":6286:6511   */\n      jump\n        /* \"RhinuERC.sol\":8747:8811  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_221:\n        /* \"RhinuERC.sol\":8839:8840  0 */\n      0x00\n        /* \"RhinuERC.sol\":8830:8836  amount */\n      dup2\n        /* \"RhinuERC.sol\":8830:8840  amount > 0 */\n      gt\n        /* \"RhinuERC.sol\":8822:8886  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8651:8653   */\n      0x20\n        /* \"RhinuERC.sol\":8822:8886  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8633:8654   */\n      mstore\n        /* \"#utility.yul\":8690:8692   */\n      0x29\n        /* \"#utility.yul\":8670:8688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8663:8693   */\n      mstore\n        /* \"#utility.yul\":8729:8763   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":8709:8727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8702:8764   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":8780:8798   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8773:8812   */\n      mstore\n        /* \"#utility.yul\":8829:8848   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":8822:8886  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_123\n        /* \"#utility.yul\":8623:8854   */\n      jump\n        /* \"RhinuERC.sol\":8822:8886  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_224:\n        /* \"RhinuERC.sol\":8909:8910  2 */\n      0x02\n        /* \"RhinuERC.sol\":8897:8906  _feeAddr1 */\n      0x0a\n        /* \"RhinuERC.sol\":8897:8910  _feeAddr1 = 2 */\n      swap1\n      dup2\n      sstore\n        /* \"RhinuERC.sol\":8921:8930  _feeAddr2 */\n      0x0b\n        /* \"RhinuERC.sol\":8921:8935  _feeAddr2 = 10 */\n      sstore\n      0x00\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8950:8965  from != owner() */\n      dup5\n      dup2\n      and\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      swap2\n      and\n        /* \"RhinuERC.sol\":8950:8965  from != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"RhinuERC.sol\":8950:8982  from != owner() && to != owner() */\n      tag_228\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":3540:3547  address */\n      0x00\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":8969:8982  to != owner() */\n      dup4\n      dup2\n      and\n        /* \"RhinuERC.sol\":3567:3573  _owner */\n      swap2\n      and\n        /* \"RhinuERC.sol\":8969:8982  to != owner() */\n      eq\n      iszero\n        /* \"RhinuERC.sol\":8950:8982  from != owner() && to != owner() */\n    tag_228:\n        /* \"RhinuERC.sol\":8946:9999  if (from != owner() && to != owner()) {\r... */\n      iszero\n      tag_230\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9008:9018  bots[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":9008:9012  bots */\n      0x06\n        /* \"RhinuERC.sol\":9008:9018  bots[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RhinuERC.sol\":9007:9018  !bots[from] */\n      iszero\n        /* \"RhinuERC.sol\":9007:9031  !bots[from] && !bots[to] */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9023:9031  bots[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":9023:9027  bots */\n      0x06\n        /* \"RhinuERC.sol\":9023:9031  bots[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RhinuERC.sol\":9022:9031  !bots[to] */\n      iszero\n        /* \"RhinuERC.sol\":9007:9031  !bots[from] && !bots[to] */\n    tag_231:\n        /* \"RhinuERC.sol\":8999:9032  require(!bots[from] && !bots[to]) */\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n        /* \"RhinuERC.sol\":9059:9072  uniswapV2Pair */\n      sload(0x0f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9051:9072  from == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"RhinuERC.sol\":9059:9072  uniswapV2Pair */\n      swap2\n      and\n        /* \"RhinuERC.sol\":9051:9072  from == uniswapV2Pair */\n      eq\n        /* \"RhinuERC.sol\":9051:9106  from == uniswapV2Pair && to != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":9090:9105  uniswapV2Router */\n      sload(0x0e)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9076:9106  to != address(uniswapV2Router) */\n      dup4\n      dup2\n      and\n        /* \"RhinuERC.sol\":9090:9105  uniswapV2Router */\n      swap2\n      and\n        /* \"RhinuERC.sol\":9076:9106  to != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"RhinuERC.sol\":9051:9106  from == uniswapV2Pair && to != address(uniswapV2Router) */\n    tag_233:\n        /* \"RhinuERC.sol\":9051:9134  from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9112:9134  _isExcludedFromFee[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":9112:9130  _isExcludedFromFee */\n      0x05\n        /* \"RhinuERC.sol\":9112:9134  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RhinuERC.sol\":9110:9134  ! _isExcludedFromFee[to] */\n      iszero\n        /* \"RhinuERC.sol\":9051:9134  from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] */\n    tag_234:\n        /* \"RhinuERC.sol\":9051:9153  from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":9138:9153  cooldownEnabled */\n      sload(0x0f)\n      shl(0xb8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"RhinuERC.sol\":9051:9153  from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled */\n    tag_235:\n        /* \"RhinuERC.sol\":9047:9372  if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"RhinuERC.sol\":9221:9233  _maxTxAmount */\n      sload(0x10)\n        /* \"RhinuERC.sol\":9211:9217  amount */\n      dup2\n        /* \"RhinuERC.sol\":9211:9233  amount <= _maxTxAmount */\n      gt\n      iszero\n        /* \"RhinuERC.sol\":9203:9234  require(amount <= _maxTxAmount) */\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9261:9273  cooldown[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":9261:9269  cooldown */\n      0x07\n        /* \"RhinuERC.sol\":9261:9273  cooldown[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RhinuERC.sol\":9276:9291  block.timestamp */\n      timestamp\n      gt\n        /* \"RhinuERC.sol\":9253:9292  require(cooldown[to] < block.timestamp) */\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n        /* \"RhinuERC.sol\":9326:9356  block.timestamp + (30 seconds) */\n      tag_239\n        /* \"RhinuERC.sol\":9326:9341  block.timestamp */\n      timestamp\n        /* \"RhinuERC.sol\":9345:9355  30 seconds */\n      0x1e\n        /* \"RhinuERC.sol\":9326:9356  block.timestamp + (30 seconds) */\n      tag_240\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9311:9323  cooldown[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":9311:9319  cooldown */\n      0x07\n        /* \"RhinuERC.sol\":9311:9323  cooldown[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"RhinuERC.sol\":9311:9356  cooldown[to] = block.timestamp + (30 seconds) */\n      sstore\n        /* \"RhinuERC.sol\":9047:9372  if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\r... */\n    tag_236:\n        /* \"RhinuERC.sol\":9424:9437  uniswapV2Pair */\n      sload(0x0f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9418:9437  to == uniswapV2Pair */\n      dup4\n      dup2\n      and\n        /* \"RhinuERC.sol\":9424:9437  uniswapV2Pair */\n      swap2\n      and\n        /* \"RhinuERC.sol\":9418:9437  to == uniswapV2Pair */\n      eq\n        /* \"RhinuERC.sol\":9418:9473  to == uniswapV2Pair && from != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":9457:9472  uniswapV2Router */\n      sload(0x0e)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9441:9473  from != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"RhinuERC.sol\":9457:9472  uniswapV2Router */\n      swap2\n      and\n        /* \"RhinuERC.sol\":9441:9473  from != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"RhinuERC.sol\":9418:9473  to == uniswapV2Pair && from != address(uniswapV2Router) */\n    tag_241:\n        /* \"RhinuERC.sol\":9418:9503  to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from] */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9479:9503  _isExcludedFromFee[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":9479:9497  _isExcludedFromFee */\n      0x05\n        /* \"RhinuERC.sol\":9479:9503  _isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RhinuERC.sol\":9477:9503  ! _isExcludedFromFee[from] */\n      iszero\n        /* \"RhinuERC.sol\":9418:9503  to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from] */\n    tag_242:\n        /* \"RhinuERC.sol\":9414:9586  if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\r... */\n      iszero\n      tag_243\n      jumpi\n        /* \"RhinuERC.sol\":9536:9537  2 */\n      0x02\n        /* \"RhinuERC.sol\":9524:9533  _feeAddr1 */\n      0x0a\n        /* \"RhinuERC.sol\":9524:9537  _feeAddr1 = 2 */\n      swap1\n      dup2\n      sstore\n        /* \"RhinuERC.sol\":9556:9565  _feeAddr2 */\n      0x0b\n        /* \"RhinuERC.sol\":9556:9570  _feeAddr2 = 10 */\n      sstore\n        /* \"RhinuERC.sol\":9414:9586  if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\r... */\n    tag_243:\n        /* \"RhinuERC.sol\":9600:9628  uint256 contractTokenBalance */\n      0x00\n        /* \"RhinuERC.sol\":9631:9655  balanceOf(address(this)) */\n      tag_244\n        /* \"RhinuERC.sol\":9649:9653  this */\n      address\n        /* \"RhinuERC.sol\":9631:9640  balanceOf */\n      tag_69\n        /* \"RhinuERC.sol\":9631:9655  balanceOf(address(this)) */\n      jump\t// in\n    tag_244:\n        /* \"RhinuERC.sol\":9675:9681  inSwap */\n      sload(0x0f)\n        /* \"RhinuERC.sol\":9600:9655  uint256 contractTokenBalance = balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n      shl(0xa8, 0x01)\n        /* \"RhinuERC.sol\":9675:9681  inSwap */\n      swap1\n      div\n      0xff\n      and\n        /* \"RhinuERC.sol\":9674:9681  !inSwap */\n      iszero\n        /* \"RhinuERC.sol\":9674:9706  !inSwap && from != uniswapV2Pair */\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":9693:9706  uniswapV2Pair */\n      sload(0x0f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":9685:9706  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"RhinuERC.sol\":9693:9706  uniswapV2Pair */\n      swap2\n      and\n        /* \"RhinuERC.sol\":9685:9706  from != uniswapV2Pair */\n      eq\n      iszero\n        /* \"RhinuERC.sol\":9674:9706  !inSwap && from != uniswapV2Pair */\n    tag_245:\n        /* \"RhinuERC.sol\":9674:9721  !inSwap && from != uniswapV2Pair && swapEnabled */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":9710:9721  swapEnabled */\n      sload(0x0f)\n      shl(0xb0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"RhinuERC.sol\":9674:9721  !inSwap && from != uniswapV2Pair && swapEnabled */\n    tag_246:\n        /* \"RhinuERC.sol\":9670:9988  if (!inSwap && from != uniswapV2Pair && swapEnabled) {\r... */\n      iszero\n      tag_247\n      jumpi\n        /* \"RhinuERC.sol\":9742:9780  swapTokensForEth(contractTokenBalance) */\n      tag_248\n        /* \"RhinuERC.sol\":9759:9779  contractTokenBalance */\n      dup2\n        /* \"RhinuERC.sol\":9742:9758  swapTokensForEth */\n      tag_166\n        /* \"RhinuERC.sol\":9742:9780  swapTokensForEth(contractTokenBalance) */\n      jump\t// in\n    tag_248:\n        /* \"RhinuERC.sol\":9828:9849  address(this).balance */\n      selfbalance\n        /* \"RhinuERC.sol\":9871:9893  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"RhinuERC.sol\":9868:9973  if(contractETHBalance > 0) {\r... */\n      tag_250\n      jumpi\n        /* \"RhinuERC.sol\":9918:9953  sendETHToFee(address(this).balance) */\n      tag_250\n        /* \"RhinuERC.sol\":9931:9952  address(this).balance */\n      selfbalance\n        /* \"RhinuERC.sol\":9918:9930  sendETHToFee */\n      tag_136\n        /* \"RhinuERC.sol\":9918:9953  sendETHToFee(address(this).balance) */\n      jump\t// in\n    tag_250:\n        /* \"RhinuERC.sol\":9670:9988  if (!inSwap && from != uniswapV2Pair && swapEnabled) {\r... */\n      pop\n    tag_247:\n        /* \"RhinuERC.sol\":8946:9999  if (from != owner() && to != owner()) {\r... */\n      pop\n    tag_230:\n        /* \"RhinuERC.sol\":10013:10043  _tokenTransfer(from,to,amount) */\n      tag_251\n        /* \"RhinuERC.sol\":10028:10032  from */\n      dup4\n        /* \"RhinuERC.sol\":10033:10035  to */\n      dup4\n        /* \"RhinuERC.sol\":10036:10042  amount */\n      dup4\n        /* \"RhinuERC.sol\":10013:10027  _tokenTransfer */\n      tag_252\n        /* \"RhinuERC.sol\":10013:10043  _tokenTransfer(from,to,amount) */\n      jump\t// in\n    tag_251:\n        /* \"RhinuERC.sol\":8588:10051  function _transfer(address from, address to, uint256 amount) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":2357:2547  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_119:\n        /* \"RhinuERC.sol\":2443:2450  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":2479:2491  errorMessage */\n      dup2\n        /* \"RhinuERC.sol\":2471:2477  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"RhinuERC.sol\":2463:2492  require(b <= a, errorMessage) */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_254:\n      pop\n        /* \"RhinuERC.sol\":2503:2512  uint256 c */\n      0x00\n        /* \"RhinuERC.sol\":2515:2520  a - b */\n      tag_256\n        /* \"RhinuERC.sol\":2519:2520  b */\n      dup5\n        /* \"RhinuERC.sol\":2515:2516  a */\n      dup7\n        /* \"RhinuERC.sol\":2515:2520  a - b */\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"RhinuERC.sol\":2503:2520  uint256 c = a - b */\n      swap6\n        /* \"RhinuERC.sol\":2357:2547  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":10558:10712  function sendETHToFee(uint256 amount) private {\r... */\n    tag_136:\n        /* \"RhinuERC.sol\":10615:10630  _feeAddrWallet1 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"RhinuERC.sol\":10615:10654  _feeAddrWallet1.transfer(amount.div(2)) */\n      0x08fc\n        /* \"RhinuERC.sol\":10640:10653  amount.div(2) */\n      tag_259\n        /* \"RhinuERC.sol\":10640:10646  amount */\n      dup4\n        /* \"RhinuERC.sol\":10651:10652  2 */\n      0x02\n        /* \"RhinuERC.sol\":10640:10650  amount.div */\n      tag_260\n        /* \"RhinuERC.sol\":10640:10653  amount.div(2) */\n      jump\t// in\n    tag_259:\n        /* \"RhinuERC.sol\":10615:10654  _feeAddrWallet1.transfer(amount.div(2)) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n        /* \"RhinuERC.sol\":10665:10680  _feeAddrWallet2 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"RhinuERC.sol\":10665:10704  _feeAddrWallet2.transfer(amount.div(2)) */\n      0x08fc\n        /* \"RhinuERC.sol\":10690:10703  amount.div(2) */\n      tag_263\n        /* \"RhinuERC.sol\":10690:10696  amount */\n      dup4\n        /* \"RhinuERC.sol\":10701:10702  2 */\n      0x02\n        /* \"RhinuERC.sol\":10690:10700  amount.div */\n      tag_260\n        /* \"RhinuERC.sol\":10690:10703  amount.div(2) */\n      jump\t// in\n    tag_263:\n        /* \"RhinuERC.sol\":10665:10704  _feeAddrWallet2.transfer(amount.div(2)) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"RhinuERC.sol\":7983:8237  function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\r... */\n    tag_139:\n        /* \"RhinuERC.sol\":8050:8057  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":8089:8096  _rTotal */\n      sload(0x08)\n        /* \"RhinuERC.sol\":8078:8085  rAmount */\n      dup3\n        /* \"RhinuERC.sol\":8078:8096  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"RhinuERC.sol\":8070:8143  require(rAmount <= _rTotal, \"Amount must be less than total reflections\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6718:6720   */\n      0x20\n        /* \"RhinuERC.sol\":8070:8143  require(rAmount <= _rTotal, \"Amount must be less than total reflections\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6700:6721   */\n      mstore\n        /* \"#utility.yul\":6757:6759   */\n      0x2a\n        /* \"#utility.yul\":6737:6755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6730:6760   */\n      mstore\n        /* \"#utility.yul\":6796:6830   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":6776:6794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6769:6831   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":6847:6865   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6840:6880   */\n      mstore\n        /* \"#utility.yul\":6897:6916   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":8070:8143  require(rAmount <= _rTotal, \"Amount must be less than total reflections\") */\n      tag_123\n        /* \"#utility.yul\":6690:6922   */\n      jump\n        /* \"RhinuERC.sol\":8070:8143  require(rAmount <= _rTotal, \"Amount must be less than total reflections\") */\n    tag_267:\n        /* \"RhinuERC.sol\":8154:8173  uint256 currentRate */\n      0x00\n        /* \"RhinuERC.sol\":8177:8187  _getRate() */\n      tag_270\n        /* \"RhinuERC.sol\":8177:8185  _getRate */\n      tag_271\n        /* \"RhinuERC.sol\":8177:8187  _getRate() */\n      jump\t// in\n    tag_270:\n        /* \"RhinuERC.sol\":8154:8187  uint256 currentRate =  _getRate() */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":8205:8229  rAmount.div(currentRate) */\n      tag_272\n        /* \"RhinuERC.sol\":8205:8212  rAmount */\n      dup4\n        /* \"RhinuERC.sol\":8154:8187  uint256 currentRate =  _getRate() */\n      dup3\n        /* \"RhinuERC.sol\":8205:8216  rAmount.div */\n      tag_260\n        /* \"RhinuERC.sol\":8205:8229  rAmount.div(currentRate) */\n      jump\t// in\n    tag_272:\n        /* \"RhinuERC.sol\":8198:8229  return rAmount.div(currentRate) */\n      swap4\n        /* \"RhinuERC.sol\":7983:8237  function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":10059:10542  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r... */\n    tag_166:\n        /* \"RhinuERC.sol\":5931:5937  inSwap */\n      0x0f\n        /* \"RhinuERC.sol\":5931:5944  inSwap = true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"RhinuERC.sol\":10161:10177  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"RhinuERC.sol\":10175:10176  2 */\n      0x02\n        /* \"RhinuERC.sol\":10161:10177  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"RhinuERC.sol\":10137:10177  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":10206:10210  this */\n      address\n        /* \"RhinuERC.sol\":10188:10192  path */\n      dup2\n        /* \"RhinuERC.sol\":10193:10194  0 */\n      0x00\n        /* \"RhinuERC.sol\":10188:10195  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_277\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":10188:10211  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"RhinuERC.sol\":10188:10195  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"RhinuERC.sol\":10188:10211  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"RhinuERC.sol\":10232:10247  uniswapV2Router */\n      sload(0x0e)\n        /* \"RhinuERC.sol\":10232:10254  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"RhinuERC.sol\":10232:10247  uniswapV2Router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"RhinuERC.sol\":10232:10252  uniswapV2Router.WETH */\n      0xad5c4648\n      swap3\n        /* \"RhinuERC.sol\":10232:10254  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"RhinuERC.sol\":10188:10195  path[0] */\n      swap2\n      swap3\n        /* \"RhinuERC.sol\":10232:10254  uniswapV2Router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"RhinuERC.sol\":10232:10247  uniswapV2Router */\n      dup7\n        /* \"RhinuERC.sol\":10232:10254  uniswapV2Router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_281\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_281:\n        /* \"RhinuERC.sol\":10222:10226  path */\n      dup2\n        /* \"RhinuERC.sol\":10227:10228  1 */\n      0x01\n        /* \"RhinuERC.sol\":10222:10229  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_282\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":10222:10254  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"RhinuERC.sol\":10222:10229  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"RhinuERC.sol\":10222:10254  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"RhinuERC.sol\":10297:10312  uniswapV2Router */\n      sload(0x0e)\n        /* \"RhinuERC.sol\":10265:10327  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_283\n      swap2\n        /* \"RhinuERC.sol\":10282:10286  this */\n      address\n      swap2\n        /* \"RhinuERC.sol\":10297:10312  uniswapV2Router */\n      and\n        /* \"RhinuERC.sol\":10315:10326  tokenAmount */\n      dup5\n        /* \"RhinuERC.sol\":10265:10273  _approve */\n      tag_110\n        /* \"RhinuERC.sol\":10265:10327  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_283:\n        /* \"RhinuERC.sol\":10338:10353  uniswapV2Router */\n      sload(0x0e)\n        /* \"RhinuERC.sol\":10338:10534  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":10338:10353  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"RhinuERC.sol\":10338:10404  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"RhinuERC.sol\":10338:10534  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      tag_284\n      swap1\n        /* \"RhinuERC.sol\":10419:10430  tokenAmount */\n      dup6\n      swap1\n        /* \"RhinuERC.sol\":10338:10353  uniswapV2Router */\n      0x00\n      swap1\n        /* \"RhinuERC.sol\":10461:10465  path */\n      dup7\n      swap1\n        /* \"RhinuERC.sol\":10488:10492  this */\n      address\n      swap1\n        /* \"RhinuERC.sol\":10508:10523  block.timestamp */\n      timestamp\n      swap1\n        /* \"RhinuERC.sol\":10338:10534  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      0x04\n      add\n      tag_285\n      jump\t// in\n    tag_284:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n        /* \"RhinuERC.sol\":5967:5973  inSwap */\n      0x0f\n        /* \"RhinuERC.sol\":5967:5981  inSwap = false */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"RhinuERC.sol\":10059:10542  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r... */\n      jump\t// out\n        /* \"RhinuERC.sol\":11838:11984  function _tokenTransfer(address sender, address recipient, uint256 amount) private {\r... */\n    tag_252:\n        /* \"RhinuERC.sol\":11932:11976  _transferStandard(sender, recipient, amount) */\n      tag_251\n        /* \"RhinuERC.sol\":11950:11956  sender */\n      dup4\n        /* \"RhinuERC.sol\":11958:11967  recipient */\n      dup4\n        /* \"RhinuERC.sol\":11969:11975  amount */\n      dup4\n        /* \"RhinuERC.sol\":11932:11949  _transferStandard */\n      tag_291\n        /* \"RhinuERC.sol\":11932:11976  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n        /* \"RhinuERC.sol\":2809:2941  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_260:\n        /* \"RhinuERC.sol\":2867:2874  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":2894:2933  div(a, b, \"SafeMath: division by zero\") */\n      tag_272\n        /* \"RhinuERC.sol\":2898:2899  a */\n      dup4\n        /* \"RhinuERC.sol\":2901:2902  b */\n      dup4\n        /* \"RhinuERC.sol\":2894:2933  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"RhinuERC.sol\":2894:2897  div */\n      tag_294\n        /* \"RhinuERC.sol\":2894:2933  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"RhinuERC.sol\":14571:14734  function _getRate() private view returns(uint256) {\r... */\n    tag_271:\n        /* \"RhinuERC.sol\":14612:14619  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":14633:14648  uint256 rSupply */\n      dup1\n        /* \"RhinuERC.sol\":14650:14665  uint256 tSupply */\n      0x00\n        /* \"RhinuERC.sol\":14669:14688  _getCurrentSupply() */\n      tag_296\n        /* \"RhinuERC.sol\":14669:14686  _getCurrentSupply */\n      tag_297\n        /* \"RhinuERC.sol\":14669:14688  _getCurrentSupply() */\n      jump\t// in\n    tag_296:\n        /* \"RhinuERC.sol\":14632:14688  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"RhinuERC.sol\":14706:14726  rSupply.div(tSupply) */\n      tag_298\n        /* \"RhinuERC.sol\":14632:14688  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup3\n      dup3\n        /* \"RhinuERC.sol\":14706:14717  rSupply.div */\n      tag_260\n        /* \"RhinuERC.sol\":14706:14726  rSupply.div(tSupply) */\n      jump\t// in\n    tag_298:\n        /* \"RhinuERC.sol\":14699:14726  return rSupply.div(tSupply) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"RhinuERC.sol\":14571:14734  function _getRate() private view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"RhinuERC.sol\":11992:12480  function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r... */\n    tag_291:\n        /* \"RhinuERC.sol\":12091:12106  uint256 rAmount */\n      0x00\n        /* \"RhinuERC.sol\":12108:12131  uint256 rTransferAmount */\n      dup1\n        /* \"RhinuERC.sol\":12133:12145  uint256 rFee */\n      0x00\n        /* \"RhinuERC.sol\":12147:12170  uint256 tTransferAmount */\n      dup1\n        /* \"RhinuERC.sol\":12172:12184  uint256 tFee */\n      0x00\n        /* \"RhinuERC.sol\":12186:12199  uint256 tTeam */\n      dup1\n        /* \"RhinuERC.sol\":12203:12222  _getValues(tAmount) */\n      tag_300\n        /* \"RhinuERC.sol\":12214:12221  tAmount */\n      dup8\n        /* \"RhinuERC.sol\":12203:12213  _getValues */\n      tag_301\n        /* \"RhinuERC.sol\":12203:12222  _getValues(tAmount) */\n      jump\t// in\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":12251:12266  _rOwned[sender] */\n      dup16\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":12251:12258  _rOwned */\n      0x02\n        /* \"RhinuERC.sol\":12251:12266  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RhinuERC.sol\":12090:12222  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount) */\n      swap6\n      swap12\n      pop\n      swap4\n      swap10\n      pop\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"RhinuERC.sol\":12251:12279  _rOwned[sender].sub(rAmount) */\n      tag_302\n      swap1\n        /* \"RhinuERC.sol\":12090:12222  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount) */\n      dup8\n        /* \"RhinuERC.sol\":12251:12270  _rOwned[sender].sub */\n      tag_303\n        /* \"RhinuERC.sol\":12251:12279  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":12233:12248  _rOwned[sender] */\n      dup1\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":12233:12240  _rOwned */\n      0x02\n        /* \"RhinuERC.sol\":12233:12248  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"RhinuERC.sol\":12233:12279  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"RhinuERC.sol\":12311:12329  _rOwned[recipient] */\n      swap1\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"RhinuERC.sol\":12311:12350  _rOwned[recipient].add(rTransferAmount) */\n      tag_304\n      swap1\n        /* \"RhinuERC.sol\":12334:12349  rTransferAmount */\n      dup7\n        /* \"RhinuERC.sol\":12311:12333  _rOwned[recipient].add */\n      tag_305\n        /* \"RhinuERC.sol\":12311:12350  _rOwned[recipient].add(rTransferAmount) */\n      jump\t// in\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":12290:12308  _rOwned[recipient] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":12290:12297  _rOwned */\n      0x02\n        /* \"RhinuERC.sol\":12290:12308  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"RhinuERC.sol\":12290:12350  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      sstore\n        /* \"RhinuERC.sol\":12362:12378  _takeTeam(tTeam) */\n      tag_306\n        /* \"RhinuERC.sol\":12372:12377  tTeam */\n      dup2\n        /* \"RhinuERC.sol\":12362:12371  _takeTeam */\n      tag_307\n        /* \"RhinuERC.sol\":12362:12378  _takeTeam(tTeam) */\n      jump\t// in\n    tag_306:\n        /* \"RhinuERC.sol\":12389:12412  _reflectFee(rFee, tFee) */\n      tag_308\n        /* \"RhinuERC.sol\":12401:12405  rFee */\n      dup5\n        /* \"RhinuERC.sol\":12407:12411  tFee */\n      dup4\n        /* \"RhinuERC.sol\":12389:12400  _reflectFee */\n      tag_309\n        /* \"RhinuERC.sol\":12389:12412  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_308:\n        /* \"RhinuERC.sol\":12445:12454  recipient */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":12428:12472  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"RhinuERC.sol\":12437:12443  sender */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RhinuERC.sol\":12428:12472  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"RhinuERC.sol\":12456:12471  tTransferAmount */\n      dup6\n        /* \"RhinuERC.sol\":12428:12472  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_310\n      swap2\n        /* \"#utility.yul\":10168:10193   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10156:10158   */\n      0x20\n        /* \"#utility.yul\":10141:10159   */\n      add\n      swap1\n        /* \"#utility.yul\":10123:10199   */\n      jump\n        /* \"RhinuERC.sol\":12428:12472  Transfer(sender, recipient, tTransferAmount) */\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"RhinuERC.sol\":11992:12480  function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":2949:3138  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_294:\n        /* \"RhinuERC.sol\":3035:3042  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":3070:3082  errorMessage */\n      dup2\n        /* \"RhinuERC.sol\":3063:3068  b > 0 */\n      dup4\n        /* \"RhinuERC.sol\":3055:3083  require(b > 0, errorMessage) */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_312:\n      pop\n        /* \"RhinuERC.sol\":3094:3103  uint256 c */\n      0x00\n        /* \"RhinuERC.sol\":3106:3111  a / b */\n      tag_256\n        /* \"RhinuERC.sol\":3110:3111  b */\n      dup5\n        /* \"RhinuERC.sol\":3106:3107  a */\n      dup7\n        /* \"RhinuERC.sol\":3106:3111  a / b */\n      tag_315\n      jump\t// in\n        /* \"RhinuERC.sol\":14742:15004  function _getCurrentSupply() private view returns(uint256, uint256) {\r... */\n    tag_297:\n        /* \"RhinuERC.sol\":14839:14846  _rTotal */\n      sload(0x08)\n        /* \"RhinuERC.sol\":14792:14799  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"RhinuERC.sol\":14913:14933  _rTotal.div(_tTotal) */\n      tag_317\n        /* \"RhinuERC.sol\":14839:14846  _rTotal */\n      dup3\n        /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n      dup3\n        /* \"RhinuERC.sol\":14913:14924  _rTotal.div */\n      tag_260\n        /* \"RhinuERC.sol\":14913:14933  _rTotal.div(_tTotal) */\n      jump\t// in\n    tag_317:\n        /* \"RhinuERC.sol\":14903:14910  rSupply */\n      dup3\n        /* \"RhinuERC.sol\":14903:14933  rSupply < _rTotal.div(_tTotal) */\n      lt\n        /* \"RhinuERC.sol\":14899:14960  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n      iszero\n      tag_318\n      jumpi\n      pop\n      pop\n        /* \"RhinuERC.sol\":14943:14950  _rTotal */\n      sload(0x08)\n      swap3\n        /* \"RhinuERC.sol\":5138:5165  1000000000000000000 * 10**9 */\n      0x033b2e3c9fd0803ce8000000\n      swap3\n      pop\n        /* \"RhinuERC.sol\":14742:15004  function _getCurrentSupply() private view returns(uint256, uint256) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":14899:14960  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n    tag_318:\n        /* \"RhinuERC.sol\":14979:14986  rSupply */\n      swap1\n      swap4\n        /* \"RhinuERC.sol\":14988:14995  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"RhinuERC.sol\":14742:15004  function _getCurrentSupply() private view returns(uint256, uint256) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":13319:13790  function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\r... */\n    tag_301:\n        /* \"RhinuERC.sol\":13378:13385  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":13387:13394  uint256 */\n      dup1\n        /* \"RhinuERC.sol\":13396:13403  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":13405:13412  uint256 */\n      dup1\n        /* \"RhinuERC.sol\":13414:13421  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":13423:13430  uint256 */\n      dup1\n        /* \"RhinuERC.sol\":13444:13467  uint256 tTransferAmount */\n      0x00\n        /* \"RhinuERC.sol\":13469:13481  uint256 tFee */\n      dup1\n        /* \"RhinuERC.sol\":13483:13496  uint256 tTeam */\n      0x00\n        /* \"RhinuERC.sol\":13500:13542  _getTValues(tAmount, _feeAddr1, _feeAddr2) */\n      tag_320\n        /* \"RhinuERC.sol\":13512:13519  tAmount */\n      dup11\n        /* \"RhinuERC.sol\":13521:13530  _feeAddr1 */\n      sload(0x0a)\n        /* \"RhinuERC.sol\":13532:13541  _feeAddr2 */\n      sload(0x0b)\n        /* \"RhinuERC.sol\":13500:13511  _getTValues */\n      tag_321\n        /* \"RhinuERC.sol\":13500:13542  _getTValues(tAmount, _feeAddr1, _feeAddr2) */\n      jump\t// in\n    tag_320:\n        /* \"RhinuERC.sol\":13443:13542  (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"RhinuERC.sol\":13553:13572  uint256 currentRate */\n      0x00\n        /* \"RhinuERC.sol\":13576:13586  _getRate() */\n      tag_322\n        /* \"RhinuERC.sol\":13576:13584  _getRate */\n      tag_271\n        /* \"RhinuERC.sol\":13576:13586  _getRate() */\n      jump\t// in\n    tag_322:\n        /* \"RhinuERC.sol\":13553:13586  uint256 currentRate =  _getRate() */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":13598:13613  uint256 rAmount */\n      0x00\n        /* \"RhinuERC.sol\":13615:13638  uint256 rTransferAmount */\n      dup1\n        /* \"RhinuERC.sol\":13640:13652  uint256 rFee */\n      0x00\n        /* \"RhinuERC.sol\":13656:13702  _getRValues(tAmount, tFee, tTeam, currentRate) */\n      tag_323\n        /* \"RhinuERC.sol\":13668:13675  tAmount */\n      dup15\n        /* \"RhinuERC.sol\":13677:13681  tFee */\n      dup8\n        /* \"RhinuERC.sol\":13683:13688  tTeam */\n      dup8\n        /* \"RhinuERC.sol\":13690:13701  currentRate */\n      dup8\n        /* \"RhinuERC.sol\":13656:13667  _getRValues */\n      tag_324\n        /* \"RhinuERC.sol\":13656:13702  _getRValues(tAmount, tFee, tTeam, currentRate) */\n      jump\t// in\n    tag_323:\n        /* \"RhinuERC.sol\":13597:13702  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate) */\n      swap2\n      swap15\n      pop\n      swap13\n      pop\n      swap11\n      pop\n        /* \"RhinuERC.sol\":13753:13768  tTransferAmount */\n      swap6\n      swap9\n      pop\n        /* \"RhinuERC.sol\":13770:13774  tFee */\n      swap4\n      swap7\n      pop\n        /* \"RhinuERC.sol\":13776:13781  tTeam */\n      swap2\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"RhinuERC.sol\":13319:13790  function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\r... */\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n        /* \"RhinuERC.sol\":2213:2349  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_303:\n        /* \"RhinuERC.sol\":2271:2278  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":2298:2341  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_272\n        /* \"RhinuERC.sol\":2302:2303  a */\n      dup4\n        /* \"RhinuERC.sol\":2305:2306  b */\n      dup4\n        /* \"RhinuERC.sol\":2298:2341  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"RhinuERC.sol\":2298:2301  sub */\n      tag_119\n        /* \"RhinuERC.sol\":2298:2341  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"RhinuERC.sol\":2026:2205  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_305:\n        /* \"RhinuERC.sol\":2084:2091  uint256 */\n      0x00\n      dup1\n        /* \"RhinuERC.sol\":2116:2121  a + b */\n      tag_328\n        /* \"RhinuERC.sol\":2120:2121  b */\n      dup4\n        /* \"RhinuERC.sol\":2116:2117  a */\n      dup6\n        /* \"RhinuERC.sol\":2116:2121  a + b */\n      tag_240\n      jump\t// in\n    tag_328:\n        /* \"RhinuERC.sol\":2104:2121  uint256 c = a + b */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":2145:2146  a */\n      dup4\n        /* \"RhinuERC.sol\":2140:2141  c */\n      dup2\n        /* \"RhinuERC.sol\":2140:2146  c >= a */\n      lt\n      iszero\n        /* \"RhinuERC.sol\":2132:2178  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7532:7534   */\n      0x20\n        /* \"RhinuERC.sol\":2132:2178  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7514:7535   */\n      mstore\n        /* \"#utility.yul\":7571:7573   */\n      0x1b\n        /* \"#utility.yul\":7551:7569   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7544:7574   */\n      mstore\n        /* \"#utility.yul\":7610:7639   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":7590:7608   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7583:7640   */\n      mstore\n        /* \"#utility.yul\":7657:7675   */\n      0x64\n      add\n        /* \"RhinuERC.sol\":2132:2178  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_123\n        /* \"#utility.yul\":7504:7681   */\n      jump\n        /* \"RhinuERC.sol\":12488:12700  function _takeTeam(uint256 tTeam) private {\r... */\n    tag_307:\n        /* \"RhinuERC.sol\":12541:12560  uint256 currentRate */\n      0x00\n        /* \"RhinuERC.sol\":12564:12574  _getRate() */\n      tag_333\n        /* \"RhinuERC.sol\":12564:12572  _getRate */\n      tag_271\n        /* \"RhinuERC.sol\":12564:12574  _getRate() */\n      jump\t// in\n    tag_333:\n        /* \"RhinuERC.sol\":12541:12574  uint256 currentRate =  _getRate() */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":12585:12598  uint256 rTeam */\n      0x00\n        /* \"RhinuERC.sol\":12601:12623  tTeam.mul(currentRate) */\n      tag_334\n        /* \"RhinuERC.sol\":12601:12606  tTeam */\n      dup4\n        /* \"RhinuERC.sol\":12541:12574  uint256 currentRate =  _getRate() */\n      dup4\n        /* \"RhinuERC.sol\":12601:12610  tTeam.mul */\n      tag_335\n        /* \"RhinuERC.sol\":12601:12623  tTeam.mul(currentRate) */\n      jump\t// in\n    tag_334:\n        /* \"RhinuERC.sol\":12675:12679  this */\n      address\n        /* \"RhinuERC.sol\":12659:12681  _rOwned[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":12659:12666  _rOwned */\n      0x02\n        /* \"RhinuERC.sol\":12659:12681  _rOwned[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RhinuERC.sol\":12585:12623  uint256 rTeam = tTeam.mul(currentRate) */\n      swap1\n      swap2\n      pop\n        /* \"RhinuERC.sol\":12659:12692  _rOwned[address(this)].add(rTeam) */\n      tag_336\n      swap1\n        /* \"RhinuERC.sol\":12585:12623  uint256 rTeam = tTeam.mul(currentRate) */\n      dup3\n        /* \"RhinuERC.sol\":12659:12685  _rOwned[address(this)].add */\n      tag_305\n        /* \"RhinuERC.sol\":12659:12692  _rOwned[address(this)].add(rTeam) */\n      jump\t// in\n    tag_336:\n        /* \"RhinuERC.sol\":12650:12654  this */\n      address\n        /* \"RhinuERC.sol\":12634:12656  _rOwned[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RhinuERC.sol\":12634:12641  _rOwned */\n      0x02\n        /* \"RhinuERC.sol\":12634:12656  _rOwned[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"RhinuERC.sol\":12634:12692  _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) */\n      sstore\n      pop\n      pop\n      pop\n        /* \"RhinuERC.sol\":12488:12700  function _takeTeam(uint256 tTeam) private {\r... */\n      jump\t// out\n        /* \"RhinuERC.sol\":12708:12855  function _reflectFee(uint256 rFee, uint256 tFee) private {\r... */\n    tag_309:\n        /* \"RhinuERC.sol\":12786:12793  _rTotal */\n      sload(0x08)\n        /* \"RhinuERC.sol\":12786:12803  _rTotal.sub(rFee) */\n      tag_338\n      swap1\n        /* \"RhinuERC.sol\":12798:12802  rFee */\n      dup4\n        /* \"RhinuERC.sol\":12786:12797  _rTotal.sub */\n      tag_303\n        /* \"RhinuERC.sol\":12786:12803  _rTotal.sub(rFee) */\n      jump\t// in\n    tag_338:\n        /* \"RhinuERC.sol\":12776:12783  _rTotal */\n      0x08\n        /* \"RhinuERC.sol\":12776:12803  _rTotal = _rTotal.sub(rFee) */\n      sstore\n        /* \"RhinuERC.sol\":12827:12837  _tFeeTotal */\n      sload(0x09)\n        /* \"RhinuERC.sol\":12827:12847  _tFeeTotal.add(tFee) */\n      tag_339\n      swap1\n        /* \"RhinuERC.sol\":12842:12846  tFee */\n      dup3\n        /* \"RhinuERC.sol\":12827:12841  _tFeeTotal.add */\n      tag_305\n        /* \"RhinuERC.sol\":12827:12847  _tFeeTotal.add(tFee) */\n      jump\t// in\n    tag_339:\n        /* \"RhinuERC.sol\":12814:12824  _tFeeTotal */\n      0x09\n        /* \"RhinuERC.sol\":12814:12847  _tFeeTotal = _tFeeTotal.add(tFee) */\n      sstore\n      pop\n      pop\n        /* \"RhinuERC.sol\":12708:12855  function _reflectFee(uint256 rFee, uint256 tFee) private {\r... */\n      jump\t// out\n        /* \"RhinuERC.sol\":13798:14149  function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\r... */\n    tag_321:\n        /* \"RhinuERC.sol\":13891:13898  uint256 */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"RhinuERC.sol\":13944:13972  tAmount.mul(taxFee).div(100) */\n      tag_341\n        /* \"RhinuERC.sol\":13968:13971  100 */\n      0x64\n        /* \"RhinuERC.sol\":13944:13963  tAmount.mul(taxFee) */\n      tag_342\n        /* \"RhinuERC.sol\":13944:13951  tAmount */\n      dup10\n        /* \"RhinuERC.sol\":13956:13962  taxFee */\n      dup10\n        /* \"RhinuERC.sol\":13944:13955  tAmount.mul */\n      tag_335\n        /* \"RhinuERC.sol\":13944:13963  tAmount.mul(taxFee) */\n      jump\t// in\n    tag_342:\n        /* \"RhinuERC.sol\":13944:13967  tAmount.mul(taxFee).div */\n      swap1\n      tag_260\n        /* \"RhinuERC.sol\":13944:13972  tAmount.mul(taxFee).div(100) */\n      jump\t// in\n    tag_341:\n        /* \"RhinuERC.sol\":13929:13972  uint256 tFee = tAmount.mul(taxFee).div(100) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":13983:13996  uint256 tTeam */\n      0x00\n        /* \"RhinuERC.sol\":13999:14028  tAmount.mul(TeamFee).div(100) */\n      tag_343\n        /* \"RhinuERC.sol\":14024:14027  100 */\n      0x64\n        /* \"RhinuERC.sol\":13999:14019  tAmount.mul(TeamFee) */\n      tag_342\n        /* \"RhinuERC.sol\":13999:14006  tAmount */\n      dup11\n        /* \"RhinuERC.sol\":14011:14018  TeamFee */\n      dup10\n        /* \"RhinuERC.sol\":13999:14010  tAmount.mul */\n      tag_335\n        /* \"RhinuERC.sol\":13999:14019  tAmount.mul(TeamFee) */\n      jump\t// in\n        /* \"RhinuERC.sol\":13999:14028  tAmount.mul(TeamFee).div(100) */\n    tag_343:\n        /* \"RhinuERC.sol\":13983:14028  uint256 tTeam = tAmount.mul(TeamFee).div(100) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":14039:14062  uint256 tTransferAmount */\n      0x00\n        /* \"RhinuERC.sol\":14065:14093  tAmount.sub(tFee).sub(tTeam) */\n      tag_345\n        /* \"RhinuERC.sol\":13983:14028  uint256 tTeam = tAmount.mul(TeamFee).div(100) */\n      dup3\n        /* \"RhinuERC.sol\":14065:14082  tAmount.sub(tFee) */\n      tag_346\n        /* \"RhinuERC.sol\":14065:14072  tAmount */\n      dup12\n        /* \"RhinuERC.sol\":14077:14081  tFee */\n      dup7\n        /* \"RhinuERC.sol\":14065:14076  tAmount.sub */\n      tag_303\n        /* \"RhinuERC.sol\":14065:14082  tAmount.sub(tFee) */\n      jump\t// in\n    tag_346:\n        /* \"RhinuERC.sol\":14065:14086  tAmount.sub(tFee).sub */\n      swap1\n      tag_303\n        /* \"RhinuERC.sol\":14065:14093  tAmount.sub(tFee).sub(tTeam) */\n      jump\t// in\n    tag_345:\n        /* \"RhinuERC.sol\":14039:14093  uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam) */\n      swap10\n        /* \"RhinuERC.sol\":14129:14133  tFee */\n      swap3\n      swap9\n      pop\n        /* \"RhinuERC.sol\":14135:14140  tTeam */\n      swap1\n      swap7\n      pop\n        /* \"RhinuERC.sol\":13798:14149  function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\r... */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":14157:14566  function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\r... */\n    tag_324:\n        /* \"RhinuERC.sol\":14267:14274  uint256 */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"RhinuERC.sol\":14323:14347  tAmount.mul(currentRate) */\n      tag_348\n        /* \"RhinuERC.sol\":14323:14330  tAmount */\n      dup9\n        /* \"RhinuERC.sol\":14335:14346  currentRate */\n      dup7\n        /* \"RhinuERC.sol\":14323:14334  tAmount.mul */\n      tag_335\n        /* \"RhinuERC.sol\":14323:14347  tAmount.mul(currentRate) */\n      jump\t// in\n    tag_348:\n        /* \"RhinuERC.sol\":14305:14347  uint256 rAmount = tAmount.mul(currentRate) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":14358:14370  uint256 rFee */\n      0x00\n        /* \"RhinuERC.sol\":14373:14394  tFee.mul(currentRate) */\n      tag_349\n        /* \"RhinuERC.sol\":14373:14377  tFee */\n      dup9\n        /* \"RhinuERC.sol\":14382:14393  currentRate */\n      dup8\n        /* \"RhinuERC.sol\":14373:14381  tFee.mul */\n      tag_335\n        /* \"RhinuERC.sol\":14373:14394  tFee.mul(currentRate) */\n      jump\t// in\n    tag_349:\n        /* \"RhinuERC.sol\":14358:14394  uint256 rFee = tFee.mul(currentRate) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":14405:14418  uint256 rTeam */\n      0x00\n        /* \"RhinuERC.sol\":14421:14443  tTeam.mul(currentRate) */\n      tag_350\n        /* \"RhinuERC.sol\":14421:14426  tTeam */\n      dup9\n        /* \"RhinuERC.sol\":14431:14442  currentRate */\n      dup9\n        /* \"RhinuERC.sol\":14421:14430  tTeam.mul */\n      tag_335\n        /* \"RhinuERC.sol\":14421:14443  tTeam.mul(currentRate) */\n      jump\t// in\n    tag_350:\n        /* \"RhinuERC.sol\":14405:14443  uint256 rTeam = tTeam.mul(currentRate) */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":14454:14477  uint256 rTransferAmount */\n      0x00\n        /* \"RhinuERC.sol\":14480:14508  rAmount.sub(rFee).sub(rTeam) */\n      tag_351\n        /* \"RhinuERC.sol\":14405:14443  uint256 rTeam = tTeam.mul(currentRate) */\n      dup3\n        /* \"RhinuERC.sol\":14480:14497  rAmount.sub(rFee) */\n      tag_346\n        /* \"RhinuERC.sol\":14480:14487  rAmount */\n      dup7\n        /* \"RhinuERC.sol\":14492:14496  rFee */\n      dup7\n        /* \"RhinuERC.sol\":14480:14491  rAmount.sub */\n      tag_303\n        /* \"RhinuERC.sol\":14480:14497  rAmount.sub(rFee) */\n      jump\t// in\n        /* \"RhinuERC.sol\":14480:14508  rAmount.sub(rFee).sub(rTeam) */\n    tag_351:\n        /* \"RhinuERC.sol\":14527:14534  rAmount */\n      swap4\n      swap12\n      swap4\n      swap11\n      pop\n        /* \"RhinuERC.sol\":14553:14557  rFee */\n      swap2\n      swap9\n      pop\n        /* \"RhinuERC.sol\":14157:14566  function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\r... */\n      swap2\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RhinuERC.sol\":2555:2801  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_335:\n        /* \"RhinuERC.sol\":2613:2620  uint256 */\n      0x00\n        /* \"RhinuERC.sol\":2637:2643  a == 0 */\n      dup3\n        /* \"RhinuERC.sol\":2633:2680  if (a == 0) {\r... */\n      tag_354\n      jumpi\n      pop\n        /* \"RhinuERC.sol\":2667:2668  0 */\n      0x00\n        /* \"RhinuERC.sol\":2660:2668  return 0 */\n      jump(tag_106)\n        /* \"RhinuERC.sol\":2633:2680  if (a == 0) {\r... */\n    tag_354:\n        /* \"RhinuERC.sol\":2690:2699  uint256 c */\n      0x00\n        /* \"RhinuERC.sol\":2702:2707  a * b */\n      tag_355\n        /* \"RhinuERC.sol\":2706:2707  b */\n      dup4\n        /* \"RhinuERC.sol\":2702:2703  a */\n      dup6\n        /* \"RhinuERC.sol\":2702:2707  a * b */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"RhinuERC.sol\":2690:2707  uint256 c = a * b */\n      swap1\n      pop\n        /* \"RhinuERC.sol\":2735:2736  b */\n      dup3\n        /* \"RhinuERC.sol\":2726:2731  c / a */\n      tag_357\n        /* \"RhinuERC.sol\":2730:2731  a */\n      dup6\n        /* \"RhinuERC.sol\":2690:2707  uint256 c = a * b */\n      dup4\n        /* \"RhinuERC.sol\":2726:2731  c / a */\n      tag_315\n      jump\t// in\n    tag_357:\n        /* \"RhinuERC.sol\":2726:2736  c / a == b */\n      eq\n        /* \"RhinuERC.sol\":2718:2774  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7888:7890   */\n      0x20\n        /* \"RhinuERC.sol\":2718:2774  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7870:7891   */\n      mstore\n        /* \"#utility.yul\":7927:7929   */\n      0x21\n        /* \"#utility.yul\":7907:7925   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7900:7930   */\n      mstore\n        /* \"#utility.yul\":7966:8000   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":7946:7964   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7939:8001   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":8017:8035   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8010:8041   */\n      mstore\n        /* \"#utility.yul\":8058:8077   */\n      0x84\n      add\n        /* \"RhinuERC.sol\":2718:2774  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_123\n        /* \"#utility.yul\":7860:8083   */\n      jump\n        /* \"#utility.yul\":14:148   */\n    tag_362:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":111:142   */\n      tag_364\n        /* \"#utility.yul\":82:102   */\n      dup2\n        /* \"#utility.yul\":111:142   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":63:148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":153:410   */\n    tag_51:\n        /* \"#utility.yul\":212:218   */\n      0x00\n        /* \"#utility.yul\":265:267   */\n      0x20\n        /* \"#utility.yul\":253:262   */\n      dup3\n        /* \"#utility.yul\":244:251   */\n      dup5\n        /* \"#utility.yul\":240:263   */\n      sub\n        /* \"#utility.yul\":236:268   */\n      slt\n        /* \"#utility.yul\":233:235   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":286:292   */\n      dup1\n        /* \"#utility.yul\":278:284   */\n      dup2\n        /* \"#utility.yul\":271:293   */\n      revert\n        /* \"#utility.yul\":233:235   */\n    tag_367:\n        /* \"#utility.yul\":330:339   */\n      dup2\n        /* \"#utility.yul\":317:340   */\n      calldataload\n        /* \"#utility.yul\":349:380   */\n      tag_272\n        /* \"#utility.yul\":374:379   */\n      dup2\n        /* \"#utility.yul\":349:380   */\n      tag_365\n      jump\t// in\n        /* \"#utility.yul\":415:676   */\n    tag_180:\n        /* \"#utility.yul\":485:491   */\n      0x00\n        /* \"#utility.yul\":538:540   */\n      0x20\n        /* \"#utility.yul\":526:535   */\n      dup3\n        /* \"#utility.yul\":517:524   */\n      dup5\n        /* \"#utility.yul\":513:536   */\n      sub\n        /* \"#utility.yul\":509:541   */\n      slt\n        /* \"#utility.yul\":506:508   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":559:565   */\n      dup1\n        /* \"#utility.yul\":551:557   */\n      dup2\n        /* \"#utility.yul\":544:566   */\n      revert\n        /* \"#utility.yul\":506:508   */\n    tag_370:\n        /* \"#utility.yul\":596:605   */\n      dup2\n        /* \"#utility.yul\":590:606   */\n      mload\n        /* \"#utility.yul\":615:646   */\n      tag_272\n        /* \"#utility.yul\":640:645   */\n      dup2\n        /* \"#utility.yul\":615:646   */\n      tag_365\n      jump\t// in\n        /* \"#utility.yul\":681:1079   */\n    tag_102:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":757:763   */\n      dup1\n        /* \"#utility.yul\":810:812   */\n      0x40\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":789:796   */\n      dup6\n        /* \"#utility.yul\":785:808   */\n      sub\n        /* \"#utility.yul\":781:813   */\n      slt\n        /* \"#utility.yul\":778:780   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":831:837   */\n      dup1\n        /* \"#utility.yul\":823:829   */\n      dup2\n        /* \"#utility.yul\":816:838   */\n      revert\n        /* \"#utility.yul\":778:780   */\n    tag_373:\n        /* \"#utility.yul\":875:884   */\n      dup3\n        /* \"#utility.yul\":862:885   */\n      calldataload\n        /* \"#utility.yul\":894:925   */\n      tag_374\n        /* \"#utility.yul\":919:924   */\n      dup2\n        /* \"#utility.yul\":894:925   */\n      tag_365\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":944:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":1001:1003   */\n      0x20\n        /* \"#utility.yul\":986:1004   */\n      dup4\n      add\n        /* \"#utility.yul\":973:1005   */\n      calldataload\n        /* \"#utility.yul\":1014:1047   */\n      tag_375\n        /* \"#utility.yul\":973:1005   */\n      dup2\n        /* \"#utility.yul\":1014:1047   */\n      tag_365\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1066:1073   */\n      dup1\n        /* \"#utility.yul\":1056:1073   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":768:1079   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1084:1550   */\n    tag_45:\n        /* \"#utility.yul\":1161:1167   */\n      0x00\n        /* \"#utility.yul\":1169:1175   */\n      dup1\n        /* \"#utility.yul\":1177:1183   */\n      0x00\n        /* \"#utility.yul\":1230:1232   */\n      0x60\n        /* \"#utility.yul\":1218:1227   */\n      dup5\n        /* \"#utility.yul\":1209:1216   */\n      dup7\n        /* \"#utility.yul\":1205:1228   */\n      sub\n        /* \"#utility.yul\":1201:1233   */\n      slt\n        /* \"#utility.yul\":1198:1200   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1251:1257   */\n      dup1\n        /* \"#utility.yul\":1243:1249   */\n      dup2\n        /* \"#utility.yul\":1236:1258   */\n      revert\n        /* \"#utility.yul\":1198:1200   */\n    tag_377:\n        /* \"#utility.yul\":1295:1304   */\n      dup4\n        /* \"#utility.yul\":1282:1305   */\n      calldataload\n        /* \"#utility.yul\":1314:1345   */\n      tag_378\n        /* \"#utility.yul\":1339:1344   */\n      dup2\n        /* \"#utility.yul\":1314:1345   */\n      tag_365\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1364:1369   */\n      swap3\n      pop\n        /* \"#utility.yul\":1421:1423   */\n      0x20\n        /* \"#utility.yul\":1406:1424   */\n      dup5\n      add\n        /* \"#utility.yul\":1393:1425   */\n      calldataload\n        /* \"#utility.yul\":1434:1467   */\n      tag_379\n        /* \"#utility.yul\":1393:1425   */\n      dup2\n        /* \"#utility.yul\":1434:1467   */\n      tag_365\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1188:1550   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1486:1493   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1540:1542   */\n      0x40\n        /* \"#utility.yul\":1525:1543   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1512:1544   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1188:1550   */\n      jump\t// out\n        /* \"#utility.yul\":1555:1880   */\n    tag_33:\n        /* \"#utility.yul\":1623:1629   */\n      0x00\n        /* \"#utility.yul\":1631:1637   */\n      dup1\n        /* \"#utility.yul\":1684:1686   */\n      0x40\n        /* \"#utility.yul\":1672:1681   */\n      dup4\n        /* \"#utility.yul\":1663:1670   */\n      dup6\n        /* \"#utility.yul\":1659:1682   */\n      sub\n        /* \"#utility.yul\":1655:1687   */\n      slt\n        /* \"#utility.yul\":1652:1654   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1705:1711   */\n      dup2\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1690:1712   */\n      revert\n        /* \"#utility.yul\":1652:1654   */\n    tag_381:\n        /* \"#utility.yul\":1749:1758   */\n      dup3\n        /* \"#utility.yul\":1736:1759   */\n      calldataload\n        /* \"#utility.yul\":1768:1799   */\n      tag_382\n        /* \"#utility.yul\":1793:1798   */\n      dup2\n        /* \"#utility.yul\":1768:1799   */\n      tag_365\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1818:1823   */\n      swap5\n        /* \"#utility.yul\":1870:1872   */\n      0x20\n        /* \"#utility.yul\":1855:1873   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1842:1874   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1642:1880   */\n      jump\t// out\n        /* \"#utility.yul\":1885:3062   */\n    tag_91:\n        /* \"#utility.yul\":1969:1975   */\n      0x00\n        /* \"#utility.yul\":2000:2002   */\n      0x20\n        /* \"#utility.yul\":2043:2045   */\n      dup1\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2013   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2064:2070   */\n      dup2\n        /* \"#utility.yul\":2056:2062   */\n      dup3\n        /* \"#utility.yul\":2049:2071   */\n      revert\n        /* \"#utility.yul\":2011:2013   */\n    tag_384:\n        /* \"#utility.yul\":2109:2118   */\n      dup3\n        /* \"#utility.yul\":2096:2119   */\n      calldataload\n        /* \"#utility.yul\":2138:2156   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2179:2181   */\n      dup1\n        /* \"#utility.yul\":2171:2177   */\n      dup3\n        /* \"#utility.yul\":2168:2182   */\n      gt\n        /* \"#utility.yul\":2165:2167   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2200:2206   */\n      dup4\n        /* \"#utility.yul\":2192:2198   */\n      dup5\n        /* \"#utility.yul\":2185:2207   */\n      revert\n        /* \"#utility.yul\":2165:2167   */\n    tag_385:\n        /* \"#utility.yul\":2243:2249   */\n      dup2\n        /* \"#utility.yul\":2232:2241   */\n      dup6\n        /* \"#utility.yul\":2228:2250   */\n      add\n        /* \"#utility.yul\":2218:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2281:2285   */\n      0x1f\n        /* \"#utility.yul\":2277:2279   */\n      dup4\n        /* \"#utility.yul\":2273:2286   */\n      add\n        /* \"#utility.yul\":2269:2296   */\n      slt\n        /* \"#utility.yul\":2259:2261   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2315:2321   */\n      dup4\n        /* \"#utility.yul\":2307:2313   */\n      dup5\n        /* \"#utility.yul\":2300:2322   */\n      revert\n        /* \"#utility.yul\":2259:2261   */\n    tag_386:\n        /* \"#utility.yul\":2356:2358   */\n      dup2\n        /* \"#utility.yul\":2343:2359   */\n      calldataload\n        /* \"#utility.yul\":2378:2380   */\n      dup2\n        /* \"#utility.yul\":2374:2376   */\n      dup2\n        /* \"#utility.yul\":2371:2381   */\n      gt\n        /* \"#utility.yul\":2368:2370   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2384:2402   */\n      tag_388\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2430:2432   */\n      dup1\n        /* \"#utility.yul\":2427:2428   */\n      0x05\n        /* \"#utility.yul\":2423:2433   */\n      shl\n        /* \"#utility.yul\":2462:2464   */\n      0x40\n        /* \"#utility.yul\":2456:2465   */\n      mload\n        /* \"#utility.yul\":2525:2527   */\n      0x1f\n        /* \"#utility.yul\":2521:2528   */\n      not\n        /* \"#utility.yul\":2516:2518   */\n      0x3f\n        /* \"#utility.yul\":2512:2514   */\n      dup4\n        /* \"#utility.yul\":2508:2519   */\n      add\n        /* \"#utility.yul\":2504:2529   */\n      and\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2492:2530   */\n      add\n        /* \"#utility.yul\":2580:2586   */\n      dup2\n        /* \"#utility.yul\":2568:2578   */\n      dup2\n        /* \"#utility.yul\":2565:2587   */\n      lt\n        /* \"#utility.yul\":2560:2562   */\n      dup6\n        /* \"#utility.yul\":2548:2558   */\n      dup3\n        /* \"#utility.yul\":2545:2563   */\n      gt\n        /* \"#utility.yul\":2542:2588   */\n      or\n        /* \"#utility.yul\":2539:2541   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":2591:2609   */\n      tag_391\n      tag_389\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2627:2629   */\n      0x40\n        /* \"#utility.yul\":2620:2642   */\n      mstore\n        /* \"#utility.yul\":2677:2695   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2711:2726   */\n      dup6\n      dup2\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":2746:2757   */\n      dup5\n      dup7\n      add\n        /* \"#utility.yul\":2776:2787   */\n      dup3\n      dup7\n      add\n        /* \"#utility.yul\":2772:2792   */\n      dup8\n      add\n        /* \"#utility.yul\":2769:2802   */\n      dup11\n      lt\n        /* \"#utility.yul\":2766:2768   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2820:2826   */\n      dup8\n        /* \"#utility.yul\":2812:2818   */\n      dup9\n        /* \"#utility.yul\":2805:2827   */\n      revert\n        /* \"#utility.yul\":2766:2768   */\n    tag_392:\n        /* \"#utility.yul\":2847:2853   */\n      dup8\n        /* \"#utility.yul\":2838:2853   */\n      swap6\n      pop\n        /* \"#utility.yul\":2862:3031   */\n    tag_393:\n        /* \"#utility.yul\":2876:2878   */\n      dup4\n        /* \"#utility.yul\":2873:2874   */\n      dup7\n        /* \"#utility.yul\":2870:2879   */\n      lt\n        /* \"#utility.yul\":2862:3031   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2933:2956   */\n      tag_396\n        /* \"#utility.yul\":2952:2955   */\n      dup2\n        /* \"#utility.yul\":2933:2956   */\n      tag_362\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2921:2957   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2894:2895   */\n      0x01\n        /* \"#utility.yul\":2887:2896   */\n      swap6\n      swap1\n      swap6\n      add\n      swap5\n        /* \"#utility.yul\":2977:2989   */\n      swap4\n      dup7\n      add\n      swap4\n        /* \"#utility.yul\":3009:3021   */\n      dup7\n      add\n        /* \"#utility.yul\":2862:3031   */\n      jump(tag_393)\n    tag_395:\n      pop\n        /* \"#utility.yul\":3050:3056   */\n      swap9\n        /* \"#utility.yul\":1980:3062   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3318   */\n    tag_61:\n        /* \"#utility.yul\":3123:3129   */\n      0x00\n        /* \"#utility.yul\":3176:3178   */\n      0x20\n        /* \"#utility.yul\":3164:3173   */\n      dup3\n        /* \"#utility.yul\":3155:3162   */\n      dup5\n        /* \"#utility.yul\":3151:3174   */\n      sub\n        /* \"#utility.yul\":3147:3179   */\n      slt\n        /* \"#utility.yul\":3144:3146   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":3197:3203   */\n      dup1\n        /* \"#utility.yul\":3189:3195   */\n      dup2\n        /* \"#utility.yul\":3182:3204   */\n      revert\n        /* \"#utility.yul\":3144:3146   */\n    tag_398:\n        /* \"#utility.yul\":3241:3250   */\n      dup2\n        /* \"#utility.yul\":3228:3251   */\n      calldataload\n        /* \"#utility.yul\":3260:3288   */\n      tag_272\n        /* \"#utility.yul\":3282:3287   */\n      dup2\n        /* \"#utility.yul\":3260:3288   */\n      tag_400\n      jump\t// in\n        /* \"#utility.yul\":3323:3578   */\n    tag_206:\n        /* \"#utility.yul\":3390:3396   */\n      0x00\n        /* \"#utility.yul\":3443:3445   */\n      0x20\n        /* \"#utility.yul\":3431:3440   */\n      dup3\n        /* \"#utility.yul\":3422:3429   */\n      dup5\n        /* \"#utility.yul\":3418:3441   */\n      sub\n        /* \"#utility.yul\":3414:3446   */\n      slt\n        /* \"#utility.yul\":3411:3413   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3464:3470   */\n      dup1\n        /* \"#utility.yul\":3456:3462   */\n      dup2\n        /* \"#utility.yul\":3449:3471   */\n      revert\n        /* \"#utility.yul\":3411:3413   */\n    tag_402:\n        /* \"#utility.yul\":3501:3510   */\n      dup2\n        /* \"#utility.yul\":3495:3511   */\n      mload\n        /* \"#utility.yul\":3520:3548   */\n      tag_272\n        /* \"#utility.yul\":3542:3547   */\n      dup2\n        /* \"#utility.yul\":3520:3548   */\n      tag_400\n      jump\t// in\n        /* \"#utility.yul\":3583:3899   */\n    tag_199:\n        /* \"#utility.yul\":3671:3677   */\n      0x00\n        /* \"#utility.yul\":3679:3685   */\n      dup1\n        /* \"#utility.yul\":3687:3693   */\n      0x00\n        /* \"#utility.yul\":3740:3742   */\n      0x60\n        /* \"#utility.yul\":3728:3737   */\n      dup5\n        /* \"#utility.yul\":3719:3726   */\n      dup7\n        /* \"#utility.yul\":3715:3738   */\n      sub\n        /* \"#utility.yul\":3711:3743   */\n      slt\n        /* \"#utility.yul\":3708:3710   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3761:3767   */\n      dup3\n        /* \"#utility.yul\":3753:3759   */\n      dup4\n        /* \"#utility.yul\":3746:3768   */\n      revert\n        /* \"#utility.yul\":3708:3710   */\n    tag_405:\n        /* \"#utility.yul\":3795:3804   */\n      dup4\n        /* \"#utility.yul\":3789:3805   */\n      mload\n        /* \"#utility.yul\":3779:3805   */\n      swap3\n      pop\n        /* \"#utility.yul\":3845:3847   */\n      0x20\n        /* \"#utility.yul\":3834:3843   */\n      dup5\n        /* \"#utility.yul\":3830:3848   */\n      add\n        /* \"#utility.yul\":3824:3849   */\n      mload\n        /* \"#utility.yul\":3814:3849   */\n      swap2\n      pop\n        /* \"#utility.yul\":3889:3891   */\n      0x40\n        /* \"#utility.yul\":3878:3887   */\n      dup5\n        /* \"#utility.yul\":3874:3892   */\n      add\n        /* \"#utility.yul\":3868:3893   */\n      mload\n        /* \"#utility.yul\":3858:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3698:3899   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5504:6107   */\n    tag_29:\n        /* \"#utility.yul\":5616:5620   */\n      0x00\n        /* \"#utility.yul\":5645:5647   */\n      0x20\n        /* \"#utility.yul\":5674:5676   */\n      dup1\n        /* \"#utility.yul\":5663:5672   */\n      dup4\n        /* \"#utility.yul\":5656:5677   */\n      mstore\n        /* \"#utility.yul\":5706:5712   */\n      dup4\n        /* \"#utility.yul\":5700:5713   */\n      mload\n        /* \"#utility.yul\":5749:5755   */\n      dup1\n        /* \"#utility.yul\":5744:5746   */\n      dup3\n        /* \"#utility.yul\":5733:5742   */\n      dup6\n        /* \"#utility.yul\":5729:5747   */\n      add\n        /* \"#utility.yul\":5722:5756   */\n      mstore\n        /* \"#utility.yul\":5774:5778   */\n      dup3\n        /* \"#utility.yul\":5787:5927   */\n    tag_412:\n        /* \"#utility.yul\":5801:5807   */\n      dup2\n        /* \"#utility.yul\":5798:5799   */\n      dup2\n        /* \"#utility.yul\":5795:5808   */\n      lt\n        /* \"#utility.yul\":5787:5927   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5896:5910   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5892:5915   */\n      dup4\n      add\n        /* \"#utility.yul\":5886:5916   */\n      mload\n        /* \"#utility.yul\":5862:5879   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":5881:5883   */\n      0x40\n        /* \"#utility.yul\":5858:5884   */\n      add\n        /* \"#utility.yul\":5851:5917   */\n      mstore\n        /* \"#utility.yul\":5816:5826   */\n      dup3\n      add\n        /* \"#utility.yul\":5787:5927   */\n      jump(tag_412)\n    tag_414:\n        /* \"#utility.yul\":5945:5951   */\n      dup2\n        /* \"#utility.yul\":5942:5943   */\n      dup2\n        /* \"#utility.yul\":5939:5952   */\n      gt\n        /* \"#utility.yul\":5936:5938   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6015:6019   */\n      dup4\n        /* \"#utility.yul\":6010:6012   */\n      0x40\n        /* \"#utility.yul\":6001:6007   */\n      dup4\n        /* \"#utility.yul\":5990:5999   */\n      dup8\n        /* \"#utility.yul\":5986:6008   */\n      add\n        /* \"#utility.yul\":5982:6013   */\n      add\n        /* \"#utility.yul\":5975:6020   */\n      mstore\n        /* \"#utility.yul\":5936:5938   */\n    tag_415:\n      pop\n        /* \"#utility.yul\":6091:6093   */\n      0x1f\n        /* \"#utility.yul\":6070:6085   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6066:6095   */\n      and\n        /* \"#utility.yul\":6051:6096   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6098:6100   */\n      0x40\n        /* \"#utility.yul\":6047:6101   */\n      add\n      swap4\n        /* \"#utility.yul\":5625:6107   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8088:8444   */\n    tag_124:\n        /* \"#utility.yul\":8290:8292   */\n      0x20\n        /* \"#utility.yul\":8272:8293   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8309:8327   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8302:8332   */\n      mstore\n        /* \"#utility.yul\":8368:8402   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8363:8365   */\n      0x40\n        /* \"#utility.yul\":8348:8366   */\n      dup3\n      add\n        /* \"#utility.yul\":8341:8403   */\n      mstore\n        /* \"#utility.yul\":8435:8437   */\n      0x60\n        /* \"#utility.yul\":8420:8438   */\n      add\n      swap1\n        /* \"#utility.yul\":8262:8444   */\n      jump\t// out\n        /* \"#utility.yul\":10204:11187   */\n    tag_285:\n        /* \"#utility.yul\":10466:10470   */\n      0x00\n        /* \"#utility.yul\":10514:10517   */\n      0xa0\n        /* \"#utility.yul\":10503:10512   */\n      dup3\n        /* \"#utility.yul\":10499:10518   */\n      add\n        /* \"#utility.yul\":10545:10551   */\n      dup8\n        /* \"#utility.yul\":10534:10543   */\n      dup4\n        /* \"#utility.yul\":10527:10552   */\n      mstore\n        /* \"#utility.yul\":10571:10573   */\n      0x20\n        /* \"#utility.yul\":10609:10615   */\n      dup8\n        /* \"#utility.yul\":10604:10606   */\n      dup2\n        /* \"#utility.yul\":10593:10602   */\n      dup6\n        /* \"#utility.yul\":10589:10607   */\n      add\n        /* \"#utility.yul\":10582:10616   */\n      mstore\n        /* \"#utility.yul\":10652:10655   */\n      0xa0\n        /* \"#utility.yul\":10647:10649   */\n      0x40\n        /* \"#utility.yul\":10636:10645   */\n      dup6\n        /* \"#utility.yul\":10632:10650   */\n      add\n        /* \"#utility.yul\":10625:10656   */\n      mstore\n        /* \"#utility.yul\":10676:10682   */\n      dup2\n        /* \"#utility.yul\":10711:10717   */\n      dup8\n        /* \"#utility.yul\":10705:10718   */\n      mload\n        /* \"#utility.yul\":10742:10748   */\n      dup1\n        /* \"#utility.yul\":10734:10740   */\n      dup5\n        /* \"#utility.yul\":10727:10749   */\n      mstore\n        /* \"#utility.yul\":10780:10783   */\n      0xc0\n        /* \"#utility.yul\":10769:10778   */\n      dup7\n        /* \"#utility.yul\":10765:10784   */\n      add\n        /* \"#utility.yul\":10758:10784   */\n      swap2\n      pop\n        /* \"#utility.yul\":10819:10821   */\n      dup3\n        /* \"#utility.yul\":10811:10817   */\n      dup10\n        /* \"#utility.yul\":10807:10822   */\n      add\n        /* \"#utility.yul\":10793:10822   */\n      swap4\n      pop\n        /* \"#utility.yul\":10840:10844   */\n      dup5\n        /* \"#utility.yul\":10853:11048   */\n    tag_428:\n        /* \"#utility.yul\":10867:10873   */\n      dup2\n        /* \"#utility.yul\":10864:10865   */\n      dup2\n        /* \"#utility.yul\":10861:10874   */\n      lt\n        /* \"#utility.yul\":10853:11048   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10932:10945   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10928:10967   */\n      and\n        /* \"#utility.yul\":10916:10968   */\n      dup4\n      mstore\n        /* \"#utility.yul\":11023:11038   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":10988:11000   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":10964:10965   */\n      0x01\n        /* \"#utility.yul\":10882:10891   */\n      add\n        /* \"#utility.yul\":10853:11048   */\n      jump(tag_428)\n    tag_430:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11104:11136   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":11099:11101   */\n      0x60\n        /* \"#utility.yul\":11084:11102   */\n      dup6\n      add\n        /* \"#utility.yul\":11077:11137   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11168:11171   */\n      0x80\n        /* \"#utility.yul\":11153:11172   */\n      add\n        /* \"#utility.yul\":11146:11181   */\n      mstore\n        /* \"#utility.yul\":11065:11068   */\n      swap4\n        /* \"#utility.yul\":10475:11187   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11381:11509   */\n    tag_240:\n        /* \"#utility.yul\":11421:11424   */\n      0x00\n        /* \"#utility.yul\":11452:11453   */\n      dup3\n        /* \"#utility.yul\":11448:11454   */\n      not\n        /* \"#utility.yul\":11445:11446   */\n      dup3\n        /* \"#utility.yul\":11442:11455   */\n      gt\n        /* \"#utility.yul\":11439:11441   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":11458:11476   */\n      tag_434\n      tag_435\n      jump\t// in\n    tag_434:\n      pop\n        /* \"#utility.yul\":11494:11503   */\n      add\n      swap1\n        /* \"#utility.yul\":11429:11509   */\n      jump\t// out\n        /* \"#utility.yul\":11514:11731   */\n    tag_315:\n        /* \"#utility.yul\":11554:11555   */\n      0x00\n        /* \"#utility.yul\":11580:11581   */\n      dup3\n        /* \"#utility.yul\":11570:11572   */\n      tag_437\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":11605:11636   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11659:11663   */\n      0x12\n        /* \"#utility.yul\":11656:11657   */\n      0x04\n        /* \"#utility.yul\":11649:11664   */\n      mstore\n        /* \"#utility.yul\":11687:11691   */\n      0x24\n        /* \"#utility.yul\":11612:11613   */\n      dup2\n        /* \"#utility.yul\":11677:11692   */\n      revert\n        /* \"#utility.yul\":11570:11572   */\n    tag_437:\n      pop\n        /* \"#utility.yul\":11716:11725   */\n      div\n      swap1\n        /* \"#utility.yul\":11560:11731   */\n      jump\t// out\n        /* \"#utility.yul\":11736:11904   */\n    tag_356:\n        /* \"#utility.yul\":11776:11783   */\n      0x00\n        /* \"#utility.yul\":11842:11843   */\n      dup2\n        /* \"#utility.yul\":11838:11839   */\n      0x00\n        /* \"#utility.yul\":11834:11840   */\n      not\n        /* \"#utility.yul\":11830:11844   */\n      div\n        /* \"#utility.yul\":11827:11828   */\n      dup4\n        /* \"#utility.yul\":11824:11845   */\n      gt\n        /* \"#utility.yul\":11819:11820   */\n      dup3\n        /* \"#utility.yul\":11812:11821   */\n      iszero\n        /* \"#utility.yul\":11805:11822   */\n      iszero\n        /* \"#utility.yul\":11801:11846   */\n      and\n        /* \"#utility.yul\":11798:11800   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":11849:11867   */\n      tag_440\n      tag_435\n      jump\t// in\n    tag_440:\n      pop\n        /* \"#utility.yul\":11889:11898   */\n      mul\n      swap1\n        /* \"#utility.yul\":11788:11904   */\n      jump\t// out\n        /* \"#utility.yul\":11909:12034   */\n    tag_257:\n        /* \"#utility.yul\":11949:11953   */\n      0x00\n        /* \"#utility.yul\":11977:11978   */\n      dup3\n        /* \"#utility.yul\":11974:11975   */\n      dup3\n        /* \"#utility.yul\":11971:11979   */\n      lt\n        /* \"#utility.yul\":11968:11970   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":11982:12000   */\n      tag_443\n      tag_435\n      jump\t// in\n    tag_443:\n      pop\n        /* \"#utility.yul\":12019:12028   */\n      sub\n      swap1\n        /* \"#utility.yul\":11958:12034   */\n      jump\t// out\n        /* \"#utility.yul\":12039:12174   */\n    tag_160:\n        /* \"#utility.yul\":12078:12081   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":12099:12116   */\n      dup3\n      eq\n        /* \"#utility.yul\":12096:12098   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":12119:12137   */\n      tag_446\n      tag_435\n      jump\t// in\n    tag_446:\n      pop\n        /* \"#utility.yul\":12166:12167   */\n      0x01\n        /* \"#utility.yul\":12155:12168   */\n      add\n      swap1\n        /* \"#utility.yul\":12086:12174   */\n      jump\t// out\n        /* \"#utility.yul\":12179:12306   */\n    tag_435:\n        /* \"#utility.yul\":12240:12250   */\n      0x4e487b71\n        /* \"#utility.yul\":12235:12238   */\n      0xe0\n        /* \"#utility.yul\":12231:12251   */\n      shl\n        /* \"#utility.yul\":12228:12229   */\n      0x00\n        /* \"#utility.yul\":12221:12252   */\n      mstore\n        /* \"#utility.yul\":12271:12275   */\n      0x11\n        /* \"#utility.yul\":12268:12269   */\n      0x04\n        /* \"#utility.yul\":12261:12276   */\n      mstore\n        /* \"#utility.yul\":12295:12299   */\n      0x24\n        /* \"#utility.yul\":12292:12293   */\n      0x00\n        /* \"#utility.yul\":12285:12300   */\n      revert\n        /* \"#utility.yul\":12311:12438   */\n    tag_389:\n        /* \"#utility.yul\":12372:12382   */\n      0x4e487b71\n        /* \"#utility.yul\":12367:12370   */\n      0xe0\n        /* \"#utility.yul\":12363:12383   */\n      shl\n        /* \"#utility.yul\":12360:12361   */\n      0x00\n        /* \"#utility.yul\":12353:12384   */\n      mstore\n        /* \"#utility.yul\":12403:12407   */\n      0x41\n        /* \"#utility.yul\":12400:12401   */\n      0x04\n        /* \"#utility.yul\":12393:12408   */\n      mstore\n        /* \"#utility.yul\":12427:12431   */\n      0x24\n        /* \"#utility.yul\":12424:12425   */\n      0x00\n        /* \"#utility.yul\":12417:12432   */\n      revert\n        /* \"#utility.yul\":12443:12574   */\n    tag_365:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12518:12549   */\n      dup2\n      and\n        /* \"#utility.yul\":12508:12550   */\n      dup2\n      eq\n        /* \"#utility.yul\":12498:12500   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":12564:12565   */\n      0x00\n        /* \"#utility.yul\":12561:12562   */\n      dup1\n        /* \"#utility.yul\":12554:12566   */\n      revert\n        /* \"#utility.yul\":12579:12697   */\n    tag_400:\n        /* \"#utility.yul\":12665:12670   */\n      dup1\n        /* \"#utility.yul\":12658:12671   */\n      iszero\n        /* \"#utility.yul\":12651:12672   */\n      iszero\n        /* \"#utility.yul\":12644:12649   */\n      dup2\n        /* \"#utility.yul\":12641:12673   */\n      eq\n        /* \"#utility.yul\":12631:12633   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":12687:12688   */\n      0x00\n        /* \"#utility.yul\":12684:12685   */\n      dup1\n        /* \"#utility.yul\":12677:12689   */\n      revert\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220c19331182751b28b2b0d7444378984029d8715d63ac89e85ba335fc7daabc5f964736f6c63430008040033\n}\n",
          "bytecode": {
            "generatedSources": [
              {
                "ast": {
                  "nodeType": "YulBlock",
                  "src": "0:640:1",
                  "statements": [
                    {
                      "nodeType": "YulBlock",
                      "src": "6:3:1",
                      "statements": []
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "115:76:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "125:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "137:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "148:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "133:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "133:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "125:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:9:1"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "160:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "160:25:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "160:25:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "84:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "95:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "106:4:1",
                          "type": ""
                        }
                      ],
                      "src": "14:177:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "245:179:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "275:117:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "diff",
                                        "nodeType": "YulIdentifier",
                                        "src": "296:4:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "306:3:1",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "311:10:1",
                                            "type": "",
                                            "value": "0x4e487b71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "302:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "302:20:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "289:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "289:34:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "289:34:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "343:1:1",
                                        "type": "",
                                        "value": "4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "346:4:1",
                                        "type": "",
                                        "value": "0x11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "336:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "336:15:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "336:15:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "diff",
                                        "nodeType": "YulIdentifier",
                                        "src": "371:4:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "377:4:1",
                                        "type": "",
                                        "value": "0x24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "364:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "364:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "364:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "264:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "258:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "258:8:1"
                            },
                            "nodeType": "YulIf",
                            "src": "255:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "401:17:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "409:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "409:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "diff",
                                "nodeType": "YulIdentifier",
                                "src": "401:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "checked_sub_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "227:1:1",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "230:1:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "diff",
                          "nodeType": "YulTypedName",
                          "src": "236:4:1",
                          "type": ""
                        }
                      ],
                      "src": "196:228:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "467:171:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "498:111:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "519:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "526:3:1",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "531:10:1",
                                            "type": "",
                                            "value": "0x4e487b71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "522:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "522:20:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "512:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "512:31:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "512:31:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "563:1:1",
                                        "type": "",
                                        "value": "4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "566:4:1",
                                        "type": "",
                                        "value": "0x12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "556:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "556:15:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "556:15:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "591:1:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "594:4:1",
                                        "type": "",
                                        "value": "0x24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "584:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "584:15:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "584:15:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "487:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "480:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "480:9:1"
                            },
                            "nodeType": "YulIf",
                            "src": "477:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "618:14:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "627:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "630:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "mod",
                                "nodeType": "YulIdentifier",
                                "src": "623:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "623:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "r",
                                "nodeType": "YulIdentifier",
                                "src": "618:1:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "mod_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "452:1:1",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "455:1:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "r",
                          "nodeType": "YulTypedName",
                          "src": "461:1:1",
                          "type": ""
                        }
                      ],
                      "src": "429:209:1"
                    }
                  ]
                },
                "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n}",
                "id": 1,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "linkReferences": {},
            "object": "60806040526200001e6b033b2e3c9fd0803ce800000060001962000245565b6200002c9060001962000221565b600855600f805462ffffff60a81b191690556b033b2e3c9fd0803ce80000006010553480156200005b57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600c80546001600160a01b0319908116730efffe4828ddd40166bbb13e3fbe089f622ed0b217909155600d805490911673d6f8aaf7f8d4eede2c7b2cb38709c13755ae27d017905560085460026000620000f43390565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506001600560006200012e6200021260201b60201c565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526005909352818320805485166001908117909155600c54821684528284208054861682179055600d549091168352912080549092161790556200019f3390565b6001600160a01b0316731f135511975b0d63ce9e5ad1f123903a6fc5319d6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6b033b2e3c9fd0803ce80000006040516200020491815260200190565b60405180910390a362000266565b6000546001600160a01b031690565b6000828210156200024057634e487b7160e01b81526011600452602481fd5b500390565b6000826200026157634e487b7160e01b81526012600452602481fd5b500690565b6119de80620002766000396000f3fe6080604052600436106101025760003560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb14610294578063b515566a146102b4578063c3c8cd80146102d4578063c9567bf9146102e9578063dd62ed3e146102fe57600080fd5b806370a0823114610237578063715018a6146102575780638da5cb5b1461026c57806395d89b411461010e57600080fd5b8063273123b7116100d1578063273123b7146101c4578063313ce567146101e65780635932ead1146102025780636fc3eaec1461022257600080fd5b806306fdde031461010e578063095ea7b31461014b57806318160ddd1461017b57806323b872dd146101a457600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201825260058152645248494e5560d81b6020820152905161014291906117b0565b60405180910390f35b34801561015757600080fd5b5061016b610166366004611659565b610344565b6040519015158152602001610142565b34801561018757600080fd5b506b033b2e3c9fd0803ce80000005b604051908152602001610142565b3480156101b057600080fd5b5061016b6101bf366004611619565b61035b565b3480156101d057600080fd5b506101e46101df3660046115a9565b6103c4565b005b3480156101f257600080fd5b5060405160098152602001610142565b34801561020e57600080fd5b506101e461021d36600461174b565b610418565b34801561022e57600080fd5b506101e4610460565b34801561024357600080fd5b506101966102523660046115a9565b61048d565b34801561026357600080fd5b506101e46104af565b34801561027857600080fd5b506000546040516001600160a01b039091168152602001610142565b3480156102a057600080fd5b5061016b6102af366004611659565b610523565b3480156102c057600080fd5b506101e46102cf366004611684565b610530565b3480156102e057600080fd5b506101e46105d4565b3480156102f557600080fd5b506101e461060a565b34801561030a57600080fd5b506101966103193660046115e1565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b60006103513384846109d3565b5060015b92915050565b6000610368848484610af7565b6103ba84336103b585604051806060016040528060288152602001611981602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610e44565b6109d3565b5060019392505050565b6000546001600160a01b031633146103f75760405162461bcd60e51b81526004016103ee90611803565b60405180910390fd5b6001600160a01b03166000908152600660205260409020805460ff19169055565b6000546001600160a01b031633146104425760405162461bcd60e51b81526004016103ee90611803565b600f8054911515600160b81b0260ff60b81b19909216919091179055565b600c546001600160a01b0316336001600160a01b03161461048057600080fd5b4761048a81610e7e565b50565b6001600160a01b03811660009081526002602052604081205461035590610f03565b6000546001600160a01b031633146104d95760405162461bcd60e51b81526004016103ee90611803565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610351338484610af7565b6000546001600160a01b0316331461055a5760405162461bcd60e51b81526004016103ee90611803565b60005b81518110156105d05760016006600084848151811061058c57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806105c881611916565b91505061055d565b5050565b600c546001600160a01b0316336001600160a01b0316146105f457600080fd5b60006105ff3061048d565b905061048a81610f87565b6000546001600160a01b031633146106345760405162461bcd60e51b81526004016103ee90611803565b600f54600160a01b900460ff161561068e5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103ee565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106ce30826b033b2e3c9fd0803ce80000006109d3565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561070757600080fd5b505afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f91906115c5565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561078757600080fd5b505afa15801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906115c5565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f91906115c5565b600f80546001600160a01b0319166001600160a01b03928316179055600e541663f305d719473061086f8161048d565b6000806108846000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c4016060604051808303818588803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109209190611783565b5050600f80546a1306707f9469597700000060105563ffff00ff60a01b198116630101000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b390604401602060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190611767565b6001600160a01b038316610a355760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ee565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ee565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b5b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ee565b6001600160a01b038216610bbd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ee565b60008111610c1f5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103ee565b6002600a908155600b556000546001600160a01b03848116911614801590610c5557506000546001600160a01b03838116911614155b15610e34576001600160a01b03831660009081526006602052604090205460ff16158015610c9c57506001600160a01b03821660009081526006602052604090205460ff16155b610ca557600080fd5b600f546001600160a01b038481169116148015610cd05750600e546001600160a01b03838116911614155b8015610cf557506001600160a01b03821660009081526005602052604090205460ff16155b8015610d0a5750600f54600160b81b900460ff165b15610d6757601054811115610d1e57600080fd5b6001600160a01b0382166000908152600760205260409020544211610d4257600080fd5b610d4d42601e6118a8565b6001600160a01b0383166000908152600760205260409020555b600f546001600160a01b038381169116148015610d925750600e546001600160a01b03848116911614155b8015610db757506001600160a01b03831660009081526005602052604090205460ff16155b15610dc7576002600a908155600b555b6000610dd23061048d565b600f54909150600160a81b900460ff16158015610dfd5750600f546001600160a01b03858116911614155b8015610e125750600f54600160b01b900460ff165b15610e3257610e2081610f87565b478015610e3057610e3047610e7e565b505b505b610e3f83838361112c565b505050565b60008184841115610e685760405162461bcd60e51b81526004016103ee91906117b0565b506000610e7584866118ff565b95945050505050565b600c546001600160a01b03166108fc610e98836002611137565b6040518115909202916000818181858888f19350505050158015610ec0573d6000803e3d6000fd5b50600d546001600160a01b03166108fc610edb836002611137565b6040518115909202916000818181858888f193505050501580156105d0573d6000803e3d6000fd5b6000600854821115610f6a5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084016103ee565b6000610f74611179565b9050610f808382611137565b9392505050565b600f805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610fdd57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561103157600080fd5b505afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106991906115c5565b8160018151811061108a57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600e546110b091309116846109d3565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110e9908590600090869030904290600401611838565b600060405180830381600087803b15801561110357600080fd5b505af1158015611117573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b610e3f83838361119c565b6000610f8083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611293565b60008060006111866112c1565b90925090506111958282611137565b9250505090565b6000806000806000806111ae87611309565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506111e09087611366565b6001600160a01b03808b1660009081526002602052604080822093909355908a168152205461120f90866113a8565b6001600160a01b03891660009081526002602052604090205561123181611407565b61123b8483611451565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161128091815260200190565b60405180910390a3505050505050505050565b600081836112b45760405162461bcd60e51b81526004016103ee91906117b0565b506000610e7584866118c0565b60085460009081906b033b2e3c9fd0803ce80000006112e08282611137565b821015611300575050600854926b033b2e3c9fd0803ce800000092509050565b90939092509050565b60008060008060008060008060006113268a600a54600b54611475565b9250925092506000611336611179565b905060008060006113498e8787876114ca565b919e509c509a509598509396509194505050505091939550919395565b6000610f8083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e44565b6000806113b583856118a8565b905083811015610f805760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ee565b6000611411611179565b9050600061141f838361151a565b3060009081526002602052604090205490915061143c90826113a8565b30600090815260026020526040902055505050565b60085461145e9083611366565b60085560095461146e90826113a8565b6009555050565b600080808061148f6064611489898961151a565b90611137565b905060006114a260646114898a8961151a565b905060006114ba826114b48b86611366565b90611366565b9992985090965090945050505050565b60008080806114d9888661151a565b905060006114e7888761151a565b905060006114f5888861151a565b90506000611507826114b48686611366565b939b939a50919850919650505050505050565b60008261152957506000610355565b600061153583856118e0565b90508261154285836118c0565b14610f805760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103ee565b80356115a48161195d565b919050565b6000602082840312156115ba578081fd5b8135610f808161195d565b6000602082840312156115d6578081fd5b8151610f808161195d565b600080604083850312156115f3578081fd5b82356115fe8161195d565b9150602083013561160e8161195d565b809150509250929050565b60008060006060848603121561162d578081fd5b83356116388161195d565b925060208401356116488161195d565b929592945050506040919091013590565b6000806040838503121561166b578182fd5b82356116768161195d565b946020939093013593505050565b60006020808385031215611696578182fd5b823567ffffffffffffffff808211156116ad578384fd5b818501915085601f8301126116c0578384fd5b8135818111156116d2576116d2611947565b8060051b604051601f19603f830116810181811085821117156116f7576116f7611947565b604052828152858101935084860182860187018a1015611715578788fd5b8795505b8386101561173e5761172a81611599565b855260019590950194938601938601611719565b5098975050505050505050565b60006020828403121561175c578081fd5b8135610f8081611972565b600060208284031215611778578081fd5b8151610f8081611972565b600080600060608486031215611797578283fd5b8351925060208401519150604084015190509250925092565b6000602080835283518082850152825b818110156117dc578581018301518582016040015282016117c0565b818111156117ed5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156118875784516001600160a01b031683529383019391830191600101611862565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156118bb576118bb611931565b500190565b6000826118db57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118fa576118fa611931565b500290565b60008282101561191157611911611931565b500390565b600060001982141561192a5761192a611931565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461048a57600080fd5b801515811461048a57600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c19331182751b28b2b0d7444378984029d8715d63ac89e85ba335fc7daabc5f964736f6c63430008040033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x1E PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x0 NOT PUSH3 0x245 JUMP JUMPDEST PUSH3 0x2C SWAP1 PUSH1 0x0 NOT PUSH3 0x221 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0xF DUP1 SLOAD PUSH3 0xFFFFFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x10 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xEFFFE4828DDD40166BBB13E3FBE089F622ED0B2 OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xD6F8AAF7F8D4EEDE2C7B2CB38709C13755AE27D0 OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x2 PUSH1 0x0 PUSH3 0xF4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH3 0x12E PUSH3 0x212 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE ADDRESS DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD DUP6 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xC SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0xD SLOAD SWAP1 SWAP2 AND DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x19F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0x1F135511975B0D63CE9E5AD1F123903A6FC5319D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD PUSH3 0x204 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x240 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x261 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH2 0x19DE DUP1 PUSH3 0x276 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xB515566A EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC9567BF9 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x273123B7 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x273123B7 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x5932EAD1 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x109 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x5248494E55 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH12 0x33B2E3C9FD0803CE8000000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x460 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x4AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x5D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x60A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 CALLER DUP5 DUP5 PUSH2 0x9D3 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368 DUP5 DUP5 DUP5 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x3BA DUP5 CALLER PUSH2 0x3B5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1981 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xB8 SHL MUL PUSH1 0xFF PUSH1 0xB8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE PUSH2 0x48A DUP2 PUSH2 0xE7E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x355 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 CALLER DUP5 DUP5 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x58C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x5C8 DUP2 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x55D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF ADDRESS PUSH2 0x48D JUMP JUMPDEST SWAP1 POP PUSH2 0x48A DUP2 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696E6720697320616C7265616479206F70656E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x6CE ADDRESS DUP3 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x9D3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0xE SLOAD AND PUSH4 0xF305D719 SELFBALANCE ADDRESS PUSH2 0x86F DUP2 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x884 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST POP POP PUSH1 0xF DUP1 SLOAD PUSH11 0x1306707F94695977000000 PUSH1 0x10 SSTORE PUSH4 0xFFFF00FF PUSH1 0xA0 SHL NOT DUP2 AND PUSH4 0x1010001 PUSH1 0xA0 SHL OR SWAP1 SWAP2 SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP2 POP PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA SWAP1 DUP2 SSTORE PUSH1 0xB SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xC55 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xE34 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xCD0 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCF5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD0A JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD67 JUMPI PUSH1 0x10 SLOAD DUP2 GT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4D TIMESTAMP PUSH1 0x1E PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD92 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDB7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x2 PUSH1 0xA SWAP1 DUP2 SSTORE PUSH1 0xB SSTORE JUMPDEST PUSH1 0x0 PUSH2 0xDD2 ADDRESS PUSH2 0x48D JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xDFD JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE12 JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE20 DUP2 PUSH2 0xF87 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xE30 JUMPI PUSH2 0xE30 SELFBALANCE PUSH2 0xE7E JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH2 0xE3F DUP4 DUP4 DUP4 PUSH2 0x112C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE75 DUP5 DUP7 PUSH2 0x18FF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xE98 DUP4 PUSH1 0x2 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xEDB DUP4 PUSH1 0x2 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF74 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH2 0xF80 DUP4 DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1045 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x108A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xE SLOAD PUSH2 0x10B0 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x10E9 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1117 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xE3F DUP4 DUP4 DUP4 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1186 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1195 DUP3 DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x11AE DUP8 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x11E0 SWAP1 DUP8 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x120F SWAP1 DUP7 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1231 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x123B DUP5 DUP4 PUSH2 0x1451 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x1280 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE75 DUP5 DUP7 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x12E0 DUP3 DUP3 PUSH2 0x1137 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1300 JUMPI POP POP PUSH1 0x8 SLOAD SWAP3 PUSH12 0x33B2E3C9FD0803CE8000000 SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1326 DUP11 PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x1336 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1349 DUP15 DUP8 DUP8 DUP8 PUSH2 0x14CA JUMP JUMPDEST SWAP2 SWAP15 POP SWAP13 POP SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13B5 DUP4 DUP6 PUSH2 0x18A8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1411 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x141F DUP4 DUP4 PUSH2 0x151A JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x143C SWAP1 DUP3 PUSH2 0x13A8 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x145E SWAP1 DUP4 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x146E SWAP1 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x148F PUSH1 0x64 PUSH2 0x1489 DUP10 DUP10 PUSH2 0x151A JUMP JUMPDEST SWAP1 PUSH2 0x1137 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14A2 PUSH1 0x64 PUSH2 0x1489 DUP11 DUP10 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14BA DUP3 PUSH2 0x14B4 DUP12 DUP7 PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x1366 JUMP JUMPDEST SWAP10 SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x14D9 DUP9 DUP7 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14E7 DUP9 DUP8 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14F5 DUP9 DUP9 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1507 DUP3 PUSH2 0x14B4 DUP7 DUP7 PUSH2 0x1366 JUMP JUMPDEST SWAP4 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1529 JUMPI POP PUSH1 0x0 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1535 DUP4 DUP6 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1542 DUP6 DUP4 PUSH2 0x18C0 JUMP JUMPDEST EQ PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x15A4 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF80 DUP2 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF80 DUP2 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15FE DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x160E DUP2 PUSH2 0x195D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1638 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1648 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1676 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1696 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16AD JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH2 0x16D2 PUSH2 0x1947 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x16F7 JUMPI PUSH2 0x16F7 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x1715 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x173E JUMPI PUSH2 0x172A DUP2 PUSH2 0x1599 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1719 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF80 DUP2 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1778 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF80 DUP2 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1797 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17DC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x17ED JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1887 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1862 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18BB JUMPI PUSH2 0x18BB PUSH2 0x1931 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18FA PUSH2 0x1931 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1911 JUMPI PUSH2 0x1911 PUSH2 0x1931 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x1931 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 0xC1 SWAP4 BALANCE XOR 0x27 MLOAD 0xB2 DUP12 0x2B 0xD PUSH21 0x44378984029D8715D63AC89E85BA335FC7DAABC5F9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
            "sourceMap": "4637:10370:0:-:0;;;5206:13;5138:27;-1:-1:-1;;5206:13:0;:::i;:::-;5199:21;;-1:-1:-1;;5199:21:0;:::i;:::-;5172:49;;5688:27;;;-1:-1:-1;;;;5761:36:0;;;5138:27;5804:38;;5995:527;;;;;;;;;-1:-1:-1;3366:17:0;3409:18;;-1:-1:-1;;;;;;3409:18:0;1300:10;3409:18;;;;;3443:43;;1300:10;;;;3443:43;;3366:17;;3443:43;-1:-1:-1;6021:15:0;:69;;-1:-1:-1;;;;;;6021:69:0;;;6047:42;6021:69;;;;6101:15;:69;;;;;6127:42;6101:69;;;6205:7;;6181;6021:15;6189:12;1300:10;;1220:98;6189:12;-1:-1:-1;;;;;6181:21:0;-1:-1:-1;;;;;6181:21:0;;;;;;;;;;;;:31;;;;6253:4;6223:18;:27;6242:7;:5;;;:7;;:::i;:::-;-1:-1:-1;;;;;6223:27:0;;;;;;;;;;;;;;;;;-1:-1:-1;6223:27:0;;;:34;;;;;-1:-1:-1;;6223:34:0;;;;;;6295:4;6268:33;;:18;:33;;;;;;:40;;;;6223:34;6268:40;;;;;;6338:15;;;;6319:35;;;;;:42;;;;;;;;6391:15;;;;;6372:35;;;;:42;;;;;;;;6492:12;1300:10;;1220:98;6492:12;-1:-1:-1;;;;;6430:84:0;6447:42;-1:-1:-1;;;;;6430:84:0;;5138:27;6430:84;;;;160:25:1;;148:2;133:18;;115:76;6430:84:0;;;;;;;;4637:10370;;3502:79;3540:7;3567:6;-1:-1:-1;;;;;3567:6:0;;3502:79::o;196:228:1:-;236:4;264:1;261;258:8;255:2;;;-1:-1:-1;;;289:34:1;;346:4;343:1;336:15;377:4;296;364:18;255:2;-1:-1:-1;409:9:1;;245:179::o;429:209::-;461:1;487;477:2;;-1:-1:-1;;;512:31:1;;566:4;563:1;556:15;594:4;519:1;584:15;477:2;-1:-1:-1;623:9:1;;467:171::o;:::-;4637:10370:0;;;;;;"
          },
          "deployedBytecode": {
            "generatedSources": [
              {
                "ast": {
                  "nodeType": "YulBlock",
                  "src": "0:12699:1",
                  "statements": [
                    {
                      "nodeType": "YulBlock",
                      "src": "6:3:1",
                      "statements": []
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "63:85:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "73:29:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "95:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "82:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "82:20:1"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "73:5:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "111:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "111:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "111:31:1"
                          }
                        ]
                      },
                      "name": "abi_decode_address",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "42:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "53:5:1",
                          "type": ""
                        }
                      ],
                      "src": "14:134:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "223:187:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "269:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "278:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "286:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "271:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "271:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "271:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "244:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "240:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "240:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "265:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "236:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "236:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "233:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "304:36:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "317:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "317:23:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "308:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "374:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "349:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "349:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "349:31:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "389:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "399:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "389:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_address",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "189:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "200:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "212:6:1",
                          "type": ""
                        }
                      ],
                      "src": "153:257:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "496:180:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "542:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "551:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "544:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "544:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "544:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "517:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "526:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "513:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "538:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "509:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "509:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "506:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "577:29:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "596:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "590:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "590:16:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "581:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "615:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "615:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "615:31:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "655:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "665:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "655:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_address_fromMemory",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "462:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "473:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "485:6:1",
                          "type": ""
                        }
                      ],
                      "src": "415:261:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "768:311:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "814:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "823:6:1"
                                      },
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "831:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "816:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "816:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "816:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "789:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "798:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "785:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "785:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "810:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "781:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "781:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "778:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "849:36:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "875:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "862:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "862:23:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "853:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "919:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "894:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "894:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "894:31:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "934:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "944:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "934:6:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "958:47:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "990:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1001:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "986:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "986:18:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "973:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "973:32:1"
                            },
                            "variables": [
                              {
                                "name": "value_1",
                                "nodeType": "YulTypedName",
                                "src": "962:7:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1039:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "1014:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1014:33:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1014:33:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1056:17:1",
                            "value": {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "1066:7:1"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1056:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_address",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "726:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "737:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "749:6:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "757:6:1",
                          "type": ""
                        }
                      ],
                      "src": "681:398:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1188:362:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1234:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1243:6:1"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1251:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1236:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1236:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1236:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "1209:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1218:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1205:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1205:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1230:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "1201:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1201:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "1198:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1269:36:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1295:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1282:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1282:23:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "1273:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1339:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "1314:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1314:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1314:31:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1354:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1364:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1354:6:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1378:47:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1410:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1421:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1406:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1406:18:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1393:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1393:32:1"
                            },
                            "variables": [
                              {
                                "name": "value_1",
                                "nodeType": "YulTypedName",
                                "src": "1382:7:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1459:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "1434:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1434:33:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1434:33:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1476:17:1",
                            "value": {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "1486:7:1"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1476:6:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1502:42:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1529:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1540:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1525:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1525:18:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1512:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1512:32:1"
                            },
                            "variableNames": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "1502:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "1138:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "1149:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "1161:6:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "1169:6:1",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulTypedName",
                          "src": "1177:6:1",
                          "type": ""
                        }
                      ],
                      "src": "1084:466:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1642:238:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1688:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1697:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1705:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1690:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1690:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1690:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "1663:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1672:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1659:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1659:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1684:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "1655:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1655:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "1652:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1723:36:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1749:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1736:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1736:23:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "1727:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1793:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "1768:24:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1768:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1768:31:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1808:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1818:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1808:6:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1832:42:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1859:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1870:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1855:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1855:18:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1842:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1842:32:1"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1832:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "1600:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "1611:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "1623:6:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "1631:6:1",
                          "type": ""
                        }
                      ],
                      "src": "1555:325:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1980:1082:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1990:12:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2000:2:1",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "1994:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2047:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2056:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2064:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2049:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2049:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2049:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "2022:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2031:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "2018:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2018:23:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2043:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "2014:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2014:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "2011:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2082:37:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2109:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "2096:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2096:23:1"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "2086:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2128:28:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:18:1",
                              "type": "",
                              "value": "0xffffffffffffffff"
                            },
                            "variables": [
                              {
                                "name": "_2",
                                "nodeType": "YulTypedName",
                                "src": "2132:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2183:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2192:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2200:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2185:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2185:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2185:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "2171:6:1"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2179:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "2168:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2168:14:1"
                            },
                            "nodeType": "YulIf",
                            "src": "2165:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2218:32:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2232:9:1"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "2243:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2228:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2228:22:1"
                            },
                            "variables": [
                              {
                                "name": "_3",
                                "nodeType": "YulTypedName",
                                "src": "2222:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2298:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2307:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2315:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2300:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2300:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2300:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "2277:2:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2281:4:1",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2273:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2273:13:1"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "2288:7:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "slt",
                                    "nodeType": "YulIdentifier",
                                    "src": "2269:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2269:27:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "2262:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2262:35:1"
                            },
                            "nodeType": "YulIf",
                            "src": "2259:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2333:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2356:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "2343:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2343:16:1"
                            },
                            "variables": [
                              {
                                "name": "_4",
                                "nodeType": "YulTypedName",
                                "src": "2337:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2382:22:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nodeType": "YulIdentifier",
                                      "src": "2384:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2384:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2384:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2374:2:1"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2378:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "2371:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2371:10:1"
                            },
                            "nodeType": "YulIf",
                            "src": "2368:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2413:20:1",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2427:1:1",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2430:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2423:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2423:10:1"
                            },
                            "variables": [
                              {
                                "name": "_5",
                                "nodeType": "YulTypedName",
                                "src": "2417:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2442:23:1",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2462:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2456:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2456:9:1"
                            },
                            "variables": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulTypedName",
                                "src": "2446:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2474:56:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2496:6:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_5",
                                          "nodeType": "YulIdentifier",
                                          "src": "2512:2:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2516:2:1",
                                          "type": "",
                                          "value": "63"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2508:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2508:11:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2525:2:1",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "2521:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2521:7:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "2504:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2504:25:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2492:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2492:38:1"
                            },
                            "variables": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulTypedName",
                                "src": "2478:10:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2589:22:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nodeType": "YulIdentifier",
                                      "src": "2591:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2591:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2591:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "newFreePtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2548:10:1"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2560:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nodeType": "YulIdentifier",
                                    "src": "2545:2:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2545:18:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "newFreePtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2568:10:1"
                                    },
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2580:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "2565:2:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2565:22:1"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "2542:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2542:46:1"
                            },
                            "nodeType": "YulIf",
                            "src": "2539:2:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2627:2:1",
                                  "type": "",
                                  "value": "64"
                                },
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2631:10:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2620:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2620:22:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2620:22:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2651:17:1",
                            "value": {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2662:6:1"
                            },
                            "variables": [
                              {
                                "name": "dst",
                                "nodeType": "YulTypedName",
                                "src": "2655:3:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2684:6:1"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2692:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2677:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2677:18:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2677:18:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2704:22:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2715:6:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2723:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2711:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2711:15:1"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "2704:3:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2735:22:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2750:2:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2754:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2746:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2746:11:1"
                            },
                            "variables": [
                              {
                                "name": "src",
                                "nodeType": "YulTypedName",
                                "src": "2739:3:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2803:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2812:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2820:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2805:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2805:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2805:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "2780:2:1"
                                        },
                                        {
                                          "name": "_5",
                                          "nodeType": "YulIdentifier",
                                          "src": "2784:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2776:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2776:11:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2789:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2772:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2772:20:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2794:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "2769:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2769:33:1"
                            },
                            "nodeType": "YulIf",
                            "src": "2766:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2838:15:1",
                            "value": {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2847:6:1"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "2842:1:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2907:124:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2928:3:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "2952:3:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "2933:18:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2933:23:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "2921:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2921:36:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2921:36:1"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2970:19:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2981:3:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2986:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2977:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2977:12:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "2970:3:1"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3002:19:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "3013:3:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3018:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3009:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3009:12:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3002:3:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2873:1:1"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2876:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "2870:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2870:9:1"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "2880:18:1",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2882:14:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2891:1:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2894:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2887:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2887:9:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2882:1:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "2866:3:1",
                              "statements": []
                            },
                            "src": "2862:169:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3040:16:1",
                            "value": {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3050:6:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3040:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "1946:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "1957:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "1969:6:1",
                          "type": ""
                        }
                      ],
                      "src": "1885:1177:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3134:184:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3180:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3189:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3197:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "3182:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3182:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3182:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "3155:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3164:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "3151:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3151:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3176:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "3147:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3147:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "3144:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3215:36:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3241:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "3228:12:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3228:23:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "3219:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3282:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_bool",
                                "nodeType": "YulIdentifier",
                                "src": "3260:21:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3260:28:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3260:28:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3297:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "3307:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3297:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_bool",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "3100:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "3111:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "3123:6:1",
                          "type": ""
                        }
                      ],
                      "src": "3067:251:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3401:177:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3447:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3456:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3464:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "3449:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3449:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3449:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "3422:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3431:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "3418:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3418:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3443:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "3414:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3414:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "3411:2:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3482:29:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3501:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3495:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3495:16:1"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "3486:5:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3542:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_bool",
                                "nodeType": "YulIdentifier",
                                "src": "3520:21:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3520:28:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3520:28:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3557:15:1",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "3567:5:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3557:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_bool_fromMemory",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "3367:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "3378:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "3390:6:1",
                          "type": ""
                        }
                      ],
                      "src": "3323:255:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3698:201:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3744:26:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3753:6:1"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3761:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "3746:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3746:22:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3746:22:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "3719:7:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3728:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "3715:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3715:23:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3740:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "3711:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3711:32:1"
                            },
                            "nodeType": "YulIf",
                            "src": "3708:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3779:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3795:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3789:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3789:16:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3779:6:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3814:35:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3834:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3845:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3830:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3830:18:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3824:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3824:25:1"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3814:6:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3858:35:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3878:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3889:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3874:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3874:18:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3868:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3868:25:1"
                            },
                            "variableNames": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "3858:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "3648:9:1",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "3659:7:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "3671:6:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "3679:6:1",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulTypedName",
                          "src": "3687:6:1",
                          "type": ""
                        }
                      ],
                      "src": "3583:316:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4005:102:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4015:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4027:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4038:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4023:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4023:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "4015:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4057:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4072:6:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4088:3:1",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4093:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4084:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4084:11:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4097:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "4080:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4080:19:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "4068:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4068:32:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4050:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4050:51:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4050:51:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "3974:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "3985:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "3996:4:1",
                          "type": ""
                        }
                      ],
                      "src": "3904:203:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4241:175:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4251:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4263:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4274:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4259:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4259:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "4251:4:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4286:29:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4304:3:1",
                                      "type": "",
                                      "value": "160"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4309:1:1",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "4300:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4300:11:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4313:1:1",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "4296:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4296:19:1"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "4290:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4331:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4346:6:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4354:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "4342:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4342:15:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4324:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4324:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4324:34:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4378:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4389:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4374:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4374:18:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4398:6:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4406:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "4394:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4394:15:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4367:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4367:43:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4367:43:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "4202:9:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "4213:6:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "4221:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "4232:4:1",
                          "type": ""
                        }
                      ],
                      "src": "4112:304:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4550:145:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4560:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4572:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4583:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4568:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4568:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "4560:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4602:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4617:6:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4633:3:1",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4638:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4629:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4629:11:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4642:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "4625:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4625:19:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "4613:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4613:32:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4595:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4595:51:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4595:51:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4666:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4677:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4662:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4662:18:1"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4682:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4655:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4655:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4655:34:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "4511:9:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "4522:6:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "4530:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "4541:4:1",
                          "type": ""
                        }
                      ],
                      "src": "4421:274:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4957:350:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4967:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4979:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4990:3:1",
                                  "type": "",
                                  "value": "192"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4975:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4975:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "4967:4:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5003:29:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5021:3:1",
                                      "type": "",
                                      "value": "160"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5026:1:1",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "5017:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5017:11:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5030:1:1",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "5013:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5013:19:1"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "5007:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5048:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5063:6:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5071:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "5059:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5059:15:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5041:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5041:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5041:34:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5095:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5106:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5091:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5091:18:1"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5111:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5084:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5084:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5084:34:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5138:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5149:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5134:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5134:18:1"
                                },
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "5154:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5127:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5127:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5127:34:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5181:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5192:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5177:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5177:18:1"
                                },
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "5197:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5170:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5170:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5170:34:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5224:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5235:3:1",
                                      "type": "",
                                      "value": "128"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5220:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5220:19:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "5245:6:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5253:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "5241:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5241:15:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5213:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5213:44:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5213:44:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5277:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5288:3:1",
                                      "type": "",
                                      "value": "160"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5273:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5273:19:1"
                                },
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "5294:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5266:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5266:35:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5266:35:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "4886:9:1",
                          "type": ""
                        },
                        {
                          "name": "value5",
                          "nodeType": "YulTypedName",
                          "src": "4897:6:1",
                          "type": ""
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulTypedName",
                          "src": "4905:6:1",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nodeType": "YulTypedName",
                          "src": "4913:6:1",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulTypedName",
                          "src": "4921:6:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "4929:6:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "4937:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "4948:4:1",
                          "type": ""
                        }
                      ],
                      "src": "4700:607:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5407:92:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5417:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5429:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5440:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5425:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5425:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5417:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5459:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5484:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "5477:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5477:14:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "5470:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5470:22:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5452:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5452:41:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5452:41:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "5376:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "5387:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "5398:4:1",
                          "type": ""
                        }
                      ],
                      "src": "5312:187:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5625:482:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5635:12:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5645:2:1",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "5639:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5663:9:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5674:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5656:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5656:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5656:21:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5686:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5706:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5700:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5700:13:1"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nodeType": "YulTypedName",
                                "src": "5690:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5733:9:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5744:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5729:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5729:18:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5749:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5722:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5722:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5722:34:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5765:13:1",
                            "value": {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5774:4:1"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "5769:1:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5837:90:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "5866:9:1"
                                              },
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "5877:1:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5862:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5862:17:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5881:2:1",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5858:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5858:26:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5900:6:1"
                                                  },
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5908:1:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5896:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5896:14:1"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "5912:2:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5892:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5892:23:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "5886:5:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5886:30:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5851:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5851:66:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5851:66:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5798:1:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5801:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "5795:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5795:13:1"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "5809:19:1",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5811:15:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5820:1:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5823:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5816:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5816:10:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5811:1:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "5791:3:1",
                              "statements": []
                            },
                            "src": "5787:140:1"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5961:69:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "5990:9:1"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "6001:6:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5986:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5986:22:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6010:2:1",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5982:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5982:31:1"
                                      },
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "6015:4:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5975:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5975:45:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5975:45:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5942:1:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5945:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "5939:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5939:13:1"
                            },
                            "nodeType": "YulIf",
                            "src": "5936:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6039:62:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6055:9:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "6074:6:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6082:2:1",
                                              "type": "",
                                              "value": "31"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6070:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6070:15:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6091:2:1",
                                              "type": "",
                                              "value": "31"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "6087:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6087:7:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "6066:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6066:29:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6051:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6051:45:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6098:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6047:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6047:54:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "6039:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "5594:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "5605:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "5616:4:1",
                          "type": ""
                        }
                      ],
                      "src": "5504:603:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6286:225:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6303:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6314:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6296:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6296:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6296:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6337:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6348:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6333:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6333:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6353:2:1",
                                  "type": "",
                                  "value": "35"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6326:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6326:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6326:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6376:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6387:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6372:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6372:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "6392:34:1",
                                  "type": "",
                                  "value": "ERC20: transfer to the zero addr"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6365:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6365:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6365:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6447:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6458:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6443:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6443:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "6463:5:1",
                                  "type": "",
                                  "value": "ess"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6436:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6436:33:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6436:33:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6478:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6490:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6501:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6486:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6486:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "6478:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "6263:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "6277:4:1",
                          "type": ""
                        }
                      ],
                      "src": "6112:399:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6690:232:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6707:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6718:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6700:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6700:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6700:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6741:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6752:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6737:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6737:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6757:2:1",
                                  "type": "",
                                  "value": "42"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6730:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6730:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6730:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6780:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6791:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6776:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6776:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "6796:34:1",
                                  "type": "",
                                  "value": "Amount must be less than total r"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6769:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6769:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6769:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6851:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6862:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6847:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6847:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "6867:12:1",
                                  "type": "",
                                  "value": "eflections"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6840:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6840:40:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6840:40:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6889:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6901:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6912:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6897:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6897:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "6889:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "6667:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "6681:4:1",
                          "type": ""
                        }
                      ],
                      "src": "6516:406:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7101:224:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7118:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7129:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7111:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7111:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7111:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7152:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7163:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7148:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7148:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7168:2:1",
                                  "type": "",
                                  "value": "34"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7141:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7141:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7141:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7191:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7202:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7187:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7187:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "7207:34:1",
                                  "type": "",
                                  "value": "ERC20: approve to the zero addre"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7180:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7180:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7180:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7262:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7273:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7258:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7258:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "7278:4:1",
                                  "type": "",
                                  "value": "ss"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7251:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7251:32:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7251:32:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7292:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7304:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7315:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7300:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7300:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "7292:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "7078:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "7092:4:1",
                          "type": ""
                        }
                      ],
                      "src": "6927:398:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7504:177:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7521:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7532:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7514:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7514:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7514:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7555:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7566:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7551:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7551:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7571:2:1",
                                  "type": "",
                                  "value": "27"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7544:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7544:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7544:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7594:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7605:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7590:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7590:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "7610:29:1",
                                  "type": "",
                                  "value": "SafeMath: addition overflow"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7583:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7583:57:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7583:57:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7649:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7661:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7672:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7657:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7657:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "7649:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "7481:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "7495:4:1",
                          "type": ""
                        }
                      ],
                      "src": "7330:351:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7860:223:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7877:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7888:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7870:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7870:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7870:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7911:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7922:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7907:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7907:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7927:2:1",
                                  "type": "",
                                  "value": "33"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7900:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7900:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7900:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7950:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7961:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7946:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7946:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "7966:34:1",
                                  "type": "",
                                  "value": "SafeMath: multiplication overflo"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7939:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7939:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7939:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8021:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8032:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8017:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8017:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "8037:3:1",
                                  "type": "",
                                  "value": "w"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8010:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8010:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8010:31:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "8050:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8062:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8073:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8058:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8058:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "8050:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "7837:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "7851:4:1",
                          "type": ""
                        }
                      ],
                      "src": "7686:397:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8262:182:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8279:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8290:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8272:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8272:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8272:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8313:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8324:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8309:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8309:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8329:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8302:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8302:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8302:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8352:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8363:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8348:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8348:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "8368:34:1",
                                  "type": "",
                                  "value": "Ownable: caller is not the owner"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8341:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8341:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8341:62:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "8412:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8424:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8435:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8420:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8420:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "8412:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "8239:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "8253:4:1",
                          "type": ""
                        }
                      ],
                      "src": "8088:356:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8623:231:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8640:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8651:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8633:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8633:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8633:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8674:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8685:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8670:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8670:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8690:2:1",
                                  "type": "",
                                  "value": "41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8663:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8663:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8663:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8713:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8724:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8709:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8709:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "8729:34:1",
                                  "type": "",
                                  "value": "Transfer amount must be greater "
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8702:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8702:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8702:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8784:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8795:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8780:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8780:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "8800:11:1",
                                  "type": "",
                                  "value": "than zero"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8773:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8773:39:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8773:39:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "8821:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8833:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8844:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8829:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8829:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "8821:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "8600:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "8614:4:1",
                          "type": ""
                        }
                      ],
                      "src": "8449:405:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9033:227:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9050:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9061:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9043:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9043:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9043:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9084:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9095:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9080:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9080:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9100:2:1",
                                  "type": "",
                                  "value": "37"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9073:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9073:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9073:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9123:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9134:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9119:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9119:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "9139:34:1",
                                  "type": "",
                                  "value": "ERC20: transfer from the zero ad"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9112:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9112:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9112:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9194:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9205:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9190:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9190:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "9210:7:1",
                                  "type": "",
                                  "value": "dress"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9183:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9183:35:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9183:35:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "9227:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9239:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9250:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9235:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9235:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9227:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "9010:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "9024:4:1",
                          "type": ""
                        }
                      ],
                      "src": "8859:401:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9439:226:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9456:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9467:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9449:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9449:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9449:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9490:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9501:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9486:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9486:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9506:2:1",
                                  "type": "",
                                  "value": "36"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9479:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9479:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9479:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9529:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9540:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9525:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9525:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "9545:34:1",
                                  "type": "",
                                  "value": "ERC20: approve from the zero add"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9518:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9518:62:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9518:62:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9600:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9611:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9596:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9596:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "9616:6:1",
                                  "type": "",
                                  "value": "ress"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9589:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9589:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9589:34:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "9632:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9644:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9655:3:1",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9640:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9640:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9632:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "9416:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "9430:4:1",
                          "type": ""
                        }
                      ],
                      "src": "9265:400:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9844:173:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9861:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9872:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9854:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9854:21:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9854:21:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9895:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9906:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9891:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9891:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9911:2:1",
                                  "type": "",
                                  "value": "23"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9884:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9884:30:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9884:30:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9934:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9945:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9930:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9930:18:1"
                                },
                                {
                                  "kind": "string",
                                  "nodeType": "YulLiteral",
                                  "src": "9950:25:1",
                                  "type": "",
                                  "value": "trading is already open"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9923:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9923:53:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9923:53:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "9985:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9997:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10008:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9993:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9993:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9985:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027__to_t_string_memory_ptr__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "9821:9:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "9835:4:1",
                          "type": ""
                        }
                      ],
                      "src": "9670:347:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10123:76:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10133:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10145:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10156:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10141:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10141:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "10133:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10175:9:1"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10186:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10168:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10168:25:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10168:25:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "10092:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "10103:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "10114:4:1",
                          "type": ""
                        }
                      ],
                      "src": "10022:177:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10475:712:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10485:33:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10503:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10514:3:1",
                                  "type": "",
                                  "value": "160"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10499:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10499:19:1"
                            },
                            "variables": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulTypedName",
                                "src": "10489:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10534:9:1"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10545:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10527:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10527:25:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10527:25:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10561:12:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10571:2:1",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "10565:2:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "10593:9:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "10604:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10589:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10589:18:1"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10609:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10582:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10582:34:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10582:34:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "10636:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10647:2:1",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10632:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10632:18:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10652:3:1",
                                  "type": "",
                                  "value": "160"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10625:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10625:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10625:31:1"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10665:17:1",
                            "value": {
                              "name": "tail_1",
                              "nodeType": "YulIdentifier",
                              "src": "10676:6:1"
                            },
                            "variables": [
                              {
                                "name": "pos",
                                "nodeType": "YulTypedName",
                                "src": "10669:3:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10691:27:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "10711:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10705:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10705:13:1"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nodeType": "YulTypedName",
                                "src": "10695:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10734:6:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10742:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10727:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10727:22:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10727:22:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "10758:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10769:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10780:3:1",
                                  "type": "",
                                  "value": "192"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10765:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10765:19:1"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10758:3:1"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10793:29:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "10811:6:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10819:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10807:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10807:15:1"
                            },
                            "variables": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulTypedName",
                                "src": "10797:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10831:13:1",
                            "value": {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10840:4:1"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "10835:1:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10902:146:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "10923:3:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "srcPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10938:6:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "10932:5:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10932:13:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "10955:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "10960:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10951:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10951:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "10964:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "10947:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10947:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "10928:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10928:39:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "10916:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10916:52:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10916:52:1"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10981:19:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "10992:3:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10997:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10988:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10988:12:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "10981:3:1"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11013:25:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11027:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11035:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11023:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11023:15:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "11013:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10864:1:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10867:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "10861:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10861:13:1"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "10875:18:1",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10877:14:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "10886:1:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10889:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10882:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10882:9:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10877:1:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "10857:3:1",
                              "statements": []
                            },
                            "src": "10853:195:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "11057:11:1",
                            "value": {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11065:3:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "11057:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "11088:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11099:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11084:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11084:18:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "11108:6:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11124:3:1",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11129:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "11120:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11120:11:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11133:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "11116:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11116:19:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "11104:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11104:32:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "11077:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11077:60:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11077:60:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "11157:9:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11168:3:1",
                                      "type": "",
                                      "value": "128"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11153:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11153:19:1"
                                },
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "11174:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "11146:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11146:35:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11146:35:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "10412:9:1",
                          "type": ""
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulTypedName",
                          "src": "10423:6:1",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nodeType": "YulTypedName",
                          "src": "10431:6:1",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulTypedName",
                          "src": "10439:6:1",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "10447:6:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "10455:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "10466:4:1",
                          "type": ""
                        }
                      ],
                      "src": "10204:983:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11289:87:1",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "11299:26:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "11311:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11322:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11307:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11307:18:1"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "11299:4:1"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "11341:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11356:6:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11364:4:1",
                                      "type": "",
                                      "value": "0xff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "11352:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11352:17:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "11334:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11334:36:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11334:36:1"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "11258:9:1",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "11269:6:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "11280:4:1",
                          "type": ""
                        }
                      ],
                      "src": "11192:184:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11429:80:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11456:22:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "11458:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11458:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11458:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11445:1:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "y",
                                      "nodeType": "YulIdentifier",
                                      "src": "11452:1:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "11448:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11448:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "11442:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11442:13:1"
                            },
                            "nodeType": "YulIf",
                            "src": "11439:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "11487:16:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11498:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11501:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11494:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11494:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "11487:3:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "checked_add_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "11412:1:1",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "11415:1:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "sum",
                          "nodeType": "YulTypedName",
                          "src": "11421:3:1",
                          "type": ""
                        }
                      ],
                      "src": "11381:128:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11560:171:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11591:111:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "11612:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "11619:3:1",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "11624:10:1",
                                            "type": "",
                                            "value": "0x4e487b71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "11615:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11615:20:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "11605:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11605:31:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11605:31:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11656:1:1",
                                        "type": "",
                                        "value": "4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11659:4:1",
                                        "type": "",
                                        "value": "0x12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "11649:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11649:15:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11649:15:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "11684:1:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11687:4:1",
                                        "type": "",
                                        "value": "0x24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "11677:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11677:15:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11677:15:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11580:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "11573:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11573:9:1"
                            },
                            "nodeType": "YulIf",
                            "src": "11570:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "11711:14:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11720:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11723:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "11716:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11716:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "r",
                                "nodeType": "YulIdentifier",
                                "src": "11711:1:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "checked_div_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "11545:1:1",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "11548:1:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "r",
                          "nodeType": "YulTypedName",
                          "src": "11554:1:1",
                          "type": ""
                        }
                      ],
                      "src": "11514:217:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11788:116:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11847:22:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "11849:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11849:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11849:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "x",
                                          "nodeType": "YulIdentifier",
                                          "src": "11819:1:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "11812:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11812:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "11805:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11805:17:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "y",
                                      "nodeType": "YulIdentifier",
                                      "src": "11827:1:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11838:1:1",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "11834:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11834:6:1"
                                        },
                                        {
                                          "name": "x",
                                          "nodeType": "YulIdentifier",
                                          "src": "11842:1:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "div",
                                        "nodeType": "YulIdentifier",
                                        "src": "11830:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11830:14:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nodeType": "YulIdentifier",
                                    "src": "11824:2:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11824:21:1"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "11801:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11801:45:1"
                            },
                            "nodeType": "YulIf",
                            "src": "11798:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "11878:20:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11893:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11896:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nodeType": "YulIdentifier",
                                "src": "11889:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11889:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "product",
                                "nodeType": "YulIdentifier",
                                "src": "11878:7:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "checked_mul_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "11767:1:1",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "11770:1:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "product",
                          "nodeType": "YulTypedName",
                          "src": "11776:7:1",
                          "type": ""
                        }
                      ],
                      "src": "11736:168:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11958:76:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11980:22:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "11982:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11982:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11982:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11974:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11977:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "11971:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11971:8:1"
                            },
                            "nodeType": "YulIf",
                            "src": "11968:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12011:17:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "12023:1:1"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "12026:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "12019:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12019:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "diff",
                                "nodeType": "YulIdentifier",
                                "src": "12011:4:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "checked_sub_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "11940:1:1",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "11943:1:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "diff",
                          "nodeType": "YulTypedName",
                          "src": "11949:4:1",
                          "type": ""
                        }
                      ],
                      "src": "11909:125:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12086:88:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12117:22:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12119:16:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12119:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12119:18:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12102:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12113:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "12109:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12109:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "12099:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12099:17:1"
                            },
                            "nodeType": "YulIf",
                            "src": "12096:2:1"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12148:20:1",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12159:5:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12166:1:1",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12155:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12155:13:1"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "12148:3:1"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "increment_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "12068:5:1",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nodeType": "YulTypedName",
                          "src": "12078:3:1",
                          "type": ""
                        }
                      ],
                      "src": "12039:135:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12211:95:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12228:1:1",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12235:3:1",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12240:10:1",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "12231:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12231:20:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12221:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12221:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12221:31:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12268:1:1",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12271:4:1",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12261:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12261:15:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12261:15:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12292:1:1",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12295:4:1",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "12285:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12285:15:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12285:15:1"
                          }
                        ]
                      },
                      "name": "panic_error_0x11",
                      "nodeType": "YulFunctionDefinition",
                      "src": "12179:127:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12343:95:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12360:1:1",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12367:3:1",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12372:10:1",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "12363:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12363:20:1"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12353:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12353:31:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12353:31:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12400:1:1",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12403:4:1",
                                  "type": "",
                                  "value": "0x41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12393:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12393:15:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12393:15:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12424:1:1",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12427:4:1",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "12417:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12417:15:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12417:15:1"
                          }
                        ]
                      },
                      "name": "panic_error_0x41",
                      "nodeType": "YulFunctionDefinition",
                      "src": "12311:127:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12488:86:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12552:16:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12561:1:1",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12564:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "12554:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12554:12:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12554:12:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "12511:5:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "12522:5:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12537:3:1",
                                                  "type": "",
                                                  "value": "160"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12542:1:1",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "shl",
                                                "nodeType": "YulIdentifier",
                                                "src": "12533:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12533:11:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12546:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sub",
                                            "nodeType": "YulIdentifier",
                                            "src": "12529:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12529:19:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "12518:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12518:31:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nodeType": "YulIdentifier",
                                    "src": "12508:2:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12508:42:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "12501:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12501:50:1"
                            },
                            "nodeType": "YulIf",
                            "src": "12498:2:1"
                          }
                        ]
                      },
                      "name": "validator_revert_address",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "12477:5:1",
                          "type": ""
                        }
                      ],
                      "src": "12443:131:1"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12621:76:1",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12675:16:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12684:1:1",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12687:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "12677:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12677:12:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12677:12:1"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "12644:5:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "12665:5:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "iszero",
                                            "nodeType": "YulIdentifier",
                                            "src": "12658:6:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12658:13:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "12651:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12651:21:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nodeType": "YulIdentifier",
                                    "src": "12641:2:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12641:32:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "12634:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12634:40:1"
                            },
                            "nodeType": "YulIf",
                            "src": "12631:2:1"
                          }
                        ]
                      },
                      "name": "validator_revert_bool",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "12610:5:1",
                          "type": ""
                        }
                      ],
                      "src": "12579:118:1"
                    }
                  ]
                },
                "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"trading is already open\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
                "id": 1,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "6080604052600436106101025760003560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb14610294578063b515566a146102b4578063c3c8cd80146102d4578063c9567bf9146102e9578063dd62ed3e146102fe57600080fd5b806370a0823114610237578063715018a6146102575780638da5cb5b1461026c57806395d89b411461010e57600080fd5b8063273123b7116100d1578063273123b7146101c4578063313ce567146101e65780635932ead1146102025780636fc3eaec1461022257600080fd5b806306fdde031461010e578063095ea7b31461014b57806318160ddd1461017b57806323b872dd146101a457600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201825260058152645248494e5560d81b6020820152905161014291906117b0565b60405180910390f35b34801561015757600080fd5b5061016b610166366004611659565b610344565b6040519015158152602001610142565b34801561018757600080fd5b506b033b2e3c9fd0803ce80000005b604051908152602001610142565b3480156101b057600080fd5b5061016b6101bf366004611619565b61035b565b3480156101d057600080fd5b506101e46101df3660046115a9565b6103c4565b005b3480156101f257600080fd5b5060405160098152602001610142565b34801561020e57600080fd5b506101e461021d36600461174b565b610418565b34801561022e57600080fd5b506101e4610460565b34801561024357600080fd5b506101966102523660046115a9565b61048d565b34801561026357600080fd5b506101e46104af565b34801561027857600080fd5b506000546040516001600160a01b039091168152602001610142565b3480156102a057600080fd5b5061016b6102af366004611659565b610523565b3480156102c057600080fd5b506101e46102cf366004611684565b610530565b3480156102e057600080fd5b506101e46105d4565b3480156102f557600080fd5b506101e461060a565b34801561030a57600080fd5b506101966103193660046115e1565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b60006103513384846109d3565b5060015b92915050565b6000610368848484610af7565b6103ba84336103b585604051806060016040528060288152602001611981602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610e44565b6109d3565b5060019392505050565b6000546001600160a01b031633146103f75760405162461bcd60e51b81526004016103ee90611803565b60405180910390fd5b6001600160a01b03166000908152600660205260409020805460ff19169055565b6000546001600160a01b031633146104425760405162461bcd60e51b81526004016103ee90611803565b600f8054911515600160b81b0260ff60b81b19909216919091179055565b600c546001600160a01b0316336001600160a01b03161461048057600080fd5b4761048a81610e7e565b50565b6001600160a01b03811660009081526002602052604081205461035590610f03565b6000546001600160a01b031633146104d95760405162461bcd60e51b81526004016103ee90611803565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610351338484610af7565b6000546001600160a01b0316331461055a5760405162461bcd60e51b81526004016103ee90611803565b60005b81518110156105d05760016006600084848151811061058c57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806105c881611916565b91505061055d565b5050565b600c546001600160a01b0316336001600160a01b0316146105f457600080fd5b60006105ff3061048d565b905061048a81610f87565b6000546001600160a01b031633146106345760405162461bcd60e51b81526004016103ee90611803565b600f54600160a01b900460ff161561068e5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103ee565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106ce30826b033b2e3c9fd0803ce80000006109d3565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561070757600080fd5b505afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f91906115c5565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561078757600080fd5b505afa15801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906115c5565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f91906115c5565b600f80546001600160a01b0319166001600160a01b03928316179055600e541663f305d719473061086f8161048d565b6000806108846000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c4016060604051808303818588803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109209190611783565b5050600f80546a1306707f9469597700000060105563ffff00ff60a01b198116630101000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b390604401602060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190611767565b6001600160a01b038316610a355760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ee565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ee565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b5b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ee565b6001600160a01b038216610bbd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ee565b60008111610c1f5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103ee565b6002600a908155600b556000546001600160a01b03848116911614801590610c5557506000546001600160a01b03838116911614155b15610e34576001600160a01b03831660009081526006602052604090205460ff16158015610c9c57506001600160a01b03821660009081526006602052604090205460ff16155b610ca557600080fd5b600f546001600160a01b038481169116148015610cd05750600e546001600160a01b03838116911614155b8015610cf557506001600160a01b03821660009081526005602052604090205460ff16155b8015610d0a5750600f54600160b81b900460ff165b15610d6757601054811115610d1e57600080fd5b6001600160a01b0382166000908152600760205260409020544211610d4257600080fd5b610d4d42601e6118a8565b6001600160a01b0383166000908152600760205260409020555b600f546001600160a01b038381169116148015610d925750600e546001600160a01b03848116911614155b8015610db757506001600160a01b03831660009081526005602052604090205460ff16155b15610dc7576002600a908155600b555b6000610dd23061048d565b600f54909150600160a81b900460ff16158015610dfd5750600f546001600160a01b03858116911614155b8015610e125750600f54600160b01b900460ff165b15610e3257610e2081610f87565b478015610e3057610e3047610e7e565b505b505b610e3f83838361112c565b505050565b60008184841115610e685760405162461bcd60e51b81526004016103ee91906117b0565b506000610e7584866118ff565b95945050505050565b600c546001600160a01b03166108fc610e98836002611137565b6040518115909202916000818181858888f19350505050158015610ec0573d6000803e3d6000fd5b50600d546001600160a01b03166108fc610edb836002611137565b6040518115909202916000818181858888f193505050501580156105d0573d6000803e3d6000fd5b6000600854821115610f6a5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084016103ee565b6000610f74611179565b9050610f808382611137565b9392505050565b600f805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610fdd57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561103157600080fd5b505afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106991906115c5565b8160018151811061108a57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600e546110b091309116846109d3565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110e9908590600090869030904290600401611838565b600060405180830381600087803b15801561110357600080fd5b505af1158015611117573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b610e3f83838361119c565b6000610f8083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611293565b60008060006111866112c1565b90925090506111958282611137565b9250505090565b6000806000806000806111ae87611309565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506111e09087611366565b6001600160a01b03808b1660009081526002602052604080822093909355908a168152205461120f90866113a8565b6001600160a01b03891660009081526002602052604090205561123181611407565b61123b8483611451565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161128091815260200190565b60405180910390a3505050505050505050565b600081836112b45760405162461bcd60e51b81526004016103ee91906117b0565b506000610e7584866118c0565b60085460009081906b033b2e3c9fd0803ce80000006112e08282611137565b821015611300575050600854926b033b2e3c9fd0803ce800000092509050565b90939092509050565b60008060008060008060008060006113268a600a54600b54611475565b9250925092506000611336611179565b905060008060006113498e8787876114ca565b919e509c509a509598509396509194505050505091939550919395565b6000610f8083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e44565b6000806113b583856118a8565b905083811015610f805760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ee565b6000611411611179565b9050600061141f838361151a565b3060009081526002602052604090205490915061143c90826113a8565b30600090815260026020526040902055505050565b60085461145e9083611366565b60085560095461146e90826113a8565b6009555050565b600080808061148f6064611489898961151a565b90611137565b905060006114a260646114898a8961151a565b905060006114ba826114b48b86611366565b90611366565b9992985090965090945050505050565b60008080806114d9888661151a565b905060006114e7888761151a565b905060006114f5888861151a565b90506000611507826114b48686611366565b939b939a50919850919650505050505050565b60008261152957506000610355565b600061153583856118e0565b90508261154285836118c0565b14610f805760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103ee565b80356115a48161195d565b919050565b6000602082840312156115ba578081fd5b8135610f808161195d565b6000602082840312156115d6578081fd5b8151610f808161195d565b600080604083850312156115f3578081fd5b82356115fe8161195d565b9150602083013561160e8161195d565b809150509250929050565b60008060006060848603121561162d578081fd5b83356116388161195d565b925060208401356116488161195d565b929592945050506040919091013590565b6000806040838503121561166b578182fd5b82356116768161195d565b946020939093013593505050565b60006020808385031215611696578182fd5b823567ffffffffffffffff808211156116ad578384fd5b818501915085601f8301126116c0578384fd5b8135818111156116d2576116d2611947565b8060051b604051601f19603f830116810181811085821117156116f7576116f7611947565b604052828152858101935084860182860187018a1015611715578788fd5b8795505b8386101561173e5761172a81611599565b855260019590950194938601938601611719565b5098975050505050505050565b60006020828403121561175c578081fd5b8135610f8081611972565b600060208284031215611778578081fd5b8151610f8081611972565b600080600060608486031215611797578283fd5b8351925060208401519150604084015190509250925092565b6000602080835283518082850152825b818110156117dc578581018301518582016040015282016117c0565b818111156117ed5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156118875784516001600160a01b031683529383019391830191600101611862565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156118bb576118bb611931565b500190565b6000826118db57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118fa576118fa611931565b500290565b60008282101561191157611911611931565b500390565b600060001982141561192a5761192a611931565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461048a57600080fd5b801515811461048a57600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c19331182751b28b2b0d7444378984029d8715d63ac89e85ba335fc7daabc5f964736f6c63430008040033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xB515566A EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC9567BF9 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x273123B7 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x273123B7 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x5932EAD1 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x109 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x5248494E55 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH12 0x33B2E3C9FD0803CE8000000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x460 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x4AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x5D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x60A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 CALLER DUP5 DUP5 PUSH2 0x9D3 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368 DUP5 DUP5 DUP5 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x3BA DUP5 CALLER PUSH2 0x3B5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1981 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xB8 SHL MUL PUSH1 0xFF PUSH1 0xB8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE PUSH2 0x48A DUP2 PUSH2 0xE7E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x355 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 CALLER DUP5 DUP5 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x58C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x5C8 DUP2 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x55D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF ADDRESS PUSH2 0x48D JUMP JUMPDEST SWAP1 POP PUSH2 0x48A DUP2 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696E6720697320616C7265616479206F70656E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x6CE ADDRESS DUP3 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x9D3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0xE SLOAD AND PUSH4 0xF305D719 SELFBALANCE ADDRESS PUSH2 0x86F DUP2 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x884 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST POP POP PUSH1 0xF DUP1 SLOAD PUSH11 0x1306707F94695977000000 PUSH1 0x10 SSTORE PUSH4 0xFFFF00FF PUSH1 0xA0 SHL NOT DUP2 AND PUSH4 0x1010001 PUSH1 0xA0 SHL OR SWAP1 SWAP2 SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP2 POP PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA SWAP1 DUP2 SSTORE PUSH1 0xB SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xC55 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xE34 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xCD0 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCF5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD0A JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD67 JUMPI PUSH1 0x10 SLOAD DUP2 GT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4D TIMESTAMP PUSH1 0x1E PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD92 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDB7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x2 PUSH1 0xA SWAP1 DUP2 SSTORE PUSH1 0xB SSTORE JUMPDEST PUSH1 0x0 PUSH2 0xDD2 ADDRESS PUSH2 0x48D JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xDFD JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE12 JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE20 DUP2 PUSH2 0xF87 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xE30 JUMPI PUSH2 0xE30 SELFBALANCE PUSH2 0xE7E JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH2 0xE3F DUP4 DUP4 DUP4 PUSH2 0x112C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE75 DUP5 DUP7 PUSH2 0x18FF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xE98 DUP4 PUSH1 0x2 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xEDB DUP4 PUSH1 0x2 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF74 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH2 0xF80 DUP4 DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1045 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x108A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xE SLOAD PUSH2 0x10B0 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x10E9 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1117 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xE3F DUP4 DUP4 DUP4 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1186 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1195 DUP3 DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x11AE DUP8 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x11E0 SWAP1 DUP8 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x120F SWAP1 DUP7 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1231 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x123B DUP5 DUP4 PUSH2 0x1451 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x1280 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE75 DUP5 DUP7 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x12E0 DUP3 DUP3 PUSH2 0x1137 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1300 JUMPI POP POP PUSH1 0x8 SLOAD SWAP3 PUSH12 0x33B2E3C9FD0803CE8000000 SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1326 DUP11 PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x1336 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1349 DUP15 DUP8 DUP8 DUP8 PUSH2 0x14CA JUMP JUMPDEST SWAP2 SWAP15 POP SWAP13 POP SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13B5 DUP4 DUP6 PUSH2 0x18A8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1411 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x141F DUP4 DUP4 PUSH2 0x151A JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x143C SWAP1 DUP3 PUSH2 0x13A8 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x145E SWAP1 DUP4 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x146E SWAP1 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x148F PUSH1 0x64 PUSH2 0x1489 DUP10 DUP10 PUSH2 0x151A JUMP JUMPDEST SWAP1 PUSH2 0x1137 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14A2 PUSH1 0x64 PUSH2 0x1489 DUP11 DUP10 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14BA DUP3 PUSH2 0x14B4 DUP12 DUP7 PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x1366 JUMP JUMPDEST SWAP10 SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x14D9 DUP9 DUP7 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14E7 DUP9 DUP8 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14F5 DUP9 DUP9 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1507 DUP3 PUSH2 0x14B4 DUP7 DUP7 PUSH2 0x1366 JUMP JUMPDEST SWAP4 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1529 JUMPI POP PUSH1 0x0 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1535 DUP4 DUP6 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1542 DUP6 DUP4 PUSH2 0x18C0 JUMP JUMPDEST EQ PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x15A4 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF80 DUP2 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF80 DUP2 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15FE DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x160E DUP2 PUSH2 0x195D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1638 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1648 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1676 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1696 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16AD JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH2 0x16D2 PUSH2 0x1947 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x16F7 JUMPI PUSH2 0x16F7 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x1715 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x173E JUMPI PUSH2 0x172A DUP2 PUSH2 0x1599 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1719 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF80 DUP2 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1778 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF80 DUP2 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1797 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17DC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x17ED JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1887 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1862 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18BB JUMPI PUSH2 0x18BB PUSH2 0x1931 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18FA JUMPI PUSH2 0x18FA PUSH2 0x1931 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1911 JUMPI PUSH2 0x1911 PUSH2 0x1931 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x1931 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 0xC1 SWAP4 BALANCE XOR 0x27 MLOAD 0xB2 DUP12 0x2B 0xD PUSH21 0x44378984029D8715D63AC89E85BA335FC7DAABC5F9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
            "sourceMap": "4637:10370:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6530:83;;;;;;;;;;-1:-1:-1;6600:5:0;;;;;;;;;;;-1:-1:-1;;;6600:5:0;;;;6530:83;;;;6600:5;6530:83;:::i;:::-;;;;;;;;7382:161;;;;;;;;;;-1:-1:-1;7382:161:0;;;;;:::i;:::-;;:::i;:::-;;;5477:14:1;;5470:22;5452:41;;5440:2;5425:18;7382:161:0;5407:92:1;6807:95:0;;;;;;;;;;-1:-1:-1;5138:27:0;6807:95;;;10168:25:1;;;10156:2;10141:18;6807:95:0;10123:76:1;7551:313:0;;;;;;;;;;-1:-1:-1;7551:313:0;;;;;:::i;:::-;;:::i;11734:88::-;;;;;;;;;;-1:-1:-1;11734:88:0;;;;;:::i;:::-;;:::i;:::-;;6716:83;;;;;;;;;;-1:-1:-1;6716:83:0;;5558:1;11334:36:1;;11322:2;11307:18;6716:83:0;11289:87:1;7872:103:0;;;;;;;;;;-1:-1:-1;7872:103:0;;;;;:::i;:::-;;:::i;13111:194::-;;;;;;;;;;;;;:::i;6910:138::-;;;;;;;;;;-1:-1:-1;6910:138:0;;;;;:::i;:::-;;:::i;3716:148::-;;;;;;;;;;;;;:::i;3502:79::-;;;;;;;;;;-1:-1:-1;3540:7:0;3567:6;3502:79;;-1:-1:-1;;;;;3567:6:0;;;4050:51:1;;4038:2;4023:18;3502:79:0;4005:102:1;7056:167:0;;;;;;;;;;-1:-1:-1;7056:167:0;;;;;:::i;:::-;;:::i;11558:164::-;;;;;;;;;;-1:-1:-1;11558:164:0;;;;;:::i;:::-;;:::i;12904:195::-;;;;;;;;;;;;;:::i;10724:822::-;;;;;;;;;;;;;:::i;7231:143::-;;;;;;;;;;-1:-1:-1;7231:143:0;;;;;:::i;:::-;-1:-1:-1;;;;;7339:18:0;;;7312:7;7339:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;7231:143;7382:161;7457:4;7474:39;1300:10;7497:7;7506:6;7474:8;:39::i;:::-;-1:-1:-1;7531:4:0;7382:161;;;;;:::o;7551:313::-;7649:4;7666:36;7676:6;7684:9;7695:6;7666:9;:36::i;:::-;7713:121;7722:6;1300:10;7744:89;7782:6;7744:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7744:19:0;;;;;;:11;:19;;;;;;;;1300:10;7744:33;;;;;;;;;;:37;:89::i;:::-;7713:8;:121::i;:::-;-1:-1:-1;7852:4:0;7551:313;;;;;:::o;11734:88::-;3629:6;;-1:-1:-1;;;;;3629:6:0;1300:10;3629:22;3621:67;;;;-1:-1:-1;;;3621:67:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;11794:12:0::1;11809:5;11794:12:::0;;;:4:::1;:12;::::0;;;;:20;;-1:-1:-1;;11794:20:0::1;::::0;;11734:88::o;7872:103::-;3629:6;;-1:-1:-1;;;;;3629:6:0;1300:10;3629:22;3621:67;;;;-1:-1:-1;;;3621:67:0;;;;;;;:::i;:::-;7944:15:::1;:23:::0;;;::::1;;-1:-1:-1::0;;;7944:23:0::1;-1:-1:-1::0;;;;7944:23:0;;::::1;::::0;;;::::1;::::0;;7872:103::o;13111:194::-;13177:15;;-1:-1:-1;;;;;13177:15:0;1300:10;-1:-1:-1;;;;;13161:31:0;;13153:40;;;;;;13233:21;13265:32;13233:21;13265:12;:32::i;:::-;13111:194;:::o;6910:138::-;-1:-1:-1;;;;;7023:16:0;;6976:7;7023:16;;;:7;:16;;;;;;7003:37;;:19;:37::i;3716:148::-;3629:6;;-1:-1:-1;;;;;3629:6:0;1300:10;3629:22;3621:67;;;;-1:-1:-1;;;3621:67:0;;;;;;;:::i;:::-;3823:1:::1;3807:6:::0;;3786:40:::1;::::0;-1:-1:-1;;;;;3807:6:0;;::::1;::::0;3786:40:::1;::::0;3823:1;;3786:40:::1;3854:1;3837:19:::0;;-1:-1:-1;;;;;;3837:19:0::1;::::0;;3716:148::o;7056:167::-;7134:4;7151:42;1300:10;7175:9;7186:6;7151:9;:42::i;11558:164::-;3629:6;;-1:-1:-1;;;;;3629:6:0;1300:10;3629:22;3621:67;;;;-1:-1:-1;;;3621:67:0;;;;;;;:::i;:::-;11632:6:::1;11627:88;11648:5;:12;11644:1;:16;11627:88;;;11699:4;11682;:14;11687:5;11693:1;11687:8;;;;;;-1:-1:-1::0;;;11687:8:0::1;;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;11682:14:0::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;11682:14:0;:21;;-1:-1:-1;;11682:21:0::1;::::0;::::1;;::::0;;;::::1;::::0;;11662:3;::::1;::::0;::::1;:::i;:::-;;;;11627:88;;;;11558:164:::0;:::o;12904:195::-;12970:15;;-1:-1:-1;;;;;12970:15:0;1300:10;-1:-1:-1;;;;;12954:31:0;;12946:40;;;;;;12997:23;13023:24;13041:4;13023:9;:24::i;:::-;12997:50;;13058:33;13075:15;13058:16;:33::i;10724:822::-;3629:6;;-1:-1:-1;;;;;3629:6:0;1300:10;3629:22;3621:67;;;;-1:-1:-1;;;3621:67:0;;;;;;;:::i;:::-;10788:11:::1;::::0;-1:-1:-1;;;10788:11:0;::::1;;;10787:12;10779:47;;;::::0;-1:-1:-1;;;10779:47:0;;9872:2:1;10779:47:0::1;::::0;::::1;9854:21:1::0;9911:2;9891:18;;;9884:30;9950:25;9930:18;;;9923:53;9993:18;;10779:47:0::1;9844:173:1::0;10779:47:0::1;10948:15;:34:::0;;-1:-1:-1;;;;;;10948:34:0::1;10894:42;10948:34:::0;;::::1;::::0;;;10993:58:::1;11010:4;10894:42:::0;5138:27:::1;10993:8;:58::i;:::-;11096:16;-1:-1:-1::0;;;;;11096:24:0::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11078:56:0::1;;11143:4;11150:16;-1:-1:-1::0;;;;;11150:21:0::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11078:96;::::0;-1:-1:-1;;;;;;11078:96:0::1;::::0;;;;;;-1:-1:-1;;;;;4342:15:1;;;11078:96:0::1;::::0;::::1;4324:34:1::0;4394:15;;4374:18;;;4367:43;4259:18;;11078:96:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11062:13;:112:::0;;-1:-1:-1;;;;;;11062:112:0::1;-1:-1:-1::0;;;;;11062:112:0;;::::1;;::::0;;11185:15:::1;::::0;::::1;:31;11224:21;11255:4;11261:24;11255:4:::0;11261:9:::1;:24::i;:::-;11286:1;11288::::0;11290:7:::1;3540::::0;3567:6;-1:-1:-1;;;;;3567:6:0;;3502:79;11290:7:::1;11185:129;::::0;::::1;::::0;;;-1:-1:-1;;;;;;11185:129:0;;;-1:-1:-1;;;;;5059:15:1;;;11185:129:0::1;::::0;::::1;5041:34:1::0;5091:18;;;5084:34;;;;5134:18;;;5127:34;;;;5177:18;;;5170:34;5241:15;;;5220:19;;;5213:44;11298:15:0::1;5273:19:1::0;;;5266:35;4975:19;;11185:129:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;11325:11:0::1;:18:::0;;11402:25:::1;11387:12;:40:::0;-1:-1:-1;;;;11438:18:0;;-1:-1:-1;;;11438:18:0;;;;11505:15:::1;::::0;11467:71:::1;::::0;-1:-1:-1;;;11467:71:0;;-1:-1:-1;;;;;11505:15:0;;::::1;11467:71;::::0;::::1;4595:51:1::0;-1:-1:-1;;4662:18:1;;;4655:34;11474:13:0;;;-1:-1:-1;11467:29:0::1;::::0;4568:18:1;;11467:71:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8245:335::-:0;-1:-1:-1;;;;;8338:19:0;;8330:68;;;;-1:-1:-1;;;8330:68:0;;9467:2:1;8330:68:0;;;9449:21:1;9506:2;9486:18;;;9479:30;9545:34;9525:18;;;9518:62;-1:-1:-1;;;9596:18:1;;;9589:34;9640:19;;8330:68:0;9439:226:1;8330:68:0;-1:-1:-1;;;;;8417:21:0;;8409:68;;;;-1:-1:-1;;;8409:68:0;;7129:2:1;8409:68:0;;;7111:21:1;7168:2;7148:18;;;7141:30;7207:34;7187:18;;;7180:62;-1:-1:-1;;;7258:18:1;;;7251:32;7300:19;;8409:68:0;7101:224:1;8409:68:0;-1:-1:-1;;;;;8488:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;8540:32;;10168:25:1;;;8540:32:0;;10141:18:1;8540:32:0;;;;;;;8245:335;;;:::o;8588:1463::-;-1:-1:-1;;;;;8676:18:0;;8668:68;;;;-1:-1:-1;;;8668:68:0;;9061:2:1;8668:68:0;;;9043:21:1;9100:2;9080:18;;;9073:30;9139:34;9119:18;;;9112:62;-1:-1:-1;;;9190:18:1;;;9183:35;9235:19;;8668:68:0;9033:227:1;8668:68:0;-1:-1:-1;;;;;8755:16:0;;8747:64;;;;-1:-1:-1;;;8747:64:0;;6314:2:1;8747:64:0;;;6296:21:1;6353:2;6333:18;;;6326:30;6392:34;6372:18;;;6365:62;-1:-1:-1;;;6443:18:1;;;6436:33;6486:19;;8747:64:0;6286:225:1;8747:64:0;8839:1;8830:6;:10;8822:64;;;;-1:-1:-1;;;8822:64:0;;8651:2:1;8822:64:0;;;8633:21:1;8690:2;8670:18;;;8663:30;8729:34;8709:18;;;8702:62;-1:-1:-1;;;8780:18:1;;;8773:39;8829:19;;8822:64:0;8623:231:1;8822:64:0;8909:1;8897:9;:13;;;8921:9;:14;-1:-1:-1;3567:6:0;-1:-1:-1;;;;;8950:15:0;;;3567:6;;8950:15;;;;:32;;-1:-1:-1;3540:7:0;3567:6;-1:-1:-1;;;;;8969:13:0;;;3567:6;;8969:13;;8950:32;8946:1053;;;-1:-1:-1;;;;;9008:10:0;;;;;;:4;:10;;;;;;;;9007:11;:24;;;;-1:-1:-1;;;;;;9023:8:0;;;;;;:4;:8;;;;;;;;9022:9;9007:24;8999:33;;;;;;9059:13;;-1:-1:-1;;;;;9051:21:0;;;9059:13;;9051:21;:55;;;;-1:-1:-1;9090:15:0;;-1:-1:-1;;;;;9076:30:0;;;9090:15;;9076:30;;9051:55;:83;;;;-1:-1:-1;;;;;;9112:22:0;;;;;;:18;:22;;;;;;;;9110:24;9051:83;:102;;;;-1:-1:-1;9138:15:0;;-1:-1:-1;;;9138:15:0;;;;9051:102;9047:325;;;9221:12;;9211:6;:22;;9203:31;;;;;;-1:-1:-1;;;;;9261:12:0;;;;;;:8;:12;;;;;;9276:15;-1:-1:-1;9253:39:0;;;;;;9326:30;:15;9345:10;9326:30;:::i;:::-;-1:-1:-1;;;;;9311:12:0;;;;;;:8;:12;;;;;:45;9047:325;9424:13;;-1:-1:-1;;;;;9418:19:0;;;9424:13;;9418:19;:55;;;;-1:-1:-1;9457:15:0;;-1:-1:-1;;;;;9441:32:0;;;9457:15;;9441:32;;9418:55;:85;;;;-1:-1:-1;;;;;;9479:24:0;;;;;;:18;:24;;;;;;;;9477:26;9418:85;9414:172;;;9536:1;9524:9;:13;;;9556:9;:14;9414:172;9600:28;9631:24;9649:4;9631:9;:24::i;:::-;9675:6;;9600:55;;-1:-1:-1;;;;9675:6:0;;;;9674:7;:32;;;;-1:-1:-1;9693:13:0;;-1:-1:-1;;;;;9685:21:0;;;9693:13;;9685:21;;9674:32;:47;;;;-1:-1:-1;9710:11:0;;-1:-1:-1;;;9710:11:0;;;;9674:47;9670:318;;;9742:38;9759:20;9742:16;:38::i;:::-;9828:21;9871:22;;9868:105;;9918:35;9931:21;9918:12;:35::i;:::-;9670:318;;8946:1053;;10013:30;10028:4;10033:2;10036:6;10013:14;:30::i;:::-;8588:1463;;;:::o;2357:190::-;2443:7;2479:12;2471:6;;;;2463:29;;;;-1:-1:-1;;;2463:29:0;;;;;;;;:::i;:::-;-1:-1:-1;2503:9:0;2515:5;2519:1;2515;:5;:::i;:::-;2503:17;2357:190;-1:-1:-1;;;;;2357:190:0:o;10558:154::-;10615:15;;-1:-1:-1;;;;;10615:15:0;:39;10640:13;:6;10651:1;10640:10;:13::i;:::-;10615:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10665:15:0;;-1:-1:-1;;;;;10665:15:0;:39;10690:13;:6;10701:1;10690:10;:13::i;:::-;10665:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:254;8050:7;8089;;8078;:18;;8070:73;;;;-1:-1:-1;;;8070:73:0;;6718:2:1;8070:73:0;;;6700:21:1;6757:2;6737:18;;;6730:30;6796:34;6776:18;;;6769:62;-1:-1:-1;;;6847:18:1;;;6840:40;6897:19;;8070:73:0;6690:232:1;8070:73:0;8154:19;8177:10;:8;:10::i;:::-;8154:33;-1:-1:-1;8205:24:0;:7;8154:33;8205:11;:24::i;:::-;8198:31;7983:254;-1:-1:-1;;;7983:254:0:o;10059:483::-;5931:6;:13;;-1:-1:-1;;;;5931:13:0;-1:-1:-1;;;5931:13:0;;;10161:16:::1;::::0;;10175:1:::1;10161:16:::0;;;;;::::1;::::0;;-1:-1:-1;;10161:16:0::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;10161:16:0::1;10137:40;;10206:4;10188;10193:1;10188:7;;;;;;-1:-1:-1::0;;;10188:7:0::1;;;;;;;;;-1:-1:-1::0;;;;;10188:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;10232:15:::1;::::0;:22:::1;::::0;;-1:-1:-1;;;10232:22:0;;;;:15;;;::::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;10188:7;;10232:22;;;;;:15;:22;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10222:4;10227:1;10222:7;;;;;;-1:-1:-1::0;;;10222:7:0::1;;;;;;;;;-1:-1:-1::0;;;;;10222:32:0;;::::1;:7;::::0;;::::1;::::0;;;;;:32;10297:15:::1;::::0;10265:62:::1;::::0;10282:4:::1;::::0;10297:15:::1;10315:11:::0;10265:8:::1;:62::i;:::-;10338:15;::::0;:196:::1;::::0;-1:-1:-1;;;10338:196:0;;-1:-1:-1;;;;;10338:15:0;;::::1;::::0;:66:::1;::::0;:196:::1;::::0;10419:11;;10338:15:::1;::::0;10461:4;;10488::::1;::::0;10508:15:::1;::::0;10338:196:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5967:6:0;:14;;-1:-1:-1;;;;5967:14:0;;;-1:-1:-1;;;;10059:483:0:o;11838:146::-;11932:44;11950:6;11958:9;11969:6;11932:17;:44::i;2809:132::-;2867:7;2894:39;2898:1;2901;2894:39;;;;;;;;;;;;;;;;;:3;:39::i;14571:163::-;14612:7;14633:15;14650;14669:19;:17;:19::i;:::-;14632:56;;-1:-1:-1;14632:56:0;-1:-1:-1;14706:20:0;14632:56;;14706:11;:20::i;:::-;14699:27;;;;14571:163;:::o;11992:488::-;12091:15;12108:23;12133:12;12147:23;12172:12;12186:13;12203:19;12214:7;12203:10;:19::i;:::-;-1:-1:-1;;;;;12251:15:0;;;;;;:7;:15;;;;;;12090:132;;-1:-1:-1;12090:132:0;;-1:-1:-1;12090:132:0;;-1:-1:-1;12090:132:0;-1:-1:-1;12090:132:0;-1:-1:-1;12090:132:0;-1:-1:-1;12251:28:0;;12090:132;12251:19;:28::i;:::-;-1:-1:-1;;;;;12233:15:0;;;;;;;:7;:15;;;;;;:46;;;;12311:18;;;;;;;:39;;12334:15;12311:22;:39::i;:::-;-1:-1:-1;;;;;12290:18:0;;;;;;:7;:18;;;;;:60;12362:16;12372:5;12362:9;:16::i;:::-;12389:23;12401:4;12407;12389:11;:23::i;:::-;12445:9;-1:-1:-1;;;;;12428:44:0;12437:6;-1:-1:-1;;;;;12428:44:0;;12456:15;12428:44;;;;10168:25:1;;10156:2;10141:18;;10123:76;12428:44:0;;;;;;;;11992:488;;;;;;;;;:::o;2949:189::-;3035:7;3070:12;3063:5;3055:28;;;;-1:-1:-1;;;3055:28:0;;;;;;;;:::i;:::-;-1:-1:-1;3094:9:0;3106:5;3110:1;3106;:5;:::i;14742:262::-;14839:7;;14792;;;;5138:27;14913:20;14839:7;5138:27;14913:11;:20::i;:::-;14903:7;:30;14899:61;;;-1:-1:-1;;14943:7:0;;;5138:27;;-1:-1:-1;14742:262:0;-1:-1:-1;14742:262:0:o;14899:61::-;14979:7;;14988;;-1:-1:-1;14742:262:0;-1:-1:-1;14742:262:0:o;13319:471::-;13378:7;13387;13396;13405;13414;13423;13444:23;13469:12;13483:13;13500:42;13512:7;13521:9;;13532;;13500:11;:42::i;:::-;13443:99;;;;;;13553:19;13576:10;:8;:10::i;:::-;13553:33;;13598:15;13615:23;13640:12;13656:46;13668:7;13677:4;13683:5;13690:11;13656;:46::i;:::-;13597:105;;-1:-1:-1;13597:105:0;-1:-1:-1;13597:105:0;-1:-1:-1;13753:15:0;;-1:-1:-1;13770:4:0;;-1:-1:-1;13776:5:0;;-1:-1:-1;;;;;13319:471:0;;;;;;;:::o;2213:136::-;2271:7;2298:43;2302:1;2305;2298:43;;;;;;;;;;;;;;;;;:3;:43::i;2026:179::-;2084:7;;2116:5;2120:1;2116;:5;:::i;:::-;2104:17;;2145:1;2140;:6;;2132:46;;;;-1:-1:-1;;;2132:46:0;;7532:2:1;2132:46:0;;;7514:21:1;7571:2;7551:18;;;7544:30;7610:29;7590:18;;;7583:57;7657:18;;2132:46:0;7504:177:1;12488:212:0;12541:19;12564:10;:8;:10::i;:::-;12541:33;-1:-1:-1;12585:13:0;12601:22;:5;12541:33;12601:9;:22::i;:::-;12675:4;12659:22;;;;:7;:22;;;;;;12585:38;;-1:-1:-1;12659:33:0;;12585:38;12659:26;:33::i;:::-;12650:4;12634:22;;;;:7;:22;;;;;:58;-1:-1:-1;;;12488:212:0:o;12708:147::-;12786:7;;:17;;12798:4;12786:11;:17::i;:::-;12776:7;:27;12827:10;;:20;;12842:4;12827:14;:20::i;:::-;12814:10;:33;-1:-1:-1;;12708:147:0:o;13798:351::-;13891:7;;;;13944:28;13968:3;13944:19;:7;13956:6;13944:11;:19::i;:::-;:23;;:28::i;:::-;13929:43;-1:-1:-1;13983:13:0;13999:29;14024:3;13999:20;:7;14011;13999:11;:20::i;:29::-;13983:45;-1:-1:-1;14039:23:0;14065:28;13983:45;14065:17;:7;14077:4;14065:11;:17::i;:::-;:21;;:28::i;:::-;14039:54;14129:4;;-1:-1:-1;14135:5:0;;-1:-1:-1;13798:351:0;;-1:-1:-1;;;;;13798:351:0:o;14157:409::-;14267:7;;;;14323:24;:7;14335:11;14323;:24::i;:::-;14305:42;-1:-1:-1;14358:12:0;14373:21;:4;14382:11;14373:8;:21::i;:::-;14358:36;-1:-1:-1;14405:13:0;14421:22;:5;14431:11;14421:9;:22::i;:::-;14405:38;-1:-1:-1;14454:23:0;14480:28;14405:38;14480:17;:7;14492:4;14480:11;:17::i;:28::-;14527:7;;;;-1:-1:-1;14553:4:0;;-1:-1:-1;14157:409:0;;-1:-1:-1;;;;;;;14157:409:0:o;2555:246::-;2613:7;2637:6;2633:47;;-1:-1:-1;2667:1:0;2660:8;;2633:47;2690:9;2702:5;2706:1;2702;:5;:::i;:::-;2690:17;-1:-1:-1;2735:1:0;2726:5;2730:1;2690:17;2726:5;:::i;:::-;:10;2718:56;;;;-1:-1:-1;;;2718:56:0;;7888:2:1;2718:56:0;;;7870:21:1;7927:2;7907:18;;;7900:30;7966:34;7946:18;;;7939:62;-1:-1:-1;;;8017:18:1;;;8010:31;8058:19;;2718:56:0;7860:223:1;14:134;82:20;;111:31;82:20;111:31;:::i;:::-;63:85;;;:::o;153:257::-;212:6;265:2;253:9;244:7;240:23;236:32;233:2;;;286:6;278;271:22;233:2;330:9;317:23;349:31;374:5;349:31;:::i;415:261::-;485:6;538:2;526:9;517:7;513:23;509:32;506:2;;;559:6;551;544:22;506:2;596:9;590:16;615:31;640:5;615:31;:::i;681:398::-;749:6;757;810:2;798:9;789:7;785:23;781:32;778:2;;;831:6;823;816:22;778:2;875:9;862:23;894:31;919:5;894:31;:::i;:::-;944:5;-1:-1:-1;1001:2:1;986:18;;973:32;1014:33;973:32;1014:33;:::i;:::-;1066:7;1056:17;;;768:311;;;;;:::o;1084:466::-;1161:6;1169;1177;1230:2;1218:9;1209:7;1205:23;1201:32;1198:2;;;1251:6;1243;1236:22;1198:2;1295:9;1282:23;1314:31;1339:5;1314:31;:::i;:::-;1364:5;-1:-1:-1;1421:2:1;1406:18;;1393:32;1434:33;1393:32;1434:33;:::i;:::-;1188:362;;1486:7;;-1:-1:-1;;;1540:2:1;1525:18;;;;1512:32;;1188:362::o;1555:325::-;1623:6;1631;1684:2;1672:9;1663:7;1659:23;1655:32;1652:2;;;1705:6;1697;1690:22;1652:2;1749:9;1736:23;1768:31;1793:5;1768:31;:::i;:::-;1818:5;1870:2;1855:18;;;;1842:32;;-1:-1:-1;;;1642:238:1:o;1885:1177::-;1969:6;2000:2;2043;2031:9;2022:7;2018:23;2014:32;2011:2;;;2064:6;2056;2049:22;2011:2;2109:9;2096:23;2138:18;2179:2;2171:6;2168:14;2165:2;;;2200:6;2192;2185:22;2165:2;2243:6;2232:9;2228:22;2218:32;;2288:7;2281:4;2277:2;2273:13;2269:27;2259:2;;2315:6;2307;2300:22;2259:2;2356;2343:16;2378:2;2374;2371:10;2368:2;;;2384:18;;:::i;:::-;2430:2;2427:1;2423:10;2462:2;2456:9;2525:2;2521:7;2516:2;2512;2508:11;2504:25;2496:6;2492:38;2580:6;2568:10;2565:22;2560:2;2548:10;2545:18;2542:46;2539:2;;;2591:18;;:::i;:::-;2627:2;2620:22;2677:18;;;2711:15;;;;-1:-1:-1;2746:11:1;;;2776;;;2772:20;;2769:33;-1:-1:-1;2766:2:1;;;2820:6;2812;2805:22;2766:2;2847:6;2838:15;;2862:169;2876:2;2873:1;2870:9;2862:169;;;2933:23;2952:3;2933:23;:::i;:::-;2921:36;;2894:1;2887:9;;;;;2977:12;;;;3009;;2862:169;;;-1:-1:-1;3050:6:1;1980:1082;-1:-1:-1;;;;;;;;1980:1082:1:o;3067:251::-;3123:6;3176:2;3164:9;3155:7;3151:23;3147:32;3144:2;;;3197:6;3189;3182:22;3144:2;3241:9;3228:23;3260:28;3282:5;3260:28;:::i;3323:255::-;3390:6;3443:2;3431:9;3422:7;3418:23;3414:32;3411:2;;;3464:6;3456;3449:22;3411:2;3501:9;3495:16;3520:28;3542:5;3520:28;:::i;3583:316::-;3671:6;3679;3687;3740:2;3728:9;3719:7;3715:23;3711:32;3708:2;;;3761:6;3753;3746:22;3708:2;3795:9;3789:16;3779:26;;3845:2;3834:9;3830:18;3824:25;3814:35;;3889:2;3878:9;3874:18;3868:25;3858:35;;3698:201;;;;;:::o;5504:603::-;5616:4;5645:2;5674;5663:9;5656:21;5706:6;5700:13;5749:6;5744:2;5733:9;5729:18;5722:34;5774:4;5787:140;5801:6;5798:1;5795:13;5787:140;;;5896:14;;;5892:23;;5886:30;5862:17;;;5881:2;5858:26;5851:66;5816:10;;5787:140;;;5945:6;5942:1;5939:13;5936:2;;;6015:4;6010:2;6001:6;5990:9;5986:22;5982:31;5975:45;5936:2;-1:-1:-1;6091:2:1;6070:15;-1:-1:-1;;6066:29:1;6051:45;;;;6098:2;6047:54;;5625:482;-1:-1:-1;;;5625:482:1:o;8088:356::-;8290:2;8272:21;;;8309:18;;;8302:30;8368:34;8363:2;8348:18;;8341:62;8435:2;8420:18;;8262:182::o;10204:983::-;10466:4;10514:3;10503:9;10499:19;10545:6;10534:9;10527:25;10571:2;10609:6;10604:2;10593:9;10589:18;10582:34;10652:3;10647:2;10636:9;10632:18;10625:31;10676:6;10711;10705:13;10742:6;10734;10727:22;10780:3;10769:9;10765:19;10758:26;;10819:2;10811:6;10807:15;10793:29;;10840:4;10853:195;10867:6;10864:1;10861:13;10853:195;;;10932:13;;-1:-1:-1;;;;;10928:39:1;10916:52;;11023:15;;;;10988:12;;;;10964:1;10882:9;10853:195;;;-1:-1:-1;;;;;;;11104:32:1;;;;11099:2;11084:18;;11077:60;-1:-1:-1;;;11168:3:1;11153:19;11146:35;11065:3;10475:712;-1:-1:-1;;;10475:712:1:o;11381:128::-;11421:3;11452:1;11448:6;11445:1;11442:13;11439:2;;;11458:18;;:::i;:::-;-1:-1:-1;11494:9:1;;11429:80::o;11514:217::-;11554:1;11580;11570:2;;-1:-1:-1;;;11605:31:1;;11659:4;11656:1;11649:15;11687:4;11612:1;11677:15;11570:2;-1:-1:-1;11716:9:1;;11560:171::o;11736:168::-;11776:7;11842:1;11838;11834:6;11830:14;11827:1;11824:21;11819:1;11812:9;11805:17;11801:45;11798:2;;;11849:18;;:::i;:::-;-1:-1:-1;11889:9:1;;11788:116::o;11909:125::-;11949:4;11977:1;11974;11971:8;11968:2;;;11982:18;;:::i;:::-;-1:-1:-1;12019:9:1;;11958:76::o;12039:135::-;12078:3;-1:-1:-1;;12099:17:1;;12096:2;;;12119:18;;:::i;:::-;-1:-1:-1;12166:1:1;12155:13;;12086:88::o;12179:127::-;12240:10;12235:3;12231:20;12228:1;12221:31;12271:4;12268:1;12261:15;12295:4;12292:1;12285:15;12311:127;12372:10;12367:3;12363:20;12360:1;12353:31;12403:4;12400:1;12393:15;12427:4;12424:1;12417:15;12443:131;-1:-1:-1;;;;;12518:31:1;;12508:42;;12498:2;;12564:1;12561;12554:12;12579:118;12665:5;12658:13;12651:21;12644:5;12641:32;12631:2;;12687:1;12684;12677:12"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "1324400",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "allowance(address,address)": "infinite",
              "approve(address,uint256)": "22537",
              "balanceOf(address)": "infinite",
              "decimals()": "222",
              "delBot(address)": "22061",
              "manualsend()": "infinite",
              "manualswap()": "infinite",
              "name()": "infinite",
              "openTrading()": "infinite",
              "owner()": "1068",
              "renounceOwnership()": "24210",
              "setBots(address[])": "infinite",
              "setCooldownEnabled(bool)": "22056",
              "symbol()": "infinite",
              "totalSupply()": "249",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite"
            },
            "internal": {
              "_approve(address,address,uint256)": "infinite",
              "_getCurrentSupply()": "infinite",
              "_getRValues(uint256,uint256,uint256,uint256)": "infinite",
              "_getRate()": "infinite",
              "_getTValues(uint256,uint256,uint256)": "infinite",
              "_getValues(uint256)": "infinite",
              "_reflectFee(uint256,uint256)": "infinite",
              "_takeTeam(uint256)": "infinite",
              "_tokenTransfer(address,address,uint256)": "infinite",
              "_transfer(address,address,uint256)": "infinite",
              "_transferStandard(address,address,uint256)": "infinite",
              "sendETHToFee(uint256)": "infinite",
              "swapTokensForEth(uint256)": "infinite",
              "tokenFromReflection(uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 5206,
                "end": 5219,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 5138,
                "end": 5165,
                "name": "PUSH",
                "source": 0,
                "value": "33B2E3C9FD0803CE8000000"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 5206,
                "end": 5219,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "2"
              },
              {
                "begin": 5206,
                "end": 5219,
                "name": "JUMP",
                "source": 0,
                "value": "[in]"
              },
              {
                "begin": 5206,
                "end": 5219,
                "name": "tag",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 5206,
                "end": 5219,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": 5199,
                "end": 5220,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "3"
              },
              {
                "begin": 5199,
                "end": 5220,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 5199,
                "end": 5220,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "4"
              },
              {
                "begin": 5199,
                "end": 5220,
                "name": "JUMP",
                "source": 0,
                "value": "[in]"
              },
              {
                "begin": 5199,
                "end": 5220,
                "name": "tag",
                "source": 0,
                "value": "3"
              },
              {
                "begin": 5199,
                "end": 5220,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": 5172,
                "end": 5221,
                "name": "PUSH",
                "source": 0,
                "value": "8"
              },
              {
                "begin": 5172,
                "end": 5221,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 5688,
                "end": 5715,
                "name": "PUSH",
                "source": 0,
                "value": "F"
              },
              {
                "begin": 5688,
                "end": 5715,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 5688,
                "end": 5715,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "FFFFFF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A8"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 5761,
                "end": 5797,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 5761,
                "end": 5797,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 5761,
                "end": 5797,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 5138,
                "end": 5165,
                "name": "PUSH",
                "source": 0,
                "value": "33B2E3C9FD0803CE8000000"
              },
              {
                "begin": 5804,
                "end": 5842,
                "name": "PUSH",
                "source": 0,
                "value": "10"
              },
              {
                "begin": 5804,
                "end": 5842,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "CALLVALUE",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "ISZERO",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "JUMPI",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "REVERT",
                "source": 0
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "tag",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 5995,
                "end": 6522,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP",
                "source": -1
              },
              {
                "begin": 3366,
                "end": 3383,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "CALLER",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 3409,
                "end": 3427,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "MLOAD",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "PUSH",
                "source": 0,
                "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3366,
                "end": 3383,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 3366,
                "end": 3383,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3443,
                "end": 3486,
                "name": "LOG3",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP",
                "source": -1
              },
              {
                "begin": 6021,
                "end": 6036,
                "name": "PUSH",
                "source": 0,
                "value": "C"
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6047,
                "end": 6089,
                "name": "PUSH",
                "source": 0,
                "value": "EFFFE4828DDD40166BBB13E3FBE089F622ED0B2"
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6021,
                "end": 6090,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6116,
                "name": "PUSH",
                "source": 0,
                "value": "D"
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6127,
                "end": 6169,
                "name": "PUSH",
                "source": 0,
                "value": "D6F8AAF7F8D4EEDE2C7B2CB38709C13755AE27D0"
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6101,
                "end": 6170,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6205,
                "end": 6212,
                "name": "PUSH",
                "source": 0,
                "value": "8"
              },
              {
                "begin": 6205,
                "end": 6212,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6188,
                "name": "PUSH",
                "source": 0,
                "value": "2"
              },
              {
                "begin": 6021,
                "end": 6036,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 6189,
                "end": 6201,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "12"
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "CALLER",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 1220,
                "end": 1318,
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 6189,
                "end": 6201,
                "name": "tag",
                "source": 0,
                "value": "12"
              },
              {
                "begin": 6189,
                "end": 6201,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "AND",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "ADD",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "ADD",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 6181,
                "end": 6202,
                "name": "KECCAK256",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6212,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6212,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6212,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6181,
                "end": 6212,
                "name": "POP",
                "source": 0
              },
              {
                "begin": 6253,
                "end": 6257,
                "name": "PUSH",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 6223,
                "end": 6241,
                "name": "PUSH",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 6242,
                "end": 6249,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "13"
              },
              {
                "begin": 6242,
                "end": 6247,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "14"
              },
              {
                "begin": 6242,
                "end": 6247,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 6242,
                "end": 6247,
                "name": "SHL",
                "source": 0
              },
              {
                "begin": 6242,
                "end": 6249,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 6242,
                "end": 6249,
                "name": "SHR",
                "source": 0
              },
              {
                "begin": 6242,
                "end": 6249,
                "name": "JUMP",
                "source": 0,
                "value": "[in]"
              },
              {
                "begin": 6242,
                "end": 6249,
                "name": "tag",
                "source": 0,
                "value": "13"
              },
              {
                "begin": 6242,
                "end": 6249,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "DUP4",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "ADD",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "SWAP4",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "SWAP4",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "ADD",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "0"
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6250,
                "name": "KECCAK256",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "SWAP6",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "ISZERO",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "ISZERO",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT",
                "source": -1
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "SWAP7",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "DUP8",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6295,
                "end": 6299,
                "name": "ADDRESS",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6286,
                "name": "PUSH",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "SWAP4",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "DUP4",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6301,
                "name": "KECCAK256",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "DUP6",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6223,
                "end": 6257,
                "name": "PUSH",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6268,
                "end": 6308,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6338,
                "end": 6353,
                "name": "PUSH",
                "source": 0,
                "value": "C"
              },
              {
                "begin": 6338,
                "end": 6353,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6338,
                "end": 6353,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 6338,
                "end": 6353,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6354,
                "name": "DUP5",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6354,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6354,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6354,
                "name": "DUP5",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6354,
                "name": "KECCAK256",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "DUP7",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6319,
                "end": 6361,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6391,
                "end": 6406,
                "name": "PUSH",
                "source": 0,
                "value": "D"
              },
              {
                "begin": 6391,
                "end": 6406,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6391,
                "end": 6406,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6391,
                "end": 6406,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6391,
                "end": 6406,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6407,
                "name": "DUP4",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6407,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6407,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6407,
                "name": "KECCAK256",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "SWAP3",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "OR",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6372,
                "end": 6414,
                "name": "SSTORE",
                "source": 0
              },
              {
                "begin": 6492,
                "end": 6504,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "15"
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "CALLER",
                "source": 0
              },
              {
                "begin": 1300,
                "end": 1310,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 1220,
                "end": 1318,
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 6492,
                "end": 6504,
                "name": "tag",
                "source": 0,
                "value": "15"
              },
              {
                "begin": 6492,
                "end": 6504,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6447,
                "end": 6489,
                "name": "PUSH",
                "source": 0,
                "value": "1F135511975B0D63CE9E5AD1F123903A6FC5319D"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "PUSH",
                "source": 0,
                "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
              },
              {
                "begin": 5138,
                "end": 5165,
                "name": "PUSH",
                "source": 0,
                "value": "33B2E3C9FD0803CE8000000"
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "MLOAD",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "16"
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 160,
                "end": 185,
                "name": "DUP2",
                "source": 1
              },
              {
                "begin": 160,
                "end": 185,
                "name": "MSTORE",
                "source": 1
              },
              {
                "begin": 148,
                "end": 150,
                "name": "PUSH",
                "source": 1,
                "value": "20"
              },
              {
                "begin": 133,
                "end": 151,
                "name": "ADD",
                "source": 1
              },
              {
                "begin": 133,
                "end": 151,
                "name": "SWAP1",
                "source": 1
              },
              {
                "begin": 115,
                "end": 191,
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "tag",
                "source": 0,
                "value": "16"
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "MLOAD",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "SWAP2",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "SUB",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 6430,
                "end": 6514,
                "name": "LOG3",
                "source": 0
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "21"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 3502,
                "end": 3581,
                "name": "tag",
                "source": 0,
                "value": "14"
              },
              {
                "begin": 3502,
                "end": 3581,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": 3540,
                "end": 3547,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 3567,
                "end": 3573,
                "name": "SLOAD",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB",
                "source": -1
              },
              {
                "begin": 3567,
                "end": 3573,
                "name": "AND",
                "source": 0
              },
              {
                "begin": 3567,
                "end": 3573,
                "name": "SWAP1",
                "source": 0
              },
              {
                "begin": 3502,
                "end": 3581,
                "name": "JUMP",
                "source": 0,
                "value": "[out]"
              },
              {
                "begin": 196,
                "end": 424,
                "name": "tag",
                "source": 1,
                "value": "4"
              },
              {
                "begin": 196,
                "end": 424,
                "name": "JUMPDEST",
                "source": 1
              },
              {
                "begin": 236,
                "end": 240,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 264,
                "end": 265,
                "name": "DUP3",
                "source": 1
              },
              {
                "begin": 261,
                "end": 262,
                "name": "DUP3",
                "source": 1
              },
              {
                "begin": 258,
                "end": 266,
                "name": "LT",
                "source": 1
              },
              {
                "begin": 255,
                "end": 257,
                "name": "ISZERO",
                "source": 1
              },
              {
                "begin": 255,
                "end": 257,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "24"
              },
              {
                "begin": 255,
                "end": 257,
                "name": "JUMPI",
                "source": 1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "4E487B71"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "E0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": 289,
                "end": 323,
                "name": "DUP2",
                "source": 1
              },
              {
                "begin": 289,
                "end": 323,
                "name": "MSTORE",
                "source": 1
              },
              {
                "begin": 346,
                "end": 350,
                "name": "PUSH",
                "source": 1,
                "value": "11"
              },
              {
                "begin": 343,
                "end": 344,
                "name": "PUSH",
                "source": 1,
                "value": "4"
              },
              {
                "begin": 336,
                "end": 351,
                "name": "MSTORE",
                "source": 1
              },
              {
                "begin": 377,
                "end": 381,
                "name": "PUSH",
                "source": 1,
                "value": "24"
              },
              {
                "begin": 296,
                "end": 300,
                "name": "DUP2",
                "source": 1
              },
              {
                "begin": 364,
                "end": 382,
                "name": "REVERT",
                "source": 1
              },
              {
                "begin": 255,
                "end": 257,
                "name": "tag",
                "source": 1,
                "value": "24"
              },
              {
                "begin": 255,
                "end": 257,
                "name": "JUMPDEST",
                "source": 1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP",
                "source": -1
              },
              {
                "begin": 409,
                "end": 418,
                "name": "SUB",
                "source": 1
              },
              {
                "begin": 409,
                "end": 418,
                "name": "SWAP1",
                "source": 1
              },
              {
                "begin": 245,
                "end": 424,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 429,
                "end": 638,
                "name": "tag",
                "source": 1,
                "value": "2"
              },
              {
                "begin": 429,
                "end": 638,
                "name": "JUMPDEST",
                "source": 1
              },
              {
                "begin": 461,
                "end": 462,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 487,
                "end": 488,
                "name": "DUP3",
                "source": 1
              },
              {
                "begin": 477,
                "end": 479,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "26"
              },
              {
                "begin": 477,
                "end": 479,
                "name": "JUMPI",
                "source": 1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "4E487B71"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "E0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": 512,
                "end": 543,
                "name": "DUP2",
                "source": 1
              },
              {
                "begin": 512,
                "end": 543,
                "name": "MSTORE",
                "source": 1
              },
              {
                "begin": 566,
                "end": 570,
                "name": "PUSH",
                "source": 1,
                "value": "12"
              },
              {
                "begin": 563,
                "end": 564,
                "name": "PUSH",
                "source": 1,
                "value": "4"
              },
              {
                "begin": 556,
                "end": 571,
                "name": "MSTORE",
                "source": 1
              },
              {
                "begin": 594,
                "end": 598,
                "name": "PUSH",
                "source": 1,
                "value": "24"
              },
              {
                "begin": 519,
                "end": 520,
                "name": "DUP2",
                "source": 1
              },
              {
                "begin": 584,
                "end": 599,
                "name": "REVERT",
                "source": 1
              },
              {
                "begin": 477,
                "end": 479,
                "name": "tag",
                "source": 1,
                "value": "26"
              },
              {
                "begin": 477,
                "end": 479,
                "name": "JUMPDEST",
                "source": 1
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP",
                "source": -1
              },
              {
                "begin": 623,
                "end": 632,
                "name": "MOD",
                "source": 1
              },
              {
                "begin": 623,
                "end": 632,
                "name": "SWAP1",
                "source": 1
              },
              {
                "begin": 467,
                "end": 638,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 467,
                "end": 638,
                "name": "tag",
                "source": 1,
                "value": "21"
              },
              {
                "begin": 467,
                "end": 638,
                "name": "JUMPDEST",
                "source": 1
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH #[$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH [$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "CODECOPY",
                "source": 0
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 4637,
                "end": 15007,
                "name": "RETURN",
                "source": 0
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a2646970667358221220c19331182751b28b2b0d7444378984029d8715d63ac89e85ba335fc7daabc5f964736f6c63430008040033",
                ".code": [
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "80"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "CALLDATALOAD",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "SHR",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "70A08231"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "21"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "15"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "B515566A"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "16"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C3C8CD80"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "17"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C9567BF9"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "18"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "19"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "tag",
                    "source": 0,
                    "value": "21"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "70A08231"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "11"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "715018A6"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "12"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8DA5CB5B"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "13"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "95D89B41"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "3"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "tag",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "273123B7"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "22"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "273123B7"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "7"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "313CE567"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "5932EAD1"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "9"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6FC3EAEC"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "10"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "tag",
                    "source": 0,
                    "value": "22"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6FDDE03"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "3"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "18160DDD"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "23B872DD"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "tag",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "STOP",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "tag",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 4637,
                    "end": 15007,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "tag",
                    "source": 0,
                    "value": "3"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "25"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "tag",
                    "source": 0,
                    "value": "25"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "PUSH",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "5248494E55"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "D8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 6600,
                    "end": 6605,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "29"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "tag",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 6530,
                    "end": 6613,
                    "name": "RETURN",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "tag",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "30"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "tag",
                    "source": 0,
                    "value": "30"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "31"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "32"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "33"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "tag",
                    "source": 0,
                    "value": "32"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "34"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "tag",
                    "source": 0,
                    "value": "31"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 5477,
                    "end": 5491,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 5477,
                    "end": 5491,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 5470,
                    "end": 5492,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 5452,
                    "end": 5493,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5452,
                    "end": 5493,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5440,
                    "end": 5442,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 5425,
                    "end": 5443,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 5407,
                    "end": 5499,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "tag",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "37"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "tag",
                    "source": 0,
                    "value": "37"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 5138,
                    "end": 5165,
                    "name": "PUSH",
                    "source": 0,
                    "value": "33B2E3C9FD0803CE8000000"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "tag",
                    "source": 0,
                    "value": "38"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 10156,
                    "end": 10158,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 10141,
                    "end": 10159,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6807,
                    "end": 6902,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 10123,
                    "end": 10199,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "tag",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "42"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "tag",
                    "source": 0,
                    "value": "42"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "31"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "44"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "45"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "tag",
                    "source": 0,
                    "value": "44"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "46"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "tag",
                    "source": 0,
                    "value": "7"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "48"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "tag",
                    "source": 0,
                    "value": "48"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "50"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "51"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "tag",
                    "source": 0,
                    "value": "50"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "52"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "tag",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "STOP",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "tag",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "53"
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "tag",
                    "source": 0,
                    "value": "53"
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 5558,
                    "end": 5559,
                    "name": "PUSH",
                    "source": 0,
                    "value": "9"
                  },
                  {
                    "begin": 11334,
                    "end": 11370,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 11334,
                    "end": 11370,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11322,
                    "end": 11324,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 11307,
                    "end": 11325,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6716,
                    "end": 6799,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 11289,
                    "end": 11376,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "tag",
                    "source": 0,
                    "value": "9"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "58"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "tag",
                    "source": 0,
                    "value": "58"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "60"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "61"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "tag",
                    "source": 0,
                    "value": "60"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "62"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "tag",
                    "source": 0,
                    "value": "10"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "63"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "tag",
                    "source": 0,
                    "value": "63"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "65"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "tag",
                    "source": 0,
                    "value": "11"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "66"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "tag",
                    "source": 0,
                    "value": "66"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "38"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "68"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "51"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "tag",
                    "source": 0,
                    "value": "68"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "69"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "tag",
                    "source": 0,
                    "value": "12"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "71"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "tag",
                    "source": 0,
                    "value": "71"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "73"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "tag",
                    "source": 0,
                    "value": "13"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "74"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "tag",
                    "source": 0,
                    "value": "74"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 3540,
                    "end": 3547,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 4050,
                    "end": 4101,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 4050,
                    "end": 4101,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 4038,
                    "end": 4040,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 4023,
                    "end": 4041,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 4005,
                    "end": 4107,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "tag",
                    "source": 0,
                    "value": "15"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "83"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "tag",
                    "source": 0,
                    "value": "83"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "31"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "85"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "33"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "tag",
                    "source": 0,
                    "value": "85"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "86"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "tag",
                    "source": 0,
                    "value": "16"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "88"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "tag",
                    "source": 0,
                    "value": "88"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "90"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "91"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "tag",
                    "source": 0,
                    "value": "90"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "92"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "tag",
                    "source": 0,
                    "value": "17"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "93"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "tag",
                    "source": 0,
                    "value": "93"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "95"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "tag",
                    "source": 0,
                    "value": "18"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "96"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "tag",
                    "source": 0,
                    "value": "96"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "49"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "98"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "tag",
                    "source": 0,
                    "value": "19"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "99"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "tag",
                    "source": 0,
                    "value": "99"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "38"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "101"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "102"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "tag",
                    "source": 0,
                    "value": "101"
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 7312,
                    "end": 7319,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7350,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7357,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP5",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 7339,
                    "end": 7366,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7231,
                    "end": 7374,
                    "name": "JUMP",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "tag",
                    "source": 0,
                    "value": "34"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7457,
                    "end": 7461,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7474,
                    "end": 7513,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "107"
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 7497,
                    "end": 7504,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7506,
                    "end": 7512,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7474,
                    "end": 7482,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "110"
                  },
                  {
                    "begin": 7474,
                    "end": 7513,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7474,
                    "end": 7513,
                    "name": "tag",
                    "source": 0,
                    "value": "107"
                  },
                  {
                    "begin": 7474,
                    "end": 7513,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7531,
                    "end": 7535,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "tag",
                    "source": 0,
                    "value": "106"
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 7382,
                    "end": 7543,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "tag",
                    "source": 0,
                    "value": "46"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7649,
                    "end": 7653,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7666,
                    "end": 7702,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "113"
                  },
                  {
                    "begin": 7676,
                    "end": 7682,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7684,
                    "end": 7693,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7695,
                    "end": 7701,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7666,
                    "end": 7675,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "114"
                  },
                  {
                    "begin": 7666,
                    "end": 7702,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7666,
                    "end": 7702,
                    "name": "tag",
                    "source": 0,
                    "value": "113"
                  },
                  {
                    "begin": 7666,
                    "end": 7702,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7713,
                    "end": 7834,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "115"
                  },
                  {
                    "begin": 7722,
                    "end": 7728,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "117"
                  },
                  {
                    "begin": 7782,
                    "end": 7788,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH",
                    "source": 0,
                    "value": "60"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH data",
                    "source": 0,
                    "value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "PUSH",
                    "source": 0,
                    "value": "28"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "CODECOPY",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "DUP11",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7755,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7763,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7777,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7744,
                    "end": 7781,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "119"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "tag",
                    "source": 0,
                    "value": "117"
                  },
                  {
                    "begin": 7744,
                    "end": 7833,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7713,
                    "end": 7721,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "110"
                  },
                  {
                    "begin": 7713,
                    "end": 7834,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 7713,
                    "end": 7834,
                    "name": "tag",
                    "source": 0,
                    "value": "115"
                  },
                  {
                    "begin": 7713,
                    "end": 7834,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7852,
                    "end": 7856,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 7551,
                    "end": 7864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "tag",
                    "source": 0,
                    "value": "52"
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3651,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "122"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "124"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "122"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11809,
                    "end": 11814,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11798,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11806,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11814,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11814,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 11794,
                    "end": 11814,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11814,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11794,
                    "end": 11814,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11734,
                    "end": 11822,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "tag",
                    "source": 0,
                    "value": "62"
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3651,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "129"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "124"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "129"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7959,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "B8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "MUL",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "B8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "OR",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7944,
                    "end": 7967,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7872,
                    "end": 7975,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "tag",
                    "source": 0,
                    "value": "65"
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13177,
                    "end": 13192,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C"
                  },
                  {
                    "begin": 13177,
                    "end": 13192,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 13177,
                    "end": 13192,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 13161,
                    "end": 13192,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 13161,
                    "end": 13192,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "134"
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "tag",
                    "source": 0,
                    "value": "134"
                  },
                  {
                    "begin": 13153,
                    "end": 13193,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13233,
                    "end": 13254,
                    "name": "SELFBALANCE",
                    "source": 0
                  },
                  {
                    "begin": 13265,
                    "end": 13297,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "135"
                  },
                  {
                    "begin": 13233,
                    "end": 13254,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 13265,
                    "end": 13277,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "136"
                  },
                  {
                    "begin": 13265,
                    "end": 13297,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13265,
                    "end": 13297,
                    "name": "tag",
                    "source": 0,
                    "value": "135"
                  },
                  {
                    "begin": 13265,
                    "end": 13297,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13111,
                    "end": 13305,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "tag",
                    "source": 0,
                    "value": "69"
                  },
                  {
                    "begin": 6910,
                    "end": 7048,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 6976,
                    "end": 6983,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7030,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 7023,
                    "end": 7039,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 7003,
                    "end": 7040,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "106"
                  },
                  {
                    "begin": 7003,
                    "end": 7040,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 7003,
                    "end": 7022,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "139"
                  },
                  {
                    "begin": 7003,
                    "end": 7040,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "tag",
                    "source": 0,
                    "value": "73"
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3651,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "142"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "124"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "142"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3823,
                    "end": 3824,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3807,
                    "end": 3813,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3823,
                    "end": 3824,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 3823,
                    "end": 3824,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3786,
                    "end": 3826,
                    "name": "LOG3",
                    "source": 0
                  },
                  {
                    "begin": 3854,
                    "end": 3855,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3837,
                    "end": 3856,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3716,
                    "end": 3864,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "tag",
                    "source": 0,
                    "value": "86"
                  },
                  {
                    "begin": 7056,
                    "end": 7223,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 7134,
                    "end": 7138,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 7151,
                    "end": 7193,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "107"
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 7175,
                    "end": 7184,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7186,
                    "end": 7192,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 7151,
                    "end": 7160,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "114"
                  },
                  {
                    "begin": 7151,
                    "end": 7193,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "tag",
                    "source": 0,
                    "value": "92"
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3651,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "152"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "124"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "152"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11632,
                    "end": 11638,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "tag",
                    "source": 0,
                    "value": "155"
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11648,
                    "end": 11653,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11648,
                    "end": 11660,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11644,
                    "end": 11645,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11644,
                    "end": 11660,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "156"
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11699,
                    "end": 11703,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 11682,
                    "end": 11686,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11687,
                    "end": 11692,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 11693,
                    "end": 11694,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "158"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "4E487B71"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH",
                    "source": 0,
                    "value": "32"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH",
                    "source": 0,
                    "value": "24"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "tag",
                    "source": 0,
                    "value": "158"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "MUL",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11687,
                    "end": 11695,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "0"
                  },
                  {
                    "begin": 11682,
                    "end": 11696,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "OR",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11682,
                    "end": 11703,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "159"
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "160"
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "tag",
                    "source": 0,
                    "value": "159"
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11662,
                    "end": 11665,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "155"
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "JUMP",
                    "source": 0
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "tag",
                    "source": 0,
                    "value": "156"
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11627,
                    "end": 11715,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11558,
                    "end": 11722,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "tag",
                    "source": 0,
                    "value": "95"
                  },
                  {
                    "begin": 12904,
                    "end": 13099,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12970,
                    "end": 12985,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C"
                  },
                  {
                    "begin": 12970,
                    "end": 12985,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12970,
                    "end": 12985,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12954,
                    "end": 12985,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12954,
                    "end": 12985,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "163"
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "tag",
                    "source": 0,
                    "value": "163"
                  },
                  {
                    "begin": 12946,
                    "end": 12986,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12997,
                    "end": 13020,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13023,
                    "end": 13047,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "164"
                  },
                  {
                    "begin": 13041,
                    "end": 13045,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 13023,
                    "end": 13032,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "69"
                  },
                  {
                    "begin": 13023,
                    "end": 13047,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13023,
                    "end": 13047,
                    "name": "tag",
                    "source": 0,
                    "value": "164"
                  },
                  {
                    "begin": 13023,
                    "end": 13047,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12997,
                    "end": 13047,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12997,
                    "end": 13047,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13058,
                    "end": 13091,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "135"
                  },
                  {
                    "begin": 13075,
                    "end": 13090,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 13058,
                    "end": 13074,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "166"
                  },
                  {
                    "begin": 13058,
                    "end": 13091,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "tag",
                    "source": 0,
                    "value": "98"
                  },
                  {
                    "begin": 10724,
                    "end": 11546,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3629,
                    "end": 3635,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 1300,
                    "end": 1310,
                    "name": "CALLER",
                    "source": 0
                  },
                  {
                    "begin": 3629,
                    "end": 3651,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "169"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "124"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "tag",
                    "source": 0,
                    "value": "169"
                  },
                  {
                    "begin": 3621,
                    "end": 3688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10788,
                    "end": 10799,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 10788,
                    "end": 10799,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 10788,
                    "end": 10799,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10788,
                    "end": 10799,
                    "name": "DIV",
                    "source": 0
                  },
                  {
                    "begin": 10788,
                    "end": 10799,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 10788,
                    "end": 10799,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10787,
                    "end": 10799,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "172"
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9872,
                    "end": 9874,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 9854,
                    "end": 9875,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9911,
                    "end": 9913,
                    "name": "PUSH",
                    "source": 1,
                    "value": "17"
                  },
                  {
                    "begin": 9891,
                    "end": 9909,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 9891,
                    "end": 9909,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9891,
                    "end": 9909,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9884,
                    "end": 9914,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9950,
                    "end": 9975,
                    "name": "PUSH",
                    "source": 1,
                    "value": "74726164696E6720697320616C7265616479206F70656E000000000000000000"
                  },
                  {
                    "begin": 9930,
                    "end": 9948,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 9930,
                    "end": 9948,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9930,
                    "end": 9948,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9923,
                    "end": 9976,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9993,
                    "end": 10011,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 9993,
                    "end": 10011,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 9844,
                    "end": 10017,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "tag",
                    "source": 0,
                    "value": "172"
                  },
                  {
                    "begin": 10779,
                    "end": 10826,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10963,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10894,
                    "end": 10936,
                    "name": "PUSH",
                    "source": 0,
                    "value": "7A250D5630B4CF539739DF2C5DACB4C659F2488D"
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "OR",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10948,
                    "end": 10982,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10993,
                    "end": 11051,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "175"
                  },
                  {
                    "begin": 11010,
                    "end": 11014,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 10894,
                    "end": 10936,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 5138,
                    "end": 5165,
                    "name": "PUSH",
                    "source": 0,
                    "value": "33B2E3C9FD0803CE8000000"
                  },
                  {
                    "begin": 10993,
                    "end": 11001,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "110"
                  },
                  {
                    "begin": 10993,
                    "end": 11051,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10993,
                    "end": 11051,
                    "name": "tag",
                    "source": 0,
                    "value": "175"
                  },
                  {
                    "begin": 10993,
                    "end": 11051,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11112,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11096,
                    "end": 11120,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11120,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C45A0155"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "SHL",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "176"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "tag",
                    "source": 0,
                    "value": "176"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "STATICCALL",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "178"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "tag",
                    "source": 0,
                    "value": "178"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "NOT",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "179"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "180"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "tag",
                    "source": 0,
                    "value": "179"
                  },
                  {
                    "begin": 11096,
                    "end": 11122,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11078,
                    "end": 11134,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11134,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C9C65396"
                  },
                  {
                    "begin": 11143,
                    "end": 11147,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11166,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11150,
                    "end": 11171,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11171,
                    "name": "PUSH",
                    "source": 0,
                    "value": "AD5C4648"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "SHL",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "181"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "tag",
                    "source": 0,
                    "value": "181"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "STATICCALL",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "183"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "tag",
                    "source": 0,
                    "value": "183"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "NOT",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "184"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "180"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "tag",
                    "source": 0,
                    "value": "184"
                  },
                  {
                    "begin": 11150,
                    "end": 11173,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "SHL",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 4342,
                    "end": 4357,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 4342,
                    "end": 4357,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 4342,
                    "end": 4357,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 4324,
                    "end": 4358,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 4394,
                    "end": 4409,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 4394,
                    "end": 4409,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 4374,
                    "end": 4392,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 4374,
                    "end": 4392,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 4374,
                    "end": 4392,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 4367,
                    "end": 4410,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 4259,
                    "end": 4277,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 4259,
                    "end": 4277,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "187"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "tag",
                    "source": 0,
                    "value": "187"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "CALL",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "189"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "tag",
                    "source": 0,
                    "value": "189"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "NOT",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "190"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "180"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "tag",
                    "source": 0,
                    "value": "190"
                  },
                  {
                    "begin": 11078,
                    "end": 11174,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11075,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "OR",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11062,
                    "end": 11174,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11200,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 11185,
                    "end": 11200,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11200,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11216,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F305D719"
                  },
                  {
                    "begin": 11224,
                    "end": 11245,
                    "name": "SELFBALANCE",
                    "source": 0
                  },
                  {
                    "begin": 11255,
                    "end": 11259,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 11261,
                    "end": 11285,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "191"
                  },
                  {
                    "begin": 11255,
                    "end": 11259,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11261,
                    "end": 11270,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "69"
                  },
                  {
                    "begin": 11261,
                    "end": 11285,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11261,
                    "end": 11285,
                    "name": "tag",
                    "source": 0,
                    "value": "191"
                  },
                  {
                    "begin": 11261,
                    "end": 11285,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11286,
                    "end": 11287,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11288,
                    "end": 11289,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11290,
                    "end": 11297,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "192"
                  },
                  {
                    "begin": 3540,
                    "end": 3547,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3502,
                    "end": 3581,
                    "name": "JUMP",
                    "source": 0
                  },
                  {
                    "begin": 11290,
                    "end": 11297,
                    "name": "tag",
                    "source": 0,
                    "value": "192"
                  },
                  {
                    "begin": 11290,
                    "end": 11297,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "SHL",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 5059,
                    "end": 5074,
                    "name": "SWAP6",
                    "source": 1
                  },
                  {
                    "begin": 5059,
                    "end": 5074,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 5059,
                    "end": 5074,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 5041,
                    "end": 5075,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5091,
                    "end": 5109,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 5091,
                    "end": 5109,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5091,
                    "end": 5109,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5084,
                    "end": 5118,
                    "name": "SWAP5",
                    "source": 1
                  },
                  {
                    "begin": 5084,
                    "end": 5118,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 5084,
                    "end": 5118,
                    "name": "SWAP5",
                    "source": 1
                  },
                  {
                    "begin": 5084,
                    "end": 5118,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5134,
                    "end": 5152,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 5134,
                    "end": 5152,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 5134,
                    "end": 5152,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5127,
                    "end": 5161,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 5127,
                    "end": 5161,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 5127,
                    "end": 5161,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 5127,
                    "end": 5161,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5177,
                    "end": 5195,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 5177,
                    "end": 5195,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 5177,
                    "end": 5195,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5170,
                    "end": 5204,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5241,
                    "end": 5256,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 5241,
                    "end": 5256,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 5241,
                    "end": 5256,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 5220,
                    "end": 5239,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 5220,
                    "end": 5239,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 5220,
                    "end": 5239,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5213,
                    "end": 5257,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11298,
                    "end": 11313,
                    "name": "TIMESTAMP",
                    "source": 0
                  },
                  {
                    "begin": 5273,
                    "end": 5292,
                    "name": "PUSH",
                    "source": 1,
                    "value": "A4"
                  },
                  {
                    "begin": 5273,
                    "end": 5292,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 5273,
                    "end": 5292,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5266,
                    "end": 5301,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 4975,
                    "end": 4994,
                    "name": "PUSH",
                    "source": 1,
                    "value": "C4"
                  },
                  {
                    "begin": 4975,
                    "end": 4994,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "60"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "195"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "tag",
                    "source": 0,
                    "value": "195"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "CALL",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "197"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "tag",
                    "source": 0,
                    "value": "197"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "NOT",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "198"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "199"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "tag",
                    "source": 0,
                    "value": "198"
                  },
                  {
                    "begin": 11185,
                    "end": 11314,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11325,
                    "end": 11336,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 11325,
                    "end": 11343,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11325,
                    "end": 11343,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11402,
                    "end": 11427,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1306707F94695977000000"
                  },
                  {
                    "begin": 11387,
                    "end": 11399,
                    "name": "PUSH",
                    "source": 0,
                    "value": "10"
                  },
                  {
                    "begin": 11387,
                    "end": 11427,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "FFFF00FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 11438,
                    "end": 11456,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11438,
                    "end": 11456,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1010001"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 11438,
                    "end": 11456,
                    "name": "OR",
                    "source": 0
                  },
                  {
                    "begin": 11438,
                    "end": 11456,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11438,
                    "end": 11456,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11438,
                    "end": 11456,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11505,
                    "end": 11520,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 11505,
                    "end": 11520,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "95EA7B3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11505,
                    "end": 11520,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11505,
                    "end": 11520,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11505,
                    "end": 11520,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 4595,
                    "end": 4646,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 4662,
                    "end": 4680,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 4662,
                    "end": 4680,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 4662,
                    "end": 4680,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 4655,
                    "end": 4689,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11474,
                    "end": 11487,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11474,
                    "end": 11487,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11474,
                    "end": 11487,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11467,
                    "end": 11496,
                    "name": "PUSH",
                    "source": 0,
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 11467,
                    "end": 11496,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 4568,
                    "end": 4586,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 4568,
                    "end": 4586,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "202"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "tag",
                    "source": 0,
                    "value": "202"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "CALL",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "204"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "tag",
                    "source": 0,
                    "value": "204"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "NOT",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "156"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "206"
                  },
                  {
                    "begin": 11467,
                    "end": 11538,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 8245,
                    "end": 8580,
                    "name": "tag",
                    "source": 0,
                    "value": "110"
                  },
                  {
                    "begin": 8245,
                    "end": 8580,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8338,
                    "end": 8357,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 8338,
                    "end": 8357,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "210"
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9467,
                    "end": 9469,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 9449,
                    "end": 9470,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9506,
                    "end": 9508,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 9486,
                    "end": 9504,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 9486,
                    "end": 9504,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9486,
                    "end": 9504,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9479,
                    "end": 9509,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9545,
                    "end": 9579,
                    "name": "PUSH",
                    "source": 1,
                    "value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
                  },
                  {
                    "begin": 9525,
                    "end": 9543,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 9525,
                    "end": 9543,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9525,
                    "end": 9543,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9518,
                    "end": 9580,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "72657373"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 9596,
                    "end": 9614,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 9596,
                    "end": 9614,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9596,
                    "end": 9614,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9589,
                    "end": 9623,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9640,
                    "end": 9659,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 9640,
                    "end": 9659,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 9439,
                    "end": 9665,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "tag",
                    "source": 0,
                    "value": "210"
                  },
                  {
                    "begin": 8330,
                    "end": 8398,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8417,
                    "end": 8438,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8417,
                    "end": 8438,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "213"
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7129,
                    "end": 7131,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 7111,
                    "end": 7132,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7168,
                    "end": 7170,
                    "name": "PUSH",
                    "source": 1,
                    "value": "22"
                  },
                  {
                    "begin": 7148,
                    "end": 7166,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 7148,
                    "end": 7166,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7148,
                    "end": 7166,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7141,
                    "end": 7171,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7207,
                    "end": 7241,
                    "name": "PUSH",
                    "source": 1,
                    "value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
                  },
                  {
                    "begin": 7187,
                    "end": 7205,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 7187,
                    "end": 7205,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7187,
                    "end": 7205,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7180,
                    "end": 7242,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "7373"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "F0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 7258,
                    "end": 7276,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 7258,
                    "end": 7276,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7258,
                    "end": 7276,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7251,
                    "end": 7283,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7300,
                    "end": 7319,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 7300,
                    "end": 7319,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 7101,
                    "end": 7325,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "tag",
                    "source": 0,
                    "value": "213"
                  },
                  {
                    "begin": 8409,
                    "end": 8477,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8499,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8506,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "SWAP5",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "SWAP5",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8515,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8524,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8524,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8488,
                    "end": 8524,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10141,
                    "end": 10159,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8540,
                    "end": 8572,
                    "name": "LOG3",
                    "source": 0
                  },
                  {
                    "begin": 8245,
                    "end": 8580,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8245,
                    "end": 8580,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8245,
                    "end": 8580,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8245,
                    "end": 8580,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 8588,
                    "end": 10051,
                    "name": "tag",
                    "source": 0,
                    "value": "114"
                  },
                  {
                    "begin": 8588,
                    "end": 10051,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8676,
                    "end": 8694,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 8676,
                    "end": 8694,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "218"
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9061,
                    "end": 9063,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 9043,
                    "end": 9064,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9100,
                    "end": 9102,
                    "name": "PUSH",
                    "source": 1,
                    "value": "25"
                  },
                  {
                    "begin": 9080,
                    "end": 9098,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 9080,
                    "end": 9098,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9080,
                    "end": 9098,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9073,
                    "end": 9103,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9139,
                    "end": 9173,
                    "name": "PUSH",
                    "source": 1,
                    "value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
                  },
                  {
                    "begin": 9119,
                    "end": 9137,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 9119,
                    "end": 9137,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9119,
                    "end": 9137,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9112,
                    "end": 9174,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "6472657373"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "D8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 9190,
                    "end": 9208,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 9190,
                    "end": 9208,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 9190,
                    "end": 9208,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 9183,
                    "end": 9218,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 9235,
                    "end": 9254,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 9235,
                    "end": 9254,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 9033,
                    "end": 9260,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "tag",
                    "source": 0,
                    "value": "218"
                  },
                  {
                    "begin": 8668,
                    "end": 8736,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8755,
                    "end": 8771,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8755,
                    "end": 8771,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "221"
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 6314,
                    "end": 6316,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 6296,
                    "end": 6317,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 6353,
                    "end": 6355,
                    "name": "PUSH",
                    "source": 1,
                    "value": "23"
                  },
                  {
                    "begin": 6333,
                    "end": 6351,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 6333,
                    "end": 6351,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 6333,
                    "end": 6351,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6326,
                    "end": 6356,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 6392,
                    "end": 6426,
                    "name": "PUSH",
                    "source": 1,
                    "value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
                  },
                  {
                    "begin": 6372,
                    "end": 6390,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 6372,
                    "end": 6390,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 6372,
                    "end": 6390,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6365,
                    "end": 6427,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "657373"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 6443,
                    "end": 6461,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 6443,
                    "end": 6461,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 6443,
                    "end": 6461,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6436,
                    "end": 6469,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 6486,
                    "end": 6505,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 6486,
                    "end": 6505,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 6286,
                    "end": 6511,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "tag",
                    "source": 0,
                    "value": "221"
                  },
                  {
                    "begin": 8747,
                    "end": 8811,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8839,
                    "end": 8840,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 8830,
                    "end": 8836,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8830,
                    "end": 8840,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "224"
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8651,
                    "end": 8653,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 8633,
                    "end": 8654,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8690,
                    "end": 8692,
                    "name": "PUSH",
                    "source": 1,
                    "value": "29"
                  },
                  {
                    "begin": 8670,
                    "end": 8688,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 8670,
                    "end": 8688,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 8670,
                    "end": 8688,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8663,
                    "end": 8693,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8729,
                    "end": 8763,
                    "name": "PUSH",
                    "source": 1,
                    "value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
                  },
                  {
                    "begin": 8709,
                    "end": 8727,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 8709,
                    "end": 8727,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 8709,
                    "end": 8727,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8702,
                    "end": 8764,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "7468616E207A65726F"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "B8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8780,
                    "end": 8798,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 8780,
                    "end": 8798,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 8780,
                    "end": 8798,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8773,
                    "end": 8812,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8829,
                    "end": 8848,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 8829,
                    "end": 8848,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 8623,
                    "end": 8854,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "tag",
                    "source": 0,
                    "value": "224"
                  },
                  {
                    "begin": 8822,
                    "end": 8886,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8909,
                    "end": 8910,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 8897,
                    "end": 8906,
                    "name": "PUSH",
                    "source": 0,
                    "value": "A"
                  },
                  {
                    "begin": 8897,
                    "end": 8910,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8897,
                    "end": 8910,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8897,
                    "end": 8910,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 8921,
                    "end": 8930,
                    "name": "PUSH",
                    "source": 0,
                    "value": "B"
                  },
                  {
                    "begin": 8921,
                    "end": 8935,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "0"
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8965,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8982,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "228"
                  },
                  {
                    "begin": 8950,
                    "end": 8982,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 3540,
                    "end": 3547,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 8969,
                    "end": 8982,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 8969,
                    "end": 8982,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8969,
                    "end": 8982,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3567,
                    "end": 3573,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 8969,
                    "end": 8982,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 8969,
                    "end": 8982,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 8950,
                    "end": 8982,
                    "name": "tag",
                    "source": 0,
                    "value": "228"
                  },
                  {
                    "begin": 8950,
                    "end": 8982,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8946,
                    "end": 9999,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 8946,
                    "end": 9999,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "230"
                  },
                  {
                    "begin": 8946,
                    "end": 9999,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9012,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9008,
                    "end": 9018,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9007,
                    "end": 9018,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9007,
                    "end": 9031,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9007,
                    "end": 9031,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9007,
                    "end": 9031,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "231"
                  },
                  {
                    "begin": 9007,
                    "end": 9031,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9027,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9023,
                    "end": 9031,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9022,
                    "end": 9031,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9007,
                    "end": 9031,
                    "name": "tag",
                    "source": 0,
                    "value": "231"
                  },
                  {
                    "begin": 9007,
                    "end": 9031,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "232"
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "tag",
                    "source": 0,
                    "value": "232"
                  },
                  {
                    "begin": 8999,
                    "end": 9032,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9059,
                    "end": 9072,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 9059,
                    "end": 9072,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9051,
                    "end": 9072,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9072,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9072,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9059,
                    "end": 9072,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 9059,
                    "end": 9072,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9072,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9106,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9106,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9106,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "233"
                  },
                  {
                    "begin": 9051,
                    "end": 9106,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 9090,
                    "end": 9105,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 9090,
                    "end": 9105,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9076,
                    "end": 9106,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 9076,
                    "end": 9106,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9076,
                    "end": 9106,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9090,
                    "end": 9105,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 9090,
                    "end": 9105,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9076,
                    "end": 9106,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 9076,
                    "end": 9106,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9106,
                    "name": "tag",
                    "source": 0,
                    "value": "233"
                  },
                  {
                    "begin": 9051,
                    "end": 9106,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9134,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9134,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9134,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "234"
                  },
                  {
                    "begin": 9051,
                    "end": 9134,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9130,
                    "name": "PUSH",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9112,
                    "end": 9134,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9110,
                    "end": 9134,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9134,
                    "name": "tag",
                    "source": 0,
                    "value": "234"
                  },
                  {
                    "begin": 9051,
                    "end": 9134,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9153,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9153,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9153,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "235"
                  },
                  {
                    "begin": 9051,
                    "end": 9153,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 9138,
                    "end": 9153,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 9138,
                    "end": 9153,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "B8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 9138,
                    "end": 9153,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9138,
                    "end": 9153,
                    "name": "DIV",
                    "source": 0
                  },
                  {
                    "begin": 9138,
                    "end": 9153,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9138,
                    "end": 9153,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9051,
                    "end": 9153,
                    "name": "tag",
                    "source": 0,
                    "value": "235"
                  },
                  {
                    "begin": 9051,
                    "end": 9153,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9047,
                    "end": 9372,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9047,
                    "end": 9372,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "236"
                  },
                  {
                    "begin": 9047,
                    "end": 9372,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 9221,
                    "end": 9233,
                    "name": "PUSH",
                    "source": 0,
                    "value": "10"
                  },
                  {
                    "begin": 9221,
                    "end": 9233,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9211,
                    "end": 9217,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9211,
                    "end": 9233,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 9211,
                    "end": 9233,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "237"
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "tag",
                    "source": 0,
                    "value": "237"
                  },
                  {
                    "begin": 9203,
                    "end": 9234,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9269,
                    "name": "PUSH",
                    "source": 0,
                    "value": "7"
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 9261,
                    "end": 9273,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9276,
                    "end": 9291,
                    "name": "TIMESTAMP",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "GT",
                    "source": -1
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "238"
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "tag",
                    "source": 0,
                    "value": "238"
                  },
                  {
                    "begin": 9253,
                    "end": 9292,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9326,
                    "end": 9356,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "239"
                  },
                  {
                    "begin": 9326,
                    "end": 9341,
                    "name": "TIMESTAMP",
                    "source": 0
                  },
                  {
                    "begin": 9345,
                    "end": 9355,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1E"
                  },
                  {
                    "begin": 9326,
                    "end": 9356,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "240"
                  },
                  {
                    "begin": 9326,
                    "end": 9356,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 9326,
                    "end": 9356,
                    "name": "tag",
                    "source": 0,
                    "value": "239"
                  },
                  {
                    "begin": 9326,
                    "end": 9356,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9319,
                    "name": "PUSH",
                    "source": 0,
                    "value": "7"
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9323,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 9311,
                    "end": 9356,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9047,
                    "end": 9372,
                    "name": "tag",
                    "source": 0,
                    "value": "236"
                  },
                  {
                    "begin": 9047,
                    "end": 9372,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9424,
                    "end": 9437,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 9424,
                    "end": 9437,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9418,
                    "end": 9437,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9437,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9437,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9424,
                    "end": 9437,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 9424,
                    "end": 9437,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9437,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9473,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9473,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9473,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "241"
                  },
                  {
                    "begin": 9418,
                    "end": 9473,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 9457,
                    "end": 9472,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 9457,
                    "end": 9472,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9441,
                    "end": 9473,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 9441,
                    "end": 9473,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9441,
                    "end": 9473,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9457,
                    "end": 9472,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 9457,
                    "end": 9472,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9441,
                    "end": 9473,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 9441,
                    "end": 9473,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9473,
                    "name": "tag",
                    "source": 0,
                    "value": "241"
                  },
                  {
                    "begin": 9418,
                    "end": 9473,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9503,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9503,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9503,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "242"
                  },
                  {
                    "begin": 9418,
                    "end": 9503,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9497,
                    "name": "PUSH",
                    "source": 0,
                    "value": "5"
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9479,
                    "end": 9503,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9477,
                    "end": 9503,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9418,
                    "end": 9503,
                    "name": "tag",
                    "source": 0,
                    "value": "242"
                  },
                  {
                    "begin": 9418,
                    "end": 9503,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9414,
                    "end": 9586,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9414,
                    "end": 9586,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "243"
                  },
                  {
                    "begin": 9414,
                    "end": 9586,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 9536,
                    "end": 9537,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 9524,
                    "end": 9533,
                    "name": "PUSH",
                    "source": 0,
                    "value": "A"
                  },
                  {
                    "begin": 9524,
                    "end": 9537,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9524,
                    "end": 9537,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9524,
                    "end": 9537,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9556,
                    "end": 9565,
                    "name": "PUSH",
                    "source": 0,
                    "value": "B"
                  },
                  {
                    "begin": 9556,
                    "end": 9570,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 9414,
                    "end": 9586,
                    "name": "tag",
                    "source": 0,
                    "value": "243"
                  },
                  {
                    "begin": 9414,
                    "end": 9586,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9600,
                    "end": 9628,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 9631,
                    "end": 9655,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "244"
                  },
                  {
                    "begin": 9649,
                    "end": 9653,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 9631,
                    "end": 9640,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "69"
                  },
                  {
                    "begin": 9631,
                    "end": 9655,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 9631,
                    "end": 9655,
                    "name": "tag",
                    "source": 0,
                    "value": "244"
                  },
                  {
                    "begin": 9631,
                    "end": 9655,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9675,
                    "end": 9681,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 9675,
                    "end": 9681,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 9600,
                    "end": 9655,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9600,
                    "end": 9655,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 9675,
                    "end": 9681,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9675,
                    "end": 9681,
                    "name": "DIV",
                    "source": 0
                  },
                  {
                    "begin": 9675,
                    "end": 9681,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9675,
                    "end": 9681,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9681,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9706,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9706,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9706,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "245"
                  },
                  {
                    "begin": 9674,
                    "end": 9706,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 9693,
                    "end": 9706,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 9693,
                    "end": 9706,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 9685,
                    "end": 9706,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 9685,
                    "end": 9706,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9685,
                    "end": 9706,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9693,
                    "end": 9706,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 9693,
                    "end": 9706,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9685,
                    "end": 9706,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 9685,
                    "end": 9706,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9706,
                    "name": "tag",
                    "source": 0,
                    "value": "245"
                  },
                  {
                    "begin": 9674,
                    "end": 9706,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9721,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9721,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9721,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "246"
                  },
                  {
                    "begin": 9674,
                    "end": 9721,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 9710,
                    "end": 9721,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 9710,
                    "end": 9721,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "B0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 9710,
                    "end": 9721,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 9710,
                    "end": 9721,
                    "name": "DIV",
                    "source": 0
                  },
                  {
                    "begin": 9710,
                    "end": 9721,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FF"
                  },
                  {
                    "begin": 9710,
                    "end": 9721,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 9674,
                    "end": 9721,
                    "name": "tag",
                    "source": 0,
                    "value": "246"
                  },
                  {
                    "begin": 9674,
                    "end": 9721,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9670,
                    "end": 9988,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9670,
                    "end": 9988,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "247"
                  },
                  {
                    "begin": 9670,
                    "end": 9988,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 9742,
                    "end": 9780,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "248"
                  },
                  {
                    "begin": 9759,
                    "end": 9779,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 9742,
                    "end": 9758,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "166"
                  },
                  {
                    "begin": 9742,
                    "end": 9780,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 9742,
                    "end": 9780,
                    "name": "tag",
                    "source": 0,
                    "value": "248"
                  },
                  {
                    "begin": 9742,
                    "end": 9780,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9828,
                    "end": 9849,
                    "name": "SELFBALANCE",
                    "source": 0
                  },
                  {
                    "begin": 9871,
                    "end": 9893,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 9871,
                    "end": 9893,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 9868,
                    "end": 9973,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "250"
                  },
                  {
                    "begin": 9868,
                    "end": 9973,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 9918,
                    "end": 9953,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "250"
                  },
                  {
                    "begin": 9931,
                    "end": 9952,
                    "name": "SELFBALANCE",
                    "source": 0
                  },
                  {
                    "begin": 9918,
                    "end": 9930,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "136"
                  },
                  {
                    "begin": 9918,
                    "end": 9953,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 9918,
                    "end": 9953,
                    "name": "tag",
                    "source": 0,
                    "value": "250"
                  },
                  {
                    "begin": 9918,
                    "end": 9953,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 9670,
                    "end": 9988,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 9670,
                    "end": 9988,
                    "name": "tag",
                    "source": 0,
                    "value": "247"
                  },
                  {
                    "begin": 9670,
                    "end": 9988,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8946,
                    "end": 9999,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8946,
                    "end": 9999,
                    "name": "tag",
                    "source": 0,
                    "value": "230"
                  },
                  {
                    "begin": 8946,
                    "end": 9999,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10013,
                    "end": 10043,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "251"
                  },
                  {
                    "begin": 10028,
                    "end": 10032,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10033,
                    "end": 10035,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10036,
                    "end": 10042,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10013,
                    "end": 10027,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "252"
                  },
                  {
                    "begin": 10013,
                    "end": 10043,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10013,
                    "end": 10043,
                    "name": "tag",
                    "source": 0,
                    "value": "251"
                  },
                  {
                    "begin": 10013,
                    "end": 10043,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8588,
                    "end": 10051,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8588,
                    "end": 10051,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8588,
                    "end": 10051,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 8588,
                    "end": 10051,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 2357,
                    "end": 2547,
                    "name": "tag",
                    "source": 0,
                    "value": "119"
                  },
                  {
                    "begin": 2357,
                    "end": 2547,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2443,
                    "end": 2450,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2479,
                    "end": 2491,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2471,
                    "end": 2477,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 2471,
                    "end": 2477,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 2471,
                    "end": 2477,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 2471,
                    "end": 2477,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "254"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "29"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "tag",
                    "source": 0,
                    "value": "254"
                  },
                  {
                    "begin": 2463,
                    "end": 2492,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 2503,
                    "end": 2512,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2515,
                    "end": 2520,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "256"
                  },
                  {
                    "begin": 2519,
                    "end": 2520,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 2515,
                    "end": 2516,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 2515,
                    "end": 2520,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "257"
                  },
                  {
                    "begin": 2515,
                    "end": 2520,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2515,
                    "end": 2520,
                    "name": "tag",
                    "source": 0,
                    "value": "256"
                  },
                  {
                    "begin": 2515,
                    "end": 2520,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2503,
                    "end": 2520,
                    "name": "SWAP6",
                    "source": 0
                  },
                  {
                    "begin": 2357,
                    "end": 2547,
                    "name": "SWAP5",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 2357,
                    "end": 2547,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 10558,
                    "end": 10712,
                    "name": "tag",
                    "source": 0,
                    "value": "136"
                  },
                  {
                    "begin": 10558,
                    "end": 10712,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10630,
                    "name": "PUSH",
                    "source": 0,
                    "value": "C"
                  },
                  {
                    "begin": 10615,
                    "end": 10630,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 10615,
                    "end": 10630,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8FC"
                  },
                  {
                    "begin": 10640,
                    "end": 10653,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "259"
                  },
                  {
                    "begin": 10640,
                    "end": 10646,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10651,
                    "end": 10652,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 10640,
                    "end": 10650,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 10640,
                    "end": 10653,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10640,
                    "end": 10653,
                    "name": "tag",
                    "source": 0,
                    "value": "259"
                  },
                  {
                    "begin": 10640,
                    "end": 10653,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "MUL",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "CALL",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "262"
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "tag",
                    "source": 0,
                    "value": "262"
                  },
                  {
                    "begin": 10615,
                    "end": 10654,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 10665,
                    "end": 10680,
                    "name": "PUSH",
                    "source": 0,
                    "value": "D"
                  },
                  {
                    "begin": 10665,
                    "end": 10680,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 10665,
                    "end": 10680,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8FC"
                  },
                  {
                    "begin": 10690,
                    "end": 10703,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "263"
                  },
                  {
                    "begin": 10690,
                    "end": 10696,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10701,
                    "end": 10702,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 10690,
                    "end": 10700,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 10690,
                    "end": 10703,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10690,
                    "end": 10703,
                    "name": "tag",
                    "source": 0,
                    "value": "263"
                  },
                  {
                    "begin": 10690,
                    "end": 10703,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "MUL",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "CALL",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "156"
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10665,
                    "end": 10704,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 7983,
                    "end": 8237,
                    "name": "tag",
                    "source": 0,
                    "value": "139"
                  },
                  {
                    "begin": 7983,
                    "end": 8237,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8050,
                    "end": 8057,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 8089,
                    "end": 8096,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 8089,
                    "end": 8096,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 8078,
                    "end": 8085,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8078,
                    "end": 8096,
                    "name": "GT",
                    "source": 0
                  },
                  {
                    "begin": 8078,
                    "end": 8096,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "267"
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 6718,
                    "end": 6720,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 6700,
                    "end": 6721,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 6757,
                    "end": 6759,
                    "name": "PUSH",
                    "source": 1,
                    "value": "2A"
                  },
                  {
                    "begin": 6737,
                    "end": 6755,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 6737,
                    "end": 6755,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 6737,
                    "end": 6755,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6730,
                    "end": 6760,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 6796,
                    "end": 6830,
                    "name": "PUSH",
                    "source": 1,
                    "value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
                  },
                  {
                    "begin": 6776,
                    "end": 6794,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 6776,
                    "end": 6794,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 6776,
                    "end": 6794,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6769,
                    "end": 6831,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "65666C656374696F6E73"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "B0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 6847,
                    "end": 6865,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 6847,
                    "end": 6865,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 6847,
                    "end": 6865,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6840,
                    "end": 6880,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 6897,
                    "end": 6916,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 6897,
                    "end": 6916,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 6690,
                    "end": 6922,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "tag",
                    "source": 0,
                    "value": "267"
                  },
                  {
                    "begin": 8070,
                    "end": 8143,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8154,
                    "end": 8173,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 8177,
                    "end": 8187,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "270"
                  },
                  {
                    "begin": 8177,
                    "end": 8185,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "271"
                  },
                  {
                    "begin": 8177,
                    "end": 8187,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 8177,
                    "end": 8187,
                    "name": "tag",
                    "source": 0,
                    "value": "270"
                  },
                  {
                    "begin": 8177,
                    "end": 8187,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8154,
                    "end": 8187,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 8205,
                    "end": 8229,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "272"
                  },
                  {
                    "begin": 8205,
                    "end": 8212,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 8154,
                    "end": 8187,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 8205,
                    "end": 8216,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 8205,
                    "end": 8229,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 8205,
                    "end": 8229,
                    "name": "tag",
                    "source": 0,
                    "value": "272"
                  },
                  {
                    "begin": 8205,
                    "end": 8229,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 8198,
                    "end": 8229,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 7983,
                    "end": 8237,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 7983,
                    "end": 8237,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 10059,
                    "end": 10542,
                    "name": "tag",
                    "source": 0,
                    "value": "166"
                  },
                  {
                    "begin": 10059,
                    "end": 10542,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 5931,
                    "end": 5937,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 5931,
                    "end": 5944,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 5931,
                    "end": 5944,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 5931,
                    "end": 5944,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 5931,
                    "end": 5944,
                    "name": "OR",
                    "source": 0
                  },
                  {
                    "begin": 5931,
                    "end": 5944,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 5931,
                    "end": 5944,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10175,
                    "end": 10176,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "PUSH",
                    "source": 0,
                    "value": "60"
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SWAP3",
                    "source": -1
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "CALLDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 10161,
                    "end": 10177,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10137,
                    "end": 10177,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10137,
                    "end": 10177,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10206,
                    "end": 10210,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10192,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10193,
                    "end": 10194,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "277"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "4E487B71"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH",
                    "source": 0,
                    "value": "32"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH",
                    "source": 0,
                    "value": "24"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "tag",
                    "source": 0,
                    "value": "277"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "MUL",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10211,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "15AB88C9"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10252,
                    "name": "PUSH",
                    "source": 0,
                    "value": "AD5C4648"
                  },
                  {
                    "begin": 10232,
                    "end": 10252,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10188,
                    "end": 10195,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10247,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "278"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "tag",
                    "source": 0,
                    "value": "278"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "STATICCALL",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "280"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "tag",
                    "source": 0,
                    "value": "280"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "NOT",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1F"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "281"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "180"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "tag",
                    "source": 0,
                    "value": "281"
                  },
                  {
                    "begin": 10232,
                    "end": 10254,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10226,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10227,
                    "end": 10228,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "282"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "4E487B71"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH",
                    "source": 0,
                    "value": "32"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH",
                    "source": 0,
                    "value": "24"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "tag",
                    "source": 0,
                    "value": "282"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 10222,
                    "end": 10254,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10254,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10254,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "MUL",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10229,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10222,
                    "end": 10254,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 10297,
                    "end": 10312,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 10297,
                    "end": 10312,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10265,
                    "end": 10327,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "283"
                  },
                  {
                    "begin": 10265,
                    "end": 10327,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10282,
                    "end": 10286,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 10282,
                    "end": 10286,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10297,
                    "end": 10312,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10315,
                    "end": 10326,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 10265,
                    "end": 10273,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "110"
                  },
                  {
                    "begin": 10265,
                    "end": 10327,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10265,
                    "end": 10327,
                    "name": "tag",
                    "source": 0,
                    "value": "283"
                  },
                  {
                    "begin": 10265,
                    "end": 10327,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E"
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "791AC947"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10404,
                    "name": "PUSH",
                    "source": 0,
                    "value": "791AC947"
                  },
                  {
                    "begin": 10338,
                    "end": 10404,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "284"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10419,
                    "end": 10430,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 10419,
                    "end": 10430,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10338,
                    "end": 10353,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10461,
                    "end": 10465,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 10461,
                    "end": 10465,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10488,
                    "end": 10492,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 10488,
                    "end": 10492,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10508,
                    "end": 10523,
                    "name": "TIMESTAMP",
                    "source": 0
                  },
                  {
                    "begin": 10508,
                    "end": 10523,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "285"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "tag",
                    "source": 0,
                    "value": "284"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "EXTCODESIZE",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "286"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "tag",
                    "source": 0,
                    "value": "286"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "GAS",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "CALL",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "288"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "REVERT",
                    "source": 0
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "tag",
                    "source": 0,
                    "value": "288"
                  },
                  {
                    "begin": 10338,
                    "end": 10534,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 5967,
                    "end": 5973,
                    "name": "PUSH",
                    "source": 0,
                    "value": "F"
                  },
                  {
                    "begin": 5967,
                    "end": 5981,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 5967,
                    "end": 5981,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 5967,
                    "end": 5981,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 5967,
                    "end": 5981,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 5967,
                    "end": 5981,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 10059,
                    "end": 10542,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 11838,
                    "end": 11984,
                    "name": "tag",
                    "source": 0,
                    "value": "252"
                  },
                  {
                    "begin": 11838,
                    "end": 11984,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 11932,
                    "end": 11976,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "251"
                  },
                  {
                    "begin": 11950,
                    "end": 11956,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11958,
                    "end": 11967,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11969,
                    "end": 11975,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 11932,
                    "end": 11949,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "291"
                  },
                  {
                    "begin": 11932,
                    "end": 11976,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2809,
                    "end": 2941,
                    "name": "tag",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 2809,
                    "end": 2941,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2867,
                    "end": 2874,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "272"
                  },
                  {
                    "begin": 2898,
                    "end": 2899,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2901,
                    "end": 2902,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1A"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "PUSH",
                    "source": 0,
                    "value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 2894,
                    "end": 2897,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "294"
                  },
                  {
                    "begin": 2894,
                    "end": 2933,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14571,
                    "end": 14734,
                    "name": "tag",
                    "source": 0,
                    "value": "271"
                  },
                  {
                    "begin": 14571,
                    "end": 14734,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14612,
                    "end": 14619,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14633,
                    "end": 14648,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 14650,
                    "end": 14665,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14669,
                    "end": 14688,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "296"
                  },
                  {
                    "begin": 14669,
                    "end": 14686,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "297"
                  },
                  {
                    "begin": 14669,
                    "end": 14688,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14669,
                    "end": 14688,
                    "name": "tag",
                    "source": 0,
                    "value": "296"
                  },
                  {
                    "begin": 14669,
                    "end": 14688,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14632,
                    "end": 14688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14632,
                    "end": 14688,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14632,
                    "end": 14688,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14706,
                    "end": 14726,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "298"
                  },
                  {
                    "begin": 14632,
                    "end": 14688,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 14632,
                    "end": 14688,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 14706,
                    "end": 14717,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 14706,
                    "end": 14726,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14706,
                    "end": 14726,
                    "name": "tag",
                    "source": 0,
                    "value": "298"
                  },
                  {
                    "begin": 14706,
                    "end": 14726,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14699,
                    "end": 14726,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 14699,
                    "end": 14726,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 14699,
                    "end": 14726,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 14699,
                    "end": 14726,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 14571,
                    "end": 14734,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14571,
                    "end": 14734,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "tag",
                    "source": 0,
                    "value": "291"
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12091,
                    "end": 12106,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12108,
                    "end": 12131,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12133,
                    "end": 12145,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12147,
                    "end": 12170,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12172,
                    "end": 12184,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12186,
                    "end": 12199,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12203,
                    "end": 12222,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "300"
                  },
                  {
                    "begin": 12214,
                    "end": 12221,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 12203,
                    "end": 12213,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "301"
                  },
                  {
                    "begin": 12203,
                    "end": 12222,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12203,
                    "end": 12222,
                    "name": "tag",
                    "source": 0,
                    "value": "300"
                  },
                  {
                    "begin": 12203,
                    "end": 12222,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "DUP16",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12258,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12266,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP6",
                    "source": 0
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP12",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP10",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP8",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP6",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12251,
                    "end": 12279,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "302"
                  },
                  {
                    "begin": 12251,
                    "end": 12279,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12090,
                    "end": 12222,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 12251,
                    "end": 12270,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "303"
                  },
                  {
                    "begin": 12251,
                    "end": 12279,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12251,
                    "end": 12279,
                    "name": "tag",
                    "source": 0,
                    "value": "302"
                  },
                  {
                    "begin": 12251,
                    "end": 12279,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "DUP12",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12240,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12248,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12279,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12279,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12279,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 12233,
                    "end": 12279,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "DUP11",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12329,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12350,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "304"
                  },
                  {
                    "begin": 12311,
                    "end": 12350,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12334,
                    "end": 12349,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 12311,
                    "end": 12333,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "305"
                  },
                  {
                    "begin": 12311,
                    "end": 12350,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12311,
                    "end": 12350,
                    "name": "tag",
                    "source": 0,
                    "value": "304"
                  },
                  {
                    "begin": 12311,
                    "end": 12350,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "DUP10",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12297,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12308,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 12290,
                    "end": 12350,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12362,
                    "end": 12378,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "306"
                  },
                  {
                    "begin": 12372,
                    "end": 12377,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12362,
                    "end": 12371,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "307"
                  },
                  {
                    "begin": 12362,
                    "end": 12378,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12362,
                    "end": 12378,
                    "name": "tag",
                    "source": 0,
                    "value": "306"
                  },
                  {
                    "begin": 12362,
                    "end": 12378,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12389,
                    "end": 12412,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "308"
                  },
                  {
                    "begin": 12401,
                    "end": 12405,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 12407,
                    "end": 12411,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 12389,
                    "end": 12400,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "309"
                  },
                  {
                    "begin": 12389,
                    "end": 12412,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12389,
                    "end": 12412,
                    "name": "tag",
                    "source": 0,
                    "value": "308"
                  },
                  {
                    "begin": 12389,
                    "end": 12412,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12445,
                    "end": 12454,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12437,
                    "end": 12443,
                    "name": "DUP10",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "AND",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "PUSH",
                    "source": 0,
                    "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                  },
                  {
                    "begin": 12456,
                    "end": 12471,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "310"
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10168,
                    "end": 10193,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 10156,
                    "end": 10158,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 10141,
                    "end": 10159,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10141,
                    "end": 10159,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 10123,
                    "end": 10199,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "tag",
                    "source": 0,
                    "value": "310"
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "SUB",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12428,
                    "end": 12472,
                    "name": "LOG3",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 11992,
                    "end": 12480,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 2949,
                    "end": 3138,
                    "name": "tag",
                    "source": 0,
                    "value": "294"
                  },
                  {
                    "begin": 2949,
                    "end": 3138,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 3035,
                    "end": 3042,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3070,
                    "end": 3082,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3063,
                    "end": 3068,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "312"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "29"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "tag",
                    "source": 0,
                    "value": "312"
                  },
                  {
                    "begin": 3055,
                    "end": 3083,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 3094,
                    "end": 3103,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 3106,
                    "end": 3111,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "256"
                  },
                  {
                    "begin": 3110,
                    "end": 3111,
                    "name": "DUP5",
                    "source": 0
                  },
                  {
                    "begin": 3106,
                    "end": 3107,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 3106,
                    "end": 3111,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "315"
                  },
                  {
                    "begin": 3106,
                    "end": 3111,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14742,
                    "end": 15004,
                    "name": "tag",
                    "source": 0,
                    "value": "297"
                  },
                  {
                    "begin": 14742,
                    "end": 15004,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14839,
                    "end": 14846,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 14839,
                    "end": 14846,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 14792,
                    "end": 14799,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14792,
                    "end": 14799,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14792,
                    "end": 14799,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 14792,
                    "end": 14799,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 5138,
                    "end": 5165,
                    "name": "PUSH",
                    "source": 0,
                    "value": "33B2E3C9FD0803CE8000000"
                  },
                  {
                    "begin": 14913,
                    "end": 14933,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "317"
                  },
                  {
                    "begin": 14839,
                    "end": 14846,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 5138,
                    "end": 5165,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 14913,
                    "end": 14924,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 14913,
                    "end": 14933,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14913,
                    "end": 14933,
                    "name": "tag",
                    "source": 0,
                    "value": "317"
                  },
                  {
                    "begin": 14913,
                    "end": 14933,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14903,
                    "end": 14910,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 14903,
                    "end": 14933,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 14899,
                    "end": 14960,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 14899,
                    "end": 14960,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "318"
                  },
                  {
                    "begin": 14899,
                    "end": 14960,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14943,
                    "end": 14950,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 14943,
                    "end": 14950,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 14943,
                    "end": 14950,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 5138,
                    "end": 5165,
                    "name": "PUSH",
                    "source": 0,
                    "value": "33B2E3C9FD0803CE8000000"
                  },
                  {
                    "begin": 5138,
                    "end": 5165,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14742,
                    "end": 15004,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14742,
                    "end": 15004,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 14899,
                    "end": 14960,
                    "name": "tag",
                    "source": 0,
                    "value": "318"
                  },
                  {
                    "begin": 14899,
                    "end": 14960,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14979,
                    "end": 14986,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14979,
                    "end": 14986,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 14988,
                    "end": 14995,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14988,
                    "end": 14995,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14742,
                    "end": 15004,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14742,
                    "end": 15004,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "tag",
                    "source": 0,
                    "value": "301"
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13378,
                    "end": 13385,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13387,
                    "end": 13394,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13396,
                    "end": 13403,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13405,
                    "end": 13412,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13414,
                    "end": 13421,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13423,
                    "end": 13430,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13444,
                    "end": 13467,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13469,
                    "end": 13481,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13483,
                    "end": 13496,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13500,
                    "end": 13542,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "320"
                  },
                  {
                    "begin": 13512,
                    "end": 13519,
                    "name": "DUP11",
                    "source": 0
                  },
                  {
                    "begin": 13521,
                    "end": 13530,
                    "name": "PUSH",
                    "source": 0,
                    "value": "A"
                  },
                  {
                    "begin": 13521,
                    "end": 13530,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 13532,
                    "end": 13541,
                    "name": "PUSH",
                    "source": 0,
                    "value": "B"
                  },
                  {
                    "begin": 13532,
                    "end": 13541,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 13500,
                    "end": 13511,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "321"
                  },
                  {
                    "begin": 13500,
                    "end": 13542,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13500,
                    "end": 13542,
                    "name": "tag",
                    "source": 0,
                    "value": "320"
                  },
                  {
                    "begin": 13500,
                    "end": 13542,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13443,
                    "end": 13542,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 13443,
                    "end": 13542,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13443,
                    "end": 13542,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 13443,
                    "end": 13542,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13443,
                    "end": 13542,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 13443,
                    "end": 13542,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13553,
                    "end": 13572,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13576,
                    "end": 13586,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "322"
                  },
                  {
                    "begin": 13576,
                    "end": 13584,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "271"
                  },
                  {
                    "begin": 13576,
                    "end": 13586,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13576,
                    "end": 13586,
                    "name": "tag",
                    "source": 0,
                    "value": "322"
                  },
                  {
                    "begin": 13576,
                    "end": 13586,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13553,
                    "end": 13586,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 13553,
                    "end": 13586,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13598,
                    "end": 13613,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13615,
                    "end": 13638,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13640,
                    "end": 13652,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13656,
                    "end": 13702,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "323"
                  },
                  {
                    "begin": 13668,
                    "end": 13675,
                    "name": "DUP15",
                    "source": 0
                  },
                  {
                    "begin": 13677,
                    "end": 13681,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 13683,
                    "end": 13688,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 13690,
                    "end": 13701,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 13656,
                    "end": 13667,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "324"
                  },
                  {
                    "begin": 13656,
                    "end": 13702,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13656,
                    "end": 13702,
                    "name": "tag",
                    "source": 0,
                    "value": "323"
                  },
                  {
                    "begin": 13656,
                    "end": 13702,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13597,
                    "end": 13702,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 13597,
                    "end": 13702,
                    "name": "SWAP15",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13597,
                    "end": 13702,
                    "name": "SWAP13",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13597,
                    "end": 13702,
                    "name": "SWAP11",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13753,
                    "end": 13768,
                    "name": "SWAP6",
                    "source": 0
                  },
                  {
                    "begin": 13753,
                    "end": 13768,
                    "name": "SWAP9",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13770,
                    "end": 13774,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 13770,
                    "end": 13774,
                    "name": "SWAP7",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13776,
                    "end": 13781,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 13776,
                    "end": 13781,
                    "name": "SWAP5",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "SWAP6",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "SWAP6",
                    "source": 0
                  },
                  {
                    "begin": 13319,
                    "end": 13790,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 2213,
                    "end": 2349,
                    "name": "tag",
                    "source": 0,
                    "value": "303"
                  },
                  {
                    "begin": 2213,
                    "end": 2349,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2271,
                    "end": 2278,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "272"
                  },
                  {
                    "begin": 2302,
                    "end": 2303,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2305,
                    "end": 2306,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1E"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "PUSH",
                    "source": 0,
                    "value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 2298,
                    "end": 2301,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "119"
                  },
                  {
                    "begin": 2298,
                    "end": 2341,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2026,
                    "end": 2205,
                    "name": "tag",
                    "source": 0,
                    "value": "305"
                  },
                  {
                    "begin": 2026,
                    "end": 2205,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2084,
                    "end": 2091,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2084,
                    "end": 2091,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 2116,
                    "end": 2121,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "328"
                  },
                  {
                    "begin": 2120,
                    "end": 2121,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2116,
                    "end": 2117,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 2116,
                    "end": 2121,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "240"
                  },
                  {
                    "begin": 2116,
                    "end": 2121,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2116,
                    "end": 2121,
                    "name": "tag",
                    "source": 0,
                    "value": "328"
                  },
                  {
                    "begin": 2116,
                    "end": 2121,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2104,
                    "end": 2121,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 2104,
                    "end": 2121,
                    "name": "POP",
                    "source": 0
                  },
                  {
                    "begin": 2145,
                    "end": 2146,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2140,
                    "end": 2141,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2140,
                    "end": 2146,
                    "name": "LT",
                    "source": 0
                  },
                  {
                    "begin": 2140,
                    "end": 2146,
                    "name": "ISZERO",
                    "source": 0
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "272"
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7532,
                    "end": 7534,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 7514,
                    "end": 7535,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7571,
                    "end": 7573,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1B"
                  },
                  {
                    "begin": 7551,
                    "end": 7569,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 7551,
                    "end": 7569,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7551,
                    "end": 7569,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7544,
                    "end": 7574,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7610,
                    "end": 7639,
                    "name": "PUSH",
                    "source": 1,
                    "value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
                  },
                  {
                    "begin": 7590,
                    "end": 7608,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 7590,
                    "end": 7608,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7590,
                    "end": 7608,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7583,
                    "end": 7640,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7657,
                    "end": 7675,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 7657,
                    "end": 7675,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2132,
                    "end": 2178,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 7504,
                    "end": 7681,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 12488,
                    "end": 12700,
                    "name": "tag",
                    "source": 0,
                    "value": "307"
                  },
                  {
                    "begin": 12488,
                    "end": 12700,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12541,
                    "end": 12560,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12564,
                    "end": 12574,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "333"
                  },
                  {
                    "begin": 12564,
                    "end": 12572,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "271"
                  },
                  {
                    "begin": 12564,
                    "end": 12574,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12564,
                    "end": 12574,
                    "name": "tag",
                    "source": 0,
                    "value": "333"
                  },
                  {
                    "begin": 12564,
                    "end": 12574,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12541,
                    "end": 12574,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12585,
                    "end": 12598,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12601,
                    "end": 12623,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "334"
                  },
                  {
                    "begin": 12601,
                    "end": 12606,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 12541,
                    "end": 12574,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 12601,
                    "end": 12610,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 12601,
                    "end": 12623,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12601,
                    "end": 12623,
                    "name": "tag",
                    "source": 0,
                    "value": "334"
                  },
                  {
                    "begin": 12601,
                    "end": 12623,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12675,
                    "end": 12679,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12666,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12681,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12585,
                    "end": 12623,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12585,
                    "end": 12623,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12659,
                    "end": 12692,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "336"
                  },
                  {
                    "begin": 12659,
                    "end": 12692,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12585,
                    "end": 12623,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 12659,
                    "end": 12685,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "305"
                  },
                  {
                    "begin": 12659,
                    "end": 12692,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12659,
                    "end": 12692,
                    "name": "tag",
                    "source": 0,
                    "value": "336"
                  },
                  {
                    "begin": 12659,
                    "end": 12692,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12650,
                    "end": 12654,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12641,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12656,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 12634,
                    "end": 12692,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12488,
                    "end": 12700,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 12708,
                    "end": 12855,
                    "name": "tag",
                    "source": 0,
                    "value": "309"
                  },
                  {
                    "begin": 12708,
                    "end": 12855,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12786,
                    "end": 12793,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 12786,
                    "end": 12793,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12786,
                    "end": 12803,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "338"
                  },
                  {
                    "begin": 12786,
                    "end": 12803,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12798,
                    "end": 12802,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 12786,
                    "end": 12797,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "303"
                  },
                  {
                    "begin": 12786,
                    "end": 12803,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12786,
                    "end": 12803,
                    "name": "tag",
                    "source": 0,
                    "value": "338"
                  },
                  {
                    "begin": 12786,
                    "end": 12803,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12776,
                    "end": 12783,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8"
                  },
                  {
                    "begin": 12776,
                    "end": 12803,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": 12827,
                    "end": 12837,
                    "name": "PUSH",
                    "source": 0,
                    "value": "9"
                  },
                  {
                    "begin": 12827,
                    "end": 12837,
                    "name": "SLOAD",
                    "source": 0
                  },
                  {
                    "begin": 12827,
                    "end": 12847,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "339"
                  },
                  {
                    "begin": 12827,
                    "end": 12847,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 12842,
                    "end": 12846,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 12827,
                    "end": 12841,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "305"
                  },
                  {
                    "begin": 12827,
                    "end": 12847,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 12827,
                    "end": 12847,
                    "name": "tag",
                    "source": 0,
                    "value": "339"
                  },
                  {
                    "begin": 12827,
                    "end": 12847,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 12814,
                    "end": 12824,
                    "name": "PUSH",
                    "source": 0,
                    "value": "9"
                  },
                  {
                    "begin": 12814,
                    "end": 12847,
                    "name": "SSTORE",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12708,
                    "end": 12855,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 13798,
                    "end": 14149,
                    "name": "tag",
                    "source": 0,
                    "value": "321"
                  },
                  {
                    "begin": 13798,
                    "end": 14149,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13891,
                    "end": 13898,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13891,
                    "end": 13898,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13891,
                    "end": 13898,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13891,
                    "end": 13898,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 13944,
                    "end": 13972,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "341"
                  },
                  {
                    "begin": 13968,
                    "end": 13971,
                    "name": "PUSH",
                    "source": 0,
                    "value": "64"
                  },
                  {
                    "begin": 13944,
                    "end": 13963,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "342"
                  },
                  {
                    "begin": 13944,
                    "end": 13951,
                    "name": "DUP10",
                    "source": 0
                  },
                  {
                    "begin": 13956,
                    "end": 13962,
                    "name": "DUP10",
                    "source": 0
                  },
                  {
                    "begin": 13944,
                    "end": 13955,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 13944,
                    "end": 13963,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13944,
                    "end": 13963,
                    "name": "tag",
                    "source": 0,
                    "value": "342"
                  },
                  {
                    "begin": 13944,
                    "end": 13963,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13944,
                    "end": 13967,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 13944,
                    "end": 13967,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "260"
                  },
                  {
                    "begin": 13944,
                    "end": 13972,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13944,
                    "end": 13972,
                    "name": "tag",
                    "source": 0,
                    "value": "341"
                  },
                  {
                    "begin": 13944,
                    "end": 13972,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13929,
                    "end": 13972,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13983,
                    "end": 13996,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 13999,
                    "end": 14028,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "343"
                  },
                  {
                    "begin": 14024,
                    "end": 14027,
                    "name": "PUSH",
                    "source": 0,
                    "value": "64"
                  },
                  {
                    "begin": 13999,
                    "end": 14019,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "342"
                  },
                  {
                    "begin": 13999,
                    "end": 14006,
                    "name": "DUP11",
                    "source": 0
                  },
                  {
                    "begin": 14011,
                    "end": 14018,
                    "name": "DUP10",
                    "source": 0
                  },
                  {
                    "begin": 13999,
                    "end": 14010,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 13999,
                    "end": 14019,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 13999,
                    "end": 14028,
                    "name": "tag",
                    "source": 0,
                    "value": "343"
                  },
                  {
                    "begin": 13999,
                    "end": 14028,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 13983,
                    "end": 14028,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14039,
                    "end": 14062,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14065,
                    "end": 14093,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "345"
                  },
                  {
                    "begin": 13983,
                    "end": 14028,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 14065,
                    "end": 14082,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "346"
                  },
                  {
                    "begin": 14065,
                    "end": 14072,
                    "name": "DUP12",
                    "source": 0
                  },
                  {
                    "begin": 14077,
                    "end": 14081,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 14065,
                    "end": 14076,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "303"
                  },
                  {
                    "begin": 14065,
                    "end": 14082,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14065,
                    "end": 14082,
                    "name": "tag",
                    "source": 0,
                    "value": "346"
                  },
                  {
                    "begin": 14065,
                    "end": 14082,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14065,
                    "end": 14086,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14065,
                    "end": 14086,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "303"
                  },
                  {
                    "begin": 14065,
                    "end": 14093,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14065,
                    "end": 14093,
                    "name": "tag",
                    "source": 0,
                    "value": "345"
                  },
                  {
                    "begin": 14065,
                    "end": 14093,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14039,
                    "end": 14093,
                    "name": "SWAP10",
                    "source": 0
                  },
                  {
                    "begin": 14129,
                    "end": 14133,
                    "name": "SWAP3",
                    "source": 0
                  },
                  {
                    "begin": 14129,
                    "end": 14133,
                    "name": "SWAP9",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14135,
                    "end": 14140,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 14135,
                    "end": 14140,
                    "name": "SWAP7",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13798,
                    "end": 14149,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": 13798,
                    "end": 14149,
                    "name": "SWAP5",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 13798,
                    "end": 14149,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 14157,
                    "end": 14566,
                    "name": "tag",
                    "source": 0,
                    "value": "324"
                  },
                  {
                    "begin": 14157,
                    "end": 14566,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14267,
                    "end": 14274,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14267,
                    "end": 14274,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 14267,
                    "end": 14274,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 14267,
                    "end": 14274,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 14323,
                    "end": 14347,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "348"
                  },
                  {
                    "begin": 14323,
                    "end": 14330,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 14335,
                    "end": 14346,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 14323,
                    "end": 14334,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 14323,
                    "end": 14347,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14323,
                    "end": 14347,
                    "name": "tag",
                    "source": 0,
                    "value": "348"
                  },
                  {
                    "begin": 14323,
                    "end": 14347,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14305,
                    "end": 14347,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14358,
                    "end": 14370,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14373,
                    "end": 14394,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "349"
                  },
                  {
                    "begin": 14373,
                    "end": 14377,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 14382,
                    "end": 14393,
                    "name": "DUP8",
                    "source": 0
                  },
                  {
                    "begin": 14373,
                    "end": 14381,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 14373,
                    "end": 14394,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14373,
                    "end": 14394,
                    "name": "tag",
                    "source": 0,
                    "value": "349"
                  },
                  {
                    "begin": 14373,
                    "end": 14394,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14358,
                    "end": 14394,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14405,
                    "end": 14418,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14421,
                    "end": 14443,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "350"
                  },
                  {
                    "begin": 14421,
                    "end": 14426,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 14431,
                    "end": 14442,
                    "name": "DUP9",
                    "source": 0
                  },
                  {
                    "begin": 14421,
                    "end": 14430,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 14421,
                    "end": 14443,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14421,
                    "end": 14443,
                    "name": "tag",
                    "source": 0,
                    "value": "350"
                  },
                  {
                    "begin": 14421,
                    "end": 14443,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14405,
                    "end": 14443,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14454,
                    "end": 14477,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 14480,
                    "end": 14508,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "351"
                  },
                  {
                    "begin": 14405,
                    "end": 14443,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 14480,
                    "end": 14497,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "346"
                  },
                  {
                    "begin": 14480,
                    "end": 14487,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 14492,
                    "end": 14496,
                    "name": "DUP7",
                    "source": 0
                  },
                  {
                    "begin": 14480,
                    "end": 14491,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "303"
                  },
                  {
                    "begin": 14480,
                    "end": 14497,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 14480,
                    "end": 14508,
                    "name": "tag",
                    "source": 0,
                    "value": "351"
                  },
                  {
                    "begin": 14480,
                    "end": 14508,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 14527,
                    "end": 14534,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 14527,
                    "end": 14534,
                    "name": "SWAP12",
                    "source": 0
                  },
                  {
                    "begin": 14527,
                    "end": 14534,
                    "name": "SWAP4",
                    "source": 0
                  },
                  {
                    "begin": 14527,
                    "end": 14534,
                    "name": "SWAP11",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14553,
                    "end": 14557,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 14553,
                    "end": 14557,
                    "name": "SWAP9",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14157,
                    "end": 14566,
                    "name": "SWAP2",
                    "source": 0
                  },
                  {
                    "begin": 14157,
                    "end": 14566,
                    "name": "SWAP7",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 14157,
                    "end": 14566,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 2555,
                    "end": 2801,
                    "name": "tag",
                    "source": 0,
                    "value": "335"
                  },
                  {
                    "begin": 2555,
                    "end": 2801,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2613,
                    "end": 2620,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2637,
                    "end": 2643,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 2633,
                    "end": 2680,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "354"
                  },
                  {
                    "begin": 2633,
                    "end": 2680,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 2667,
                    "end": 2668,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2660,
                    "end": 2668,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "106"
                  },
                  {
                    "begin": 2660,
                    "end": 2668,
                    "name": "JUMP",
                    "source": 0
                  },
                  {
                    "begin": 2633,
                    "end": 2680,
                    "name": "tag",
                    "source": 0,
                    "value": "354"
                  },
                  {
                    "begin": 2633,
                    "end": 2680,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2690,
                    "end": 2699,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2702,
                    "end": 2707,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "355"
                  },
                  {
                    "begin": 2706,
                    "end": 2707,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2702,
                    "end": 2703,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 2702,
                    "end": 2707,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "356"
                  },
                  {
                    "begin": 2702,
                    "end": 2707,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2702,
                    "end": 2707,
                    "name": "tag",
                    "source": 0,
                    "value": "355"
                  },
                  {
                    "begin": 2702,
                    "end": 2707,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2690,
                    "end": 2707,
                    "name": "SWAP1",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 2735,
                    "end": 2736,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 2726,
                    "end": 2731,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "357"
                  },
                  {
                    "begin": 2730,
                    "end": 2731,
                    "name": "DUP6",
                    "source": 0
                  },
                  {
                    "begin": 2690,
                    "end": 2707,
                    "name": "DUP4",
                    "source": 0
                  },
                  {
                    "begin": 2726,
                    "end": 2731,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "315"
                  },
                  {
                    "begin": 2726,
                    "end": 2731,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 2726,
                    "end": 2731,
                    "name": "tag",
                    "source": 0,
                    "value": "357"
                  },
                  {
                    "begin": 2726,
                    "end": 2731,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 2726,
                    "end": 2736,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "272"
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "JUMPI",
                    "source": 0
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "MLOAD",
                    "source": 0
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "461BCD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "DUP2",
                    "source": 0
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 7888,
                    "end": 7890,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "DUP3",
                    "source": 0
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "ADD",
                    "source": 0
                  },
                  {
                    "begin": 7870,
                    "end": 7891,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7927,
                    "end": 7929,
                    "name": "PUSH",
                    "source": 1,
                    "value": "21"
                  },
                  {
                    "begin": 7907,
                    "end": 7925,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 7907,
                    "end": 7925,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7907,
                    "end": 7925,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7900,
                    "end": 7930,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 7966,
                    "end": 8000,
                    "name": "PUSH",
                    "source": 1,
                    "value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
                  },
                  {
                    "begin": 7946,
                    "end": 7964,
                    "name": "PUSH",
                    "source": 1,
                    "value": "44"
                  },
                  {
                    "begin": 7946,
                    "end": 7964,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 7946,
                    "end": 7964,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 7939,
                    "end": 8001,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "77"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "F8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 8017,
                    "end": 8035,
                    "name": "PUSH",
                    "source": 1,
                    "value": "64"
                  },
                  {
                    "begin": 8017,
                    "end": 8035,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 8017,
                    "end": 8035,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8010,
                    "end": 8041,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8058,
                    "end": 8077,
                    "name": "PUSH",
                    "source": 1,
                    "value": "84"
                  },
                  {
                    "begin": 8058,
                    "end": 8077,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2718,
                    "end": 2774,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "123"
                  },
                  {
                    "begin": 7860,
                    "end": 8083,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 14,
                    "end": 148,
                    "name": "tag",
                    "source": 1,
                    "value": "362"
                  },
                  {
                    "begin": 14,
                    "end": 148,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 82,
                    "end": 102,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 82,
                    "end": 102,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 111,
                    "end": 142,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "364"
                  },
                  {
                    "begin": 82,
                    "end": 102,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 111,
                    "end": 142,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 111,
                    "end": 142,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 111,
                    "end": 142,
                    "name": "tag",
                    "source": 1,
                    "value": "364"
                  },
                  {
                    "begin": 111,
                    "end": 142,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 63,
                    "end": 148,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 63,
                    "end": 148,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 63,
                    "end": 148,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 63,
                    "end": 148,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 153,
                    "end": 410,
                    "name": "tag",
                    "source": 1,
                    "value": "51"
                  },
                  {
                    "begin": 153,
                    "end": 410,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 212,
                    "end": 218,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 265,
                    "end": 267,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 253,
                    "end": 262,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 244,
                    "end": 251,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 240,
                    "end": 263,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 236,
                    "end": 268,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 233,
                    "end": 235,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 233,
                    "end": 235,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "367"
                  },
                  {
                    "begin": 233,
                    "end": 235,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 286,
                    "end": 292,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 278,
                    "end": 284,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 271,
                    "end": 293,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 233,
                    "end": 235,
                    "name": "tag",
                    "source": 1,
                    "value": "367"
                  },
                  {
                    "begin": 233,
                    "end": 235,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 330,
                    "end": 339,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 317,
                    "end": 340,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 349,
                    "end": 380,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "272"
                  },
                  {
                    "begin": 374,
                    "end": 379,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 349,
                    "end": 380,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 349,
                    "end": 380,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 415,
                    "end": 676,
                    "name": "tag",
                    "source": 1,
                    "value": "180"
                  },
                  {
                    "begin": 415,
                    "end": 676,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 485,
                    "end": 491,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 538,
                    "end": 540,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 526,
                    "end": 535,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 517,
                    "end": 524,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 513,
                    "end": 536,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 509,
                    "end": 541,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 506,
                    "end": 508,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 506,
                    "end": 508,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "370"
                  },
                  {
                    "begin": 506,
                    "end": 508,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 559,
                    "end": 565,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 551,
                    "end": 557,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 544,
                    "end": 566,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 506,
                    "end": 508,
                    "name": "tag",
                    "source": 1,
                    "value": "370"
                  },
                  {
                    "begin": 506,
                    "end": 508,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 596,
                    "end": 605,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 590,
                    "end": 606,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 615,
                    "end": 646,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "272"
                  },
                  {
                    "begin": 640,
                    "end": 645,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 615,
                    "end": 646,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 615,
                    "end": 646,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 681,
                    "end": 1079,
                    "name": "tag",
                    "source": 1,
                    "value": "102"
                  },
                  {
                    "begin": 681,
                    "end": 1079,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 749,
                    "end": 755,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 757,
                    "end": 763,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 810,
                    "end": 812,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 798,
                    "end": 807,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 789,
                    "end": 796,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 785,
                    "end": 808,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 781,
                    "end": 813,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 778,
                    "end": 780,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 778,
                    "end": 780,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "373"
                  },
                  {
                    "begin": 778,
                    "end": 780,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 831,
                    "end": 837,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 823,
                    "end": 829,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 816,
                    "end": 838,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 778,
                    "end": 780,
                    "name": "tag",
                    "source": 1,
                    "value": "373"
                  },
                  {
                    "begin": 778,
                    "end": 780,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 875,
                    "end": 884,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 862,
                    "end": 885,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 894,
                    "end": 925,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "374"
                  },
                  {
                    "begin": 919,
                    "end": 924,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 894,
                    "end": 925,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 894,
                    "end": 925,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 894,
                    "end": 925,
                    "name": "tag",
                    "source": 1,
                    "value": "374"
                  },
                  {
                    "begin": 894,
                    "end": 925,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 944,
                    "end": 949,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 1001,
                    "end": 1003,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 986,
                    "end": 1004,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 986,
                    "end": 1004,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 973,
                    "end": 1005,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 1014,
                    "end": 1047,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "375"
                  },
                  {
                    "begin": 973,
                    "end": 1005,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 1014,
                    "end": 1047,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 1014,
                    "end": 1047,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 1014,
                    "end": 1047,
                    "name": "tag",
                    "source": 1,
                    "value": "375"
                  },
                  {
                    "begin": 1014,
                    "end": 1047,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1066,
                    "end": 1073,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 1056,
                    "end": 1073,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 1056,
                    "end": 1073,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 1056,
                    "end": 1073,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 768,
                    "end": 1079,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 768,
                    "end": 1079,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 768,
                    "end": 1079,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 768,
                    "end": 1079,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 768,
                    "end": 1079,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 768,
                    "end": 1079,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 1084,
                    "end": 1550,
                    "name": "tag",
                    "source": 1,
                    "value": "45"
                  },
                  {
                    "begin": 1084,
                    "end": 1550,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1161,
                    "end": 1167,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 1169,
                    "end": 1175,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 1177,
                    "end": 1183,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 1230,
                    "end": 1232,
                    "name": "PUSH",
                    "source": 1,
                    "value": "60"
                  },
                  {
                    "begin": 1218,
                    "end": 1227,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 1209,
                    "end": 1216,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 1205,
                    "end": 1228,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 1201,
                    "end": 1233,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 1198,
                    "end": 1200,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 1198,
                    "end": 1200,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "377"
                  },
                  {
                    "begin": 1198,
                    "end": 1200,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 1251,
                    "end": 1257,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 1243,
                    "end": 1249,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 1236,
                    "end": 1258,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 1198,
                    "end": 1200,
                    "name": "tag",
                    "source": 1,
                    "value": "377"
                  },
                  {
                    "begin": 1198,
                    "end": 1200,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1295,
                    "end": 1304,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 1282,
                    "end": 1305,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 1314,
                    "end": 1345,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "378"
                  },
                  {
                    "begin": 1339,
                    "end": 1344,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 1314,
                    "end": 1345,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 1314,
                    "end": 1345,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 1314,
                    "end": 1345,
                    "name": "tag",
                    "source": 1,
                    "value": "378"
                  },
                  {
                    "begin": 1314,
                    "end": 1345,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1364,
                    "end": 1369,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 1421,
                    "end": 1423,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 1406,
                    "end": 1424,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 1406,
                    "end": 1424,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 1393,
                    "end": 1425,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 1434,
                    "end": 1467,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "379"
                  },
                  {
                    "begin": 1393,
                    "end": 1425,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 1434,
                    "end": 1467,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 1434,
                    "end": 1467,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 1434,
                    "end": 1467,
                    "name": "tag",
                    "source": 1,
                    "value": "379"
                  },
                  {
                    "begin": 1434,
                    "end": 1467,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1188,
                    "end": 1550,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 1188,
                    "end": 1550,
                    "name": "SWAP6",
                    "source": 1
                  },
                  {
                    "begin": 1486,
                    "end": 1493,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 1486,
                    "end": 1493,
                    "name": "SWAP5",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 1540,
                    "end": 1542,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 1525,
                    "end": 1543,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 1525,
                    "end": 1543,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 1525,
                    "end": 1543,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 1525,
                    "end": 1543,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 1512,
                    "end": 1544,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 1512,
                    "end": 1544,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 1188,
                    "end": 1550,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 1555,
                    "end": 1880,
                    "name": "tag",
                    "source": 1,
                    "value": "33"
                  },
                  {
                    "begin": 1555,
                    "end": 1880,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1623,
                    "end": 1629,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 1631,
                    "end": 1637,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 1684,
                    "end": 1686,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 1672,
                    "end": 1681,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 1663,
                    "end": 1670,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 1659,
                    "end": 1682,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 1655,
                    "end": 1687,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 1652,
                    "end": 1654,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 1652,
                    "end": 1654,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "381"
                  },
                  {
                    "begin": 1652,
                    "end": 1654,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 1705,
                    "end": 1711,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 1697,
                    "end": 1703,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 1690,
                    "end": 1712,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 1652,
                    "end": 1654,
                    "name": "tag",
                    "source": 1,
                    "value": "381"
                  },
                  {
                    "begin": 1652,
                    "end": 1654,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1749,
                    "end": 1758,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 1736,
                    "end": 1759,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 1768,
                    "end": 1799,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "382"
                  },
                  {
                    "begin": 1793,
                    "end": 1798,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 1768,
                    "end": 1799,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 1768,
                    "end": 1799,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 1768,
                    "end": 1799,
                    "name": "tag",
                    "source": 1,
                    "value": "382"
                  },
                  {
                    "begin": 1768,
                    "end": 1799,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1818,
                    "end": 1823,
                    "name": "SWAP5",
                    "source": 1
                  },
                  {
                    "begin": 1870,
                    "end": 1872,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 1855,
                    "end": 1873,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 1855,
                    "end": 1873,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 1855,
                    "end": 1873,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 1855,
                    "end": 1873,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 1842,
                    "end": 1874,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 1842,
                    "end": 1874,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 1642,
                    "end": 1880,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 1885,
                    "end": 3062,
                    "name": "tag",
                    "source": 1,
                    "value": "91"
                  },
                  {
                    "begin": 1885,
                    "end": 3062,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 1969,
                    "end": 1975,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 2000,
                    "end": 2002,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 2043,
                    "end": 2045,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 2031,
                    "end": 2040,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 2022,
                    "end": 2029,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 2018,
                    "end": 2041,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 2014,
                    "end": 2046,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 2011,
                    "end": 2013,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 2011,
                    "end": 2013,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "384"
                  },
                  {
                    "begin": 2011,
                    "end": 2013,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2064,
                    "end": 2070,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2056,
                    "end": 2062,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 2049,
                    "end": 2071,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 2011,
                    "end": 2013,
                    "name": "tag",
                    "source": 1,
                    "value": "384"
                  },
                  {
                    "begin": 2011,
                    "end": 2013,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2109,
                    "end": 2118,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 2096,
                    "end": 2119,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 2138,
                    "end": 2156,
                    "name": "PUSH",
                    "source": 1,
                    "value": "FFFFFFFFFFFFFFFF"
                  },
                  {
                    "begin": 2179,
                    "end": 2181,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 2171,
                    "end": 2177,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 2168,
                    "end": 2182,
                    "name": "GT",
                    "source": 1
                  },
                  {
                    "begin": 2165,
                    "end": 2167,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 2165,
                    "end": 2167,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "385"
                  },
                  {
                    "begin": 2165,
                    "end": 2167,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2200,
                    "end": 2206,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 2192,
                    "end": 2198,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 2185,
                    "end": 2207,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 2165,
                    "end": 2167,
                    "name": "tag",
                    "source": 1,
                    "value": "385"
                  },
                  {
                    "begin": 2165,
                    "end": 2167,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2243,
                    "end": 2249,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2232,
                    "end": 2241,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 2228,
                    "end": 2250,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2218,
                    "end": 2250,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 2218,
                    "end": 2250,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 2288,
                    "end": 2295,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 2281,
                    "end": 2285,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1F"
                  },
                  {
                    "begin": 2277,
                    "end": 2279,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 2273,
                    "end": 2286,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2269,
                    "end": 2296,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 2259,
                    "end": 2261,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "386"
                  },
                  {
                    "begin": 2259,
                    "end": 2261,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2315,
                    "end": 2321,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 2307,
                    "end": 2313,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 2300,
                    "end": 2322,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 2259,
                    "end": 2261,
                    "name": "tag",
                    "source": 1,
                    "value": "386"
                  },
                  {
                    "begin": 2259,
                    "end": 2261,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2356,
                    "end": 2358,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2343,
                    "end": 2359,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 2378,
                    "end": 2380,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2374,
                    "end": 2376,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2371,
                    "end": 2381,
                    "name": "GT",
                    "source": 1
                  },
                  {
                    "begin": 2368,
                    "end": 2370,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 2368,
                    "end": 2370,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "388"
                  },
                  {
                    "begin": 2368,
                    "end": 2370,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2384,
                    "end": 2402,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "388"
                  },
                  {
                    "begin": 2384,
                    "end": 2402,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "389"
                  },
                  {
                    "begin": 2384,
                    "end": 2402,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 2384,
                    "end": 2402,
                    "name": "tag",
                    "source": 1,
                    "value": "388"
                  },
                  {
                    "begin": 2384,
                    "end": 2402,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2430,
                    "end": 2432,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 2427,
                    "end": 2428,
                    "name": "PUSH",
                    "source": 1,
                    "value": "5"
                  },
                  {
                    "begin": 2423,
                    "end": 2433,
                    "name": "SHL",
                    "source": 1
                  },
                  {
                    "begin": 2462,
                    "end": 2464,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 2456,
                    "end": 2465,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 2525,
                    "end": 2527,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1F"
                  },
                  {
                    "begin": 2521,
                    "end": 2528,
                    "name": "NOT",
                    "source": 1
                  },
                  {
                    "begin": 2516,
                    "end": 2518,
                    "name": "PUSH",
                    "source": 1,
                    "value": "3F"
                  },
                  {
                    "begin": 2512,
                    "end": 2514,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 2508,
                    "end": 2519,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2504,
                    "end": 2529,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 2496,
                    "end": 2502,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2492,
                    "end": 2530,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2580,
                    "end": 2586,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2568,
                    "end": 2578,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2565,
                    "end": 2587,
                    "name": "LT",
                    "source": 1
                  },
                  {
                    "begin": 2560,
                    "end": 2562,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 2548,
                    "end": 2558,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 2545,
                    "end": 2563,
                    "name": "GT",
                    "source": 1
                  },
                  {
                    "begin": 2542,
                    "end": 2588,
                    "name": "OR",
                    "source": 1
                  },
                  {
                    "begin": 2539,
                    "end": 2541,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 2539,
                    "end": 2541,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "391"
                  },
                  {
                    "begin": 2539,
                    "end": 2541,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2591,
                    "end": 2609,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "391"
                  },
                  {
                    "begin": 2591,
                    "end": 2609,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "389"
                  },
                  {
                    "begin": 2591,
                    "end": 2609,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 2591,
                    "end": 2609,
                    "name": "tag",
                    "source": 1,
                    "value": "391"
                  },
                  {
                    "begin": 2591,
                    "end": 2609,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2627,
                    "end": 2629,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 2620,
                    "end": 2642,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 2677,
                    "end": 2695,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 2677,
                    "end": 2695,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2677,
                    "end": 2695,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 2711,
                    "end": 2726,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 2711,
                    "end": 2726,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2711,
                    "end": 2726,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2711,
                    "end": 2726,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 2746,
                    "end": 2757,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 2746,
                    "end": 2757,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 2746,
                    "end": 2757,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2776,
                    "end": 2787,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 2776,
                    "end": 2787,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 2776,
                    "end": 2787,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2772,
                    "end": 2792,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 2772,
                    "end": 2792,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2769,
                    "end": 2802,
                    "name": "DUP11",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "LT",
                    "source": -1
                  },
                  {
                    "begin": 2766,
                    "end": 2768,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 2766,
                    "end": 2768,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "392"
                  },
                  {
                    "begin": 2766,
                    "end": 2768,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2820,
                    "end": 2826,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 2812,
                    "end": 2818,
                    "name": "DUP9",
                    "source": 1
                  },
                  {
                    "begin": 2805,
                    "end": 2827,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 2766,
                    "end": 2768,
                    "name": "tag",
                    "source": 1,
                    "value": "392"
                  },
                  {
                    "begin": 2766,
                    "end": 2768,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2847,
                    "end": 2853,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 2838,
                    "end": 2853,
                    "name": "SWAP6",
                    "source": 1
                  },
                  {
                    "begin": 2838,
                    "end": 2853,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "tag",
                    "source": 1,
                    "value": "393"
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2876,
                    "end": 2878,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 2873,
                    "end": 2874,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 2870,
                    "end": 2879,
                    "name": "LT",
                    "source": 1
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "395"
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 2933,
                    "end": 2956,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "396"
                  },
                  {
                    "begin": 2952,
                    "end": 2955,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 2933,
                    "end": 2956,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "362"
                  },
                  {
                    "begin": 2933,
                    "end": 2956,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 2933,
                    "end": 2956,
                    "name": "tag",
                    "source": 1,
                    "value": "396"
                  },
                  {
                    "begin": 2933,
                    "end": 2956,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 2921,
                    "end": 2957,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 2921,
                    "end": 2957,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 2894,
                    "end": 2895,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1"
                  },
                  {
                    "begin": 2887,
                    "end": 2896,
                    "name": "SWAP6",
                    "source": 1
                  },
                  {
                    "begin": 2887,
                    "end": 2896,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 2887,
                    "end": 2896,
                    "name": "SWAP6",
                    "source": 1
                  },
                  {
                    "begin": 2887,
                    "end": 2896,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2887,
                    "end": 2896,
                    "name": "SWAP5",
                    "source": 1
                  },
                  {
                    "begin": 2977,
                    "end": 2989,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 2977,
                    "end": 2989,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 2977,
                    "end": 2989,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2977,
                    "end": 2989,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 3009,
                    "end": 3021,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 3009,
                    "end": 3021,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "393"
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "tag",
                    "source": 1,
                    "value": "395"
                  },
                  {
                    "begin": 2862,
                    "end": 3031,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 3050,
                    "end": 3056,
                    "name": "SWAP9",
                    "source": 1
                  },
                  {
                    "begin": 1980,
                    "end": 3062,
                    "name": "SWAP8",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 1980,
                    "end": 3062,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 3067,
                    "end": 3318,
                    "name": "tag",
                    "source": 1,
                    "value": "61"
                  },
                  {
                    "begin": 3067,
                    "end": 3318,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 3123,
                    "end": 3129,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 3176,
                    "end": 3178,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 3164,
                    "end": 3173,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 3155,
                    "end": 3162,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 3151,
                    "end": 3174,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 3147,
                    "end": 3179,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 3144,
                    "end": 3146,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 3144,
                    "end": 3146,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "398"
                  },
                  {
                    "begin": 3144,
                    "end": 3146,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 3197,
                    "end": 3203,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 3189,
                    "end": 3195,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 3182,
                    "end": 3204,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 3144,
                    "end": 3146,
                    "name": "tag",
                    "source": 1,
                    "value": "398"
                  },
                  {
                    "begin": 3144,
                    "end": 3146,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 3241,
                    "end": 3250,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 3228,
                    "end": 3251,
                    "name": "CALLDATALOAD",
                    "source": 1
                  },
                  {
                    "begin": 3260,
                    "end": 3288,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "272"
                  },
                  {
                    "begin": 3282,
                    "end": 3287,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 3260,
                    "end": 3288,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "400"
                  },
                  {
                    "begin": 3260,
                    "end": 3288,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 3323,
                    "end": 3578,
                    "name": "tag",
                    "source": 1,
                    "value": "206"
                  },
                  {
                    "begin": 3323,
                    "end": 3578,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 3390,
                    "end": 3396,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 3443,
                    "end": 3445,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 3431,
                    "end": 3440,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 3422,
                    "end": 3429,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 3418,
                    "end": 3441,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 3414,
                    "end": 3446,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 3411,
                    "end": 3413,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 3411,
                    "end": 3413,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "402"
                  },
                  {
                    "begin": 3411,
                    "end": 3413,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 3464,
                    "end": 3470,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 3456,
                    "end": 3462,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 3449,
                    "end": 3471,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 3411,
                    "end": 3413,
                    "name": "tag",
                    "source": 1,
                    "value": "402"
                  },
                  {
                    "begin": 3411,
                    "end": 3413,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 3501,
                    "end": 3510,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 3495,
                    "end": 3511,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 3520,
                    "end": 3548,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "272"
                  },
                  {
                    "begin": 3542,
                    "end": 3547,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 3520,
                    "end": 3548,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "400"
                  },
                  {
                    "begin": 3520,
                    "end": 3548,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 3583,
                    "end": 3899,
                    "name": "tag",
                    "source": 1,
                    "value": "199"
                  },
                  {
                    "begin": 3583,
                    "end": 3899,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 3671,
                    "end": 3677,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 3679,
                    "end": 3685,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 3687,
                    "end": 3693,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 3740,
                    "end": 3742,
                    "name": "PUSH",
                    "source": 1,
                    "value": "60"
                  },
                  {
                    "begin": 3728,
                    "end": 3737,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 3719,
                    "end": 3726,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 3715,
                    "end": 3738,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 3711,
                    "end": 3743,
                    "name": "SLT",
                    "source": 1
                  },
                  {
                    "begin": 3708,
                    "end": 3710,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 3708,
                    "end": 3710,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "405"
                  },
                  {
                    "begin": 3708,
                    "end": 3710,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 3761,
                    "end": 3767,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 3753,
                    "end": 3759,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 3746,
                    "end": 3768,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 3708,
                    "end": 3710,
                    "name": "tag",
                    "source": 1,
                    "value": "405"
                  },
                  {
                    "begin": 3708,
                    "end": 3710,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 3795,
                    "end": 3804,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 3789,
                    "end": 3805,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 3779,
                    "end": 3805,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 3779,
                    "end": 3805,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 3845,
                    "end": 3847,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 3834,
                    "end": 3843,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 3830,
                    "end": 3848,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 3824,
                    "end": 3849,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 3814,
                    "end": 3849,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 3814,
                    "end": 3849,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 3889,
                    "end": 3891,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 3878,
                    "end": 3887,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 3874,
                    "end": 3892,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 3868,
                    "end": 3893,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 3858,
                    "end": 3893,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 3858,
                    "end": 3893,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 3698,
                    "end": 3899,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 3698,
                    "end": 3899,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 3698,
                    "end": 3899,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 3698,
                    "end": 3899,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 3698,
                    "end": 3899,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 3698,
                    "end": 3899,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 5504,
                    "end": 6107,
                    "name": "tag",
                    "source": 1,
                    "value": "29"
                  },
                  {
                    "begin": 5504,
                    "end": 6107,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 5616,
                    "end": 5620,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 5645,
                    "end": 5647,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 5674,
                    "end": 5676,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 5663,
                    "end": 5672,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 5656,
                    "end": 5677,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5706,
                    "end": 5712,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 5749,
                    "end": 5755,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 5744,
                    "end": 5746,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 5733,
                    "end": 5742,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 5729,
                    "end": 5747,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5722,
                    "end": 5756,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5774,
                    "end": 5778,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "tag",
                    "source": 1,
                    "value": "412"
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 5801,
                    "end": 5807,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5798,
                    "end": 5799,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5795,
                    "end": 5808,
                    "name": "LT",
                    "source": 1
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "414"
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 5896,
                    "end": 5910,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 5896,
                    "end": 5910,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5896,
                    "end": 5910,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5892,
                    "end": 5915,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 5892,
                    "end": 5915,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5886,
                    "end": 5916,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 5862,
                    "end": 5879,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 5862,
                    "end": 5879,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 5862,
                    "end": 5879,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5881,
                    "end": 5883,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 5858,
                    "end": 5884,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5851,
                    "end": 5917,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5816,
                    "end": 5826,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 5816,
                    "end": 5826,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "412"
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "tag",
                    "source": 1,
                    "value": "414"
                  },
                  {
                    "begin": 5787,
                    "end": 5927,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 5945,
                    "end": 5951,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5942,
                    "end": 5943,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 5939,
                    "end": 5952,
                    "name": "GT",
                    "source": 1
                  },
                  {
                    "begin": 5936,
                    "end": 5938,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 5936,
                    "end": 5938,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "415"
                  },
                  {
                    "begin": 5936,
                    "end": 5938,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 6015,
                    "end": 6019,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 6010,
                    "end": 6012,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 6001,
                    "end": 6007,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 5990,
                    "end": 5999,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 5986,
                    "end": 6008,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5982,
                    "end": 6013,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 5975,
                    "end": 6020,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 5936,
                    "end": 5938,
                    "name": "tag",
                    "source": 1,
                    "value": "415"
                  },
                  {
                    "begin": 5936,
                    "end": 5938,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 6091,
                    "end": 6093,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1F"
                  },
                  {
                    "begin": 6070,
                    "end": 6085,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1F"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 6066,
                    "end": 6095,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 6051,
                    "end": 6096,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 6051,
                    "end": 6096,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 6051,
                    "end": 6096,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": 6051,
                    "end": 6096,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6098,
                    "end": 6100,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 6047,
                    "end": 6101,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 6047,
                    "end": 6101,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 5625,
                    "end": 6107,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 5625,
                    "end": 6107,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 8088,
                    "end": 8444,
                    "name": "tag",
                    "source": 1,
                    "value": "124"
                  },
                  {
                    "begin": 8088,
                    "end": 8444,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 8290,
                    "end": 8292,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 8272,
                    "end": 8293,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 8272,
                    "end": 8293,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 8272,
                    "end": 8293,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8309,
                    "end": 8327,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 8309,
                    "end": 8327,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 8309,
                    "end": 8327,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8302,
                    "end": 8332,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8368,
                    "end": 8402,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
                  },
                  {
                    "begin": 8363,
                    "end": 8365,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 8348,
                    "end": 8366,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 8348,
                    "end": 8366,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8341,
                    "end": 8403,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 8435,
                    "end": 8437,
                    "name": "PUSH",
                    "source": 1,
                    "value": "60"
                  },
                  {
                    "begin": 8420,
                    "end": 8438,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 8420,
                    "end": 8438,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 8262,
                    "end": 8444,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 10204,
                    "end": 11187,
                    "name": "tag",
                    "source": 1,
                    "value": "285"
                  },
                  {
                    "begin": 10204,
                    "end": 11187,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 10466,
                    "end": 10470,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 10514,
                    "end": 10517,
                    "name": "PUSH",
                    "source": 1,
                    "value": "A0"
                  },
                  {
                    "begin": 10503,
                    "end": 10512,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 10499,
                    "end": 10518,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10545,
                    "end": 10551,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 10534,
                    "end": 10543,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 10527,
                    "end": 10552,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 10571,
                    "end": 10573,
                    "name": "PUSH",
                    "source": 1,
                    "value": "20"
                  },
                  {
                    "begin": 10609,
                    "end": 10615,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 10604,
                    "end": 10606,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10593,
                    "end": 10602,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 10589,
                    "end": 10607,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10582,
                    "end": 10616,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 10652,
                    "end": 10655,
                    "name": "PUSH",
                    "source": 1,
                    "value": "A0"
                  },
                  {
                    "begin": 10647,
                    "end": 10649,
                    "name": "PUSH",
                    "source": 1,
                    "value": "40"
                  },
                  {
                    "begin": 10636,
                    "end": 10645,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 10632,
                    "end": 10650,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10625,
                    "end": 10656,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 10676,
                    "end": 10682,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10711,
                    "end": 10717,
                    "name": "DUP8",
                    "source": 1
                  },
                  {
                    "begin": 10705,
                    "end": 10718,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": 10742,
                    "end": 10748,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 10734,
                    "end": 10740,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 10727,
                    "end": 10749,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 10780,
                    "end": 10783,
                    "name": "PUSH",
                    "source": 1,
                    "value": "C0"
                  },
                  {
                    "begin": 10769,
                    "end": 10778,
                    "name": "DUP7",
                    "source": 1
                  },
                  {
                    "begin": 10765,
                    "end": 10784,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10758,
                    "end": 10784,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 10758,
                    "end": 10784,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 10819,
                    "end": 10821,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 10811,
                    "end": 10817,
                    "name": "DUP10",
                    "source": 1
                  },
                  {
                    "begin": 10807,
                    "end": 10822,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10793,
                    "end": 10822,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 10793,
                    "end": 10822,
                    "name": "POP",
                    "source": 1
                  },
                  {
                    "begin": 10840,
                    "end": 10844,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "tag",
                    "source": 1,
                    "value": "428"
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 10867,
                    "end": 10873,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10864,
                    "end": 10865,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 10861,
                    "end": 10874,
                    "name": "LT",
                    "source": 1
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "430"
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 10932,
                    "end": 10945,
                    "name": "DUP5",
                    "source": 1
                  },
                  {
                    "begin": 10932,
                    "end": 10945,
                    "name": "MLOAD",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 10928,
                    "end": 10967,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 10916,
                    "end": 10968,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 10916,
                    "end": 10968,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11023,
                    "end": 11038,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 11023,
                    "end": 11038,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 11023,
                    "end": 11038,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11023,
                    "end": 11038,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 10988,
                    "end": 11000,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 10988,
                    "end": 11000,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 10988,
                    "end": 11000,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10988,
                    "end": 11000,
                    "name": "SWAP2",
                    "source": 1
                  },
                  {
                    "begin": 10964,
                    "end": 10965,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1"
                  },
                  {
                    "begin": 10882,
                    "end": 10891,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "428"
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "JUMP",
                    "source": 1
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "tag",
                    "source": 1,
                    "value": "430"
                  },
                  {
                    "begin": 10853,
                    "end": 11048,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 11104,
                    "end": 11136,
                    "name": "SWAP7",
                    "source": 1
                  },
                  {
                    "begin": 11104,
                    "end": 11136,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 11104,
                    "end": 11136,
                    "name": "SWAP7",
                    "source": 1
                  },
                  {
                    "begin": 11104,
                    "end": 11136,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 11099,
                    "end": 11101,
                    "name": "PUSH",
                    "source": 1,
                    "value": "60"
                  },
                  {
                    "begin": 11084,
                    "end": 11102,
                    "name": "DUP6",
                    "source": 1
                  },
                  {
                    "begin": 11084,
                    "end": 11102,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11077,
                    "end": 11137,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11168,
                    "end": 11171,
                    "name": "PUSH",
                    "source": 1,
                    "value": "80"
                  },
                  {
                    "begin": 11153,
                    "end": 11172,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11146,
                    "end": 11181,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11065,
                    "end": 11068,
                    "name": "SWAP4",
                    "source": 1
                  },
                  {
                    "begin": 10475,
                    "end": 11187,
                    "name": "SWAP3",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 10475,
                    "end": 11187,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 11381,
                    "end": 11509,
                    "name": "tag",
                    "source": 1,
                    "value": "240"
                  },
                  {
                    "begin": 11381,
                    "end": 11509,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 11421,
                    "end": 11424,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 11452,
                    "end": 11453,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 11448,
                    "end": 11454,
                    "name": "NOT",
                    "source": 1
                  },
                  {
                    "begin": 11445,
                    "end": 11446,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 11442,
                    "end": 11455,
                    "name": "GT",
                    "source": 1
                  },
                  {
                    "begin": 11439,
                    "end": 11441,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 11439,
                    "end": 11441,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "434"
                  },
                  {
                    "begin": 11439,
                    "end": 11441,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 11458,
                    "end": 11476,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "434"
                  },
                  {
                    "begin": 11458,
                    "end": 11476,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "435"
                  },
                  {
                    "begin": 11458,
                    "end": 11476,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 11458,
                    "end": 11476,
                    "name": "tag",
                    "source": 1,
                    "value": "434"
                  },
                  {
                    "begin": 11458,
                    "end": 11476,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11494,
                    "end": 11503,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 11494,
                    "end": 11503,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 11429,
                    "end": 11509,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 11514,
                    "end": 11731,
                    "name": "tag",
                    "source": 1,
                    "value": "315"
                  },
                  {
                    "begin": 11514,
                    "end": 11731,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 11554,
                    "end": 11555,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 11580,
                    "end": 11581,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 11570,
                    "end": 11572,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "437"
                  },
                  {
                    "begin": 11570,
                    "end": 11572,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "4E487B71"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": 11605,
                    "end": 11636,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 11605,
                    "end": 11636,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11659,
                    "end": 11663,
                    "name": "PUSH",
                    "source": 1,
                    "value": "12"
                  },
                  {
                    "begin": 11656,
                    "end": 11657,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4"
                  },
                  {
                    "begin": 11649,
                    "end": 11664,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 11687,
                    "end": 11691,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 11612,
                    "end": 11613,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 11677,
                    "end": 11692,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 11570,
                    "end": 11572,
                    "name": "tag",
                    "source": 1,
                    "value": "437"
                  },
                  {
                    "begin": 11570,
                    "end": 11572,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11716,
                    "end": 11725,
                    "name": "DIV",
                    "source": 1
                  },
                  {
                    "begin": 11716,
                    "end": 11725,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 11560,
                    "end": 11731,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 11736,
                    "end": 11904,
                    "name": "tag",
                    "source": 1,
                    "value": "356"
                  },
                  {
                    "begin": 11736,
                    "end": 11904,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 11776,
                    "end": 11783,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 11842,
                    "end": 11843,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 11838,
                    "end": 11839,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 11834,
                    "end": 11840,
                    "name": "NOT",
                    "source": 1
                  },
                  {
                    "begin": 11830,
                    "end": 11844,
                    "name": "DIV",
                    "source": 1
                  },
                  {
                    "begin": 11827,
                    "end": 11828,
                    "name": "DUP4",
                    "source": 1
                  },
                  {
                    "begin": 11824,
                    "end": 11845,
                    "name": "GT",
                    "source": 1
                  },
                  {
                    "begin": 11819,
                    "end": 11820,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 11812,
                    "end": 11821,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 11805,
                    "end": 11822,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 11801,
                    "end": 11846,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 11798,
                    "end": 11800,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 11798,
                    "end": 11800,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "440"
                  },
                  {
                    "begin": 11798,
                    "end": 11800,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 11849,
                    "end": 11867,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "440"
                  },
                  {
                    "begin": 11849,
                    "end": 11867,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "435"
                  },
                  {
                    "begin": 11849,
                    "end": 11867,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 11849,
                    "end": 11867,
                    "name": "tag",
                    "source": 1,
                    "value": "440"
                  },
                  {
                    "begin": 11849,
                    "end": 11867,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 11889,
                    "end": 11898,
                    "name": "MUL",
                    "source": 1
                  },
                  {
                    "begin": 11889,
                    "end": 11898,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 11788,
                    "end": 11904,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 11909,
                    "end": 12034,
                    "name": "tag",
                    "source": 1,
                    "value": "257"
                  },
                  {
                    "begin": 11909,
                    "end": 12034,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 11949,
                    "end": 11953,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 11977,
                    "end": 11978,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 11974,
                    "end": 11975,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 11971,
                    "end": 11979,
                    "name": "LT",
                    "source": 1
                  },
                  {
                    "begin": 11968,
                    "end": 11970,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 11968,
                    "end": 11970,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "443"
                  },
                  {
                    "begin": 11968,
                    "end": 11970,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 11982,
                    "end": 12000,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "443"
                  },
                  {
                    "begin": 11982,
                    "end": 12000,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "435"
                  },
                  {
                    "begin": 11982,
                    "end": 12000,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 11982,
                    "end": 12000,
                    "name": "tag",
                    "source": 1,
                    "value": "443"
                  },
                  {
                    "begin": 11982,
                    "end": 12000,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12019,
                    "end": 12028,
                    "name": "SUB",
                    "source": 1
                  },
                  {
                    "begin": 12019,
                    "end": 12028,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 11958,
                    "end": 12034,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 12039,
                    "end": 12174,
                    "name": "tag",
                    "source": 1,
                    "value": "160"
                  },
                  {
                    "begin": 12039,
                    "end": 12174,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 12078,
                    "end": 12081,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT",
                    "source": -1
                  },
                  {
                    "begin": 12099,
                    "end": 12116,
                    "name": "DUP3",
                    "source": 1
                  },
                  {
                    "begin": 12099,
                    "end": 12116,
                    "name": "EQ",
                    "source": 1
                  },
                  {
                    "begin": 12096,
                    "end": 12098,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 12096,
                    "end": 12098,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "446"
                  },
                  {
                    "begin": 12096,
                    "end": 12098,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 12119,
                    "end": 12137,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "446"
                  },
                  {
                    "begin": 12119,
                    "end": 12137,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "435"
                  },
                  {
                    "begin": 12119,
                    "end": 12137,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[in]"
                  },
                  {
                    "begin": 12119,
                    "end": 12137,
                    "name": "tag",
                    "source": 1,
                    "value": "446"
                  },
                  {
                    "begin": 12119,
                    "end": 12137,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP",
                    "source": -1
                  },
                  {
                    "begin": 12166,
                    "end": 12167,
                    "name": "PUSH",
                    "source": 1,
                    "value": "1"
                  },
                  {
                    "begin": 12155,
                    "end": 12168,
                    "name": "ADD",
                    "source": 1
                  },
                  {
                    "begin": 12155,
                    "end": 12168,
                    "name": "SWAP1",
                    "source": 1
                  },
                  {
                    "begin": 12086,
                    "end": 12174,
                    "name": "JUMP",
                    "source": 1,
                    "value": "[out]"
                  },
                  {
                    "begin": 12179,
                    "end": 12306,
                    "name": "tag",
                    "source": 1,
                    "value": "435"
                  },
                  {
                    "begin": 12179,
                    "end": 12306,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 12240,
                    "end": 12250,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4E487B71"
                  },
                  {
                    "begin": 12235,
                    "end": 12238,
                    "name": "PUSH",
                    "source": 1,
                    "value": "E0"
                  },
                  {
                    "begin": 12231,
                    "end": 12251,
                    "name": "SHL",
                    "source": 1
                  },
                  {
                    "begin": 12228,
                    "end": 12229,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 12221,
                    "end": 12252,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 12271,
                    "end": 12275,
                    "name": "PUSH",
                    "source": 1,
                    "value": "11"
                  },
                  {
                    "begin": 12268,
                    "end": 12269,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4"
                  },
                  {
                    "begin": 12261,
                    "end": 12276,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 12295,
                    "end": 12299,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 12292,
                    "end": 12293,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 12285,
                    "end": 12300,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 12311,
                    "end": 12438,
                    "name": "tag",
                    "source": 1,
                    "value": "389"
                  },
                  {
                    "begin": 12311,
                    "end": 12438,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 12372,
                    "end": 12382,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4E487B71"
                  },
                  {
                    "begin": 12367,
                    "end": 12370,
                    "name": "PUSH",
                    "source": 1,
                    "value": "E0"
                  },
                  {
                    "begin": 12363,
                    "end": 12383,
                    "name": "SHL",
                    "source": 1
                  },
                  {
                    "begin": 12360,
                    "end": 12361,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 12353,
                    "end": 12384,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 12403,
                    "end": 12407,
                    "name": "PUSH",
                    "source": 1,
                    "value": "41"
                  },
                  {
                    "begin": 12400,
                    "end": 12401,
                    "name": "PUSH",
                    "source": 1,
                    "value": "4"
                  },
                  {
                    "begin": 12393,
                    "end": 12408,
                    "name": "MSTORE",
                    "source": 1
                  },
                  {
                    "begin": 12427,
                    "end": 12431,
                    "name": "PUSH",
                    "source": 1,
                    "value": "24"
                  },
                  {
                    "begin": 12424,
                    "end": 12425,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 12417,
                    "end": 12432,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 12443,
                    "end": 12574,
                    "name": "tag",
                    "source": 1,
                    "value": "365"
                  },
                  {
                    "begin": 12443,
                    "end": 12574,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "source": -1,
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SHL",
                    "source": -1
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB",
                    "source": -1
                  },
                  {
                    "begin": 12518,
                    "end": 12549,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 12518,
                    "end": 12549,
                    "name": "AND",
                    "source": 1
                  },
                  {
                    "begin": 12508,
                    "end": 12550,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 12508,
                    "end": 12550,
                    "name": "EQ",
                    "source": 1
                  },
                  {
                    "begin": 12498,
                    "end": 12500,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "135"
                  },
                  {
                    "begin": 12498,
                    "end": 12500,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 12564,
                    "end": 12565,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 12561,
                    "end": 12562,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 12554,
                    "end": 12566,
                    "name": "REVERT",
                    "source": 1
                  },
                  {
                    "begin": 12579,
                    "end": 12697,
                    "name": "tag",
                    "source": 1,
                    "value": "400"
                  },
                  {
                    "begin": 12579,
                    "end": 12697,
                    "name": "JUMPDEST",
                    "source": 1
                  },
                  {
                    "begin": 12665,
                    "end": 12670,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 12658,
                    "end": 12671,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 12651,
                    "end": 12672,
                    "name": "ISZERO",
                    "source": 1
                  },
                  {
                    "begin": 12644,
                    "end": 12649,
                    "name": "DUP2",
                    "source": 1
                  },
                  {
                    "begin": 12641,
                    "end": 12673,
                    "name": "EQ",
                    "source": 1
                  },
                  {
                    "begin": 12631,
                    "end": 12633,
                    "name": "PUSH [tag]",
                    "source": 1,
                    "value": "135"
                  },
                  {
                    "begin": 12631,
                    "end": 12633,
                    "name": "JUMPI",
                    "source": 1
                  },
                  {
                    "begin": 12687,
                    "end": 12688,
                    "name": "PUSH",
                    "source": 1,
                    "value": "0"
                  },
                  {
                    "begin": 12684,
                    "end": 12685,
                    "name": "DUP1",
                    "source": 1
                  },
                  {
                    "begin": 12677,
                    "end": 12689,
                    "name": "REVERT",
                    "source": 1
                  }
                ],
                ".data": {
                  "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365"
                }
              }
            }
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "delBot(address)": "273123b7",
            "manualsend()": "6fc3eaec",
            "manualswap()": "c3c8cd80",
            "name()": "06fdde03",
            "openTrading()": "c9567bf9",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "setBots(address[])": "b515566a",
            "setCooldownEnabled(bool)": "5932ead1",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notbot\",\"type\":\"address\"}],\"name\":\"delBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"setBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"onoff\",\"type\":\"bool\"}],\"name\":\"setCooldownEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"RhinuERC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [
            {
              "astId": 228,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address"
            },
            {
              "astId": 230,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address"
            },
            {
              "astId": 368,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_rOwned",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)"
            },
            {
              "astId": 372,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_tOwned",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)"
            },
            {
              "astId": 378,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
            },
            {
              "astId": 382,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)"
            },
            {
              "astId": 386,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "bots",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)"
            },
            {
              "astId": 390,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "cooldown",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)"
            },
            {
              "astId": 413,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_rTotal",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256"
            },
            {
              "astId": 415,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_tFeeTotal",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256"
            },
            {
              "astId": 417,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_feeAddr1",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256"
            },
            {
              "astId": 419,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_feeAddr2",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256"
            },
            {
              "astId": 421,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_feeAddrWallet1",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable"
            },
            {
              "astId": 423,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_feeAddrWallet2",
              "offset": 0,
              "slot": "13",
              "type": "t_address_payable"
            },
            {
              "astId": 435,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IUniswapV2Router02)355"
            },
            {
              "astId": 437,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "15",
              "type": "t_address"
            },
            {
              "astId": 439,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "tradingOpen",
              "offset": 20,
              "slot": "15",
              "type": "t_bool"
            },
            {
              "astId": 442,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "inSwap",
              "offset": 21,
              "slot": "15",
              "type": "t_bool"
            },
            {
              "astId": 445,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "swapEnabled",
              "offset": 22,
              "slot": "15",
              "type": "t_bool"
            },
            {
              "astId": 448,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "cooldownEnabled",
              "offset": 23,
              "slot": "15",
              "type": "t_bool"
            },
            {
              "astId": 451,
              "contract": "RhinuERC.sol:RhinuERC",
              "label": "_maxTxAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256"
            }
          ],
          "types": {
            "t_address": {
              "encoding": "inplace",
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "encoding": "inplace",
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "encoding": "inplace",
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)355": {
              "encoding": "inplace",
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "encoding": "mapping",
              "key": "t_address",
              "label": "mapping(address => bool)",
              "numberOfBytes": "32",
              "value": "t_bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "encoding": "mapping",
              "key": "t_address",
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32",
              "value": "t_mapping(t_address,t_uint256)"
            },
            "t_mapping(t_address,t_uint256)": {
              "encoding": "mapping",
              "key": "t_address",
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32",
              "value": "t_uint256"
            },
            "t_uint256": {
              "encoding": "inplace",
              "label": "uint256",
              "numberOfBytes": "32"
            }
          }
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "SafeMath": {
        "abi": [],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "evm": {
          "assembly": "    /* \"RhinuERC.sol\":2002:3143  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"RhinuERC.sol\":2002:3143  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204744ef6a29cbdd19dd0f6aac9b27c079ef715fd48ae02b9427f6f9ba211c1fce64736f6c63430008040033\n}\n",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204744ef6a29cbdd19dd0f6aac9b27c079ef715fd48ae02b9427f6f9ba211c1fce64736f6c63430008040033",
            "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE DIFFICULTY 0xEF PUSH11 0x29CBDD19DD0F6AAC9B27C0 PUSH26 0xEF715FD48AE02B9427F6F9BA211C1FCE64736F6C634300080400 CALLER ",
            "sourceMap": "2002:1141:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2002:1141:0;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "generatedSources": [],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204744ef6a29cbdd19dd0f6aac9b27c079ef715fd48ae02b9427f6f9ba211c1fce64736f6c63430008040033",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE DIFFICULTY 0xEF PUSH11 0x29CBDD19DD0F6AAC9B27C0 PUSH26 0xEF715FD48AE02B9427F6F9BA211C1FCE64736F6C634300080400 CALLER ",
            "sourceMap": "2002:1141:0:-:0;;;;;;;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "17200",
              "executionCost": "103",
              "totalCost": "17303"
            },
            "internal": {
              "add(uint256,uint256)": "infinite",
              "div(uint256,uint256)": "infinite",
              "div(uint256,uint256,string memory)": "infinite",
              "mul(uint256,uint256)": "infinite",
              "sub(uint256,uint256)": "infinite",
              "sub(uint256,uint256,string memory)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH #[$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH [$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "B"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "CODECOPY",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP1",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "MLOAD",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "BYTE",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "73"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "EQ",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "JUMPI",
                "source": 0
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "4E487B71"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "E0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SHL",
                "source": -1
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "24"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "REVERT",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "tag",
                "source": 0,
                "value": "1"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "JUMPDEST",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "ADDRESS",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "MSTORE",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "PUSH",
                "source": 0,
                "value": "73"
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "MSTORE8",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP3",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "DUP2",
                "source": 0
              },
              {
                "begin": 2002,
                "end": 3143,
                "name": "RETURN",
                "source": 0
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a26469706673582212204744ef6a29cbdd19dd0f6aac9b27c079ef715fd48ae02b9427f6f9ba211c1fce64736f6c63430008040033",
                ".code": [
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "PUSHDEPLOYADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "ADDRESS",
                    "source": 0
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "EQ",
                    "source": 0
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "PUSH",
                    "source": 0,
                    "value": "80"
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "MSTORE",
                    "source": 0
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "DUP1",
                    "source": 0
                  },
                  {
                    "begin": 2002,
                    "end": 3143,
                    "name": "REVERT",
                    "source": 0
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {}
        },
        "ewasm": {
          "wasm": ""
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RhinuERC.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RhinuERC.sol\":{\"content\":\"/**\\r\\n  _____  _     _             ______ _____   _____ \\r\\n |  __ \\\\| |   (_)           |  ____|  __ \\\\ / ____|\\r\\n | |__) | |__  _ _ __  _   _| |__  | |__) | |     \\r\\n |  _  /| '_ \\\\| | '_ \\\\| | | |  __| |  _  /| |     \\r\\n | | \\\\ \\\\| | | | | | | | |_| | |____| | \\\\ \\\\| |____ \\r\\n |_|  \\\\_\\\\_| |_|_|_| |_|\\\\__,_|______|_|  \\\\_\\\\\\\\_____|\\r\\n\\r\\nTg : https://t.me/RhinuERC\\r\\nWebsite: https://www.rhinuerc.com/\\r\\nTwitter: https://twitter.com/RhinuERC\\r\\nTokenomics : \\r\\n              ** 12%\\r\\n              ** 1% Reflection - The longer you hold, the biggest is your reflections\\r\\n              ** 2% Donation to Rhinos Foundation\\r\\n              ** 7% Marketing and developpement\\r\\n              ** 2% Team\\r\\n             \\r\\n   \\ud83e\\udd8f* Rhinu Roadmap for the next week *\\ud83e\\udd8f\\r\\n   \\r\\n#STEP 1:\\r\\n-PreLaunch Calls \\r\\n-Stealth Launch on Uniswap \\r\\n-Website \\r\\n-Growing Telegram members \\r\\n-PostLaunch marketing with Influencers\\r\\n\\r\\n#STEP 2:\\r\\n-CMC and Coingecko\\r\\n-Social Media Takeover \\r\\n-First Donation to Rhino Foundation\\r\\n-Community contest\\r\\n\\r\\n#STEP 3:\\r\\n-More Marketing\\r\\n-Rhino Foundation Partnership\\r\\n-Contract Audit\\r\\n-First NFT Collection\\r\\n-First CEX Listing \\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}  \\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract RhinuERC is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping (address => uint) private cooldown;\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private constant _tTotal = 1000000000000000000 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n    \\r\\n    uint256 private _feeAddr1;\\r\\n    uint256 private _feeAddr2;\\r\\n    address payable private _feeAddrWallet1;\\r\\n    address payable private _feeAddrWallet2;\\r\\n    \\r\\n    string private constant _name = \\\"RHINU\\\";\\r\\n    string private constant _symbol = \\\"RHINU\\\";\\r\\n    uint8 private constant _decimals = 9;\\r\\n    \\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n    bool private cooldownEnabled = false;\\r\\n    uint256 private _maxTxAmount = _tTotal;\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n    constructor () {\\r\\n        _feeAddrWallet1 = payable(0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2);\\r\\n        _feeAddrWallet2 = payable(0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0);\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet1] = true;\\r\\n        _isExcludedFromFee[_feeAddrWallet2] = true;\\r\\n        emit Transfer(address(0x1F135511975B0D63ce9e5AD1F123903A6fC5319d), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\\r\\n        cooldownEnabled = onoff;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) private view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        _feeAddr1 = 2;\\r\\n        _feeAddr2 = 10;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] && cooldownEnabled) {\\r\\n                // Cooldown\\r\\n                require(amount <= _maxTxAmount);\\r\\n                require(cooldown[to] < block.timestamp);\\r\\n                cooldown[to] = block.timestamp + (30 seconds);\\r\\n            }\\r\\n            \\r\\n            \\r\\n            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {\\r\\n                _feeAddr1 = 2;\\r\\n                _feeAddr2 = 10;\\r\\n            }\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && from != uniswapV2Pair && swapEnabled) {\\r\\n                swapTokensForEth(contractTokenBalance);\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t\\t\\r\\n        _tokenTransfer(from,to,amount);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n        \\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _feeAddrWallet1.transfer(amount.div(2));\\r\\n        _feeAddrWallet2.transfer(amount.div(2));\\r\\n    }\\r\\n    \\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        swapEnabled = true;\\r\\n        cooldownEnabled = true;\\r\\n        _maxTxAmount = 23000000000000000 * 10**9;\\r\\n        tradingOpen = true;\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n    }\\r\\n    \\r\\n    function setBots(address[] memory bots_) public onlyOwner {\\r\\n        for (uint i = 0; i < bots_.length; i++) {\\r\\n            bots[bots_[i]] = true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function delBot(address notbot) public onlyOwner {\\r\\n        bots[notbot] = false;\\r\\n    }\\r\\n        \\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\\r\\n        _transferStandard(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \\r\\n        _takeTeam(tTeam);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _takeTeam(uint256 tTeam) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n    \\r\\n    function manualswap() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractBalance = balanceOf(address(this));\\r\\n        swapTokensForEth(contractBalance);\\r\\n    }\\r\\n    \\r\\n    function manualsend() external {\\r\\n        require(_msgSender() == _feeAddrWallet1);\\r\\n        uint256 contractETHBalance = address(this).balance;\\r\\n        sendETHToFee(contractETHBalance);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(tAmount, _feeAddr1, _feeAddr2);\\r\\n        uint256 currentRate =  _getRate();\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tTeam, currentRate);\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount, uint256 taxFee, uint256 TeamFee) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = tAmount.mul(taxFee).div(100);\\r\\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\\r\\n        return (tTransferAmount, tFee, tTeam);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tTeam, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rTeam = tTeam.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n\\tfunction _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb598f4f8e6bdf238df9f5dd6a97e77836be3bc9d4fcdae3815ca3eb63a75ec20\",\"license\":\"Unlicensed\"}},\"version\":1}",
        "storageLayout": {
          "storage": [],
          "types": null
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      }
    }
  },
  "sources": {
    "RhinuERC.sol": {
      "ast": {
        "absolutePath": "RhinuERC.sol",
        "exportedSymbols": {
          "Context": [
            11
          ],
          "IERC20": [
            78
          ],
          "IUniswapV2Factory": [
            309
          ],
          "IUniswapV2Router02": [
            355
          ],
          "Ownable": [
            299
          ],
          "RhinuERC": [
            1582
          ],
          "SafeMath": [
            224
          ]
        },
        "id": 1583,
        "license": "Unlicensed",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "1160:23:0"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 11,
            "linearizedBaseContracts": [
              11
            ],
            "name": "Context",
            "nameLocation": "1205:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 9,
                  "nodeType": "Block",
                  "src": "1282:36:0",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 6,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1300:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1300:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 5,
                      "id": 8,
                      "nodeType": "Return",
                      "src": "1293:17:0"
                    }
                  ]
                },
                "id": 10,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "1229:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1239:2:0"
                },
                "returnParameters": {
                  "id": 5,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 4,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 10,
                      "src": "1273:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1273:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1272:9:0"
                },
                "scope": 11,
                "src": "1220:98:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 1583,
            "src": "1187:134:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 78,
            "linearizedBaseContracts": [
              78
            ],
            "name": "IERC20",
            "nameLocation": "1335:6:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "18160ddd",
                "id": 16,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "1358:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 12,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1369:2:0"
                },
                "returnParameters": {
                  "id": 15,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 14,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 16,
                      "src": "1395:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1395:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1394:9:0"
                },
                "scope": 78,
                "src": "1349:55:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "70a08231",
                "id": 23,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "1419:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 19,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "1437:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 23,
                      "src": "1429:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1429:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1428:17:0"
                },
                "returnParameters": {
                  "id": 22,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 23,
                      "src": "1469:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1469:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1468:9:0"
                },
                "scope": 78,
                "src": "1410:68:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "a9059cbb",
                "id": 32,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "1493:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 28,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 25,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1510:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "1502:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1502:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 27,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1529:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "1521:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1521:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1501:35:0"
                },
                "returnParameters": {
                  "id": 31,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 30,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "1555:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1555:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1554:6:0"
                },
                "scope": 78,
                "src": "1484:77:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "dd62ed3e",
                "id": 41,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "1576:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 37,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1594:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 41,
                      "src": "1586:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1586:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1609:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 41,
                      "src": "1601:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1601:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1585:32:0"
                },
                "returnParameters": {
                  "id": 40,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 41,
                      "src": "1641:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1641:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1640:9:0"
                },
                "scope": 78,
                "src": "1567:83:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "095ea7b3",
                "id": 50,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "1665:7:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 46,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1681:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 50,
                      "src": "1673:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1673:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1698:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 50,
                      "src": "1690:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1690:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1672:33:0"
                },
                "returnParameters": {
                  "id": 49,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 48,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 50,
                      "src": "1724:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 47,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1724:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1723:6:0"
                },
                "scope": 78,
                "src": "1656:74:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "23b872dd",
                "id": 61,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "1745:12:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 57,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1766:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "1758:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1758:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1782:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "1774:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1774:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1801:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "1793:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1793:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1757:51:0"
                },
                "returnParameters": {
                  "id": 60,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "1827:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1827:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1826:6:0"
                },
                "scope": 78,
                "src": "1736:97:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "anonymous": false,
                "id": 69,
                "name": "Transfer",
                "nameLocation": "1845:8:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 68,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 63,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "1870:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1854:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1854:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1892:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1876:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1876:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1904:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1896:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1896:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1853:57:0"
                },
                "src": "1839:72:0"
              },
              {
                "anonymous": false,
                "id": 77,
                "name": "Approval",
                "nameLocation": "1923:8:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 76,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 71,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1948:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1932:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1932:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1971:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1955:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1955:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1988:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1980:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1980:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1931:63:0"
                },
                "src": "1917:78:0"
              }
            ],
            "scope": 1583,
            "src": "1325:673:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "fullyImplemented": true,
            "id": 224,
            "linearizedBaseContracts": [
              224
            ],
            "name": "SafeMath",
            "nameLocation": "2010:8:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 102,
                  "nodeType": "Block",
                  "src": "2093:112:0",
                  "statements": [
                    {
                      "assignments": [
                        88
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 88,
                          "mutability": "mutable",
                          "name": "c",
                          "nameLocation": "2112:1:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 102,
                          "src": "2104:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 87,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2104:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 92,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "2116:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 90,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "2120:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2116:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2104:17:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 94,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "2140:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 95,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "2145:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2140:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2148:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                              "typeString": "literal_string \"SafeMath: addition overflow\""
                            },
                            "value": "SafeMath: addition overflow"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                              "typeString": "literal_string \"SafeMath: addition overflow\""
                            }
                          ],
                          "id": 93,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2132:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2132:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 99,
                      "nodeType": "ExpressionStatement",
                      "src": "2132:46:0"
                    },
                    {
                      "expression": {
                        "id": 100,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "2196:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 86,
                      "id": 101,
                      "nodeType": "Return",
                      "src": "2189:8:0"
                    }
                  ]
                },
                "id": 103,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "add",
                "nameLocation": "2035:3:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 83,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2047:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "2039:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2039:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2058:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "2050:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2050:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2038:22:0"
                },
                "returnParameters": {
                  "id": 86,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 85,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "2084:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 84,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2084:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2083:9:0"
                },
                "scope": 224,
                "src": "2026:179:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 118,
                  "nodeType": "Block",
                  "src": "2280:69:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 113,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "2302:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 114,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2305:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2308:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                              "typeString": "literal_string \"SafeMath: subtraction overflow\""
                            },
                            "value": "SafeMath: subtraction overflow"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                              "typeString": "literal_string \"SafeMath: subtraction overflow\""
                            }
                          ],
                          "id": 112,
                          "name": "sub",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            119,
                            146
                          ],
                          "referencedDeclaration": 146,
                          "src": "2298:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:43:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 111,
                      "id": 117,
                      "nodeType": "Return",
                      "src": "2291:50:0"
                    }
                  ]
                },
                "id": 119,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sub",
                "nameLocation": "2222:3:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 108,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2234:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "2226:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2226:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2245:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "2237:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2237:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2225:22:0"
                },
                "returnParameters": {
                  "id": 111,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "2271:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 109,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2271:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2270:9:0"
                },
                "scope": 224,
                "src": "2213:136:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 145,
                  "nodeType": "Block",
                  "src": "2452:95:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 131,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "2471:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 132,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2476:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2471:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 134,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "2479:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 130,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2463:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2463:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 136,
                      "nodeType": "ExpressionStatement",
                      "src": "2463:29:0"
                    },
                    {
                      "assignments": [
                        138
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 138,
                          "mutability": "mutable",
                          "name": "c",
                          "nameLocation": "2511:1:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 145,
                          "src": "2503:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2503:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 142,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 139,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2515:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 140,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "2519:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2503:17:0"
                    },
                    {
                      "expression": {
                        "id": 143,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2538:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 129,
                      "id": 144,
                      "nodeType": "Return",
                      "src": "2531:8:0"
                    }
                  ]
                },
                "id": 146,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sub",
                "nameLocation": "2366:3:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 126,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2378:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "2370:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2370:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2389:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "2381:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2381:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "2406:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "2392:26:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2392:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2369:50:0"
                },
                "returnParameters": {
                  "id": 129,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "2443:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2443:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2442:9:0"
                },
                "scope": 224,
                "src": "2357:190:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 179,
                  "nodeType": "Block",
                  "src": "2622:179:0",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 155,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2637:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2642:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2637:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 161,
                      "nodeType": "IfStatement",
                      "src": "2633:47:0",
                      "trueBody": {
                        "id": 160,
                        "nodeType": "Block",
                        "src": "2645:35:0",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "30",
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2667:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 154,
                            "id": 159,
                            "nodeType": "Return",
                            "src": "2660:8:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        163
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 163,
                          "mutability": "mutable",
                          "name": "c",
                          "nameLocation": "2698:1:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 179,
                          "src": "2690:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 162,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2690:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 167,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 164,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2702:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 165,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2706:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2702:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2690:17:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 169,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "2726:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 170,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "2730:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2726:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 172,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "2735:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2726:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2738:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                              "typeString": "literal_string \"SafeMath: multiplication overflow\""
                            },
                            "value": "SafeMath: multiplication overflow"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                              "typeString": "literal_string \"SafeMath: multiplication overflow\""
                            }
                          ],
                          "id": 168,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2718:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2718:56:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 176,
                      "nodeType": "ExpressionStatement",
                      "src": "2718:56:0"
                    },
                    {
                      "expression": {
                        "id": 177,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2792:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 154,
                      "id": 178,
                      "nodeType": "Return",
                      "src": "2785:8:0"
                    }
                  ]
                },
                "id": 180,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "mul",
                "nameLocation": "2564:3:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 151,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2576:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2568:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2587:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2579:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2579:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2567:22:0"
                },
                "returnParameters": {
                  "id": 154,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 153,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2613:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2613:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2612:9:0"
                },
                "scope": 224,
                "src": "2555:246:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 195,
                  "nodeType": "Block",
                  "src": "2876:65:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 190,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2898:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 191,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "2901:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2904:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                              "typeString": "literal_string \"SafeMath: division by zero\""
                            },
                            "value": "SafeMath: division by zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                              "typeString": "literal_string \"SafeMath: division by zero\""
                            }
                          ],
                          "id": 189,
                          "name": "div",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            196,
                            223
                          ],
                          "referencedDeclaration": 223,
                          "src": "2894:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2894:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 188,
                      "id": 194,
                      "nodeType": "Return",
                      "src": "2887:46:0"
                    }
                  ]
                },
                "id": 196,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "div",
                "nameLocation": "2818:3:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 185,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2830:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2822:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2822:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 184,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2841:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2833:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2833:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2821:22:0"
                },
                "returnParameters": {
                  "id": 188,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2867:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2867:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2866:9:0"
                },
                "scope": 224,
                "src": "2809:132:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 222,
                  "nodeType": "Block",
                  "src": "3044:94:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 208,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "3063:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3067:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3063:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 211,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "3070:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 207,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3055:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3055:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 213,
                      "nodeType": "ExpressionStatement",
                      "src": "3055:28:0"
                    },
                    {
                      "assignments": [
                        215
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 215,
                          "mutability": "mutable",
                          "name": "c",
                          "nameLocation": "3102:1:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 222,
                          "src": "3094:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 214,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3094:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 219,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 216,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "3106:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 217,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3110:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3106:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3094:17:0"
                    },
                    {
                      "expression": {
                        "id": 220,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3129:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 206,
                      "id": 221,
                      "nodeType": "Return",
                      "src": "3122:8:0"
                    }
                  ]
                },
                "id": 223,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "div",
                "nameLocation": "2958:3:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 203,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2970:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "2962:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2962:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2981:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "2973:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2973:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "2998:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "2984:26:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2984:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2961:50:0"
                },
                "returnParameters": {
                  "id": 206,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "3035:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3035:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3034:9:0"
                },
                "scope": 224,
                "src": "2949:189:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1583,
            "src": "2002:1141:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 225,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "3167:7:0"
                },
                "id": 226,
                "nodeType": "InheritanceSpecifier",
                "src": "3167:7:0"
              }
            ],
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 299,
            "linearizedBaseContracts": [
              299,
              11
            ],
            "name": "Ownable",
            "nameLocation": "3156:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 228,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "3198:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 299,
                "src": "3182:22:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 227,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3182:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 230,
                "mutability": "mutable",
                "name": "_previousOwner",
                "nameLocation": "3227:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 299,
                "src": "3211:30:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 229,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3211:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "id": 236,
                "name": "OwnershipTransferred",
                "nameLocation": "3254:20:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 235,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 232,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "3291:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "3275:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 231,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3275:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 234,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "3322:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "3306:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 233,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3306:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3274:57:0"
                },
                "src": "3248:84:0"
              },
              {
                "body": {
                  "id": 256,
                  "nodeType": "Block",
                  "src": "3355:139:0",
                  "statements": [
                    {
                      "assignments": [
                        240
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 240,
                          "mutability": "mutable",
                          "name": "msgSender",
                          "nameLocation": "3374:9:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 256,
                          "src": "3366:17:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3366:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 243,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 241,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3386:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3386:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3366:32:0"
                    },
                    {
                      "expression": {
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 244,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "3409:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 245,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "3418:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3409:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 247,
                      "nodeType": "ExpressionStatement",
                      "src": "3409:18:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3472:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3464:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 249,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3464:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3464:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 253,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "3476:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 248,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3443:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3443:43:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 255,
                      "nodeType": "EmitStatement",
                      "src": "3438:48:0"
                    }
                  ]
                },
                "id": 257,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 237,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3352:2:0"
                },
                "returnParameters": {
                  "id": 238,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3355:0:0"
                },
                "scope": 299,
                "src": "3340:154:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 264,
                  "nodeType": "Block",
                  "src": "3549:32:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 262,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3567:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 261,
                      "id": 263,
                      "nodeType": "Return",
                      "src": "3560:13:0"
                    }
                  ]
                },
                "functionSelector": "8da5cb5b",
                "id": 265,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "3511:5:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 258,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3516:2:0"
                },
                "returnParameters": {
                  "id": 261,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "3540:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3540:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3539:9:0"
                },
                "scope": 299,
                "src": "3502:79:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 276,
                  "nodeType": "Block",
                  "src": "3610:98:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 268,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 228,
                              "src": "3629:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 269,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "3639:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3639:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3629:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3653:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 267,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3621:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3621:67:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 274,
                      "nodeType": "ExpressionStatement",
                      "src": "3621:67:0"
                    },
                    {
                      "id": 275,
                      "nodeType": "PlaceholderStatement",
                      "src": "3699:1:0"
                    }
                  ]
                },
                "id": 277,
                "name": "onlyOwner",
                "nameLocation": "3598:9:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 266,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3607:2:0"
                },
                "src": "3589:119:0",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 297,
                  "nodeType": "Block",
                  "src": "3770:94:0",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 283,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "3807:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3823:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3815:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 284,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3815:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3815:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 282,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3786:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3786:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 289,
                      "nodeType": "EmitStatement",
                      "src": "3781:45:0"
                    },
                    {
                      "expression": {
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 290,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "3837:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3854:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3846:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 291,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3846:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3846:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3837:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 296,
                      "nodeType": "ExpressionStatement",
                      "src": "3837:19:0"
                    }
                  ]
                },
                "functionSelector": "715018a6",
                "id": 298,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 280,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 279,
                      "name": "onlyOwner",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 277,
                      "src": "3760:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3760:9:0"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "3725:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 278,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3742:2:0"
                },
                "returnParameters": {
                  "id": 281,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3770:0:0"
                },
                "scope": 299,
                "src": "3716:148:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              }
            ],
            "scope": 1583,
            "src": "3147:722:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 309,
            "linearizedBaseContracts": [
              309
            ],
            "name": "IUniswapV2Factory",
            "nameLocation": "3885:17:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "c9c65396",
                "id": 308,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "createPair",
                "nameLocation": "3919:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 304,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nameLocation": "3938:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "3930:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3930:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nameLocation": "3954:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "3946:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3946:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3929:32:0"
                },
                "returnParameters": {
                  "id": 307,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "3988:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "3980:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3980:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3979:14:0"
                },
                "scope": 309,
                "src": "3910:84:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1583,
            "src": "3875:122:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 355,
            "linearizedBaseContracts": [
              355
            ],
            "name": "IUniswapV2Router02",
            "nameLocation": "4011:18:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "791ac947",
                "id": 323,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                "nameLocation": "4046:50:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 321,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "4112:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4107:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4107:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "nameLocation": "4136:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4131:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4131:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "4178:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4159:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4159:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 315,
                        "nodeType": "ArrayTypeName",
                        "src": "4159:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4201:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4193:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4193:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "4219:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4214:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4214:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4096:138:0"
                },
                "returnParameters": {
                  "id": 322,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4243:0:0"
                },
                "scope": 355,
                "src": "4037:207:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "c45a0155",
                "id": 328,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "factory",
                "nameLocation": "4259:7:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 324,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4266:2:0"
                },
                "returnParameters": {
                  "id": 327,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 326,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 328,
                      "src": "4292:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 325,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4292:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4291:9:0"
                },
                "scope": 355,
                "src": "4250:51:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "ad5c4648",
                "id": 333,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "WETH",
                "nameLocation": "4316:4:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 329,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4320:2:0"
                },
                "returnParameters": {
                  "id": 332,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 333,
                      "src": "4346:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4346:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4345:9:0"
                },
                "scope": 355,
                "src": "4307:48:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "f305d719",
                "id": 354,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "addLiquidityETH",
                "nameLocation": "4370:15:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 346,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4404:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4396:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4396:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "amountTokenDesired",
                      "nameLocation": "4425:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4420:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4420:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "amountTokenMin",
                      "nameLocation": "4459:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4454:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4454:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "amountETHMin",
                      "nameLocation": "4489:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4484:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4484:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4520:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4512:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4512:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "4538:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4533:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4533:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4385:168:0"
                },
                "returnParameters": {
                  "id": 353,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "amountToken",
                      "nameLocation": "4585:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4580:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4580:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "amountETH",
                      "nameLocation": "4603:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4598:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4598:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nameLocation": "4619:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4614:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4614:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4579:50:0"
                },
                "scope": 355,
                "src": "4361:269:0",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1583,
            "src": "4001:632:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 356,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "4658:7:0"
                },
                "id": 357,
                "nodeType": "InheritanceSpecifier",
                "src": "4658:7:0"
              },
              {
                "baseName": {
                  "id": 358,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "4667:6:0"
                },
                "id": 359,
                "nodeType": "InheritanceSpecifier",
                "src": "4667:6:0"
              },
              {
                "baseName": {
                  "id": 360,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 299,
                  "src": "4675:7:0"
                },
                "id": 361,
                "nodeType": "InheritanceSpecifier",
                "src": "4675:7:0"
              }
            ],
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 1582,
            "linearizedBaseContracts": [
              1582,
              299,
              78,
              11
            ],
            "name": "RhinuERC",
            "nameLocation": "4646:8:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 364,
                "libraryName": {
                  "id": 362,
                  "name": "SafeMath",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 224,
                  "src": "4696:8:0"
                },
                "nodeType": "UsingForDirective",
                "src": "4690:27:0",
                "typeName": {
                  "id": 363,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4709:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              {
                "constant": false,
                "id": 368,
                "mutability": "mutable",
                "name": "_rOwned",
                "nameLocation": "4760:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "4723:44:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 367,
                  "keyType": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4732:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4723:28:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 372,
                "mutability": "mutable",
                "name": "_tOwned",
                "nameLocation": "4811:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "4774:44:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 371,
                  "keyType": {
                    "id": 369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4774:28:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4794:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 378,
                "mutability": "mutable",
                "name": "_allowances",
                "nameLocation": "4883:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "4825:69:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 377,
                  "keyType": {
                    "id": 373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4825:49:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 376,
                    "keyType": {
                      "id": 374,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4854:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4845:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 375,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4865:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 382,
                "mutability": "mutable",
                "name": "_isExcludedFromFee",
                "nameLocation": "4935:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "4901:52:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 381,
                  "keyType": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4910:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4901:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4921:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 386,
                "mutability": "mutable",
                "name": "bots",
                "nameLocation": "4994:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "4960:38:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 385,
                  "keyType": {
                    "id": 383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4960:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 384,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 390,
                "mutability": "mutable",
                "name": "cooldown",
                "nameLocation": "5039:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5005:42:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 389,
                  "keyType": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5014:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "5005:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 388,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 397,
                "mutability": "constant",
                "name": "MAX",
                "nameLocation": "5079:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5054:42:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 391,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5054:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "id": 396,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "UnaryOperation",
                  "operator": "~",
                  "prefix": true,
                  "src": "5085:11:0",
                  "subExpression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5094:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 392,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5086:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 404,
                "mutability": "constant",
                "name": "_tTotal",
                "nameLocation": "5128:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5103:62:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 398,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5103:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000000000"
                  },
                  "id": 403,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "31303030303030303030303030303030303030",
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5138:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1000000000000000000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5160:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "39",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5164:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "src": "5160:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    }
                  },
                  "src": "5138:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000000000"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 413,
                "mutability": "mutable",
                "name": "_rTotal",
                "nameLocation": "5188:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5172:49:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 405,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5172:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "components": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 406,
                        "name": "MAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "5199:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 407,
                              "name": "MAX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "5206:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "id": 408,
                              "name": "_tTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "5212:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5206:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 410,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5205:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5199:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  ],
                  "id": 412,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "5198:23:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 415,
                "mutability": "mutable",
                "name": "_tFeeTotal",
                "nameLocation": "5244:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5228:26:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 414,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5228:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 417,
                "mutability": "mutable",
                "name": "_feeAddr1",
                "nameLocation": "5283:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5267:25:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 416,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5267:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 419,
                "mutability": "mutable",
                "name": "_feeAddr2",
                "nameLocation": "5315:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5299:25:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 418,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5299:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 421,
                "mutability": "mutable",
                "name": "_feeAddrWallet1",
                "nameLocation": "5355:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5331:39:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 420,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5331:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 423,
                "mutability": "mutable",
                "name": "_feeAddrWallet2",
                "nameLocation": "5401:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5377:39:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 422,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5377:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 426,
                "mutability": "constant",
                "name": "_name",
                "nameLocation": "5453:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5429:39:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_memory_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 424,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "5429:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": {
                  "hexValue": "5248494e55",
                  "id": 425,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5461:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a149e3bc2bad566456945561c53dcf6cb2c15edb612e90db68bab09f6134864c",
                    "typeString": "literal_string \"RHINU\""
                  },
                  "value": "RHINU"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 429,
                "mutability": "constant",
                "name": "_symbol",
                "nameLocation": "5499:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5475:41:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_memory_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 427,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "5475:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": {
                  "hexValue": "5248494e55",
                  "id": 428,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5509:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a149e3bc2bad566456945561c53dcf6cb2c15edb612e90db68bab09f6134864c",
                    "typeString": "literal_string \"RHINU\""
                  },
                  "value": "RHINU"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 432,
                "mutability": "constant",
                "name": "_decimals",
                "nameLocation": "5546:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5523:36:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 430,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "5523:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "hexValue": "39",
                  "id": 431,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5558:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 435,
                "mutability": "mutable",
                "name": "uniswapV2Router",
                "nameLocation": "5599:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5572:42:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                  "typeString": "contract IUniswapV2Router02"
                },
                "typeName": {
                  "id": 434,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 433,
                    "name": "IUniswapV2Router02",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 355,
                    "src": "5572:18:0"
                  },
                  "referencedDeclaration": 355,
                  "src": "5572:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                    "typeString": "contract IUniswapV2Router02"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 437,
                "mutability": "mutable",
                "name": "uniswapV2Pair",
                "nameLocation": "5637:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5621:29:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 436,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5621:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 439,
                "mutability": "mutable",
                "name": "tradingOpen",
                "nameLocation": "5670:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5657:24:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 438,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5657:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 442,
                "mutability": "mutable",
                "name": "inSwap",
                "nameLocation": "5701:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5688:27:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 440,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5688:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": {
                  "hexValue": "66616c7365",
                  "id": 441,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "bool",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5710:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "value": "false"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 445,
                "mutability": "mutable",
                "name": "swapEnabled",
                "nameLocation": "5735:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5722:32:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 443,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5722:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": {
                  "hexValue": "66616c7365",
                  "id": 444,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "bool",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5749:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "value": "false"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 448,
                "mutability": "mutable",
                "name": "cooldownEnabled",
                "nameLocation": "5774:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5761:36:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 446,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5761:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": {
                  "hexValue": "66616c7365",
                  "id": 447,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "bool",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5792:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "value": "false"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 451,
                "mutability": "mutable",
                "name": "_maxTxAmount",
                "nameLocation": "5820:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 1582,
                "src": "5804:38:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 449,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5804:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "id": 450,
                  "name": "_tTotal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 404,
                  "src": "5835:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "id": 455,
                "name": "MaxTxAmountUpdated",
                "nameLocation": "5855:18:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 454,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 453,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_maxTxAmount",
                      "nameLocation": "5879:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "5874:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5874:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5873:19:0"
                },
                "src": "5849:44:0"
              },
              {
                "body": {
                  "id": 466,
                  "nodeType": "Block",
                  "src": "5920:69:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 457,
                          "name": "inSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5931:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5940:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5931:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 460,
                      "nodeType": "ExpressionStatement",
                      "src": "5931:13:0"
                    },
                    {
                      "id": 461,
                      "nodeType": "PlaceholderStatement",
                      "src": "5955:1:0"
                    },
                    {
                      "expression": {
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 462,
                          "name": "inSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5967:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5976:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5967:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 465,
                      "nodeType": "ExpressionStatement",
                      "src": "5967:14:0"
                    }
                  ]
                },
                "id": 467,
                "name": "lockTheSwap",
                "nameLocation": "5908:11:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 456,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5920:0:0"
                },
                "src": "5899:90:0",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 529,
                  "nodeType": "Block",
                  "src": "6010:512:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 470,
                          "name": "_feeAddrWallet1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "6021:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "307830454666666534383238446444343031363642424231336533664265303839463632324544304232",
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6047:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x0EFffe4828DdD40166BBB13e3fBe089F622ED0B2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6039:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 471,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6039:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6039:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6021:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 476,
                      "nodeType": "ExpressionStatement",
                      "src": "6021:69:0"
                    },
                    {
                      "expression": {
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 477,
                          "name": "_feeAddrWallet2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "6101:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "307864364638616146374638643445656445326337623243623338373039633133373535614532376430",
                              "id": 480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6127:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xd6F8aaF7F8d4EedE2c7b2Cb38709c13755aE27d0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6119:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 478,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6119:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6119:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6101:69:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 483,
                      "nodeType": "ExpressionStatement",
                      "src": "6101:69:0"
                    },
                    {
                      "expression": {
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 484,
                            "name": "_rOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "6181:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 485,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "6189:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6189:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6181:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 488,
                          "name": "_rTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "6205:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6181:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 490,
                      "nodeType": "ExpressionStatement",
                      "src": "6181:31:0"
                    },
                    {
                      "expression": {
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 491,
                            "name": "_isExcludedFromFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "6223:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 494,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 492,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "6242:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6242:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6223:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6253:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6223:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 497,
                      "nodeType": "ExpressionStatement",
                      "src": "6223:34:0"
                    },
                    {
                      "expression": {
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 498,
                            "name": "_isExcludedFromFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "6268:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 503,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 501,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6295:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6287:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 499,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6287:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6287:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6268:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6304:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6268:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 506,
                      "nodeType": "ExpressionStatement",
                      "src": "6268:40:0"
                    },
                    {
                      "expression": {
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 507,
                            "name": "_isExcludedFromFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "6319:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 509,
                          "indexExpression": {
                            "id": 508,
                            "name": "_feeAddrWallet1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "6338:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6319:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6357:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6319:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 512,
                      "nodeType": "ExpressionStatement",
                      "src": "6319:42:0"
                    },
                    {
                      "expression": {
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 513,
                            "name": "_isExcludedFromFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "6372:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 515,
                          "indexExpression": {
                            "id": 514,
                            "name": "_feeAddrWallet2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "6391:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6372:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6410:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6372:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 518,
                      "nodeType": "ExpressionStatement",
                      "src": "6372:42:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307831463133353531313937354230443633636539653541443146313233393033413666433533313964",
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6447:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x1F135511975B0D63ce9e5AD1F123903A6fC5319d"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6439:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 520,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6439:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6439:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 524,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "6492:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6492:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 526,
                            "name": "_tTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "6506:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 519,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "6430:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6430:84:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 528,
                      "nodeType": "EmitStatement",
                      "src": "6425:89:0"
                    }
                  ]
                },
                "id": 530,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 468,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6007:2:0"
                },
                "returnParameters": {
                  "id": 469,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6010:0:0"
                },
                "scope": 1582,
                "src": "5995:527:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 537,
                  "nodeType": "Block",
                  "src": "6582:31:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 535,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "6600:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "functionReturnParameters": 534,
                      "id": 536,
                      "nodeType": "Return",
                      "src": "6593:12:0"
                    }
                  ]
                },
                "functionSelector": "06fdde03",
                "id": 538,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "6539:4:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 531,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6543:2:0"
                },
                "returnParameters": {
                  "id": 534,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 538,
                      "src": "6567:13:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6567:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6566:15:0"
                },
                "scope": 1582,
                "src": "6530:83:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 545,
                  "nodeType": "Block",
                  "src": "6675:33:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 543,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "6693:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "functionReturnParameters": 542,
                      "id": 544,
                      "nodeType": "Return",
                      "src": "6686:14:0"
                    }
                  ]
                },
                "functionSelector": "95d89b41",
                "id": 546,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "6630:6:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 539,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6636:2:0"
                },
                "returnParameters": {
                  "id": 542,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 546,
                      "src": "6660:13:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6660:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6659:15:0"
                },
                "scope": 1582,
                "src": "6621:87:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 553,
                  "nodeType": "Block",
                  "src": "6764:35:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 551,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "6782:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 550,
                      "id": 552,
                      "nodeType": "Return",
                      "src": "6775:16:0"
                    }
                  ]
                },
                "functionSelector": "313ce567",
                "id": 554,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nameLocation": "6725:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 547,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6733:2:0"
                },
                "returnParameters": {
                  "id": 550,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 554,
                      "src": "6757:5:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6757:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6756:7:0"
                },
                "scope": 1582,
                "src": "6716:83:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  16
                ],
                "body": {
                  "id": 562,
                  "nodeType": "Block",
                  "src": "6869:33:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 560,
                        "name": "_tTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "6887:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 559,
                      "id": 561,
                      "nodeType": "Return",
                      "src": "6880:14:0"
                    }
                  ]
                },
                "functionSelector": "18160ddd",
                "id": 563,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "6816:11:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 556,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "6842:8:0"
                },
                "parameters": {
                  "id": 555,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6827:2:0"
                },
                "returnParameters": {
                  "id": 559,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 558,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "6860:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 557,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6860:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6859:9:0"
                },
                "scope": 1582,
                "src": "6807:95:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  23
                ],
                "body": {
                  "id": 577,
                  "nodeType": "Block",
                  "src": "6985:63:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 572,
                              "name": "_rOwned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "7023:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 574,
                            "indexExpression": {
                              "id": 573,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "7031:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7023:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 571,
                          "name": "tokenFromReflection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 709,
                          "src": "7003:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7003:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 570,
                      "id": 576,
                      "nodeType": "Return",
                      "src": "6996:44:0"
                    }
                  ]
                },
                "functionSelector": "70a08231",
                "id": 578,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "6919:9:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 567,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "6958:8:0"
                },
                "parameters": {
                  "id": 566,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 565,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "6937:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "6929:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 564,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6929:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6928:17:0"
                },
                "returnParameters": {
                  "id": 570,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 569,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "6976:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 568,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6976:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6975:9:0"
                },
                "scope": 1582,
                "src": "6910:138:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  32
                ],
                "body": {
                  "id": 597,
                  "nodeType": "Block",
                  "src": "7140:83:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 589,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "7161:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7161:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 591,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "7175:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 592,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "7186:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 588,
                          "name": "_transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "7151:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7151:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 594,
                      "nodeType": "ExpressionStatement",
                      "src": "7151:42:0"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7211:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 587,
                      "id": 596,
                      "nodeType": "Return",
                      "src": "7204:11:0"
                    }
                  ]
                },
                "functionSelector": "a9059cbb",
                "id": 598,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "7065:8:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 584,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7116:8:0"
                },
                "parameters": {
                  "id": 583,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 580,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "7082:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "7074:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 579,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7074:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7101:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "7093:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7093:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7073:35:0"
                },
                "returnParameters": {
                  "id": 587,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 586,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "7134:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7134:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7133:6:0"
                },
                "scope": 1582,
                "src": "7056:167:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  41
                ],
                "body": {
                  "id": 614,
                  "nodeType": "Block",
                  "src": "7321:53:0",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 608,
                            "name": "_allowances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "7339:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 610,
                          "indexExpression": {
                            "id": 609,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "7351:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7339:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 612,
                        "indexExpression": {
                          "id": 611,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7339:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 607,
                      "id": 613,
                      "nodeType": "Return",
                      "src": "7332:34:0"
                    }
                  ]
                },
                "functionSelector": "dd62ed3e",
                "id": 615,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "7240:9:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 604,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7294:8:0"
                },
                "parameters": {
                  "id": 603,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7258:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 615,
                      "src": "7250:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7250:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 602,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "7273:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 615,
                      "src": "7265:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 601,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7265:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7249:32:0"
                },
                "returnParameters": {
                  "id": 607,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 606,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 615,
                      "src": "7312:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7311:9:0"
                },
                "scope": 1582,
                "src": "7231:143:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  50
                ],
                "body": {
                  "id": 634,
                  "nodeType": "Block",
                  "src": "7463:80:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 626,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "7483:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7483:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 628,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "7497:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 629,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "7506:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 625,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "7474:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7474:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 631,
                      "nodeType": "ExpressionStatement",
                      "src": "7474:39:0"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7531:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 624,
                      "id": 633,
                      "nodeType": "Return",
                      "src": "7524:11:0"
                    }
                  ]
                },
                "functionSelector": "095ea7b3",
                "id": 635,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "7391:7:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 621,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7439:8:0"
                },
                "parameters": {
                  "id": 620,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "7407:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 635,
                      "src": "7399:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7399:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7424:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 635,
                      "src": "7416:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7416:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7398:33:0"
                },
                "returnParameters": {
                  "id": 624,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 623,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 635,
                      "src": "7457:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 622,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7457:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7456:6:0"
                },
                "scope": 1582,
                "src": "7382:161:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  61
                ],
                "body": {
                  "id": 671,
                  "nodeType": "Block",
                  "src": "7655:209:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 648,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "7676:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 649,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "7684:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 650,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "7695:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 647,
                          "name": "_transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "7666:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7666:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 652,
                      "nodeType": "ExpressionStatement",
                      "src": "7666:36:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 654,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "7722:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 655,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "7730:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7730:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 664,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 641,
                                "src": "7782:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7790:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                                  "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                                },
                                "value": "ERC20: transfer amount exceeds allowance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                                  "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 657,
                                    "name": "_allowances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "7744:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 659,
                                  "indexExpression": {
                                    "id": 658,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 637,
                                    "src": "7756:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7744:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 662,
                                "indexExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 660,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10,
                                    "src": "7764:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 661,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7764:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7744:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 146,
                              "src": "7744:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7744:89:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 653,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "7713:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7713:121:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 668,
                      "nodeType": "ExpressionStatement",
                      "src": "7713:121:0"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7852:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 646,
                      "id": 670,
                      "nodeType": "Return",
                      "src": "7845:11:0"
                    }
                  ]
                },
                "functionSelector": "23b872dd",
                "id": 672,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "7560:12:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 643,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7631:8:0"
                },
                "parameters": {
                  "id": 642,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 637,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "7581:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 672,
                      "src": "7573:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 636,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7573:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "7597:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 672,
                      "src": "7589:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7589:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 641,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7616:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 672,
                      "src": "7608:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 640,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7608:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7572:51:0"
                },
                "returnParameters": {
                  "id": 646,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 645,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 672,
                      "src": "7649:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7649:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7648:6:0"
                },
                "scope": 1582,
                "src": "7551:313:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 683,
                  "nodeType": "Block",
                  "src": "7933:42:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 679,
                          "name": "cooldownEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "7944:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 680,
                          "name": "onoff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 674,
                          "src": "7962:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7944:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 682,
                      "nodeType": "ExpressionStatement",
                      "src": "7944:23:0"
                    }
                  ]
                },
                "functionSelector": "5932ead1",
                "id": 684,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [],
                    "id": 677,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 676,
                      "name": "onlyOwner",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 277,
                      "src": "7921:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7921:11:0"
                  }
                ],
                "name": "setCooldownEnabled",
                "nameLocation": "7881:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 675,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 674,
                      "mutability": "mutable",
                      "name": "onoff",
                      "nameLocation": "7905:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 684,
                      "src": "7900:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7900:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7899:12:0"
                },
                "returnParameters": {
                  "id": 678,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7933:0:0"
                },
                "scope": 1582,
                "src": "7872:103:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 708,
                  "nodeType": "Block",
                  "src": "8059:178:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 692,
                              "name": "rAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "8078:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 693,
                              "name": "_rTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "8089:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8078:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8098:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
                              "typeString": "literal_string \"Amount must be less than total reflections\""
                            },
                            "value": "Amount must be less than total reflections"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
                              "typeString": "literal_string \"Amount must be less than total reflections\""
                            }
                          ],
                          "id": 691,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8070:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8070:73:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 697,
                      "nodeType": "ExpressionStatement",
                      "src": "8070:73:0"
                    },
                    {
                      "assignments": [
                        699
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 699,
                          "mutability": "mutable",
                          "name": "currentRate",
                          "nameLocation": "8162:11:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 708,
                          "src": "8154:19:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 698,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8154:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 702,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 700,
                          "name": "_getRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1550,
                          "src": "8177:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8177:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8154:33:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 705,
                            "name": "currentRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "8217:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 703,
                            "name": "rAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "8205:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "8205:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8205:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 690,
                      "id": 707,
                      "nodeType": "Return",
                      "src": "8198:31:0"
                    }
                  ]
                },
                "id": 709,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "tokenFromReflection",
                "nameLocation": "7992:19:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 687,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 686,
                      "mutability": "mutable",
                      "name": "rAmount",
                      "nameLocation": "8020:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "8012:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 685,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8012:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8011:17:0"
                },
                "returnParameters": {
                  "id": 690,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "8050:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8050:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8049:9:0"
                },
                "scope": 1582,
                "src": "7983:254:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 752,
                  "nodeType": "Block",
                  "src": "8319:261:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 719,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "8338:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8355:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8347:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 720,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8347:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8347:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8338:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8359:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                              "typeString": "literal_string \"ERC20: approve from the zero address\""
                            },
                            "value": "ERC20: approve from the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                              "typeString": "literal_string \"ERC20: approve from the zero address\""
                            }
                          ],
                          "id": 718,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8330:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8330:68:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 727,
                      "nodeType": "ExpressionStatement",
                      "src": "8330:68:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 729,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "8417:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8436:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8428:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 730,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8428:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8428:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8417:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8440:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                              "typeString": "literal_string \"ERC20: approve to the zero address\""
                            },
                            "value": "ERC20: approve to the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                              "typeString": "literal_string \"ERC20: approve to the zero address\""
                            }
                          ],
                          "id": 728,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8409:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8409:68:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 737,
                      "nodeType": "ExpressionStatement",
                      "src": "8409:68:0"
                    },
                    {
                      "expression": {
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 738,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "8488:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 741,
                            "indexExpression": {
                              "id": 739,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "8500:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8488:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 742,
                          "indexExpression": {
                            "id": 740,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "8507:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8488:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 743,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "8518:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8488:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 745,
                      "nodeType": "ExpressionStatement",
                      "src": "8488:36:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "8549:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 748,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "8556:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 749,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "8565:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 746,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "8540:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8540:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 751,
                      "nodeType": "EmitStatement",
                      "src": "8535:37:0"
                    }
                  ]
                },
                "id": 753,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_approve",
                "nameLocation": "8254:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 716,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 711,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8271:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8263:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8263:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 713,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "8286:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8278:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 712,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8278:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "8303:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8295:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 714,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8295:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8262:48:0"
                },
                "returnParameters": {
                  "id": 717,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8319:0:0"
                },
                "scope": 1582,
                "src": "8245:335:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 939,
                  "nodeType": "Block",
                  "src": "8657:1394:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 763,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "8676:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8692:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8684:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 764,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8684:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8684:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8676:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8696:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                              "typeString": "literal_string \"ERC20: transfer from the zero address\""
                            },
                            "value": "ERC20: transfer from the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                              "typeString": "literal_string \"ERC20: transfer from the zero address\""
                            }
                          ],
                          "id": 762,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8668:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8668:68:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 771,
                      "nodeType": "ExpressionStatement",
                      "src": "8668:68:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 773,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "8755:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8769:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8761:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 774,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8761:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8761:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8755:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8773:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                              "typeString": "literal_string \"ERC20: transfer to the zero address\""
                            },
                            "value": "ERC20: transfer to the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                              "typeString": "literal_string \"ERC20: transfer to the zero address\""
                            }
                          ],
                          "id": 772,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8747:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8747:64:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 781,
                      "nodeType": "ExpressionStatement",
                      "src": "8747:64:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 783,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "8830:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8839:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8830:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8842:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
                              "typeString": "literal_string \"Transfer amount must be greater than zero\""
                            },
                            "value": "Transfer amount must be greater than zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
                              "typeString": "literal_string \"Transfer amount must be greater than zero\""
                            }
                          ],
                          "id": 782,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8822:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8822:64:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 788,
                      "nodeType": "ExpressionStatement",
                      "src": "8822:64:0"
                    },
                    {
                      "expression": {
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 789,
                          "name": "_feeAddr1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "8897:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "32",
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8909:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8897:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 792,
                      "nodeType": "ExpressionStatement",
                      "src": "8897:13:0"
                    },
                    {
                      "expression": {
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 793,
                          "name": "_feeAddr2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "8921:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "3130",
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8933:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "8921:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 796,
                      "nodeType": "ExpressionStatement",
                      "src": "8921:14:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 797,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "8950:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 798,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "8958:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8958:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8950:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 801,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "8969:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 802,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "8975:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8975:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8969:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8950:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 932,
                      "nodeType": "IfStatement",
                      "src": "8946:1053:0",
                      "trueBody": {
                        "id": 931,
                        "nodeType": "Block",
                        "src": "8984:1015:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 810,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "9007:11:0",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 807,
                                        "name": "bots",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "9008:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 809,
                                      "indexExpression": {
                                        "id": 808,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "9013:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9008:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "id": 814,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "9022:9:0",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 811,
                                        "name": "bots",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "9023:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 813,
                                      "indexExpression": {
                                        "id": 812,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 757,
                                        "src": "9028:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9023:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "9007:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 806,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "8999:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                  "typeString": "function (bool) pure"
                                }
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8999:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 817,
                            "nodeType": "ExpressionStatement",
                            "src": "8999:33:0"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 818,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 755,
                                      "src": "9051:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 819,
                                      "name": "uniswapV2Pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 437,
                                      "src": "9059:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "9051:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 821,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 757,
                                      "src": "9076:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 824,
                                          "name": "uniswapV2Router",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 435,
                                          "src": "9090:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                            "typeString": "contract IUniswapV2Router02"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                            "typeString": "contract IUniswapV2Router02"
                                          }
                                        ],
                                        "id": 823,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9082:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 822,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9082:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9082:24:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "9076:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "9051:55:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 831,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "9110:24:0",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 828,
                                      "name": "_isExcludedFromFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 382,
                                      "src": "9112:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 830,
                                    "indexExpression": {
                                      "id": 829,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 757,
                                      "src": "9131:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9112:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9051:83:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 833,
                                "name": "cooldownEnabled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "9138:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9051:102:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 861,
                            "nodeType": "IfStatement",
                            "src": "9047:325:0",
                            "trueBody": {
                              "id": 860,
                              "nodeType": "Block",
                              "src": "9155:217:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 838,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 836,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 759,
                                          "src": "9211:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<=",
                                        "rightExpression": {
                                          "id": 837,
                                          "name": "_maxTxAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 451,
                                          "src": "9221:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9211:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 835,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "9203:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                        "typeString": "function (bool) pure"
                                      }
                                    },
                                    "id": 839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9203:31:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 840,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9203:31:0"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 847,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 842,
                                            "name": "cooldown",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 390,
                                            "src": "9261:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 844,
                                          "indexExpression": {
                                            "id": 843,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 757,
                                            "src": "9270:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9261:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 845,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "9276:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 846,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "9276:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9261:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 841,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "9253:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                        "typeString": "function (bool) pure"
                                      }
                                    },
                                    "id": 848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9253:39:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 849,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9253:39:0"
                                },
                                {
                                  "expression": {
                                    "id": 858,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 850,
                                        "name": "cooldown",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 390,
                                        "src": "9311:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 852,
                                      "indexExpression": {
                                        "id": 851,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 757,
                                        "src": "9320:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "9311:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 857,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 853,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "9326:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "9326:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "hexValue": "3330",
                                            "id": 855,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9345:10:0",
                                            "subdenomination": "seconds",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_30_by_1",
                                              "typeString": "int_const 30"
                                            },
                                            "value": "30"
                                          }
                                        ],
                                        "id": 856,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9344:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        }
                                      },
                                      "src": "9326:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9311:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 859,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9311:45:0"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 862,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 757,
                                    "src": "9418:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 863,
                                    "name": "uniswapV2Pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 437,
                                    "src": "9424:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "9418:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 870,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 865,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "9441:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 868,
                                        "name": "uniswapV2Router",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 435,
                                        "src": "9457:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                          "typeString": "contract IUniswapV2Router02"
                                        }
                                      ],
                                      "id": 867,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9449:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 866,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9449:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9449:24:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "9441:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9418:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "9477:26:0",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 872,
                                    "name": "_isExcludedFromFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 382,
                                    "src": "9479:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 874,
                                  "indexExpression": {
                                    "id": 873,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "9498:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9479:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9418:85:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 886,
                            "nodeType": "IfStatement",
                            "src": "9414:172:0",
                            "trueBody": {
                              "id": 885,
                              "nodeType": "Block",
                              "src": "9505:81:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 877,
                                      "name": "_feeAddr1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 417,
                                      "src": "9524:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "32",
                                      "id": 878,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9536:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "9524:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 880,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9524:13:0"
                                },
                                {
                                  "expression": {
                                    "id": 883,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 881,
                                      "name": "_feeAddr2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 419,
                                      "src": "9556:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "3130",
                                      "id": 882,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9568:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "9556:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 884,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9556:14:0"
                                }
                              ]
                            }
                          },
                          {
                            "assignments": [
                              888
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 888,
                                "mutability": "mutable",
                                "name": "contractTokenBalance",
                                "nameLocation": "9608:20:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 931,
                                "src": "9600:28:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 887,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9600:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 895,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 892,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "9649:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                        "typeString": "contract RhinuERC"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                        "typeString": "contract RhinuERC"
                                      }
                                    ],
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9641:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 890,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9641:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9641:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 889,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "9631:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9631:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9600:55:0"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "9674:7:0",
                                  "subExpression": {
                                    "id": 896,
                                    "name": "inSwap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "9675:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 898,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 755,
                                    "src": "9685:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 899,
                                    "name": "uniswapV2Pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 437,
                                    "src": "9693:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "9685:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9674:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 902,
                                "name": "swapEnabled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "9710:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9674:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 930,
                            "nodeType": "IfStatement",
                            "src": "9670:318:0",
                            "trueBody": {
                              "id": 929,
                              "nodeType": "Block",
                              "src": "9723:265:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 905,
                                        "name": "contractTokenBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 888,
                                        "src": "9759:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 904,
                                      "name": "swapTokensForEth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1002,
                                      "src": "9742:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                        "typeString": "function (uint256)"
                                      }
                                    },
                                    "id": 906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9742:38:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 907,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9742:38:0"
                                },
                                {
                                  "assignments": [
                                    909
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 909,
                                      "mutability": "mutable",
                                      "name": "contractETHBalance",
                                      "nameLocation": "9807:18:0",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 929,
                                      "src": "9799:26:0",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 908,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9799:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 915,
                                  "initialValue": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 912,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "9836:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                            "typeString": "contract RhinuERC"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                            "typeString": "contract RhinuERC"
                                          }
                                        ],
                                        "id": 911,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9828:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 910,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9828:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 913,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9828:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 914,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "9828:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "9799:50:0"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 918,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 916,
                                      "name": "contractETHBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 909,
                                      "src": "9871:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 917,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9892:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "9871:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 928,
                                  "nodeType": "IfStatement",
                                  "src": "9868:105:0",
                                  "trueBody": {
                                    "id": 927,
                                    "nodeType": "Block",
                                    "src": "9895:78:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "id": 922,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "9939:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                                      "typeString": "contract RhinuERC"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                                      "typeString": "contract RhinuERC"
                                                    }
                                                  ],
                                                  "id": 921,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "9931:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 920,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "9931:7:0",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 923,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9931:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "id": 924,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "balance",
                                              "nodeType": "MemberAccess",
                                              "src": "9931:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 919,
                                            "name": "sendETHToFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1026,
                                            "src": "9918:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                              "typeString": "function (uint256)"
                                            }
                                          },
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9918:35:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 926,
                                        "nodeType": "ExpressionStatement",
                                        "src": "9918:35:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 934,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "10028:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 935,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "10033:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 936,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "10036:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 933,
                          "name": "_tokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "10013:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10013:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 938,
                      "nodeType": "ExpressionStatement",
                      "src": "10013:30:0"
                    }
                  ]
                },
                "id": 940,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transfer",
                "nameLocation": "8597:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 760,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "8615:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "8607:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8607:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "8629:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "8621:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 756,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8621:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "8641:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "8633:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8606:42:0"
                },
                "returnParameters": {
                  "id": 761,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8657:0:0"
                },
                "scope": 1582,
                "src": "8588:1463:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1001,
                  "nodeType": "Block",
                  "src": "10126:416:0",
                  "statements": [
                    {
                      "assignments": [
                        951
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 951,
                          "mutability": "mutable",
                          "name": "path",
                          "nameLocation": "10154:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1001,
                          "src": "10137:21:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 949,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10137:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 950,
                            "nodeType": "ArrayTypeName",
                            "src": "10137:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 957,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10175:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "10161:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 952,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10165:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 953,
                            "nodeType": "ArrayTypeName",
                            "src": "10165:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10161:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10137:40:0"
                    },
                    {
                      "expression": {
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 958,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "10188:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 960,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10193:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10188:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 963,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10206:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                "typeString": "contract RhinuERC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                "typeString": "contract RhinuERC"
                              }
                            ],
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10198:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 961,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10198:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10198:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10188:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 966,
                      "nodeType": "ExpressionStatement",
                      "src": "10188:23:0"
                    },
                    {
                      "expression": {
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 967,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "10222:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 969,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10227:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10222:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 970,
                              "name": "uniswapV2Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "10232:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 333,
                            "src": "10232:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                              "typeString": "function () pure external returns (address)"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10232:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10222:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 974,
                      "nodeType": "ExpressionStatement",
                      "src": "10222:32:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 978,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10282:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10274:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 976,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10274:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10274:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 982,
                                "name": "uniswapV2Router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "10297:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              ],
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 980,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10289:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 984,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "10315:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 975,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "10265:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10265:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 986,
                      "nodeType": "ExpressionStatement",
                      "src": "10265:62:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 990,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "10419:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10445:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 992,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "10461:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 995,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10488:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10480:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 993,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10480:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10480:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 997,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10508:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10508:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 987,
                            "name": "uniswapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "10338:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 323,
                          "src": "10338:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                          }
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10338:196:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1000,
                      "nodeType": "ExpressionStatement",
                      "src": "10338:196:0"
                    }
                  ]
                },
                "id": 1002,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 945,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 944,
                      "name": "lockTheSwap",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 467,
                      "src": "10114:11:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "10114:11:0"
                  }
                ],
                "name": "swapTokensForEth",
                "nameLocation": "10068:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 943,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "10093:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1002,
                      "src": "10085:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10085:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "10084:21:0"
                },
                "returnParameters": {
                  "id": 946,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10126:0:0"
                },
                "scope": 1582,
                "src": "10059:483:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1025,
                  "nodeType": "Block",
                  "src": "10604:108:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "32",
                                "id": 1012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10651:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "id": 1010,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "10640:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 196,
                              "src": "10640:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10640:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1007,
                            "name": "_feeAddrWallet1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "10615:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "src": "10615:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10615:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1015,
                      "nodeType": "ExpressionStatement",
                      "src": "10615:39:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "32",
                                "id": 1021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10701:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "id": 1019,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "10690:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 196,
                              "src": "10690:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10690:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1016,
                            "name": "_feeAddrWallet2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "10665:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "src": "10665:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10665:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1024,
                      "nodeType": "ExpressionStatement",
                      "src": "10665:39:0"
                    }
                  ]
                },
                "id": 1026,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sendETHToFee",
                "nameLocation": "10567:12:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1005,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1004,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "10588:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "10580:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1003,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10580:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "10579:16:0"
                },
                "returnParameters": {
                  "id": 1006,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10604:0:0"
                },
                "scope": 1582,
                "src": "10558:154:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1139,
                  "nodeType": "Block",
                  "src": "10768:778:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "10787:12:0",
                            "subExpression": {
                              "id": 1032,
                              "name": "tradingOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10788:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "74726164696e6720697320616c7265616479206f70656e",
                            "id": 1034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10800:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027",
                              "typeString": "literal_string \"trading is already open\""
                            },
                            "value": "trading is already open"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027",
                              "typeString": "literal_string \"trading is already open\""
                            }
                          ],
                          "id": 1031,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "10779:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10779:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1036,
                      "nodeType": "ExpressionStatement",
                      "src": "10779:47:0"
                    },
                    {
                      "assignments": [
                        1039
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1039,
                          "mutability": "mutable",
                          "name": "_uniswapV2Router",
                          "nameLocation": "10856:16:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1139,
                          "src": "10837:35:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                            "typeString": "contract IUniswapV2Router02"
                          },
                          "typeName": {
                            "id": 1038,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1037,
                              "name": "IUniswapV2Router02",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 355,
                              "src": "10837:18:0"
                            },
                            "referencedDeclaration": 355,
                            "src": "10837:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1043,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                            "id": 1041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10894:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1040,
                          "name": "IUniswapV2Router02",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "10875:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$355_$",
                            "typeString": "type(contract IUniswapV2Router02)"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10875:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10837:100:0"
                    },
                    {
                      "expression": {
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1044,
                          "name": "uniswapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "10948:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1045,
                          "name": "_uniswapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "10966:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "src": "10948:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 1047,
                      "nodeType": "ExpressionStatement",
                      "src": "10948:34:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1051,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11010:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11002:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1049,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11002:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11002:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1055,
                                "name": "uniswapV2Router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "11025:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              ],
                              "id": 1054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11017:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1053,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11017:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11017:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1057,
                            "name": "_tTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "11043:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1048,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "10993:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10993:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1059,
                      "nodeType": "ExpressionStatement",
                      "src": "10993:58:0"
                    },
                    {
                      "expression": {
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1060,
                          "name": "uniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "11062:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1069,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11143:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                    "typeString": "contract RhinuERC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                    "typeString": "contract RhinuERC"
                                  }
                                ],
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11135:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1067,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11135:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11135:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1071,
                                  "name": "_uniswapV2Router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1039,
                                  "src": "11150:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                },
                                "id": 1072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "WETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 333,
                                "src": "11150:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                  "typeString": "function () pure external returns (address)"
                                }
                              },
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11150:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1062,
                                      "name": "_uniswapV2Router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1039,
                                      "src": "11096:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                        "typeString": "contract IUniswapV2Router02"
                                      }
                                    },
                                    "id": 1063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "factory",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 328,
                                    "src": "11096:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                      "typeString": "function () pure external returns (address)"
                                    }
                                  },
                                  "id": 1064,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11096:26:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1061,
                                "name": "IUniswapV2Factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "11078:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$309_$",
                                  "typeString": "type(contract IUniswapV2Factory)"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11078:45:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Factory_$309",
                                "typeString": "contract IUniswapV2Factory"
                              }
                            },
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 308,
                            "src": "11078:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) external returns (address)"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11078:96:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11062:112:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1076,
                      "nodeType": "ExpressionStatement",
                      "src": "11062:112:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1088,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11255:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 1087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11247:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1086,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11247:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11247:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1093,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "11279:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                      "typeString": "contract RhinuERC"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                      "typeString": "contract RhinuERC"
                                    }
                                  ],
                                  "id": 1092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11271:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1091,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11271:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11271:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1090,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "11261:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11261:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11286:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11288:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1098,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "11290:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11290:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1100,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11298:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11298:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1077,
                              "name": "uniswapV2Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "11185:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 1079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addLiquidityETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 354,
                            "src": "11185:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1082,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "11232:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                      "typeString": "contract RhinuERC"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                      "typeString": "contract RhinuERC"
                                    }
                                  ],
                                  "id": 1081,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11224:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1080,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11224:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11224:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "11224:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "11185:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
                            "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11185:129:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "id": 1103,
                      "nodeType": "ExpressionStatement",
                      "src": "11185:129:0"
                    },
                    {
                      "expression": {
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1104,
                          "name": "swapEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "11325:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11339:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "11325:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1107,
                      "nodeType": "ExpressionStatement",
                      "src": "11325:18:0"
                    },
                    {
                      "expression": {
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1108,
                          "name": "cooldownEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "11354:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11372:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "11354:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1111,
                      "nodeType": "ExpressionStatement",
                      "src": "11354:22:0"
                    },
                    {
                      "expression": {
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1112,
                          "name": "_maxTxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 451,
                          "src": "11387:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_rational_23000000000000000000000000_by_1",
                            "typeString": "int_const 23000000000000000000000000"
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3233303030303030303030303030303030",
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11402:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_23000000000000000_by_1",
                              "typeString": "int_const 23000000000000000"
                            },
                            "value": "23000000000000000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11422:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "39",
                              "id": 1115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11426:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "src": "11422:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            }
                          },
                          "src": "11402:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_23000000000000000000000000_by_1",
                            "typeString": "int_const 23000000000000000000000000"
                          }
                        },
                        "src": "11387:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1119,
                      "nodeType": "ExpressionStatement",
                      "src": "11387:40:0"
                    },
                    {
                      "expression": {
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1120,
                          "name": "tradingOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "11438:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11452:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "11438:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1123,
                      "nodeType": "ExpressionStatement",
                      "src": "11438:18:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1130,
                                "name": "uniswapV2Router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "11505:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$355",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              ],
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11497:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1128,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11497:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11497:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11528:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1133,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11528:4:0",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1132,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "11523:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11523:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "11523:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1125,
                                "name": "uniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 437,
                                "src": "11474:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1124,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "11467:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11467:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$78",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "11467:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11467:71:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1138,
                      "nodeType": "ExpressionStatement",
                      "src": "11467:71:0"
                    }
                  ]
                },
                "functionSelector": "c9567bf9",
                "id": 1140,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [],
                    "id": 1029,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1028,
                      "name": "onlyOwner",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 277,
                      "src": "10756:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "10756:11:0"
                  }
                ],
                "name": "openTrading",
                "nameLocation": "10733:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1027,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10744:2:0"
                },
                "returnParameters": {
                  "id": 1030,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10768:0:0"
                },
                "scope": 1582,
                "src": "10724:822:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1169,
                  "nodeType": "Block",
                  "src": "11616:106:0",
                  "statements": [
                    {
                      "body": {
                        "id": 1167,
                        "nodeType": "Block",
                        "src": "11667:48:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1159,
                                  "name": "bots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "11682:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1163,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 1160,
                                    "name": "bots_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1143,
                                    "src": "11687:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1162,
                                  "indexExpression": {
                                    "id": 1161,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1149,
                                    "src": "11693:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11687:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11682:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11699:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "11682:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1166,
                            "nodeType": "ExpressionStatement",
                            "src": "11682:21:0"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1152,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "11644:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1153,
                            "name": "bots_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "11648:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11648:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11644:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1168,
                      "initializationExpression": {
                        "assignments": [
                          1149
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1149,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "11637:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1168,
                            "src": "11632:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1148,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11632:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1151,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11641:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11632:10:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11662:3:0",
                          "subExpression": {
                            "id": 1156,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "11662:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "11662:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "11627:88:0"
                    }
                  ]
                },
                "functionSelector": "b515566a",
                "id": 1170,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1146,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1145,
                      "name": "onlyOwner",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 277,
                      "src": "11606:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "11606:9:0"
                  }
                ],
                "name": "setBots",
                "nameLocation": "11567:7:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1144,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1143,
                      "mutability": "mutable",
                      "name": "bots_",
                      "nameLocation": "11592:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1170,
                      "src": "11575:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11575:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ArrayTypeName",
                        "src": "11575:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11574:24:0"
                },
                "returnParameters": {
                  "id": 1147,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "11616:0:0"
                },
                "scope": 1582,
                "src": "11558:164:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1183,
                  "nodeType": "Block",
                  "src": "11783:39:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1177,
                            "name": "bots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "11794:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1179,
                          "indexExpression": {
                            "id": 1178,
                            "name": "notbot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "11799:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11794:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11809:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11794:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1182,
                      "nodeType": "ExpressionStatement",
                      "src": "11794:20:0"
                    }
                  ]
                },
                "functionSelector": "273123b7",
                "id": 1184,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1175,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1174,
                      "name": "onlyOwner",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 277,
                      "src": "11773:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "11773:9:0"
                  }
                ],
                "name": "delBot",
                "nameLocation": "11743:6:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1173,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "notbot",
                      "nameLocation": "11758:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1184,
                      "src": "11750:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11750:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11749:16:0"
                },
                "returnParameters": {
                  "id": 1176,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "11783:0:0"
                },
                "scope": 1582,
                "src": "11734:88:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1199,
                  "nodeType": "Block",
                  "src": "11921:63:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1194,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1186,
                            "src": "11950:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1195,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1188,
                            "src": "11958:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1196,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "11969:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1193,
                          "name": "_transferStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "11932:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11932:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1198,
                      "nodeType": "ExpressionStatement",
                      "src": "11932:44:0"
                    }
                  ]
                },
                "id": 1200,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_tokenTransfer",
                "nameLocation": "11847:14:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1191,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "11870:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "11862:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11862:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1188,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "11886:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "11878:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1187,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11878:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1190,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "11905:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "11897:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11897:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11861:51:0"
                },
                "returnParameters": {
                  "id": 1192,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "11921:0:0"
                },
                "scope": 1582,
                "src": "11838:146:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1262,
                  "nodeType": "Block",
                  "src": "12079:401:0",
                  "statements": [
                    {
                      "assignments": [
                        1210,
                        1212,
                        1214,
                        1216,
                        1218,
                        1220
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1210,
                          "mutability": "mutable",
                          "name": "rAmount",
                          "nameLocation": "12099:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1262,
                          "src": "12091:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1209,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12091:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1212,
                          "mutability": "mutable",
                          "name": "rTransferAmount",
                          "nameLocation": "12116:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1262,
                          "src": "12108:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1211,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12108:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1214,
                          "mutability": "mutable",
                          "name": "rFee",
                          "nameLocation": "12141:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1262,
                          "src": "12133:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1213,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12133:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1216,
                          "mutability": "mutable",
                          "name": "tTransferAmount",
                          "nameLocation": "12155:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1262,
                          "src": "12147:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1215,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12147:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1218,
                          "mutability": "mutable",
                          "name": "tFee",
                          "nameLocation": "12180:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1262,
                          "src": "12172:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1217,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12172:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1220,
                          "mutability": "mutable",
                          "name": "tTeam",
                          "nameLocation": "12194:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1262,
                          "src": "12186:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1219,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12186:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1224,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1222,
                            "name": "tAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "12214:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1221,
                          "name": "_getValues",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "12203:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12203:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "12090:132:0"
                    },
                    {
                      "expression": {
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1225,
                            "name": "_rOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "12233:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1227,
                          "indexExpression": {
                            "id": 1226,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "12241:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12233:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1232,
                              "name": "rAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "12271:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1228,
                                "name": "_rOwned",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "12251:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1230,
                              "indexExpression": {
                                "id": 1229,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1202,
                                "src": "12259:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12251:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 119,
                            "src": "12251:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12251:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12233:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1235,
                      "nodeType": "ExpressionStatement",
                      "src": "12233:46:0"
                    },
                    {
                      "expression": {
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1236,
                            "name": "_rOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "12290:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1238,
                          "indexExpression": {
                            "id": 1237,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1204,
                            "src": "12298:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12290:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1243,
                              "name": "rTransferAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1212,
                              "src": "12334:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1239,
                                "name": "_rOwned",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "12311:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1241,
                              "indexExpression": {
                                "id": 1240,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1204,
                                "src": "12319:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12311:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 103,
                            "src": "12311:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12311:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12290:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1246,
                      "nodeType": "ExpressionStatement",
                      "src": "12290:60:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1248,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "12372:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1247,
                          "name": "_takeTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "12362:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12362:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1250,
                      "nodeType": "ExpressionStatement",
                      "src": "12362:16:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1252,
                            "name": "rFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "12401:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1253,
                            "name": "tFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "12407:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1251,
                          "name": "_reflectFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "12389:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12389:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1255,
                      "nodeType": "ExpressionStatement",
                      "src": "12389:23:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1257,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "12437:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1258,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1204,
                            "src": "12445:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1259,
                            "name": "tTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "12456:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1256,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "12428:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12428:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1261,
                      "nodeType": "EmitStatement",
                      "src": "12423:49:0"
                    }
                  ]
                },
                "id": 1263,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferStandard",
                "nameLocation": "12001:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1207,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1202,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "12027:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1263,
                      "src": "12019:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1201,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12019:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1204,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "12043:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1263,
                      "src": "12035:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12035:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1206,
                      "mutability": "mutable",
                      "name": "tAmount",
                      "nameLocation": "12062:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1263,
                      "src": "12054:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12054:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12018:52:0"
                },
                "returnParameters": {
                  "id": 1208,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12079:0:0"
                },
                "scope": 1582,
                "src": "11992:488:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1297,
                  "nodeType": "Block",
                  "src": "12530:170:0",
                  "statements": [
                    {
                      "assignments": [
                        1269
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1269,
                          "mutability": "mutable",
                          "name": "currentRate",
                          "nameLocation": "12549:11:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1297,
                          "src": "12541:19:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1268,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12541:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1272,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1270,
                          "name": "_getRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1550,
                          "src": "12564:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12564:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "12541:33:0"
                    },
                    {
                      "assignments": [
                        1274
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1274,
                          "mutability": "mutable",
                          "name": "rTeam",
                          "nameLocation": "12593:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1297,
                          "src": "12585:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1273,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12585:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1279,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1277,
                            "name": "currentRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "12611:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1275,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "12601:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 180,
                          "src": "12601:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12601:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "12585:38:0"
                    },
                    {
                      "expression": {
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1280,
                            "name": "_rOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "12634:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1285,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1283,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12650:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 1282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12642:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1281,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12642:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12642:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12634:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1293,
                              "name": "rTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "12686:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1286,
                                "name": "_rOwned",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "12659:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1291,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1289,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12675:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                      "typeString": "contract RhinuERC"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                      "typeString": "contract RhinuERC"
                                    }
                                  ],
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12667:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1287,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12667:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12667:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12659:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 103,
                            "src": "12659:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12659:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12634:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1296,
                      "nodeType": "ExpressionStatement",
                      "src": "12634:58:0"
                    }
                  ]
                },
                "id": 1298,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_takeTeam",
                "nameLocation": "12497:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1266,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1265,
                      "mutability": "mutable",
                      "name": "tTeam",
                      "nameLocation": "12515:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1298,
                      "src": "12507:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12506:15:0"
                },
                "returnParameters": {
                  "id": 1267,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12530:0:0"
                },
                "scope": 1582,
                "src": "12488:212:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1319,
                  "nodeType": "Block",
                  "src": "12765:90:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 1310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1305,
                          "name": "_rTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "12776:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1308,
                              "name": "rFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "12798:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1306,
                              "name": "_rTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "12786:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 119,
                            "src": "12786:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12786:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12776:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1311,
                      "nodeType": "ExpressionStatement",
                      "src": "12776:27:0"
                    },
                    {
                      "expression": {
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1312,
                          "name": "_tFeeTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "12814:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1315,
                              "name": "tFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "12842:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1313,
                              "name": "_tFeeTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "12827:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 103,
                            "src": "12827:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12827:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12814:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1318,
                      "nodeType": "ExpressionStatement",
                      "src": "12814:33:0"
                    }
                  ]
                },
                "id": 1320,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_reflectFee",
                "nameLocation": "12717:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1303,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1300,
                      "mutability": "mutable",
                      "name": "rFee",
                      "nameLocation": "12737:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "12729:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12729:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1302,
                      "mutability": "mutable",
                      "name": "tFee",
                      "nameLocation": "12751:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "12743:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12743:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12728:28:0"
                },
                "returnParameters": {
                  "id": 1304,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12765:0:0"
                },
                "scope": 1582,
                "src": "12708:147:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1323,
                  "nodeType": "Block",
                  "src": "12890:2:0",
                  "statements": []
                },
                "id": 1324,
                "implemented": true,
                "kind": "receive",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1321,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12870:2:0"
                },
                "returnParameters": {
                  "id": 1322,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12890:0:0"
                },
                "scope": 1582,
                "src": "12863:29:0",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1347,
                  "nodeType": "Block",
                  "src": "12935:164:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1328,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "12954:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12954:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1330,
                              "name": "_feeAddrWallet1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "12970:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "12954:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1327,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "12946:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12946:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1333,
                      "nodeType": "ExpressionStatement",
                      "src": "12946:40:0"
                    },
                    {
                      "assignments": [
                        1335
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1335,
                          "mutability": "mutable",
                          "name": "contractBalance",
                          "nameLocation": "13005:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1347,
                          "src": "12997:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1334,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12997:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1342,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1339,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13041:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                  "typeString": "contract RhinuERC"
                                }
                              ],
                              "id": 1338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13033:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1337,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13033:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13033:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1336,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "13023:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13023:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "12997:50:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1344,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "13075:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1343,
                          "name": "swapTokensForEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "13058:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13058:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1346,
                      "nodeType": "ExpressionStatement",
                      "src": "13058:33:0"
                    }
                  ]
                },
                "functionSelector": "c3c8cd80",
                "id": 1348,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "manualswap",
                "nameLocation": "12913:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1325,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12923:2:0"
                },
                "returnParameters": {
                  "id": 1326,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12935:0:0"
                },
                "scope": 1582,
                "src": "12904:195:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1370,
                  "nodeType": "Block",
                  "src": "13142:163:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1352,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "13161:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13161:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1354,
                              "name": "_feeAddrWallet1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "13177:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "13161:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1351,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "13153:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13153:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1357,
                      "nodeType": "ExpressionStatement",
                      "src": "13153:40:0"
                    },
                    {
                      "assignments": [
                        1359
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1359,
                          "mutability": "mutable",
                          "name": "contractETHBalance",
                          "nameLocation": "13212:18:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1370,
                          "src": "13204:26:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1358,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13204:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1365,
                      "initialValue": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1362,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13241:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                "typeString": "contract RhinuERC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RhinuERC_$1582",
                                "typeString": "contract RhinuERC"
                              }
                            ],
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13233:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1360,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13233:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13233:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13233:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13204:50:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1367,
                            "name": "contractETHBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1359,
                            "src": "13278:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1366,
                          "name": "sendETHToFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "13265:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13265:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1369,
                      "nodeType": "ExpressionStatement",
                      "src": "13265:32:0"
                    }
                  ]
                },
                "functionSelector": "6fc3eaec",
                "id": 1371,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "manualsend",
                "nameLocation": "13120:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1349,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13130:2:0"
                },
                "returnParameters": {
                  "id": 1350,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13142:0:0"
                },
                "scope": 1582,
                "src": "13111:194:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1426,
                  "nodeType": "Block",
                  "src": "13432:358:0",
                  "statements": [
                    {
                      "assignments": [
                        1389,
                        1391,
                        1393
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1389,
                          "mutability": "mutable",
                          "name": "tTransferAmount",
                          "nameLocation": "13452:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13444:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1388,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13444:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1391,
                          "mutability": "mutable",
                          "name": "tFee",
                          "nameLocation": "13477:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13469:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1390,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13469:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1393,
                          "mutability": "mutable",
                          "name": "tTeam",
                          "nameLocation": "13491:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13483:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1392,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13483:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1399,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1395,
                            "name": "tAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "13512:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1396,
                            "name": "_feeAddr1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "13521:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1397,
                            "name": "_feeAddr2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "13532:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1394,
                          "name": "_getTValues",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1478,
                          "src": "13500:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                          }
                        },
                        "id": 1398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13500:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13443:99:0"
                    },
                    {
                      "assignments": [
                        1401
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1401,
                          "mutability": "mutable",
                          "name": "currentRate",
                          "nameLocation": "13561:11:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13553:19:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1400,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13553:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1404,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1402,
                          "name": "_getRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1550,
                          "src": "13576:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13576:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13553:33:0"
                    },
                    {
                      "assignments": [
                        1406,
                        1408,
                        1410
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1406,
                          "mutability": "mutable",
                          "name": "rAmount",
                          "nameLocation": "13606:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13598:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1405,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13598:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1408,
                          "mutability": "mutable",
                          "name": "rTransferAmount",
                          "nameLocation": "13623:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13615:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1407,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13615:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1410,
                          "mutability": "mutable",
                          "name": "rFee",
                          "nameLocation": "13648:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1426,
                          "src": "13640:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1409,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13640:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1417,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1412,
                            "name": "tAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "13668:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1413,
                            "name": "tFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "13677:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1414,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1393,
                            "src": "13683:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1415,
                            "name": "currentRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "13690:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1411,
                          "name": "_getRValues",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1532,
                          "src": "13656:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13656:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13597:105:0"
                    },
                    {
                      "expression": {
                        "components": [
                          {
                            "id": 1418,
                            "name": "rAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "13721:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1419,
                            "name": "rTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "13730:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1420,
                            "name": "rFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1410,
                            "src": "13747:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1421,
                            "name": "tTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "13753:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1422,
                            "name": "tFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "13770:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1423,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1393,
                            "src": "13776:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1424,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13720:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                        }
                      },
                      "functionReturnParameters": 1387,
                      "id": 1425,
                      "nodeType": "Return",
                      "src": "13713:69:0"
                    }
                  ]
                },
                "id": 1427,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getValues",
                "nameLocation": "13328:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1374,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1373,
                      "mutability": "mutable",
                      "name": "tAmount",
                      "nameLocation": "13347:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13339:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1372,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13339:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13338:17:0"
                },
                "returnParameters": {
                  "id": 1387,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1376,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13378:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13378:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13387:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1377,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13387:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1380,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13396:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13396:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1382,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13405:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13405:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1384,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13414:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13414:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1386,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "13423:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13423:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13377:54:0"
                },
                "scope": 1582,
                "src": "13319:471:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1477,
                  "nodeType": "Block",
                  "src": "13918:231:0",
                  "statements": [
                    {
                      "assignments": [
                        1443
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1443,
                          "mutability": "mutable",
                          "name": "tFee",
                          "nameLocation": "13937:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1477,
                          "src": "13929:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1442,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13929:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1451,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "313030",
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13968:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1446,
                                "name": "taxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "13956:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1444,
                                "name": "tAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "13944:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 180,
                              "src": "13944:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13944:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "13944:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13944:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13929:43:0"
                    },
                    {
                      "assignments": [
                        1453
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1453,
                          "mutability": "mutable",
                          "name": "tTeam",
                          "nameLocation": "13991:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1477,
                          "src": "13983:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1452,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13983:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1461,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "313030",
                            "id": 1459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14024:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1456,
                                "name": "TeamFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1433,
                                "src": "14011:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1454,
                                "name": "tAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "13999:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 180,
                              "src": "13999:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13999:20:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "13999:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13999:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13983:45:0"
                    },
                    {
                      "assignments": [
                        1463
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1463,
                          "mutability": "mutable",
                          "name": "tTransferAmount",
                          "nameLocation": "14047:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1477,
                          "src": "14039:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1462,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14039:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1471,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1469,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "14087:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1466,
                                "name": "tFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1443,
                                "src": "14077:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1464,
                                "name": "tAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "14065:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119,
                              "src": "14065:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14065:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "14065:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14065:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14039:54:0"
                    },
                    {
                      "expression": {
                        "components": [
                          {
                            "id": 1472,
                            "name": "tTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1463,
                            "src": "14112:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1473,
                            "name": "tFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "14129:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1474,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "14135:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1475,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14111:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "functionReturnParameters": 1441,
                      "id": 1476,
                      "nodeType": "Return",
                      "src": "14104:37:0"
                    }
                  ]
                },
                "id": 1478,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getTValues",
                "nameLocation": "13807:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1434,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1429,
                      "mutability": "mutable",
                      "name": "tAmount",
                      "nameLocation": "13827:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "13819:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13819:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1431,
                      "mutability": "mutable",
                      "name": "taxFee",
                      "nameLocation": "13844:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "13836:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13836:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "TeamFee",
                      "nameLocation": "13860:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "13852:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13852:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13818:50:0"
                },
                "returnParameters": {
                  "id": 1441,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1436,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "13891:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13891:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1438,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "13900:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13900:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1440,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "13909:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13909:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13890:27:0"
                },
                "scope": 1582,
                "src": "13798:351:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1531,
                  "nodeType": "Block",
                  "src": "14294:272:0",
                  "statements": [
                    {
                      "assignments": [
                        1496
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1496,
                          "mutability": "mutable",
                          "name": "rAmount",
                          "nameLocation": "14313:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1531,
                          "src": "14305:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1495,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14305:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1501,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1499,
                            "name": "currentRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "14335:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1497,
                            "name": "tAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "14323:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 180,
                          "src": "14323:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14323:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14305:42:0"
                    },
                    {
                      "assignments": [
                        1503
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1503,
                          "mutability": "mutable",
                          "name": "rFee",
                          "nameLocation": "14366:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1531,
                          "src": "14358:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1502,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14358:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1508,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1506,
                            "name": "currentRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "14382:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1504,
                            "name": "tFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
                            "src": "14373:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 180,
                          "src": "14373:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14373:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14358:36:0"
                    },
                    {
                      "assignments": [
                        1510
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1510,
                          "mutability": "mutable",
                          "name": "rTeam",
                          "nameLocation": "14413:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1531,
                          "src": "14405:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1509,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14405:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1515,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1513,
                            "name": "currentRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "14431:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1511,
                            "name": "tTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "14421:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 180,
                          "src": "14421:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14421:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14405:38:0"
                    },
                    {
                      "assignments": [
                        1517
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1517,
                          "mutability": "mutable",
                          "name": "rTransferAmount",
                          "nameLocation": "14462:15:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1531,
                          "src": "14454:23:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1516,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14454:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1525,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1523,
                            "name": "rTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "14502:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1520,
                                "name": "rFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1503,
                                "src": "14492:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1518,
                                "name": "rAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1496,
                                "src": "14480:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119,
                              "src": "14480:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14480:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "14480:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14480:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14454:54:0"
                    },
                    {
                      "expression": {
                        "components": [
                          {
                            "id": 1526,
                            "name": "rAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "14527:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1527,
                            "name": "rTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1517,
                            "src": "14536:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1528,
                            "name": "rFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "14553:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1529,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14526:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "functionReturnParameters": 1494,
                      "id": 1530,
                      "nodeType": "Return",
                      "src": "14519:39:0"
                    }
                  ]
                },
                "id": 1532,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getRValues",
                "nameLocation": "14166:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1487,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1480,
                      "mutability": "mutable",
                      "name": "tAmount",
                      "nameLocation": "14186:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14178:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14178:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1482,
                      "mutability": "mutable",
                      "name": "tFee",
                      "nameLocation": "14203:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14195:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1481,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14195:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "tTeam",
                      "nameLocation": "14217:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14209:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14209:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1486,
                      "mutability": "mutable",
                      "name": "currentRate",
                      "nameLocation": "14232:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14224:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14224:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14177:67:0"
                },
                "returnParameters": {
                  "id": 1494,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1489,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14267:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14267:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1491,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14276:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14276:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1532,
                      "src": "14285:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14285:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14266:27:0"
                },
                "scope": 1582,
                "src": "14157:409:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1549,
                  "nodeType": "Block",
                  "src": "14621:113:0",
                  "statements": [
                    {
                      "assignments": [
                        1538,
                        1540
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1538,
                          "mutability": "mutable",
                          "name": "rSupply",
                          "nameLocation": "14641:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1549,
                          "src": "14633:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1537,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14633:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1540,
                          "mutability": "mutable",
                          "name": "tSupply",
                          "nameLocation": "14658:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1549,
                          "src": "14650:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1539,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14650:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1543,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1541,
                          "name": "_getCurrentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1581,
                          "src": "14669:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                            "typeString": "function () view returns (uint256,uint256)"
                          }
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14669:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14632:56:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1546,
                            "name": "tSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "14718:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1544,
                            "name": "rSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1538,
                            "src": "14706:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "14706:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14706:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1536,
                      "id": 1548,
                      "nodeType": "Return",
                      "src": "14699:27:0"
                    }
                  ]
                },
                "id": 1550,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getRate",
                "nameLocation": "14580:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1533,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14588:2:0"
                },
                "returnParameters": {
                  "id": 1536,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1535,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1550,
                      "src": "14612:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1534,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14612:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14611:9:0"
                },
                "scope": 1582,
                "src": "14571:163:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1580,
                  "nodeType": "Block",
                  "src": "14810:194:0",
                  "statements": [
                    {
                      "assignments": [
                        1558
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1558,
                          "mutability": "mutable",
                          "name": "rSupply",
                          "nameLocation": "14829:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1580,
                          "src": "14821:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1557,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14821:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1560,
                      "initialValue": {
                        "id": 1559,
                        "name": "_rTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "14839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14821:25:0"
                    },
                    {
                      "assignments": [
                        1562
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1562,
                          "mutability": "mutable",
                          "name": "tSupply",
                          "nameLocation": "14865:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 1580,
                          "src": "14857:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1561,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14857:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1564,
                      "initialValue": {
                        "id": 1563,
                        "name": "_tTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "14875:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14857:25:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1565,
                          "name": "rSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1558,
                          "src": "14903:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1568,
                              "name": "_tTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "14925:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1566,
                              "name": "_rTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "14913:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 196,
                            "src": "14913:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14913:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14903:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1575,
                      "nodeType": "IfStatement",
                      "src": "14899:61:0",
                      "trueBody": {
                        "expression": {
                          "components": [
                            {
                              "id": 1571,
                              "name": "_rTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "14943:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1572,
                              "name": "_tTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "14952:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1573,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14942:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 1556,
                        "id": 1574,
                        "nodeType": "Return",
                        "src": "14935:25:0"
                      }
                    },
                    {
                      "expression": {
                        "components": [
                          {
                            "id": 1576,
                            "name": "rSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1558,
                            "src": "14979:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1577,
                            "name": "tSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "14988:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1578,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14978:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "functionReturnParameters": 1556,
                      "id": 1579,
                      "nodeType": "Return",
                      "src": "14971:25:0"
                    }
                  ]
                },
                "id": 1581,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getCurrentSupply",
                "nameLocation": "14751:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1551,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14768:2:0"
                },
                "returnParameters": {
                  "id": 1556,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1553,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1581,
                      "src": "14792:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14792:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1581,
                      "src": "14801:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14801:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14791:18:0"
                },
                "scope": 1582,
                "src": "14742:262:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 1583,
            "src": "4637:10370:0",
            "usedErrors": []
          }
        ],
        "src": "1160:13847:0"
      },
      "id": 0
    }
  }
}